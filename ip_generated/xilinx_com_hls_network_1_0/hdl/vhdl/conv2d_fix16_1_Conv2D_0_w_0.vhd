-- ==============================================================
-- File generated on Sat Oct 26 16:37:27 JST 2019
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
-- SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
-- IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity conv2d_fix16_1_Conv2D_0_w_0_rom is 
    generic(
             DWIDTH     : integer := 14; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 144
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of conv2d_fix16_1_Conv2D_0_w_0_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00000111000101", 1 => "00100000011110", 2 => "00110011100110", 
    3 => "00001000001101", 4 => "00111100001101", 5 => "11011100001101", 
    6 => "00011111011010", 7 => "00100001111100", 8 => "11111101101000", 
    9 => "11001100110101", 10 => "00011001101000", 11 => "00000011001000", 
    12 => "11110011100000", 13 => "00010110101001", 14 => "00100101101011", 
    15 => "00010111010110", 16 => "11011101111111", 17 => "11100011111101", 
    18 => "11110100011001", 19 => "11111110010110", 20 => "00000001001011", 
    21 => "00101001100011", 22 => "11011001101110", 23 => "11100111100001", 
    24 => "00100101110110", 25 => "00001000011110", 26 => "00101001001111", 
    27 => "00111101010101", 28 => "00110001110011", 29 => "00110111110000", 
    30 => "00011010011010", 31 => "00011010010111", 32 => "11011000111000", 
    33 => "11100000010001", 34 => "11011001100101", 35 => "00011111101000", 
    36 => "00010010011001", 37 => "00101011001110", 38 => "00011000111001", 
    39 => "11010111011110", 40 => "00011110010110", 41 => "00011101100100", 
    42 => "11101111100010", 43 => "11100110011111", 44 => "00110000101011", 
    45 => "11111011101011", 46 => "11011011101000", 47 => "11100010011011", 
    48 => "00001000101010", 49 => "11111111101100", 50 => "00011001000100", 
    51 => "00110011101110", 52 => "00110011001000", 53 => "11100010001000", 
    54 => "00001011101001", 55 => "00001001011110", 56 => "11011000010111", 
    57 => "11101000000101", 58 => "11011111001111", 59 => "00001010110101", 
    60 => "00001101001011", 61 => "11100000110010", 62 => "11010111011111", 
    63 => "11111011001110", 64 => "00100111010010", 65 => "00011110110111", 
    66 => "11011100111010", 67 => "01000010101101", 68 => "00011010100001", 
    69 => "00111010011101", 70 => "11101011010011", 71 => "00110010110110", 
    72 => "00011001001101", 73 => "00011000101011", 74 => "11111011101111", 
    75 => "11010010101001", 76 => "00110000111000", 77 => "00000101110010", 
    78 => "11010100110100", 79 => "00110010011101", 80 => "00111010100000", 
    81 => "11100001111001", 82 => "00100100100110", 83 => "00001000110100", 
    84 => "11011110001101", 85 => "11101000101010", 86 => "11101110011110", 
    87 => "00000110101001", 88 => "00001000011011", 89 => "00000111010010", 
    90 => "00110001100011", 91 => "11010001000000", 92 => "00101001101011", 
    93 => "00000000100000", 94 => "00101100001010", 95 => "11011101000101", 
    96 => "00100011111010", 97 => "00011101110011", 98 => "00100011100001", 
    99 => "00111101111110", 100 => "11100111100011", 101 => "11110101100000", 
    102 => "00011110100110", 103 => "00111110110000", 104 => "00011110101100", 
    105 => "00001101110000", 106 => "11011111001011", 107 => "11101011100111", 
    108 => "11001110111111", 109 => "11011000100001", 110 => "11100101000101", 
    111 => "11011011001000", 112 => "00000001010010", 113 => "00010010100011", 
    114 => "00010100111001", 115 => "00011000001110", 116 => "00000000011100", 
    117 => "11111100011101", 118 => "00001011110110", 119 => "11111110111001", 
    120 => "00001100010010", 121 => "11010001011100", 122 => "00000000000011", 
    123 => "11010011100011", 124 => "11011011000011", 125 => "11010100011101", 
    126 => "00011001111110", 127 => "00010000111110", 128 => "00010010100010", 
    129 => "11111110101010", 130 => "11110101111100", 131 => "11011010000101", 
    132 => "00101001011100", 133 => "00000101000101", 134 => "00100110010011", 
    135 => "11101111011100", 136 => "00010010011000", 137 => "11010100100111", 
    138 => "11101110010100", 139 => "11100011111010", 140 => "00001010111111", 
    141 => "11011110011001", 142 => "11011011101010", 143 => "00100001010000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity conv2d_fix16_1_Conv2D_0_w_0 is
    generic (
        DataWidth : INTEGER := 14;
        AddressRange : INTEGER := 144;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of conv2d_fix16_1_Conv2D_0_w_0 is
    component conv2d_fix16_1_Conv2D_0_w_0_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    conv2d_fix16_1_Conv2D_0_w_0_rom_U :  component conv2d_fix16_1_Conv2D_0_w_0_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


