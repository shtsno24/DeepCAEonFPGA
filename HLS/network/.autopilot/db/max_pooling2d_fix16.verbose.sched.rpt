

================================================================
== Vivado HLS Report for 'max_pooling2d_fix16'
================================================================
* Date:           Thu Dec 12 12:28:02 2019

* Version:        2018.3.1 (Build 2489210 on Tue Mar 26 04:40:43 MDT 2019)
* Project:        HLS
* Solution:       network
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.40|     4.350|        1.27|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+--------+-------+--------+---------+
    |     Latency    |    Interval    | Pipeline|
    |  min  |   max  |  min  |   max  |   Type  |
    +-------+--------+-------+--------+---------+
    |  13905|  110465|  13905|  110465|   none  |
    +-------+--------+-------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------------+-------+--------+-------------+-----------+-----------+--------+----------+
        |                         |     Latency    |  Iteration  |  Initiation Interval  |  Trip  |          |
        |        Loop Name        |  min  |   max  |   Latency   |  achieved |   target  |  Count | Pipelined|
        +-------------------------+-------+--------+-------------+-----------+-----------+--------+----------+
        |- Loop 1                 |  13904|  110464| 1738 ~ 6904 |          -|          -| 8 ~ 16 |    no    |
        | + Loop 1.1              |   1736|    6902|  248 ~ 493  |          -|          -| 7 ~ 14 |    no    |
        |  ++ Loop 1.1.1          |    245|     490|           35|          -|          -| 7 ~ 14 |    no    |
        |   +++ Loop 1.1.1.1      |     32|      32|           16|          -|          -|       2|    no    |
        |    ++++ Loop 1.1.1.1.1  |     12|      12|            6|          -|          -|       2|    no    |
        +-------------------------+-------+--------+-------------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond5)
3 --> 
	4  / (!exitcond4)
	2  / (exitcond4)
4 --> 
	5  / true
5 --> 
	6  / (!exitcond3)
	3  / (exitcond3)
6 --> 
	7  / (!exitcond2)
	15  / (exitcond2)
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / (!exitcond)
	6  / (exitcond)
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	9  / true
15 --> 
	5  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%buffer = alloca i16"   --->   Operation 16 'alloca' 'buffer' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%output_width_read = call i5 @_ssdm_op_Read.ap_auto.i5(i5 %output_width)"   --->   Operation 17 'read' 'output_width_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%output_height_read = call i5 @_ssdm_op_Read.ap_auto.i5(i5 %output_height)"   --->   Operation 18 'read' 'output_height_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%output_depth_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %output_depth)"   --->   Operation 19 'read' 'output_depth_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%input_width_read = call i6 @_ssdm_op_Read.ap_auto.i6(i6 %input_width)"   --->   Operation 20 'read' 'input_width_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%input_height_read = call i7 @_ssdm_op_Read.ap_auto.i7(i7 %input_height)"   --->   Operation 21 'read' 'input_height_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%output_width_cast3 = sext i5 %output_width_read to i6"   --->   Operation 22 'sext' 'output_width_cast3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%output_height_cast2 = sext i5 %output_height_read to i6"   --->   Operation 23 'sext' 'output_height_cast2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%input_width_cast = sext i6 %input_width_read to i7"   --->   Operation 24 'sext' 'input_width_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecResourceLimit(i32 0, [4 x i8]* @p_str10, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind" [layers_c/max_pooling2d.cpp:12]   --->   Operation 25 'specresourcelimit' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecResourceLimit(i32 0, [4 x i8]* @p_str212, [1 x i8]* @p_str111, [1 x i8]* @p_str111, [1 x i8]* @p_str111) nounwind" [layers_c/max_pooling2d.cpp:13]   --->   Operation 26 'specresourcelimit' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_cast = zext i7 %input_height_read to i9" [layers_c/max_pooling2d.cpp:26]   --->   Operation 27 'zext' 'tmp_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_69_cast = zext i7 %input_width_cast to i14"   --->   Operation 28 'zext' 'tmp_69_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_70_cast = zext i6 %output_height_cast2 to i8" [layers_c/max_pooling2d.cpp:32]   --->   Operation 29 'zext' 'tmp_70_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_71_cast = zext i6 %output_width_cast3 to i12"   --->   Operation 30 'zext' 'tmp_71_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.76ns)   --->   "br label %.loopexit" [layers_c/max_pooling2d.cpp:18]   --->   Operation 31 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.91>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%out_d = phi i5 [ 0, %0 ], [ %out_d_3, %.loopexit.loopexit ]"   --->   Operation 32 'phi' 'out_d' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%phi_mul = phi i9 [ 0, %0 ], [ %next_mul, %.loopexit.loopexit ]" [layers_c/max_pooling2d.cpp:26]   --->   Operation 33 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%phi_mul2 = phi i8 [ 0, %0 ], [ %next_mul3, %.loopexit.loopexit ]" [layers_c/max_pooling2d.cpp:32]   --->   Operation 34 'phi' 'phi_mul2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.91ns)   --->   "%next_mul3 = add i8 %phi_mul2, %tmp_70_cast" [layers_c/max_pooling2d.cpp:32]   --->   Operation 35 'add' 'next_mul3' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.82ns)   --->   "%next_mul = add i9 %phi_mul, %tmp_cast" [layers_c/max_pooling2d.cpp:26]   --->   Operation 36 'add' 'next_mul' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%out_d_cast = zext i5 %out_d to i6" [layers_c/max_pooling2d.cpp:18]   --->   Operation 37 'zext' 'out_d_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.42ns)   --->   "%exitcond5 = icmp eq i6 %out_d_cast, %output_depth_read" [layers_c/max_pooling2d.cpp:18]   --->   Operation 38 'icmp' 'exitcond5' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 16, i64 0)"   --->   Operation 39 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (1.78ns)   --->   "%out_d_3 = add i5 %out_d, 1" [layers_c/max_pooling2d.cpp:18]   --->   Operation 40 'add' 'out_d_3' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %exitcond5, label %3, label %.preheader9.preheader" [layers_c/max_pooling2d.cpp:18]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.76ns)   --->   "br label %.preheader9" [layers_c/max_pooling2d.cpp:19]   --->   Operation 42 'br' <Predicate = (!exitcond5)> <Delay = 1.76>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 43 'ret' <Predicate = (exitcond5)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.91>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%out_h = phi i4 [ %out_h_3, %.preheader9.loopexit ], [ 0, %.preheader9.preheader ]"   --->   Operation 44 'phi' 'out_h' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%out_h_cast = zext i4 %out_h to i5" [layers_c/max_pooling2d.cpp:19]   --->   Operation 45 'zext' 'out_h_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.36ns)   --->   "%exitcond4 = icmp eq i5 %out_h_cast, %output_height_read" [layers_c/max_pooling2d.cpp:19]   --->   Operation 46 'icmp' 'exitcond4' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 7, i64 14, i64 0)"   --->   Operation 47 'speclooptripcount' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (1.73ns)   --->   "%out_h_3 = add i4 %out_h, 1" [layers_c/max_pooling2d.cpp:19]   --->   Operation 48 'add' 'out_h_3' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "br i1 %exitcond4, label %.loopexit.loopexit, label %.preheader8.preheader" [layers_c/max_pooling2d.cpp:19]   --->   Operation 49 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_75_cast1 = zext i4 %out_h to i8" [layers_c/max_pooling2d.cpp:26]   --->   Operation 50 'zext' 'tmp_75_cast1' <Predicate = (!exitcond4)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (1.91ns)   --->   "%tmp2 = add i8 %tmp_75_cast1, %phi_mul2" [layers_c/max_pooling2d.cpp:26]   --->   Operation 51 'add' 'tmp2' <Predicate = (!exitcond4)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 52 'br' <Predicate = (exitcond4)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.17>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_s = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %out_h, i1 false)" [layers_c/max_pooling2d.cpp:26]   --->   Operation 53 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_76_cast = zext i5 %tmp_s to i9" [layers_c/max_pooling2d.cpp:26]   --->   Operation 54 'zext' 'tmp_76_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%tmp2_cast = zext i8 %tmp2 to i12" [layers_c/max_pooling2d.cpp:26]   --->   Operation 55 'zext' 'tmp2_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (4.17ns)   --->   "%tmp3 = mul i12 %tmp_71_cast, %tmp2_cast" [layers_c/max_pooling2d.cpp:26]   --->   Operation 56 'mul' 'tmp3' <Predicate = true> <Delay = 4.17> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.35> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (1.76ns)   --->   "br label %.preheader8" [layers_c/max_pooling2d.cpp:20]   --->   Operation 57 'br' <Predicate = true> <Delay = 1.76>

State 5 <SV = 4> <Delay = 1.76>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%out_w = phi i4 [ %out_w_3, %2 ], [ 0, %.preheader8.preheader ]"   --->   Operation 58 'phi' 'out_w' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%out_w_cast = zext i4 %out_w to i5" [layers_c/max_pooling2d.cpp:20]   --->   Operation 59 'zext' 'out_w_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (1.36ns)   --->   "%exitcond3 = icmp eq i5 %out_w_cast, %output_width_read" [layers_c/max_pooling2d.cpp:20]   --->   Operation 60 'icmp' 'exitcond3' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 7, i64 14, i64 0)"   --->   Operation 61 'speclooptripcount' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (1.73ns)   --->   "%out_w_3 = add i4 %out_w, 1" [layers_c/max_pooling2d.cpp:20]   --->   Operation 62 'add' 'out_w_3' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %exitcond3, label %.preheader9.loopexit, label %.preheader7.preheader" [layers_c/max_pooling2d.cpp:20]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_78_cast1 = zext i4 %out_w to i12" [layers_c/max_pooling2d.cpp:26]   --->   Operation 64 'zext' 'tmp_78_cast1' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_51 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %out_w, i1 false)" [layers_c/max_pooling2d.cpp:26]   --->   Operation 65 'bitconcatenate' 'tmp_51' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_79_cast = zext i5 %tmp_51 to i14" [layers_c/max_pooling2d.cpp:26]   --->   Operation 66 'zext' 'tmp_79_cast' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (1.76ns)   --->   "br label %.preheader7" [layers_c/max_pooling2d.cpp:22]   --->   Operation 67 'br' <Predicate = (!exitcond3)> <Delay = 1.76>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "br label %.preheader9"   --->   Operation 68 'br' <Predicate = (exitcond3)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 1.82>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%in_h = phi i2 [ 0, %.preheader7.preheader ], [ %in_h_1, %.preheader7.loopexit ]"   --->   Operation 69 'phi' 'in_h' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_52 = trunc i2 %in_h to i1" [layers_c/max_pooling2d.cpp:22]   --->   Operation 70 'trunc' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.95ns)   --->   "%exitcond2 = icmp eq i2 %in_h, -2" [layers_c/max_pooling2d.cpp:22]   --->   Operation 71 'icmp' 'exitcond2' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 72 'speclooptripcount' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (1.56ns)   --->   "%in_h_1 = add i2 1, %in_h" [layers_c/max_pooling2d.cpp:22]   --->   Operation 73 'add' 'in_h_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %2, label %.preheader.preheader" [layers_c/max_pooling2d.cpp:22]   --->   Operation 74 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_82_cast = zext i2 %in_h to i9" [layers_c/max_pooling2d.cpp:22]   --->   Operation 75 'zext' 'tmp_82_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (1.82ns)   --->   "%tmp4 = add i9 %phi_mul, %tmp_82_cast" [layers_c/max_pooling2d.cpp:26]   --->   Operation 76 'add' 'tmp4' <Predicate = (!exitcond2)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (1.54ns)   --->   "%tmp_53 = add i12 %tmp3, %tmp_78_cast1" [layers_c/max_pooling2d.cpp:32]   --->   Operation 77 'add' 'tmp_53' <Predicate = (exitcond2)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.82>
ST_7 : Operation 78 [1/1] (1.82ns)   --->   "%tmp = add i9 %tmp4, %tmp_76_cast" [layers_c/max_pooling2d.cpp:26]   --->   Operation 78 'add' 'tmp' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.35>
ST_8 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_cast_36 = zext i9 %tmp to i14" [layers_c/max_pooling2d.cpp:26]   --->   Operation 79 'zext' 'tmp_cast_36' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 80 [1/1] (4.35ns)   --->   "%tmp1 = mul i14 %tmp_cast_36, %tmp_69_cast" [layers_c/max_pooling2d.cpp:26]   --->   Operation 80 'mul' 'tmp1' <Predicate = true> <Delay = 4.35> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.35> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 81 [1/1] (1.76ns)   --->   "br label %.preheader" [layers_c/max_pooling2d.cpp:24]   --->   Operation 81 'br' <Predicate = true> <Delay = 1.76>

State 9 <SV = 8> <Delay = 1.81>
ST_9 : Operation 82 [1/1] (0.00ns)   --->   "%in_w = phi i2 [ %in_w_1, %1 ], [ 0, %.preheader.preheader ]"   --->   Operation 82 'phi' 'in_w' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_55 = trunc i2 %in_w to i1" [layers_c/max_pooling2d.cpp:24]   --->   Operation 83 'trunc' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 84 [1/1] (0.95ns)   --->   "%exitcond = icmp eq i2 %in_w, -2" [layers_c/max_pooling2d.cpp:24]   --->   Operation 84 'icmp' 'exitcond' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 85 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 85 'speclooptripcount' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 86 [1/1] (1.56ns)   --->   "%in_w_1 = add i2 1, %in_w" [layers_c/max_pooling2d.cpp:24]   --->   Operation 86 'add' 'in_w_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.preheader7.loopexit, label %1" [layers_c/max_pooling2d.cpp:24]   --->   Operation 87 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_83_cast = zext i2 %in_w to i14" [layers_c/max_pooling2d.cpp:26]   --->   Operation 88 'zext' 'tmp_83_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_9 : Operation 89 [1/1] (1.81ns)   --->   "%tmp5 = add i14 %tmp1, %tmp_83_cast" [layers_c/max_pooling2d.cpp:26]   --->   Operation 89 'add' 'tmp5' <Predicate = (!exitcond)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 90 [1/1] (0.00ns)   --->   "br label %.preheader7"   --->   Operation 90 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 1.81>
ST_10 : Operation 91 [1/1] (1.81ns)   --->   "%tmp_56 = add i14 %tmp5, %tmp_79_cast" [layers_c/max_pooling2d.cpp:26]   --->   Operation 91 'add' 'tmp_56' <Predicate = true> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 1.68>
ST_11 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_57 = zext i14 %tmp_56 to i64" [layers_c/max_pooling2d.cpp:26]   --->   Operation 92 'zext' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 93 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [14400 x i16]* %input_r, i64 0, i64 %tmp_57" [layers_c/max_pooling2d.cpp:26]   --->   Operation 93 'getelementptr' 'input_addr' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 94 [2/2] (1.68ns)   --->   "%tmp_62 = load i16* %input_addr, align 2" [layers_c/max_pooling2d.cpp:26]   --->   Operation 94 'load' 'tmp_62' <Predicate = true> <Delay = 1.68> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.68> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 14400> <RAM>

State 12 <SV = 11> <Delay = 1.68>
ST_12 : Operation 95 [1/2] (1.68ns)   --->   "%tmp_62 = load i16* %input_addr, align 2" [layers_c/max_pooling2d.cpp:26]   --->   Operation 95 'load' 'tmp_62' <Predicate = true> <Delay = 1.68> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.68> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 14400> <RAM>

State 13 <SV = 12> <Delay = 2.42>
ST_13 : Operation 96 [1/1] (0.00ns)   --->   "%buffer_load_1 = load i16* %buffer" [layers_c/max_pooling2d.cpp:27]   --->   Operation 96 'load' 'buffer_load_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 97 [1/1] (2.42ns)   --->   "%tmp_60 = icmp slt i16 %buffer_load_1, %tmp_62" [layers_c/max_pooling2d.cpp:27]   --->   Operation 97 'icmp' 'tmp_60' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 0.97>
ST_14 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node buffer_5)   --->   "%tmp_58 = or i1 %tmp_55, %tmp_52" [layers_c/max_pooling2d.cpp:27]   --->   Operation 98 'or' 'tmp_58' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node buffer_5)   --->   "%tmp_59 = xor i1 %tmp_58, true" [layers_c/max_pooling2d.cpp:27]   --->   Operation 99 'xor' 'tmp_59' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node buffer_5)   --->   "%or_cond6 = or i1 %tmp_60, %tmp_59" [layers_c/max_pooling2d.cpp:27]   --->   Operation 100 'or' 'or_cond6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 101 [1/1] (0.97ns) (out node of the LUT)   --->   "%buffer_5 = select i1 %or_cond6, i16 %tmp_62, i16 %buffer_load_1" [layers_c/max_pooling2d.cpp:27]   --->   Operation 101 'select' 'buffer_5' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 102 [1/1] (0.00ns)   --->   "store i16 %buffer_5, i16* %buffer" [layers_c/max_pooling2d.cpp:27]   --->   Operation 102 'store' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 103 [1/1] (0.00ns)   --->   "br label %.preheader" [layers_c/max_pooling2d.cpp:24]   --->   Operation 103 'br' <Predicate = true> <Delay = 0.00>

State 15 <SV = 6> <Delay = 1.68>
ST_15 : Operation 104 [1/1] (0.00ns)   --->   "%buffer_load = load i16* %buffer" [layers_c/max_pooling2d.cpp:32]   --->   Operation 104 'load' 'buffer_load' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_54 = zext i12 %tmp_53 to i64" [layers_c/max_pooling2d.cpp:32]   --->   Operation 105 'zext' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 106 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [14400 x i16]* %output_r, i64 0, i64 %tmp_54" [layers_c/max_pooling2d.cpp:32]   --->   Operation 106 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 107 [1/1] (1.68ns)   --->   "store i16 %buffer_load, i16* %output_addr, align 2" [layers_c/max_pooling2d.cpp:32]   --->   Operation 107 'store' <Predicate = true> <Delay = 1.68> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.68> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 14400> <RAM>
ST_15 : Operation 108 [1/1] (0.00ns)   --->   "br label %.preheader8" [layers_c/max_pooling2d.cpp:20]   --->   Operation 108 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.4ns, clock uncertainty: 1.27ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('out_d') with incoming values : ('out_d', layers_c/max_pooling2d.cpp:18) [25]  (1.77 ns)

 <State 2>: 1.92ns
The critical path consists of the following:
	'phi' operation ('phi_mul2', layers_c/max_pooling2d.cpp:32) with incoming values : ('next_mul3', layers_c/max_pooling2d.cpp:32) [27]  (0 ns)
	'add' operation ('next_mul3', layers_c/max_pooling2d.cpp:32) [28]  (1.92 ns)

 <State 3>: 1.92ns
The critical path consists of the following:
	'phi' operation ('out_h') with incoming values : ('out_h', layers_c/max_pooling2d.cpp:19) [38]  (0 ns)
	'add' operation ('tmp2', layers_c/max_pooling2d.cpp:26) [48]  (1.92 ns)

 <State 4>: 4.17ns
The critical path consists of the following:
	'mul' operation ('tmp3', layers_c/max_pooling2d.cpp:26) [50]  (4.17 ns)

 <State 5>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('in_h') with incoming values : ('in_h', layers_c/max_pooling2d.cpp:22) [65]  (1.77 ns)

 <State 6>: 1.82ns
The critical path consists of the following:
	'phi' operation ('in_h') with incoming values : ('in_h', layers_c/max_pooling2d.cpp:22) [65]  (0 ns)
	'add' operation ('tmp4', layers_c/max_pooling2d.cpp:26) [73]  (1.82 ns)

 <State 7>: 1.82ns
The critical path consists of the following:
	'add' operation ('tmp', layers_c/max_pooling2d.cpp:26) [74]  (1.82 ns)

 <State 8>: 4.35ns
The critical path consists of the following:
	'mul' operation ('tmp1', layers_c/max_pooling2d.cpp:26) [76]  (4.35 ns)

 <State 9>: 1.81ns
The critical path consists of the following:
	'phi' operation ('in_w') with incoming values : ('in_w', layers_c/max_pooling2d.cpp:24) [79]  (0 ns)
	'add' operation ('tmp5', layers_c/max_pooling2d.cpp:26) [88]  (1.81 ns)

 <State 10>: 1.81ns
The critical path consists of the following:
	'add' operation ('tmp_56', layers_c/max_pooling2d.cpp:26) [89]  (1.81 ns)

 <State 11>: 1.68ns
The critical path consists of the following:
	'getelementptr' operation ('input_addr', layers_c/max_pooling2d.cpp:26) [91]  (0 ns)
	'load' operation ('tmp', layers_c/max_pooling2d.cpp:26) on array 'input_r' [92]  (1.68 ns)

 <State 12>: 1.68ns
The critical path consists of the following:
	'load' operation ('tmp', layers_c/max_pooling2d.cpp:26) on array 'input_r' [92]  (1.68 ns)

 <State 13>: 2.43ns
The critical path consists of the following:
	'load' operation ('buffer_load_1', layers_c/max_pooling2d.cpp:27) on local variable 'buffer' [86]  (0 ns)
	'icmp' operation ('tmp_60', layers_c/max_pooling2d.cpp:27) [95]  (2.43 ns)

 <State 14>: 0.978ns
The critical path consists of the following:
	'or' operation ('tmp_58', layers_c/max_pooling2d.cpp:27) [93]  (0 ns)
	'xor' operation ('tmp_59', layers_c/max_pooling2d.cpp:27) [94]  (0 ns)
	'or' operation ('or_cond6', layers_c/max_pooling2d.cpp:27) [96]  (0 ns)
	'select' operation ('buffer', layers_c/max_pooling2d.cpp:27) [97]  (0.978 ns)

 <State 15>: 1.68ns
The critical path consists of the following:
	'load' operation ('buffer_load', layers_c/max_pooling2d.cpp:32) on local variable 'buffer' [103]  (0 ns)
	'store' operation (layers_c/max_pooling2d.cpp:32) of variable 'buffer_load', layers_c/max_pooling2d.cpp:32 on array 'output_r' [107]  (1.68 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
