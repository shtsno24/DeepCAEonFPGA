

================================================================
== Vivado HLS Report for 'network'
================================================================
* Date:           Mon Oct 28 11:34:49 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        HLS
* Solution:       network
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.510|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |    Loop Name    | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1         |  840|  840|        30|          -|          -|    28|    no    |
        | + Loop 1.1      |   28|   28|         1|          -|          -|    28|    no    |
        |- Loop 2         |    ?|    ?|         ?|          -|          -|     ?|    no    |
        | + Loop 2.1      |    ?|    ?|         ?|          -|          -|     ?|    no    |
        |  ++ Loop 2.1.1  |    ?|    ?|         4|          -|          -|     ?|    no    |
        +-----------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 2
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 37
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	4  / (exitcond2)
	3  / (!exitcond2)
3 --> 
	3  / (!exitcond)
	2  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	37  / (!tmp_60)
	32  / (tmp_60)
32 --> 
	33  / (tmp_63)
	31  / (!tmp_63)
33 --> 
	34  / (tmp_65)
	32  / (!tmp_65)
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	33  / true
37 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %input_data_V_data_V), !map !372"   --->   Operation 38 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %input_data_V_keep_V), !map !376"   --->   Operation 39 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %input_data_V_strb_V), !map !380"   --->   Operation 40 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_user_V), !map !384"   --->   Operation 41 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_last_V), !map !388"   --->   Operation 42 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_id_V), !map !392"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_dest_V), !map !396"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %output_data_V_data_V), !map !400"   --->   Operation 45 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %output_data_V_keep_V), !map !404"   --->   Operation 46 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %output_data_V_strb_V), !map !408"   --->   Operation 47 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_user_V), !map !412"   --->   Operation 48 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_last_V), !map !416"   --->   Operation 49 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_id_V), !map !420"   --->   Operation 50 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_dest_V), !map !424"   --->   Operation 51 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @network_str) nounwind"   --->   Operation 52 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%input_0_array_0 = alloca [784 x i16], align 2" [mnist_AXI_Stream.cpp:30]   --->   Operation 53 'alloca' 'input_0_array_0' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%out_0_keep_V = alloca [784 x i2], align 1" [mnist_AXI_Stream.cpp:33]   --->   Operation 54 'alloca' 'out_0_keep_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%out_0_strb_V = alloca [784 x i2], align 1" [mnist_AXI_Stream.cpp:33]   --->   Operation 55 'alloca' 'out_0_strb_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%out_0_id_V = alloca [784 x i1], align 1" [mnist_AXI_Stream.cpp:33]   --->   Operation 56 'alloca' 'out_0_id_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%out_0_dest_V = alloca [784 x i1], align 1" [mnist_AXI_Stream.cpp:33]   --->   Operation 57 'alloca' 'out_0_dest_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [mnist_AXI_Stream.cpp:25]   --->   Operation 58 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %input_data_V_data_V, i2* %input_data_V_keep_V, i2* %input_data_V_strb_V, i1* %input_data_V_user_V, i1* %input_data_V_last_V, i1* %input_data_V_id_V, i1* %input_data_V_dest_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [mnist_AXI_Stream.cpp:26]   --->   Operation 59 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, [5 x i8]* @p_str2, i32 1, i32 1, [5 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [mnist_AXI_Stream.cpp:27]   --->   Operation 60 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (1.76ns)   --->   "br label %.preheader60.0" [mnist_AXI_Stream.cpp:36]   --->   Operation 61 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.78>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%height = phi i5 [ 0, %.preheader61.preheader ], [ %height_4, %.preheader60.0.loopexit ]" [mnist_AXI_Stream.cpp:36]   --->   Operation 62 'phi' 'height' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (1.36ns)   --->   "%exitcond2 = icmp eq i5 %height, -4" [mnist_AXI_Stream.cpp:36]   --->   Operation 63 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28)"   --->   Operation 64 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (1.78ns)   --->   "%height_4 = add i5 %height, 1" [mnist_AXI_Stream.cpp:36]   --->   Operation 65 'add' 'height_4' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %.preheader61.1, label %.preheader59.preheader.0" [mnist_AXI_Stream.cpp:36]   --->   Operation 66 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_1 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %height, i5 0)" [mnist_AXI_Stream.cpp:36]   --->   Operation 67 'bitconcatenate' 'tmp_1' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i10 %tmp_1 to i11" [mnist_AXI_Stream.cpp:36]   --->   Operation 68 'zext' 'p_shl_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_2 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %height, i2 0)" [mnist_AXI_Stream.cpp:36]   --->   Operation 69 'bitconcatenate' 'tmp_2' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i7 %tmp_2 to i11" [mnist_AXI_Stream.cpp:39]   --->   Operation 70 'zext' 'p_shl1_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (1.73ns)   --->   "%tmp_3 = sub i11 %p_shl_cast, %p_shl1_cast" [mnist_AXI_Stream.cpp:39]   --->   Operation 71 'sub' 'tmp_3' <Predicate = (!exitcond2)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (1.76ns)   --->   "br label %.preheader59.0" [mnist_AXI_Stream.cpp:37]   --->   Operation 72 'br' <Predicate = (!exitcond2)> <Delay = 1.76>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%Padding2D_0_width_lo = load i16* @Padding2D_0_width, align 2" [mnist_AXI_Stream.cpp:49]   --->   Operation 73 'load' 'Padding2D_0_width_lo' <Predicate = (exitcond2)> <Delay = 0.00>
ST_2 : Operation 74 [2/2] (0.00ns)   --->   "call fastcc void @padding2d_fix16.4([784 x i16]* %input_0_array_0, i16 %Padding2D_0_width_lo, [900 x i16]* @Padding2D_0_array)" [mnist_AXI_Stream.cpp:49]   --->   Operation 74 'call' <Predicate = (exitcond2)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 4.89>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%width = phi i5 [ %width_6, %0 ], [ 0, %.preheader59.preheader.0 ]" [mnist_AXI_Stream.cpp:37]   --->   Operation 75 'phi' 'width' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (1.36ns)   --->   "%exitcond = icmp eq i5 %width, -4" [mnist_AXI_Stream.cpp:37]   --->   Operation 76 'icmp' 'exitcond' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 28, i64 28, i64 28)"   --->   Operation 77 'speclooptripcount' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (1.78ns)   --->   "%width_6 = add i5 %width, 1" [mnist_AXI_Stream.cpp:37]   --->   Operation 78 'add' 'width_6' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.preheader60.0.loopexit, label %0" [mnist_AXI_Stream.cpp:37]   --->   Operation 79 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%empty_29 = call { i16, i2, i2, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %input_data_V_data_V, i2* %input_data_V_keep_V, i2* %input_data_V_strb_V, i1* %input_data_V_user_V, i1* %input_data_V_last_V, i1* %input_data_V_id_V, i1* %input_data_V_dest_V)" [mnist_AXI_Stream.cpp:38]   --->   Operation 80 'read' 'empty_29' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty_29, 0" [mnist_AXI_Stream.cpp:38]   --->   Operation 81 'extractvalue' 'tmp_data_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty_29, 1" [mnist_AXI_Stream.cpp:38]   --->   Operation 82 'extractvalue' 'tmp_keep_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty_29, 2" [mnist_AXI_Stream.cpp:38]   --->   Operation 83 'extractvalue' 'tmp_strb_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty_29, 5" [mnist_AXI_Stream.cpp:38]   --->   Operation 84 'extractvalue' 'tmp_id_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty_29, 6" [mnist_AXI_Stream.cpp:38]   --->   Operation 85 'extractvalue' 'tmp_dest_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_62_cast = zext i5 %width to i11" [mnist_AXI_Stream.cpp:39]   --->   Operation 86 'zext' 'tmp_62_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (1.63ns)   --->   "%tmp_7 = add i11 %tmp_3, %tmp_62_cast" [mnist_AXI_Stream.cpp:39]   --->   Operation 87 'add' 'tmp_7' <Predicate = (!exitcond)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_7_cast = sext i11 %tmp_7 to i64" [mnist_AXI_Stream.cpp:39]   --->   Operation 88 'sext' 'tmp_7_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%input_0_array_0_add = getelementptr [784 x i16]* %input_0_array_0, i64 0, i64 %tmp_7_cast" [mnist_AXI_Stream.cpp:39]   --->   Operation 89 'getelementptr' 'input_0_array_0_add' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%out_0_keep_V_addr = getelementptr [784 x i2]* %out_0_keep_V, i64 0, i64 %tmp_7_cast" [mnist_AXI_Stream.cpp:42]   --->   Operation 90 'getelementptr' 'out_0_keep_V_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%out_0_strb_V_addr = getelementptr [784 x i2]* %out_0_strb_V, i64 0, i64 %tmp_7_cast" [mnist_AXI_Stream.cpp:43]   --->   Operation 91 'getelementptr' 'out_0_strb_V_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%out_0_id_V_addr = getelementptr [784 x i1]* %out_0_id_V, i64 0, i64 %tmp_7_cast" [mnist_AXI_Stream.cpp:41]   --->   Operation 92 'getelementptr' 'out_0_id_V_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%out_0_dest_V_addr = getelementptr [784 x i1]* %out_0_dest_V, i64 0, i64 %tmp_7_cast" [mnist_AXI_Stream.cpp:40]   --->   Operation 93 'getelementptr' 'out_0_dest_V_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (3.25ns)   --->   "store i16 %tmp_data_V, i16* %input_0_array_0_add, align 2" [mnist_AXI_Stream.cpp:39]   --->   Operation 94 'store' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_3 : Operation 95 [1/1] (2.56ns)   --->   "store i1 %tmp_dest_V, i1* %out_0_dest_V_addr, align 1" [mnist_AXI_Stream.cpp:40]   --->   Operation 95 'store' <Predicate = (!exitcond)> <Delay = 2.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_3 : Operation 96 [1/1] (2.56ns)   --->   "store i1 %tmp_id_V, i1* %out_0_id_V_addr, align 2" [mnist_AXI_Stream.cpp:41]   --->   Operation 96 'store' <Predicate = (!exitcond)> <Delay = 2.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_3 : Operation 97 [1/1] (3.25ns)   --->   "store i2 %tmp_keep_V, i2* %out_0_keep_V_addr, align 2" [mnist_AXI_Stream.cpp:42]   --->   Operation 97 'store' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_3 : Operation 98 [1/1] (3.25ns)   --->   "store i2 %tmp_strb_V, i2* %out_0_strb_V_addr, align 1" [mnist_AXI_Stream.cpp:43]   --->   Operation 98 'store' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "br label %.preheader59.0" [mnist_AXI_Stream.cpp:37]   --->   Operation 99 'br' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "br label %.preheader60.0"   --->   Operation 100 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 101 [1/2] (0.00ns)   --->   "call fastcc void @padding2d_fix16.4([784 x i16]* %input_0_array_0, i16 %Padding2D_0_width_lo, [900 x i16]* @Padding2D_0_array)" [mnist_AXI_Stream.cpp:49]   --->   Operation 101 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 3> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%Padding2D_0_depth_lo = load i16* @Padding2D_0_depth, align 2" [mnist_AXI_Stream.cpp:53]   --->   Operation 102 'load' 'Padding2D_0_depth_lo' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%Padding2D_0_height_l = load i16* @Padding2D_0_height, align 2" [mnist_AXI_Stream.cpp:53]   --->   Operation 103 'load' 'Padding2D_0_height_l' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%Padding2D_0_width_lo_1 = load i16* @Padding2D_0_width, align 2" [mnist_AXI_Stream.cpp:53]   --->   Operation 104 'load' 'Padding2D_0_width_lo_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%Conv2D_0_depth_load = load i16* @Conv2D_0_depth, align 2" [mnist_AXI_Stream.cpp:53]   --->   Operation 105 'load' 'Conv2D_0_depth_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%Conv2D_0_height_load = load i16* @Conv2D_0_height, align 2" [mnist_AXI_Stream.cpp:53]   --->   Operation 106 'load' 'Conv2D_0_height_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%Conv2D_0_width_load = load i16* @Conv2D_0_width, align 2" [mnist_AXI_Stream.cpp:53]   --->   Operation 107 'load' 'Conv2D_0_width_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 108 [2/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16.1(i16 %Padding2D_0_depth_lo, i16 %Padding2D_0_height_l, i16 %Padding2D_0_width_lo_1, i16 %Conv2D_0_depth_load, i16 %Conv2D_0_height_load, i16 %Conv2D_0_width_load, [12544 x i16]* @Conv2D_0_array)" [mnist_AXI_Stream.cpp:53]   --->   Operation 108 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 4> <Delay = 0.00>
ST_6 : Operation 109 [1/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16.1(i16 %Padding2D_0_depth_lo, i16 %Padding2D_0_height_l, i16 %Padding2D_0_width_lo_1, i16 %Conv2D_0_depth_load, i16 %Conv2D_0_height_load, i16 %Conv2D_0_width_load, [12544 x i16]* @Conv2D_0_array)" [mnist_AXI_Stream.cpp:53]   --->   Operation 109 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 5> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.00ns)   --->   "%Conv2D_0_height_load_1 = load i16* @Conv2D_0_height, align 2" [mnist_AXI_Stream.cpp:58]   --->   Operation 110 'load' 'Conv2D_0_height_load_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 111 [1/1] (0.00ns)   --->   "%Conv2D_0_width_load_1 = load i16* @Conv2D_0_width, align 2" [mnist_AXI_Stream.cpp:58]   --->   Operation 111 'load' 'Conv2D_0_width_load_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 112 [1/1] (0.00ns)   --->   "%MaxPooling2D_0_depth_1 = load i16* @MaxPooling2D_0_depth, align 2" [mnist_AXI_Stream.cpp:58]   --->   Operation 112 'load' 'MaxPooling2D_0_depth_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 113 [1/1] (0.00ns)   --->   "%MaxPooling2D_0_heigh_1 = load i16* @MaxPooling2D_0_heigh, align 2" [mnist_AXI_Stream.cpp:58]   --->   Operation 113 'load' 'MaxPooling2D_0_heigh_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 114 [1/1] (0.00ns)   --->   "%MaxPooling2D_0_width_1 = load i16* @MaxPooling2D_0_width, align 2" [mnist_AXI_Stream.cpp:58]   --->   Operation 114 'load' 'MaxPooling2D_0_width_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 115 [2/2] (0.00ns)   --->   "call fastcc void @max_pooling2d_fix16.1(i16 zeroext %Conv2D_0_height_load_1, i16 zeroext %Conv2D_0_width_load_1, i16 zeroext %MaxPooling2D_0_depth_1, i16 zeroext %MaxPooling2D_0_heigh_1, i16 zeroext %MaxPooling2D_0_width_1)" [mnist_AXI_Stream.cpp:58]   --->   Operation 115 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 6> <Delay = 0.00>
ST_8 : Operation 116 [1/2] (0.00ns)   --->   "call fastcc void @max_pooling2d_fix16.1(i16 zeroext %Conv2D_0_height_load_1, i16 zeroext %Conv2D_0_width_load_1, i16 zeroext %MaxPooling2D_0_depth_1, i16 zeroext %MaxPooling2D_0_heigh_1, i16 zeroext %MaxPooling2D_0_width_1)" [mnist_AXI_Stream.cpp:58]   --->   Operation 116 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 7> <Delay = 2.07>
ST_9 : Operation 117 [1/1] (0.00ns)   --->   "%MaxPooling2D_0_depth_2 = load i16* @MaxPooling2D_0_depth, align 2" [mnist_AXI_Stream.cpp:62]   --->   Operation 117 'load' 'MaxPooling2D_0_depth_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 118 [1/1] (0.00ns)   --->   "%MaxPooling2D_0_heigh_2 = load i16* @MaxPooling2D_0_heigh, align 2" [mnist_AXI_Stream.cpp:62]   --->   Operation 118 'load' 'MaxPooling2D_0_heigh_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 119 [1/1] (0.00ns)   --->   "%MaxPooling2D_0_width_2 = load i16* @MaxPooling2D_0_width, align 2" [mnist_AXI_Stream.cpp:62]   --->   Operation 119 'load' 'MaxPooling2D_0_width_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 120 [1/1] (0.00ns)   --->   "%Padding2D_1_height_l = load i16* @Padding2D_1_height, align 2" [mnist_AXI_Stream.cpp:62]   --->   Operation 120 'load' 'Padding2D_1_height_l' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 121 [1/1] (0.00ns)   --->   "%Padding2D_1_width_lo = load i16* @Padding2D_1_width, align 2" [mnist_AXI_Stream.cpp:62]   --->   Operation 121 'load' 'Padding2D_1_width_lo' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 122 [2/2] (2.07ns)   --->   "call fastcc void @padding2d_fix16.3(i16 %MaxPooling2D_0_depth_2, i16 %MaxPooling2D_0_heigh_2, i16 %MaxPooling2D_0_width_2, [3136 x i16]* @MaxPooling2D_0_array, i16 %Padding2D_1_height_l, i16 %Padding2D_1_width_lo, [4096 x i16]* @Padding2D_1_array)" [mnist_AXI_Stream.cpp:62]   --->   Operation 122 'call' <Predicate = true> <Delay = 2.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 8> <Delay = 0.00>
ST_10 : Operation 123 [1/2] (0.00ns)   --->   "call fastcc void @padding2d_fix16.3(i16 %MaxPooling2D_0_depth_2, i16 %MaxPooling2D_0_heigh_2, i16 %MaxPooling2D_0_width_2, [3136 x i16]* @MaxPooling2D_0_array, i16 %Padding2D_1_height_l, i16 %Padding2D_1_width_lo, [4096 x i16]* @Padding2D_1_array)" [mnist_AXI_Stream.cpp:62]   --->   Operation 123 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 9> <Delay = 0.00>
ST_11 : Operation 124 [1/1] (0.00ns)   --->   "%Padding2D_1_depth_lo = load i16* @Padding2D_1_depth, align 2" [mnist_AXI_Stream.cpp:66]   --->   Operation 124 'load' 'Padding2D_1_depth_lo' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 125 [1/1] (0.00ns)   --->   "%Padding2D_1_height_l_1 = load i16* @Padding2D_1_height, align 2" [mnist_AXI_Stream.cpp:66]   --->   Operation 125 'load' 'Padding2D_1_height_l_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 126 [1/1] (0.00ns)   --->   "%Padding2D_1_width_lo_1 = load i16* @Padding2D_1_width, align 2" [mnist_AXI_Stream.cpp:66]   --->   Operation 126 'load' 'Padding2D_1_width_lo_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 127 [1/1] (0.00ns)   --->   "%Conv2D_1_depth_load = load i16* @Conv2D_1_depth, align 2" [mnist_AXI_Stream.cpp:66]   --->   Operation 127 'load' 'Conv2D_1_depth_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 128 [1/1] (0.00ns)   --->   "%Conv2D_1_height_load = load i16* @Conv2D_1_height, align 2" [mnist_AXI_Stream.cpp:66]   --->   Operation 128 'load' 'Conv2D_1_height_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 129 [1/1] (0.00ns)   --->   "%Conv2D_1_width_load = load i16* @Conv2D_1_width, align 2" [mnist_AXI_Stream.cpp:66]   --->   Operation 129 'load' 'Conv2D_1_width_load' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 130 [2/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16.2(i16 zeroext %Padding2D_1_depth_lo, i16 zeroext %Padding2D_1_height_l_1, i16 zeroext %Padding2D_1_width_lo_1, i16 zeroext %Conv2D_1_depth_load, i16 zeroext %Conv2D_1_height_load, i16 zeroext %Conv2D_1_width_load)" [mnist_AXI_Stream.cpp:66]   --->   Operation 130 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 12 <SV = 10> <Delay = 0.00>
ST_12 : Operation 131 [1/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16.2(i16 zeroext %Padding2D_1_depth_lo, i16 zeroext %Padding2D_1_height_l_1, i16 zeroext %Padding2D_1_width_lo_1, i16 zeroext %Conv2D_1_depth_load, i16 zeroext %Conv2D_1_height_load, i16 zeroext %Conv2D_1_width_load)" [mnist_AXI_Stream.cpp:66]   --->   Operation 131 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 11> <Delay = 0.00>
ST_13 : Operation 132 [1/1] (0.00ns)   --->   "%Conv2D_1_height_load_1 = load i16* @Conv2D_1_height, align 2" [mnist_AXI_Stream.cpp:71]   --->   Operation 132 'load' 'Conv2D_1_height_load_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 133 [1/1] (0.00ns)   --->   "%Conv2D_1_width_load_1 = load i16* @Conv2D_1_width, align 2" [mnist_AXI_Stream.cpp:71]   --->   Operation 133 'load' 'Conv2D_1_width_load_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 134 [1/1] (0.00ns)   --->   "%MaxPooling2D_1_depth_1 = load i16* @MaxPooling2D_1_depth, align 2" [mnist_AXI_Stream.cpp:71]   --->   Operation 134 'load' 'MaxPooling2D_1_depth_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 135 [1/1] (0.00ns)   --->   "%MaxPooling2D_1_heigh_1 = load i16* @MaxPooling2D_1_heigh, align 2" [mnist_AXI_Stream.cpp:71]   --->   Operation 135 'load' 'MaxPooling2D_1_heigh_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 136 [1/1] (0.00ns)   --->   "%MaxPooling2D_1_width_1 = load i16* @MaxPooling2D_1_width, align 2" [mnist_AXI_Stream.cpp:71]   --->   Operation 136 'load' 'MaxPooling2D_1_width_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 137 [2/2] (0.00ns)   --->   "call fastcc void @max_pooling2d_fix16(i16 %Conv2D_1_height_load_1, i16 %Conv2D_1_width_load_1, [1568 x i16]* @Conv2D_1_array, i16 %MaxPooling2D_1_depth_1, i16 %MaxPooling2D_1_heigh_1, i16 %MaxPooling2D_1_width_1)" [mnist_AXI_Stream.cpp:71]   --->   Operation 137 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 14 <SV = 12> <Delay = 0.00>
ST_14 : Operation 138 [1/2] (0.00ns)   --->   "call fastcc void @max_pooling2d_fix16(i16 %Conv2D_1_height_load_1, i16 %Conv2D_1_width_load_1, [1568 x i16]* @Conv2D_1_array, i16 %MaxPooling2D_1_depth_1, i16 %MaxPooling2D_1_heigh_1, i16 %MaxPooling2D_1_width_1)" [mnist_AXI_Stream.cpp:71]   --->   Operation 138 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 13> <Delay = 2.07>
ST_15 : Operation 139 [1/1] (0.00ns)   --->   "%MaxPooling2D_1_depth_2 = load i16* @MaxPooling2D_1_depth, align 2" [mnist_AXI_Stream.cpp:75]   --->   Operation 139 'load' 'MaxPooling2D_1_depth_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 140 [1/1] (0.00ns)   --->   "%MaxPooling2D_1_heigh_2 = load i16* @MaxPooling2D_1_heigh, align 2" [mnist_AXI_Stream.cpp:75]   --->   Operation 140 'load' 'MaxPooling2D_1_heigh_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 141 [1/1] (0.00ns)   --->   "%MaxPooling2D_1_width_2 = load i16* @MaxPooling2D_1_width, align 2" [mnist_AXI_Stream.cpp:75]   --->   Operation 141 'load' 'MaxPooling2D_1_width_2' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 142 [1/1] (0.00ns)   --->   "%Padding2D_2_height_l = load i16* @Padding2D_2_height, align 2" [mnist_AXI_Stream.cpp:75]   --->   Operation 142 'load' 'Padding2D_2_height_l' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 143 [1/1] (0.00ns)   --->   "%Padding2D_2_width_lo = load i16* @Padding2D_2_width, align 2" [mnist_AXI_Stream.cpp:75]   --->   Operation 143 'load' 'Padding2D_2_width_lo' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 144 [2/2] (2.07ns)   --->   "call fastcc void @padding2d_fix16.2(i16 %MaxPooling2D_1_depth_2, i16 %MaxPooling2D_1_heigh_2, i16 %MaxPooling2D_1_width_2, [392 x i16]* @MaxPooling2D_1_array, i16 %Padding2D_2_height_l, i16 %Padding2D_2_width_lo, [648 x i16]* @Padding2D_2_array)" [mnist_AXI_Stream.cpp:75]   --->   Operation 144 'call' <Predicate = true> <Delay = 2.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 16 <SV = 14> <Delay = 0.00>
ST_16 : Operation 145 [1/2] (0.00ns)   --->   "call fastcc void @padding2d_fix16.2(i16 %MaxPooling2D_1_depth_2, i16 %MaxPooling2D_1_heigh_2, i16 %MaxPooling2D_1_width_2, [392 x i16]* @MaxPooling2D_1_array, i16 %Padding2D_2_height_l, i16 %Padding2D_2_width_lo, [648 x i16]* @Padding2D_2_array)" [mnist_AXI_Stream.cpp:75]   --->   Operation 145 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 17 <SV = 15> <Delay = 0.00>
ST_17 : Operation 146 [1/1] (0.00ns)   --->   "%Padding2D_2_depth_lo = load i16* @Padding2D_2_depth, align 2" [mnist_AXI_Stream.cpp:79]   --->   Operation 146 'load' 'Padding2D_2_depth_lo' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 147 [1/1] (0.00ns)   --->   "%Padding2D_2_height_l_1 = load i16* @Padding2D_2_height, align 2" [mnist_AXI_Stream.cpp:79]   --->   Operation 147 'load' 'Padding2D_2_height_l_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 148 [1/1] (0.00ns)   --->   "%Padding2D_2_width_lo_1 = load i16* @Padding2D_2_width, align 2" [mnist_AXI_Stream.cpp:79]   --->   Operation 148 'load' 'Padding2D_2_width_lo_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 149 [1/1] (0.00ns)   --->   "%Conv2D_2_depth_load = load i16* @Conv2D_2_depth, align 2" [mnist_AXI_Stream.cpp:79]   --->   Operation 149 'load' 'Conv2D_2_depth_load' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 150 [1/1] (0.00ns)   --->   "%Conv2D_2_height_load = load i16* @Conv2D_2_height, align 2" [mnist_AXI_Stream.cpp:79]   --->   Operation 150 'load' 'Conv2D_2_height_load' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 151 [1/1] (0.00ns)   --->   "%Conv2D_2_width_load = load i16* @Conv2D_2_width, align 2" [mnist_AXI_Stream.cpp:79]   --->   Operation 151 'load' 'Conv2D_2_width_load' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 152 [2/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16.3(i16 %Padding2D_2_depth_lo, i16 %Padding2D_2_height_l_1, i16 %Padding2D_2_width_lo_1, i16 %Conv2D_2_depth_load, i16 %Conv2D_2_height_load, i16 %Conv2D_2_width_load, [392 x i16]* @Conv2D_2_array)" [mnist_AXI_Stream.cpp:79]   --->   Operation 152 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 18 <SV = 16> <Delay = 0.00>
ST_18 : Operation 153 [1/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16.3(i16 %Padding2D_2_depth_lo, i16 %Padding2D_2_height_l_1, i16 %Padding2D_2_width_lo_1, i16 %Conv2D_2_depth_load, i16 %Conv2D_2_height_load, i16 %Conv2D_2_width_load, [392 x i16]* @Conv2D_2_array)" [mnist_AXI_Stream.cpp:79]   --->   Operation 153 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 19 <SV = 17> <Delay = 0.00>
ST_19 : Operation 154 [1/1] (0.00ns)   --->   "%Conv2D_2_height_load_1 = load i16* @Conv2D_2_height, align 2" [mnist_AXI_Stream.cpp:84]   --->   Operation 154 'load' 'Conv2D_2_height_load_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 155 [1/1] (0.00ns)   --->   "%Conv2D_2_width_load_1 = load i16* @Conv2D_2_width, align 2" [mnist_AXI_Stream.cpp:84]   --->   Operation 155 'load' 'Conv2D_2_width_load_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 156 [1/1] (0.00ns)   --->   "%UpSampling2D_0_depth_1 = load i16* @UpSampling2D_0_depth, align 2" [mnist_AXI_Stream.cpp:84]   --->   Operation 156 'load' 'UpSampling2D_0_depth_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 157 [1/1] (0.00ns)   --->   "%UpSampling2D_0_heigh_1 = load i16* @UpSampling2D_0_heigh, align 2" [mnist_AXI_Stream.cpp:84]   --->   Operation 157 'load' 'UpSampling2D_0_heigh_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 158 [1/1] (0.00ns)   --->   "%UpSampling2D_0_width_1 = load i16* @UpSampling2D_0_width, align 2" [mnist_AXI_Stream.cpp:84]   --->   Operation 158 'load' 'UpSampling2D_0_width_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 159 [2/2] (0.00ns)   --->   "call fastcc void @up_sampling2d_fix16.1(i16 zeroext %Conv2D_2_height_load_1, i16 zeroext %Conv2D_2_width_load_1, i16 zeroext %UpSampling2D_0_depth_1, i16 zeroext %UpSampling2D_0_heigh_1, i16 zeroext %UpSampling2D_0_width_1)" [mnist_AXI_Stream.cpp:84]   --->   Operation 159 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 20 <SV = 18> <Delay = 0.00>
ST_20 : Operation 160 [1/2] (0.00ns)   --->   "call fastcc void @up_sampling2d_fix16.1(i16 zeroext %Conv2D_2_height_load_1, i16 zeroext %Conv2D_2_width_load_1, i16 zeroext %UpSampling2D_0_depth_1, i16 zeroext %UpSampling2D_0_heigh_1, i16 zeroext %UpSampling2D_0_width_1)" [mnist_AXI_Stream.cpp:84]   --->   Operation 160 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 19> <Delay = 2.07>
ST_21 : Operation 161 [1/1] (0.00ns)   --->   "%UpSampling2D_0_depth_2 = load i16* @UpSampling2D_0_depth, align 2" [mnist_AXI_Stream.cpp:88]   --->   Operation 161 'load' 'UpSampling2D_0_depth_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 162 [1/1] (0.00ns)   --->   "%UpSampling2D_0_heigh_2 = load i16* @UpSampling2D_0_heigh, align 2" [mnist_AXI_Stream.cpp:88]   --->   Operation 162 'load' 'UpSampling2D_0_heigh_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 163 [1/1] (0.00ns)   --->   "%UpSampling2D_0_width_2 = load i16* @UpSampling2D_0_width, align 2" [mnist_AXI_Stream.cpp:88]   --->   Operation 163 'load' 'UpSampling2D_0_width_2' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 164 [1/1] (0.00ns)   --->   "%Padding2D_3_height_l = load i16* @Padding2D_3_height, align 2" [mnist_AXI_Stream.cpp:88]   --->   Operation 164 'load' 'Padding2D_3_height_l' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 165 [1/1] (0.00ns)   --->   "%Padding2D_3_width_lo = load i16* @Padding2D_3_width, align 2" [mnist_AXI_Stream.cpp:88]   --->   Operation 165 'load' 'Padding2D_3_width_lo' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 166 [2/2] (2.07ns)   --->   "call fastcc void @padding2d_fix16.1(i16 %UpSampling2D_0_depth_2, i16 %UpSampling2D_0_heigh_2, i16 %UpSampling2D_0_width_2, [1568 x i16]* @UpSampling2D_0_array, i16 %Padding2D_3_height_l, i16 %Padding2D_3_width_lo, [2048 x i16]* @Padding2D_3_array)" [mnist_AXI_Stream.cpp:88]   --->   Operation 166 'call' <Predicate = true> <Delay = 2.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 22 <SV = 20> <Delay = 0.00>
ST_22 : Operation 167 [1/2] (0.00ns)   --->   "call fastcc void @padding2d_fix16.1(i16 %UpSampling2D_0_depth_2, i16 %UpSampling2D_0_heigh_2, i16 %UpSampling2D_0_width_2, [1568 x i16]* @UpSampling2D_0_array, i16 %Padding2D_3_height_l, i16 %Padding2D_3_width_lo, [2048 x i16]* @Padding2D_3_array)" [mnist_AXI_Stream.cpp:88]   --->   Operation 167 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 23 <SV = 21> <Delay = 0.00>
ST_23 : Operation 168 [1/1] (0.00ns)   --->   "%Padding2D_3_depth_lo = load i16* @Padding2D_3_depth, align 2" [mnist_AXI_Stream.cpp:92]   --->   Operation 168 'load' 'Padding2D_3_depth_lo' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 169 [1/1] (0.00ns)   --->   "%Padding2D_3_height_l_1 = load i16* @Padding2D_3_height, align 2" [mnist_AXI_Stream.cpp:92]   --->   Operation 169 'load' 'Padding2D_3_height_l_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 170 [1/1] (0.00ns)   --->   "%Padding2D_3_width_lo_1 = load i16* @Padding2D_3_width, align 2" [mnist_AXI_Stream.cpp:92]   --->   Operation 170 'load' 'Padding2D_3_width_lo_1' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 171 [1/1] (0.00ns)   --->   "%Conv2D_3_depth_load = load i16* @Conv2D_3_depth, align 2" [mnist_AXI_Stream.cpp:92]   --->   Operation 171 'load' 'Conv2D_3_depth_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 172 [1/1] (0.00ns)   --->   "%Conv2D_3_height_load = load i16* @Conv2D_3_height, align 2" [mnist_AXI_Stream.cpp:92]   --->   Operation 172 'load' 'Conv2D_3_height_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 173 [1/1] (0.00ns)   --->   "%Conv2D_3_width_load = load i16* @Conv2D_3_width, align 2" [mnist_AXI_Stream.cpp:92]   --->   Operation 173 'load' 'Conv2D_3_width_load' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 174 [2/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16.228(i16 %Padding2D_3_depth_lo, i16 %Padding2D_3_height_l_1, i16 %Padding2D_3_width_lo_1, i16 %Conv2D_3_depth_load, i16 %Conv2D_3_height_load, i16 %Conv2D_3_width_load, [3136 x i16]* @Conv2D_3_array)" [mnist_AXI_Stream.cpp:92]   --->   Operation 174 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 24 <SV = 22> <Delay = 0.00>
ST_24 : Operation 175 [1/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16.228(i16 %Padding2D_3_depth_lo, i16 %Padding2D_3_height_l_1, i16 %Padding2D_3_width_lo_1, i16 %Conv2D_3_depth_load, i16 %Conv2D_3_height_load, i16 %Conv2D_3_width_load, [3136 x i16]* @Conv2D_3_array)" [mnist_AXI_Stream.cpp:92]   --->   Operation 175 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 25 <SV = 23> <Delay = 0.00>
ST_25 : Operation 176 [1/1] (0.00ns)   --->   "%Conv2D_3_height_load_1 = load i16* @Conv2D_3_height, align 2" [mnist_AXI_Stream.cpp:97]   --->   Operation 176 'load' 'Conv2D_3_height_load_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 177 [1/1] (0.00ns)   --->   "%Conv2D_3_width_load_1 = load i16* @Conv2D_3_width, align 2" [mnist_AXI_Stream.cpp:97]   --->   Operation 177 'load' 'Conv2D_3_width_load_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 178 [1/1] (0.00ns)   --->   "%UpSampling2D_1_depth_1 = load i16* @UpSampling2D_1_depth, align 2" [mnist_AXI_Stream.cpp:97]   --->   Operation 178 'load' 'UpSampling2D_1_depth_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 179 [1/1] (0.00ns)   --->   "%UpSampling2D_1_heigh_1 = load i16* @UpSampling2D_1_heigh, align 2" [mnist_AXI_Stream.cpp:97]   --->   Operation 179 'load' 'UpSampling2D_1_heigh_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 180 [1/1] (0.00ns)   --->   "%UpSampling2D_1_width_1 = load i16* @UpSampling2D_1_width, align 2" [mnist_AXI_Stream.cpp:97]   --->   Operation 180 'load' 'UpSampling2D_1_width_1' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 181 [2/2] (0.00ns)   --->   "call fastcc void @up_sampling2d_fix16(i16 zeroext %Conv2D_3_height_load_1, i16 zeroext %Conv2D_3_width_load_1, i16 zeroext %UpSampling2D_1_depth_1, i16 zeroext %UpSampling2D_1_heigh_1, i16 zeroext %UpSampling2D_1_width_1)" [mnist_AXI_Stream.cpp:97]   --->   Operation 181 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 26 <SV = 24> <Delay = 0.00>
ST_26 : Operation 182 [1/2] (0.00ns)   --->   "call fastcc void @up_sampling2d_fix16(i16 zeroext %Conv2D_3_height_load_1, i16 zeroext %Conv2D_3_width_load_1, i16 zeroext %UpSampling2D_1_depth_1, i16 zeroext %UpSampling2D_1_heigh_1, i16 zeroext %UpSampling2D_1_width_1)" [mnist_AXI_Stream.cpp:97]   --->   Operation 182 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 27 <SV = 25> <Delay = 2.07>
ST_27 : Operation 183 [1/1] (0.00ns)   --->   "%UpSampling2D_1_depth_2 = load i16* @UpSampling2D_1_depth, align 2" [mnist_AXI_Stream.cpp:101]   --->   Operation 183 'load' 'UpSampling2D_1_depth_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 184 [1/1] (0.00ns)   --->   "%UpSampling2D_1_heigh_2 = load i16* @UpSampling2D_1_heigh, align 2" [mnist_AXI_Stream.cpp:101]   --->   Operation 184 'load' 'UpSampling2D_1_heigh_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 185 [1/1] (0.00ns)   --->   "%UpSampling2D_1_width_2 = load i16* @UpSampling2D_1_width, align 2" [mnist_AXI_Stream.cpp:101]   --->   Operation 185 'load' 'UpSampling2D_1_width_2' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 186 [1/1] (0.00ns)   --->   "%Padding2D_4_height_l = load i16* @Padding2D_4_height, align 2" [mnist_AXI_Stream.cpp:101]   --->   Operation 186 'load' 'Padding2D_4_height_l' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 187 [1/1] (0.00ns)   --->   "%Padding2D_4_width_lo = load i16* @Padding2D_4_width, align 2" [mnist_AXI_Stream.cpp:101]   --->   Operation 187 'load' 'Padding2D_4_width_lo' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 188 [2/2] (2.07ns)   --->   "call fastcc void @padding2d_fix16(i16 %UpSampling2D_1_depth_2, i16 %UpSampling2D_1_heigh_2, i16 %UpSampling2D_1_width_2, [12544 x i16]* @UpSampling2D_1_array, i16 %Padding2D_4_height_l, i16 %Padding2D_4_width_lo, [14400 x i16]* @Padding2D_4_array)" [mnist_AXI_Stream.cpp:101]   --->   Operation 188 'call' <Predicate = true> <Delay = 2.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 26> <Delay = 0.00>
ST_28 : Operation 189 [1/2] (0.00ns)   --->   "call fastcc void @padding2d_fix16(i16 %UpSampling2D_1_depth_2, i16 %UpSampling2D_1_heigh_2, i16 %UpSampling2D_1_width_2, [12544 x i16]* @UpSampling2D_1_array, i16 %Padding2D_4_height_l, i16 %Padding2D_4_width_lo, [14400 x i16]* @Padding2D_4_array)" [mnist_AXI_Stream.cpp:101]   --->   Operation 189 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 29 <SV = 27> <Delay = 0.00>
ST_29 : Operation 190 [1/1] (0.00ns)   --->   "%Padding2D_4_depth_lo = load i16* @Padding2D_4_depth, align 2" [mnist_AXI_Stream.cpp:105]   --->   Operation 190 'load' 'Padding2D_4_depth_lo' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 191 [1/1] (0.00ns)   --->   "%Padding2D_4_height_l_1 = load i16* @Padding2D_4_height, align 2" [mnist_AXI_Stream.cpp:105]   --->   Operation 191 'load' 'Padding2D_4_height_l_1' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 192 [1/1] (0.00ns)   --->   "%Padding2D_4_width_lo_1 = load i16* @Padding2D_4_width, align 2" [mnist_AXI_Stream.cpp:105]   --->   Operation 192 'load' 'Padding2D_4_width_lo_1' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 193 [1/1] (0.00ns)   --->   "%Conv2D_4_depth_load = load i16* @Conv2D_4_depth, align 2" [mnist_AXI_Stream.cpp:105]   --->   Operation 193 'load' 'Conv2D_4_depth_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 194 [1/1] (0.00ns)   --->   "%Conv2D_4_height_load = load i16* @Conv2D_4_height, align 2" [mnist_AXI_Stream.cpp:105]   --->   Operation 194 'load' 'Conv2D_4_height_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 195 [1/1] (0.00ns)   --->   "%Conv2D_4_width_load = load i16* @Conv2D_4_width, align 2" [mnist_AXI_Stream.cpp:105]   --->   Operation 195 'load' 'Conv2D_4_width_load' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 196 [2/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16(i16 %Padding2D_4_depth_lo, i16 %Padding2D_4_height_l_1, i16 %Padding2D_4_width_lo_1, i16 %Conv2D_4_depth_load, i16 %Conv2D_4_height_load, i16 %Conv2D_4_width_load, [784 x i16]* @Conv2D_4_array)" [mnist_AXI_Stream.cpp:105]   --->   Operation 196 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 30 <SV = 28> <Delay = 1.76>
ST_30 : Operation 197 [1/2] (0.00ns)   --->   "call fastcc void @conv2d_fix16(i16 %Padding2D_4_depth_lo, i16 %Padding2D_4_height_l_1, i16 %Padding2D_4_width_lo_1, i16 %Conv2D_4_depth_load, i16 %Conv2D_4_height_load, i16 %Conv2D_4_width_load, [784 x i16]* @Conv2D_4_array)" [mnist_AXI_Stream.cpp:105]   --->   Operation 197 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_30 : Operation 198 [1/1] (1.76ns)   --->   "br label %.loopexit" [mnist_AXI_Stream.cpp:110]   --->   Operation 198 'br' <Predicate = true> <Delay = 1.76>

State 31 <SV = 29> <Delay = 2.75>
ST_31 : Operation 199 [1/1] (0.00ns)   --->   "%depth7 = phi i32 [ 0, %.preheader61.1 ], [ %depth, %.loopexit.loopexit ]"   --->   Operation 199 'phi' 'depth7' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 200 [1/1] (0.00ns)   --->   "%Conv2D_4_depth_load_1 = load i16* @Conv2D_4_depth, align 2" [mnist_AXI_Stream.cpp:110]   --->   Operation 200 'load' 'Conv2D_4_depth_load_1' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 201 [1/1] (0.00ns)   --->   "%tmp_s = zext i16 %Conv2D_4_depth_load_1 to i32" [mnist_AXI_Stream.cpp:110]   --->   Operation 201 'zext' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 202 [1/1] (2.47ns)   --->   "%tmp_60 = icmp slt i32 %depth7, %tmp_s" [mnist_AXI_Stream.cpp:110]   --->   Operation 202 'icmp' 'tmp_60' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 203 [1/1] (2.55ns)   --->   "%depth = add nsw i32 %depth7, 1" [mnist_AXI_Stream.cpp:110]   --->   Operation 203 'add' 'depth' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 204 [1/1] (0.00ns)   --->   "br i1 %tmp_60, label %.preheader58.preheader, label %5" [mnist_AXI_Stream.cpp:110]   --->   Operation 204 'br' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 205 [1/1] (0.00ns)   --->   "%tmp_4 = call i37 @_ssdm_op_BitConcatenate.i37.i32.i5(i32 %depth7, i5 0)" [mnist_AXI_Stream.cpp:110]   --->   Operation 205 'bitconcatenate' 'tmp_4' <Predicate = (tmp_60)> <Delay = 0.00>
ST_31 : Operation 206 [1/1] (0.00ns)   --->   "%p_shl2_cast = sext i37 %tmp_4 to i38" [mnist_AXI_Stream.cpp:110]   --->   Operation 206 'sext' 'p_shl2_cast' <Predicate = (tmp_60)> <Delay = 0.00>
ST_31 : Operation 207 [1/1] (0.00ns)   --->   "%tmp_5 = call i34 @_ssdm_op_BitConcatenate.i34.i32.i2(i32 %depth7, i2 0)" [mnist_AXI_Stream.cpp:110]   --->   Operation 207 'bitconcatenate' 'tmp_5' <Predicate = (tmp_60)> <Delay = 0.00>
ST_31 : Operation 208 [1/1] (0.00ns)   --->   "%p_shl3_cast = sext i34 %tmp_5 to i38" [mnist_AXI_Stream.cpp:114]   --->   Operation 208 'sext' 'p_shl3_cast' <Predicate = (tmp_60)> <Delay = 0.00>
ST_31 : Operation 209 [1/1] (2.75ns)   --->   "%tmp_6 = sub i38 %p_shl2_cast, %p_shl3_cast" [mnist_AXI_Stream.cpp:114]   --->   Operation 209 'sub' 'tmp_6' <Predicate = (tmp_60)> <Delay = 2.75> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 210 [1/1] (1.76ns)   --->   "br label %.preheader58" [mnist_AXI_Stream.cpp:111]   --->   Operation 210 'br' <Predicate = (tmp_60)> <Delay = 1.76>
ST_31 : Operation 211 [2/2] (0.00ns)   --->   "ret void" [mnist_AXI_Stream.cpp:137]   --->   Operation 211 'ret' <Predicate = (!tmp_60)> <Delay = 0.00>

State 32 <SV = 30> <Delay = 4.43>
ST_32 : Operation 212 [1/1] (0.00ns)   --->   "%height8 = phi i32 [ 0, %.preheader58.preheader ], [ %height_3, %.preheader58.loopexit ]"   --->   Operation 212 'phi' 'height8' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 213 [1/1] (0.00ns)   --->   "%Conv2D_4_height_load_1 = load i16* @Conv2D_4_height, align 2" [mnist_AXI_Stream.cpp:111]   --->   Operation 213 'load' 'Conv2D_4_height_load_1' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 214 [1/1] (0.00ns)   --->   "%tmp_62 = zext i16 %Conv2D_4_height_load_1 to i32" [mnist_AXI_Stream.cpp:111]   --->   Operation 214 'zext' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 215 [1/1] (2.47ns)   --->   "%tmp_63 = icmp slt i32 %height8, %tmp_62" [mnist_AXI_Stream.cpp:111]   --->   Operation 215 'icmp' 'tmp_63' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 216 [1/1] (2.55ns)   --->   "%height_3 = add nsw i32 %height8, 1" [mnist_AXI_Stream.cpp:111]   --->   Operation 216 'add' 'height_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 217 [1/1] (0.00ns)   --->   "br i1 %tmp_63, label %.preheader.preheader, label %.loopexit.loopexit" [mnist_AXI_Stream.cpp:111]   --->   Operation 217 'br' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 218 [1/1] (0.00ns)   --->   "%tmp_65_cast = sext i32 %height8 to i38" [mnist_AXI_Stream.cpp:114]   --->   Operation 218 'sext' 'tmp_65_cast' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 219 [1/1] (2.79ns)   --->   "%tmp_8 = add i38 %tmp_65_cast, %tmp_6" [mnist_AXI_Stream.cpp:114]   --->   Operation 219 'add' 'tmp_8' <Predicate = (tmp_63)> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 220 [1/1] (0.00ns)   --->   "%tmp_9 = trunc i38 %tmp_8 to i6" [mnist_AXI_Stream.cpp:114]   --->   Operation 220 'trunc' 'tmp_9' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 221 [1/1] (0.00ns)   --->   "%p_shl6_cast = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %tmp_9, i5 0)" [mnist_AXI_Stream.cpp:114]   --->   Operation 221 'bitconcatenate' 'p_shl6_cast' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 222 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i38 %tmp_8 to i9" [mnist_AXI_Stream.cpp:114]   --->   Operation 222 'trunc' 'tmp_10' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 223 [1/1] (0.00ns)   --->   "%p_shl7_cast = call i11 @_ssdm_op_BitConcatenate.i11.i9.i2(i9 %tmp_10, i2 0)" [mnist_AXI_Stream.cpp:114]   --->   Operation 223 'bitconcatenate' 'p_shl7_cast' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 224 [1/1] (1.63ns)   --->   "%tmp_11 = sub i11 %p_shl6_cast, %p_shl7_cast" [mnist_AXI_Stream.cpp:114]   --->   Operation 224 'sub' 'tmp_11' <Predicate = (tmp_63)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 225 [1/1] (0.00ns)   --->   "%tmp_12 = trunc i32 %height8 to i6" [mnist_AXI_Stream.cpp:111]   --->   Operation 225 'trunc' 'tmp_12' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 226 [1/1] (0.00ns)   --->   "%p_shl4_cast = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %tmp_12, i5 0)" [mnist_AXI_Stream.cpp:111]   --->   Operation 226 'bitconcatenate' 'p_shl4_cast' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 227 [1/1] (0.00ns)   --->   "%tmp_13 = trunc i32 %height8 to i9" [mnist_AXI_Stream.cpp:111]   --->   Operation 227 'trunc' 'tmp_13' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 228 [1/1] (0.00ns)   --->   "%p_shl5_cast = call i11 @_ssdm_op_BitConcatenate.i11.i9.i2(i9 %tmp_13, i2 0)" [mnist_AXI_Stream.cpp:130]   --->   Operation 228 'bitconcatenate' 'p_shl5_cast' <Predicate = (tmp_63)> <Delay = 0.00>
ST_32 : Operation 229 [1/1] (1.63ns)   --->   "%tmp_14 = sub i11 %p_shl4_cast, %p_shl5_cast" [mnist_AXI_Stream.cpp:130]   --->   Operation 229 'sub' 'tmp_14' <Predicate = (tmp_63)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 230 [1/1] (1.76ns)   --->   "br label %.preheader" [mnist_AXI_Stream.cpp:112]   --->   Operation 230 'br' <Predicate = (tmp_63)> <Delay = 1.76>
ST_32 : Operation 231 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 231 'br' <Predicate = (!tmp_63)> <Delay = 0.00>

State 33 <SV = 31> <Delay = 4.89>
ST_33 : Operation 232 [1/1] (0.00ns)   --->   "%width9 = phi i32 [ %width_7, %4 ], [ 0, %.preheader.preheader ]"   --->   Operation 232 'phi' 'width9' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 233 [1/1] (0.00ns)   --->   "%Conv2D_4_width_load_1 = load i16* @Conv2D_4_width, align 2" [mnist_AXI_Stream.cpp:112]   --->   Operation 233 'load' 'Conv2D_4_width_load_1' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 234 [1/1] (0.00ns)   --->   "%tmp_64 = zext i16 %Conv2D_4_width_load_1 to i32" [mnist_AXI_Stream.cpp:112]   --->   Operation 234 'zext' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 235 [1/1] (0.00ns)   --->   "%tmp_67_cast = zext i16 %Conv2D_4_width_load_1 to i17" [mnist_AXI_Stream.cpp:112]   --->   Operation 235 'zext' 'tmp_67_cast' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 236 [1/1] (2.47ns)   --->   "%tmp_65 = icmp slt i32 %width9, %tmp_64" [mnist_AXI_Stream.cpp:112]   --->   Operation 236 'icmp' 'tmp_65' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 237 [1/1] (2.55ns)   --->   "%width_7 = add nsw i32 %width9, 1" [mnist_AXI_Stream.cpp:112]   --->   Operation 237 'add' 'width_7' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 238 [1/1] (0.00ns)   --->   "br i1 %tmp_65, label %1, label %.preheader58.loopexit" [mnist_AXI_Stream.cpp:112]   --->   Operation 238 'br' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 239 [1/1] (0.00ns)   --->   "%tmp_17 = trunc i32 %width9 to i11" [mnist_AXI_Stream.cpp:114]   --->   Operation 239 'trunc' 'tmp_17' <Predicate = (tmp_65)> <Delay = 0.00>
ST_33 : Operation 240 [1/1] (1.63ns)   --->   "%tmp_15 = add i11 %tmp_11, %tmp_17" [mnist_AXI_Stream.cpp:114]   --->   Operation 240 'add' 'tmp_15' <Predicate = (tmp_65)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 241 [1/1] (0.00ns)   --->   "%tmp_15_cast = zext i11 %tmp_15 to i64" [mnist_AXI_Stream.cpp:114]   --->   Operation 241 'zext' 'tmp_15_cast' <Predicate = (tmp_65)> <Delay = 0.00>
ST_33 : Operation 242 [1/1] (0.00ns)   --->   "%Conv2D_4_array_addr = getelementptr [784 x i16]* @Conv2D_4_array, i64 0, i64 %tmp_15_cast" [mnist_AXI_Stream.cpp:114]   --->   Operation 242 'getelementptr' 'Conv2D_4_array_addr' <Predicate = (tmp_65)> <Delay = 0.00>
ST_33 : Operation 243 [1/1] (1.63ns)   --->   "%tmp_16 = add i11 %tmp_14, %tmp_17" [mnist_AXI_Stream.cpp:130]   --->   Operation 243 'add' 'tmp_16' <Predicate = (tmp_65)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 244 [2/2] (3.25ns)   --->   "%tmp_data_V_1 = load i16* %Conv2D_4_array_addr, align 2" [mnist_AXI_Stream.cpp:114]   --->   Operation 244 'load' 'tmp_data_V_1' <Predicate = (tmp_65)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_33 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node tmp_user_V)   --->   "%tmp = or i32 %depth7, %width9" [mnist_AXI_Stream.cpp:116]   --->   Operation 245 'or' 'tmp' <Predicate = (tmp_65)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node tmp_user_V)   --->   "%tmp_66 = or i32 %tmp, %height8" [mnist_AXI_Stream.cpp:116]   --->   Operation 246 'or' 'tmp_66' <Predicate = (tmp_65)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 247 [1/1] (2.47ns) (out node of the LUT)   --->   "%tmp_user_V = icmp eq i32 %tmp_66, 0" [mnist_AXI_Stream.cpp:116]   --->   Operation 247 'icmp' 'tmp_user_V' <Predicate = (tmp_65)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 248 [1/1] (0.00ns)   --->   "%Conv2D_4_depth_load_2 = load i16* @Conv2D_4_depth, align 2" [mnist_AXI_Stream.cpp:122]   --->   Operation 248 'load' 'Conv2D_4_depth_load_2' <Predicate = (tmp_65)> <Delay = 0.00>
ST_33 : Operation 249 [1/1] (0.00ns)   --->   "%tmp_72_cast = zext i16 %Conv2D_4_depth_load_2 to i17" [mnist_AXI_Stream.cpp:122]   --->   Operation 249 'zext' 'tmp_72_cast' <Predicate = (tmp_65)> <Delay = 0.00>
ST_33 : Operation 250 [1/1] (2.07ns)   --->   "%tmp_67 = add i17 -1, %tmp_72_cast" [mnist_AXI_Stream.cpp:122]   --->   Operation 250 'add' 'tmp_67' <Predicate = (tmp_65)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 251 [1/1] (0.00ns)   --->   "%tmp_73_cast = sext i17 %tmp_67 to i32" [mnist_AXI_Stream.cpp:122]   --->   Operation 251 'sext' 'tmp_73_cast' <Predicate = (tmp_65)> <Delay = 0.00>
ST_33 : Operation 252 [1/1] (2.47ns)   --->   "%tmp_68 = icmp eq i32 %depth7, %tmp_73_cast" [mnist_AXI_Stream.cpp:122]   --->   Operation 252 'icmp' 'tmp_68' <Predicate = (tmp_65)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 253 [1/1] (0.00ns)   --->   "br label %.preheader58"   --->   Operation 253 'br' <Predicate = (!tmp_65)> <Delay = 0.00>

State 34 <SV = 32> <Delay = 6.31>
ST_34 : Operation 254 [1/1] (0.00ns)   --->   "%tmp_16_cast = sext i11 %tmp_16 to i64" [mnist_AXI_Stream.cpp:130]   --->   Operation 254 'sext' 'tmp_16_cast' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 255 [1/1] (0.00ns)   --->   "%out_0_keep_V_addr_1 = getelementptr [784 x i2]* %out_0_keep_V, i64 0, i64 %tmp_16_cast" [mnist_AXI_Stream.cpp:130]   --->   Operation 255 'getelementptr' 'out_0_keep_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 256 [1/1] (0.00ns)   --->   "%out_0_strb_V_addr_1 = getelementptr [784 x i2]* %out_0_strb_V, i64 0, i64 %tmp_16_cast" [mnist_AXI_Stream.cpp:130]   --->   Operation 256 'getelementptr' 'out_0_strb_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 257 [1/1] (0.00ns)   --->   "%out_0_id_V_addr_1 = getelementptr [784 x i1]* %out_0_id_V, i64 0, i64 %tmp_16_cast" [mnist_AXI_Stream.cpp:130]   --->   Operation 257 'getelementptr' 'out_0_id_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 258 [1/1] (0.00ns)   --->   "%out_0_dest_V_addr_1 = getelementptr [784 x i1]* %out_0_dest_V, i64 0, i64 %tmp_16_cast" [mnist_AXI_Stream.cpp:130]   --->   Operation 258 'getelementptr' 'out_0_dest_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 259 [1/2] (3.25ns)   --->   "%tmp_data_V_1 = load i16* %Conv2D_4_array_addr, align 2" [mnist_AXI_Stream.cpp:114]   --->   Operation 259 'load' 'tmp_data_V_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_34 : Operation 260 [1/1] (0.00ns)   --->   "br i1 %tmp_68, label %2, label %._crit_edge" [mnist_AXI_Stream.cpp:122]   --->   Operation 260 'br' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 261 [1/1] (0.00ns)   --->   "%Conv2D_4_height_load_2 = load i16* @Conv2D_4_height, align 2" [mnist_AXI_Stream.cpp:122]   --->   Operation 261 'load' 'Conv2D_4_height_load_2' <Predicate = (tmp_68)> <Delay = 0.00>
ST_34 : Operation 262 [1/1] (0.00ns)   --->   "%tmp_75_cast = zext i16 %Conv2D_4_height_load_2 to i17" [mnist_AXI_Stream.cpp:122]   --->   Operation 262 'zext' 'tmp_75_cast' <Predicate = (tmp_68)> <Delay = 0.00>
ST_34 : Operation 263 [1/1] (2.07ns)   --->   "%tmp_69 = add i17 %tmp_75_cast, -1" [mnist_AXI_Stream.cpp:122]   --->   Operation 263 'add' 'tmp_69' <Predicate = (tmp_68)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 264 [1/1] (0.00ns)   --->   "%tmp_76_cast = sext i17 %tmp_69 to i32" [mnist_AXI_Stream.cpp:122]   --->   Operation 264 'sext' 'tmp_76_cast' <Predicate = (tmp_68)> <Delay = 0.00>
ST_34 : Operation 265 [1/1] (2.47ns)   --->   "%tmp_70 = icmp eq i32 %height8, %tmp_76_cast" [mnist_AXI_Stream.cpp:122]   --->   Operation 265 'icmp' 'tmp_70' <Predicate = (tmp_68)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 266 [1/1] (0.00ns)   --->   "br i1 %tmp_70, label %3, label %._crit_edge" [mnist_AXI_Stream.cpp:122]   --->   Operation 266 'br' <Predicate = (tmp_68)> <Delay = 0.00>
ST_34 : Operation 267 [1/1] (2.07ns)   --->   "%tmp_71 = add i17 %tmp_67_cast, -1" [mnist_AXI_Stream.cpp:122]   --->   Operation 267 'add' 'tmp_71' <Predicate = (tmp_68 & tmp_70)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 268 [1/1] (0.00ns)   --->   "%tmp_78_cast = sext i17 %tmp_71 to i32" [mnist_AXI_Stream.cpp:122]   --->   Operation 268 'sext' 'tmp_78_cast' <Predicate = (tmp_68 & tmp_70)> <Delay = 0.00>
ST_34 : Operation 269 [1/1] (2.47ns)   --->   "%tmp_72 = icmp eq i32 %width9, %tmp_78_cast" [mnist_AXI_Stream.cpp:122]   --->   Operation 269 'icmp' 'tmp_72' <Predicate = (tmp_68 & tmp_70)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 270 [1/1] (1.76ns)   --->   "br i1 %tmp_72, label %4, label %._crit_edge" [mnist_AXI_Stream.cpp:122]   --->   Operation 270 'br' <Predicate = (tmp_68 & tmp_70)> <Delay = 1.76>
ST_34 : Operation 271 [1/1] (1.76ns)   --->   "br label %4"   --->   Operation 271 'br' <Predicate = (!tmp_72) | (!tmp_70) | (!tmp_68)> <Delay = 1.76>
ST_34 : Operation 272 [2/2] (3.25ns)   --->   "%tmp_keep_V_1 = load i2* %out_0_keep_V_addr_1, align 2" [mnist_AXI_Stream.cpp:130]   --->   Operation 272 'load' 'tmp_keep_V_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_34 : Operation 273 [2/2] (3.25ns)   --->   "%tmp_strb_V_1 = load i2* %out_0_strb_V_addr_1, align 1" [mnist_AXI_Stream.cpp:130]   --->   Operation 273 'load' 'tmp_strb_V_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_34 : Operation 274 [2/2] (2.56ns)   --->   "%tmp_id_V_1 = load i1* %out_0_id_V_addr_1, align 2" [mnist_AXI_Stream.cpp:130]   --->   Operation 274 'load' 'tmp_id_V_1' <Predicate = true> <Delay = 2.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_34 : Operation 275 [2/2] (2.56ns)   --->   "%tmp_dest_V_1 = load i1* %out_0_dest_V_addr_1, align 1" [mnist_AXI_Stream.cpp:130]   --->   Operation 275 'load' 'tmp_dest_V_1' <Predicate = true> <Delay = 2.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>

State 35 <SV = 33> <Delay = 3.25>
ST_35 : Operation 276 [1/1] (0.00ns)   --->   "%tmp_last_V = phi i1 [ false, %._crit_edge ], [ true, %3 ]"   --->   Operation 276 'phi' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 277 [1/2] (3.25ns)   --->   "%tmp_keep_V_1 = load i2* %out_0_keep_V_addr_1, align 2" [mnist_AXI_Stream.cpp:130]   --->   Operation 277 'load' 'tmp_keep_V_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_35 : Operation 278 [1/2] (3.25ns)   --->   "%tmp_strb_V_1 = load i2* %out_0_strb_V_addr_1, align 1" [mnist_AXI_Stream.cpp:130]   --->   Operation 278 'load' 'tmp_strb_V_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_35 : Operation 279 [1/2] (2.56ns)   --->   "%tmp_id_V_1 = load i1* %out_0_id_V_addr_1, align 2" [mnist_AXI_Stream.cpp:130]   --->   Operation 279 'load' 'tmp_id_V_1' <Predicate = true> <Delay = 2.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_35 : Operation 280 [1/2] (2.56ns)   --->   "%tmp_dest_V_1 = load i1* %out_0_dest_V_addr_1, align 1" [mnist_AXI_Stream.cpp:130]   --->   Operation 280 'load' 'tmp_dest_V_1' <Predicate = true> <Delay = 2.56> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.56> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 1> <Depth = 784> <RAM>
ST_35 : Operation 281 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, i16 %tmp_data_V_1, i2 %tmp_keep_V_1, i2 %tmp_strb_V_1, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V_1, i1 %tmp_dest_V_1)" [mnist_AXI_Stream.cpp:130]   --->   Operation 281 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 36 <SV = 34> <Delay = 0.00>
ST_36 : Operation 282 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, i16 %tmp_data_V_1, i2 %tmp_keep_V_1, i2 %tmp_strb_V_1, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V_1, i1 %tmp_dest_V_1)" [mnist_AXI_Stream.cpp:130]   --->   Operation 282 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_36 : Operation 283 [1/1] (0.00ns)   --->   "br label %.preheader" [mnist_AXI_Stream.cpp:112]   --->   Operation 283 'br' <Predicate = true> <Delay = 0.00>

State 37 <SV = 30> <Delay = 0.00>
ST_37 : Operation 284 [1/2] (0.00ns)   --->   "ret void" [mnist_AXI_Stream.cpp:137]   --->   Operation 284 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('height', mnist_AXI_Stream.cpp:36) with incoming values : ('height_4', mnist_AXI_Stream.cpp:36) [105]  (1.77 ns)

 <State 2>: 1.78ns
The critical path consists of the following:
	'phi' operation ('height', mnist_AXI_Stream.cpp:36) with incoming values : ('height_4', mnist_AXI_Stream.cpp:36) [105]  (0 ns)
	'add' operation ('height_4', mnist_AXI_Stream.cpp:36) [108]  (1.78 ns)

 <State 3>: 4.89ns
The critical path consists of the following:
	'phi' operation ('width', mnist_AXI_Stream.cpp:37) with incoming values : ('width_6', mnist_AXI_Stream.cpp:37) [118]  (0 ns)
	'add' operation ('tmp_7', mnist_AXI_Stream.cpp:39) [131]  (1.64 ns)
	'getelementptr' operation ('input_0_array_0_add', mnist_AXI_Stream.cpp:39) [133]  (0 ns)
	'store' operation (mnist_AXI_Stream.cpp:39) of variable 'tmp.data.V', mnist_AXI_Stream.cpp:38 on array 'input_0_array[0]', mnist_AXI_Stream.cpp:30 [138]  (3.25 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 2.08ns
The critical path consists of the following:
	'load' operation ('MaxPooling2D_0_depth_2', mnist_AXI_Stream.cpp:62) on global variable 'MaxPooling2D_0_depth' [162]  (0 ns)
	'call' operation (mnist_AXI_Stream.cpp:62) to 'padding2d_fix16.3' [167]  (2.08 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:

 <State 12>: 0ns
The critical path consists of the following:

 <State 13>: 0ns
The critical path consists of the following:

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 2.08ns
The critical path consists of the following:
	'load' operation ('MaxPooling2D_1_depth_2', mnist_AXI_Stream.cpp:75) on global variable 'MaxPooling2D_1_depth' [181]  (0 ns)
	'call' operation (mnist_AXI_Stream.cpp:75) to 'padding2d_fix16.2' [186]  (2.08 ns)

 <State 16>: 0ns
The critical path consists of the following:

 <State 17>: 0ns
The critical path consists of the following:

 <State 18>: 0ns
The critical path consists of the following:

 <State 19>: 0ns
The critical path consists of the following:

 <State 20>: 0ns
The critical path consists of the following:

 <State 21>: 2.08ns
The critical path consists of the following:
	'load' operation ('UpSampling2D_0_depth_2', mnist_AXI_Stream.cpp:88) on global variable 'UpSampling2D_0_depth' [200]  (0 ns)
	'call' operation (mnist_AXI_Stream.cpp:88) to 'padding2d_fix16.1' [205]  (2.08 ns)

 <State 22>: 0ns
The critical path consists of the following:

 <State 23>: 0ns
The critical path consists of the following:

 <State 24>: 0ns
The critical path consists of the following:

 <State 25>: 0ns
The critical path consists of the following:

 <State 26>: 0ns
The critical path consists of the following:

 <State 27>: 2.08ns
The critical path consists of the following:
	'load' operation ('UpSampling2D_1_depth_2', mnist_AXI_Stream.cpp:101) on global variable 'UpSampling2D_1_depth' [219]  (0 ns)
	'call' operation (mnist_AXI_Stream.cpp:101) to 'padding2d_fix16' [224]  (2.08 ns)

 <State 28>: 0ns
The critical path consists of the following:

 <State 29>: 0ns
The critical path consists of the following:

 <State 30>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('depth') with incoming values : ('depth', mnist_AXI_Stream.cpp:110) [234]  (1.77 ns)

 <State 31>: 2.76ns
The critical path consists of the following:
	'phi' operation ('depth') with incoming values : ('depth', mnist_AXI_Stream.cpp:110) [234]  (0 ns)
	'sub' operation ('tmp_6', mnist_AXI_Stream.cpp:114) [245]  (2.76 ns)

 <State 32>: 4.43ns
The critical path consists of the following:
	'phi' operation ('height') with incoming values : ('height', mnist_AXI_Stream.cpp:111) [248]  (0 ns)
	'add' operation ('tmp_8', mnist_AXI_Stream.cpp:114) [256]  (2.8 ns)
	'sub' operation ('tmp_11', mnist_AXI_Stream.cpp:114) [261]  (1.64 ns)

 <State 33>: 4.89ns
The critical path consists of the following:
	'phi' operation ('width') with incoming values : ('width', mnist_AXI_Stream.cpp:112) [269]  (0 ns)
	'add' operation ('tmp_15', mnist_AXI_Stream.cpp:114) [278]  (1.64 ns)
	'getelementptr' operation ('Conv2D_4_array_addr', mnist_AXI_Stream.cpp:114) [280]  (0 ns)
	'load' operation ('val', mnist_AXI_Stream.cpp:114) on array 'Conv2D_4_array' [287]  (3.25 ns)

 <State 34>: 6.32ns
The critical path consists of the following:
	'add' operation ('tmp_71', mnist_AXI_Stream.cpp:122) [305]  (2.08 ns)
	'icmp' operation ('tmp_72', mnist_AXI_Stream.cpp:122) [307]  (2.47 ns)
	multiplexor before 'phi' operation ('tmp.last.V') [312]  (1.77 ns)

 <State 35>: 3.25ns
The critical path consists of the following:
	'load' operation ('tmp.keep.V', mnist_AXI_Stream.cpp:130) on array 'out[0].keep.V', mnist_AXI_Stream.cpp:33 [313]  (3.25 ns)

 <State 36>: 0ns
The critical path consists of the following:

 <State 37>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
