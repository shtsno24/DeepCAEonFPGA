

================================================================
== Vivado HLS Report for 'network'
================================================================
* Date:           Tue Nov 26 20:17:03 2019

* Version:        2018.3.1 (Build 2489210 on Tue Mar 26 04:40:43 MDT 2019)
* Project:        HLS
* Solution:       network
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.585|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-------+-------+----------+-----------+-----------+-------+----------+
        |          |    Latency    | Iteration|  Initiation Interval  |  Trip |          |
        | Loop Name|  min  |  max  |  Latency |  achieved |   target  | Count | Pipelined|
        +----------+-------+-------+----------+-----------+-----------+-------+----------+
        |- Loop 1  |      ?|      ?|         3|          -|          -|      ?|    no    |
        |- Loop 2  |  25088|  25088|         2|          -|          -|  12544|    no    |
        |- Loop 3  |  12545|  12545|         3|          1|          1|  12544|    yes   |
        +----------+-------+-------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 2
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 16
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 12 13 14 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / (!tmp_41)
	2  / (tmp_41)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / (!tmp_43)
	12  / (tmp_43)
11 --> 
	10  / true
12 --> 
	15  / (tmp_45)
	13  / (!tmp_45)
13 --> 
	14  / true
14 --> 
	12  / true
15 --> 
	16  / true
16 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %input_data_V_data_V), !map !346"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %input_data_V_keep_V), !map !350"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %input_data_V_strb_V), !map !354"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_user_V), !map !358"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_last_V), !map !362"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_id_V), !map !366"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_dest_V), !map !370"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %output_data_V_data_V), !map !374"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %output_data_V_keep_V), !map !378"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %output_data_V_strb_V), !map !382"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_user_V), !map !386"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_last_V), !map !390"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_id_V), !map !394"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_dest_V), !map !398"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !402"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @network_str) nounwind"   --->   Operation 32 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%MemBank_A = alloca [14400 x i16], align 16" [mnist_AXI_Stream.cpp:33]   --->   Operation 33 'alloca' 'MemBank_A' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%MemBank_B = alloca [14400 x i16], align 16" [mnist_AXI_Stream.cpp:33]   --->   Operation 34 'alloca' 'MemBank_B' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%MemBank_Out = alloca [12544 x i16], align 16" [mnist_AXI_Stream.cpp:33]   --->   Operation 35 'alloca' 'MemBank_Out' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %input_data_V_data_V, i2* %input_data_V_keep_V, i2* %input_data_V_strb_V, i1* %input_data_V_user_V, i1* %input_data_V_last_V, i1* %input_data_V_id_V, i1* %input_data_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mnist_AXI_Stream.cpp:29]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mnist_AXI_Stream.cpp:30]   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mnist_AXI_Stream.cpp:31]   --->   Operation 38 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (1.76ns)   --->   "br label %1" [mnist_AXI_Stream.cpp:45]   --->   Operation 39 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 6.38>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%input_0_depth_load = load i16* @input_0_depth, align 2" [mnist_AXI_Stream.cpp:45]   --->   Operation 40 'load' 'input_0_depth_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%tmp = zext i16 %input_0_depth_load to i32" [mnist_AXI_Stream.cpp:45]   --->   Operation 41 'zext' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%input_0_width_load = load i16* @input_0_width, align 2" [mnist_AXI_Stream.cpp:45]   --->   Operation 42 'load' 'input_0_width_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_39 = zext i16 %input_0_width_load to i32" [mnist_AXI_Stream.cpp:45]   --->   Operation 43 'zext' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (6.38ns) (root node of the DSP)   --->   "%tmp1 = mul i32 %tmp, %tmp_39" [mnist_AXI_Stream.cpp:45]   --->   Operation 44 'mul' 'tmp1' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 8.51>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%input_0_height_load = load i16* @input_0_height, align 2" [mnist_AXI_Stream.cpp:45]   --->   Operation 45 'load' 'input_0_height_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_s = zext i16 %input_0_height_load to i32" [mnist_AXI_Stream.cpp:45]   --->   Operation 46 'zext' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (8.51ns)   --->   "%tmp_40 = mul i32 %tmp1, %tmp_s" [mnist_AXI_Stream.cpp:45]   --->   Operation 47 'mul' 'tmp_40' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.45>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%i = phi i32 [ 0, %0 ], [ %i_3, %2 ]"   --->   Operation 48 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (2.47ns)   --->   "%tmp_41 = icmp slt i32 %i, %tmp_40" [mnist_AXI_Stream.cpp:45]   --->   Operation 49 'icmp' 'tmp_41' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (2.55ns)   --->   "%i_3 = add nsw i32 %i, 1" [mnist_AXI_Stream.cpp:45]   --->   Operation 50 'add' 'i_3' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %tmp_41, label %2, label %3" [mnist_AXI_Stream.cpp:45]   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%empty = call { i16, i2, i2, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %input_data_V_data_V, i2* %input_data_V_keep_V, i2* %input_data_V_strb_V, i1* %input_data_V_user_V, i1* %input_data_V_last_V, i1* %input_data_V_id_V, i1* %input_data_V_dest_V)" [mnist_AXI_Stream.cpp:46]   --->   Operation 52 'read' 'empty' <Predicate = (tmp_41)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty, 0" [mnist_AXI_Stream.cpp:46]   --->   Operation 53 'extractvalue' 'tmp_data_V' <Predicate = (tmp_41)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_42 = sext i32 %i to i64" [mnist_AXI_Stream.cpp:47]   --->   Operation 54 'sext' 'tmp_42' <Predicate = (tmp_41)> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%MemBank_A_addr = getelementptr inbounds [14400 x i16]* %MemBank_A, i64 0, i64 %tmp_42" [mnist_AXI_Stream.cpp:47]   --->   Operation 55 'getelementptr' 'MemBank_A_addr' <Predicate = (tmp_41)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (3.25ns)   --->   "store i16 %tmp_data_V, i16* %MemBank_A_addr, align 2" [mnist_AXI_Stream.cpp:47]   --->   Operation 56 'store' <Predicate = (tmp_41)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "br label %1" [mnist_AXI_Stream.cpp:45]   --->   Operation 57 'br' <Predicate = (tmp_41)> <Delay = 0.00>
ST_4 : Operation 58 [2/2] (8.45ns)   --->   "call fastcc void @padding2d_fix16(i16 zeroext %input_0_depth_load, i16 zeroext %input_0_height_load, i16 zeroext %input_0_width_load, [14400 x i16]* %MemBank_A, [14400 x i16]* %MemBank_B)" [mnist_AXI_Stream.cpp:50]   --->   Operation 58 'call' <Predicate = (!tmp_41)> <Delay = 8.45> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 59 [1/2] (0.00ns)   --->   "call fastcc void @padding2d_fix16(i16 zeroext %input_0_depth_load, i16 zeroext %input_0_height_load, i16 zeroext %input_0_width_load, [14400 x i16]* %MemBank_A, [14400 x i16]* %MemBank_B)" [mnist_AXI_Stream.cpp:50]   --->   Operation 59 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%Padding2D_0_depth_lo = load i16* @Padding2D_0_depth, align 2" [mnist_AXI_Stream.cpp:54]   --->   Operation 60 'load' 'Padding2D_0_depth_lo' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%Padding2D_0_height_l = load i16* @Padding2D_0_height, align 2" [mnist_AXI_Stream.cpp:54]   --->   Operation 61 'load' 'Padding2D_0_height_l' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%Padding2D_0_width_lo = load i16* @Padding2D_0_width, align 2" [mnist_AXI_Stream.cpp:54]   --->   Operation 62 'load' 'Padding2D_0_width_lo' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%SeparableConv2D_0_he_1 = load i16* @SeparableConv2D_0_he, align 2" [mnist_AXI_Stream.cpp:54]   --->   Operation 63 'load' 'SeparableConv2D_0_he_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%SeparableConv2D_0_wi_1 = load i16* @SeparableConv2D_0_wi, align 2" [mnist_AXI_Stream.cpp:54]   --->   Operation 64 'load' 'SeparableConv2D_0_wi_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [2/2] (0.00ns)   --->   "call fastcc void @depthwise_conv2d_fix(i16 zeroext %Padding2D_0_height_l, i16 zeroext %Padding2D_0_width_lo, [14400 x i16]* %MemBank_B, i16 zeroext %Padding2D_0_depth_lo, i16 zeroext %SeparableConv2D_0_he_1, i16 zeroext %SeparableConv2D_0_wi_1, [14400 x i16]* %MemBank_A)" [mnist_AXI_Stream.cpp:54]   --->   Operation 65 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 66 [1/2] (0.00ns)   --->   "call fastcc void @depthwise_conv2d_fix(i16 zeroext %Padding2D_0_height_l, i16 zeroext %Padding2D_0_width_lo, [14400 x i16]* %MemBank_B, i16 zeroext %Padding2D_0_depth_lo, i16 zeroext %SeparableConv2D_0_he_1, i16 zeroext %SeparableConv2D_0_wi_1, [14400 x i16]* %MemBank_A)" [mnist_AXI_Stream.cpp:54]   --->   Operation 66 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.00>
ST_8 : Operation 67 [1/1] (0.00ns)   --->   "%Padding2D_0_depth_lo_1 = load i16* @Padding2D_0_depth, align 2" [mnist_AXI_Stream.cpp:59]   --->   Operation 67 'load' 'Padding2D_0_depth_lo_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 68 [1/1] (0.00ns)   --->   "%SeparableConv2D_0_he_2 = load i16* @SeparableConv2D_0_he, align 2" [mnist_AXI_Stream.cpp:59]   --->   Operation 68 'load' 'SeparableConv2D_0_he_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 69 [1/1] (0.00ns)   --->   "%SeparableConv2D_0_wi_2 = load i16* @SeparableConv2D_0_wi, align 2" [mnist_AXI_Stream.cpp:59]   --->   Operation 69 'load' 'SeparableConv2D_0_wi_2' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 70 [1/1] (0.00ns)   --->   "%SeparableConv2D_0_de_1 = load i16* @SeparableConv2D_0_de, align 2" [mnist_AXI_Stream.cpp:59]   --->   Operation 70 'load' 'SeparableConv2D_0_de_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 71 [2/2] (0.00ns)   --->   "call fastcc void @pointwise_conv2d_fix(i16 zeroext %Padding2D_0_depth_lo_1, i16 zeroext %SeparableConv2D_0_he_2, i16 zeroext %SeparableConv2D_0_wi_2, [14400 x i16]* %MemBank_A, i16 zeroext %SeparableConv2D_0_de_1, [14400 x i16]* %MemBank_B)" [mnist_AXI_Stream.cpp:59]   --->   Operation 71 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 1.76>
ST_9 : Operation 72 [1/2] (0.00ns)   --->   "call fastcc void @pointwise_conv2d_fix(i16 zeroext %Padding2D_0_depth_lo_1, i16 zeroext %SeparableConv2D_0_he_2, i16 zeroext %SeparableConv2D_0_wi_2, [14400 x i16]* %MemBank_A, i16 zeroext %SeparableConv2D_0_de_1, [14400 x i16]* %MemBank_B)" [mnist_AXI_Stream.cpp:59]   --->   Operation 72 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 73 [1/1] (1.76ns)   --->   "br label %4" [mnist_AXI_Stream.cpp:136]   --->   Operation 73 'br' <Predicate = true> <Delay = 1.76>

State 10 <SV = 9> <Delay = 3.25>
ST_10 : Operation 74 [1/1] (0.00ns)   --->   "%i1 = phi i14 [ 0, %3 ], [ %i_4, %5 ]"   --->   Operation 74 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 75 [1/1] (2.20ns)   --->   "%tmp_43 = icmp eq i14 %i1, -3840" [mnist_AXI_Stream.cpp:136]   --->   Operation 75 'icmp' 'tmp_43' <Predicate = true> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 12544, i64 12544, i64 12544)"   --->   Operation 76 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 77 [1/1] (1.81ns)   --->   "%i_4 = add i14 %i1, 1" [mnist_AXI_Stream.cpp:136]   --->   Operation 77 'add' 'i_4' <Predicate = true> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 78 [1/1] (0.00ns)   --->   "br i1 %tmp_43, label %.preheader.preheader, label %5" [mnist_AXI_Stream.cpp:136]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_44 = zext i14 %i1 to i64" [mnist_AXI_Stream.cpp:138]   --->   Operation 79 'zext' 'tmp_44' <Predicate = (!tmp_43)> <Delay = 0.00>
ST_10 : Operation 80 [1/1] (0.00ns)   --->   "%MemBank_B_addr = getelementptr inbounds [14400 x i16]* %MemBank_B, i64 0, i64 %tmp_44" [mnist_AXI_Stream.cpp:138]   --->   Operation 80 'getelementptr' 'MemBank_B_addr' <Predicate = (!tmp_43)> <Delay = 0.00>
ST_10 : Operation 81 [2/2] (3.25ns)   --->   "%MemBank_B_load = load i16* %MemBank_B_addr, align 2" [mnist_AXI_Stream.cpp:138]   --->   Operation 81 'load' 'MemBank_B_load' <Predicate = (!tmp_43)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>
ST_10 : Operation 82 [1/1] (1.76ns)   --->   "br label %.preheader" [mnist_AXI_Stream.cpp:141]   --->   Operation 82 'br' <Predicate = (tmp_43)> <Delay = 1.76>

State 11 <SV = 10> <Delay = 6.50>
ST_11 : Operation 83 [1/2] (3.25ns)   --->   "%MemBank_B_load = load i16* %MemBank_B_addr, align 2" [mnist_AXI_Stream.cpp:138]   --->   Operation 83 'load' 'MemBank_B_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>
ST_11 : Operation 84 [1/1] (0.00ns)   --->   "%MemBank_Out_addr = getelementptr inbounds [12544 x i16]* %MemBank_Out, i64 0, i64 %tmp_44" [mnist_AXI_Stream.cpp:138]   --->   Operation 84 'getelementptr' 'MemBank_Out_addr' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 85 [1/1] (3.25ns)   --->   "store i16 %MemBank_B_load, i16* %MemBank_Out_addr, align 2" [mnist_AXI_Stream.cpp:138]   --->   Operation 85 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>
ST_11 : Operation 86 [1/1] (0.00ns)   --->   "br label %4" [mnist_AXI_Stream.cpp:136]   --->   Operation 86 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 10> <Delay = 3.25>
ST_12 : Operation 87 [1/1] (0.00ns)   --->   "%i2 = phi i14 [ %i_5, %6 ], [ 0, %.preheader.preheader ]"   --->   Operation 87 'phi' 'i2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 88 [1/1] (2.20ns)   --->   "%tmp_45 = icmp eq i14 %i2, -3840" [mnist_AXI_Stream.cpp:141]   --->   Operation 88 'icmp' 'tmp_45' <Predicate = true> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 89 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 12544, i64 12544, i64 12544)"   --->   Operation 89 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 90 [1/1] (1.81ns)   --->   "%i_5 = add i14 %i2, 1" [mnist_AXI_Stream.cpp:141]   --->   Operation 90 'add' 'i_5' <Predicate = true> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 91 [1/1] (0.00ns)   --->   "br i1 %tmp_45, label %7, label %6" [mnist_AXI_Stream.cpp:141]   --->   Operation 91 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 92 [1/1] (0.00ns)   --->   "%i2_cast2 = zext i14 %i2 to i64" [mnist_AXI_Stream.cpp:141]   --->   Operation 92 'zext' 'i2_cast2' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_12 : Operation 93 [1/1] (2.20ns)   --->   "%tmp_user_V = icmp eq i14 %i2, 0" [mnist_AXI_Stream.cpp:149]   --->   Operation 93 'icmp' 'tmp_user_V' <Predicate = (!tmp_45)> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 94 [1/1] (2.20ns)   --->   "%tmp_last_V = icmp eq i14 %i2, -3841" [mnist_AXI_Stream.cpp:152]   --->   Operation 94 'icmp' 'tmp_last_V' <Predicate = (!tmp_45)> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.20> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 95 [1/1] (0.00ns)   --->   "%MemBank_Out_addr_1 = getelementptr inbounds [12544 x i16]* %MemBank_Out, i64 0, i64 %i2_cast2" [mnist_AXI_Stream.cpp:155]   --->   Operation 95 'getelementptr' 'MemBank_Out_addr_1' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_12 : Operation 96 [2/2] (3.25ns)   --->   "%tmp_data_V_1 = load i16* %MemBank_Out_addr_1, align 2" [mnist_AXI_Stream.cpp:155]   --->   Operation 96 'load' 'tmp_data_V_1' <Predicate = (!tmp_45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>

State 13 <SV = 11> <Delay = 3.25>
ST_13 : Operation 97 [1/2] (3.25ns)   --->   "%tmp_data_V_1 = load i16* %MemBank_Out_addr_1, align 2" [mnist_AXI_Stream.cpp:155]   --->   Operation 97 'load' 'tmp_data_V_1' <Predicate = (!tmp_45)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 12544> <RAM>
ST_13 : Operation 98 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, i16 %tmp_data_V_1, i2 0, i2 0, i1 %tmp_user_V, i1 %tmp_last_V, i1 false, i1 false)" [mnist_AXI_Stream.cpp:156]   --->   Operation 98 'write' <Predicate = (!tmp_45)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 14 <SV = 12> <Delay = 0.00>
ST_14 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [mnist_AXI_Stream.cpp:141]   --->   Operation 99 'specregionbegin' 'tmp_1' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_14 : Operation 100 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [mnist_AXI_Stream.cpp:142]   --->   Operation 100 'specpipeline' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_14 : Operation 101 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, i16 %tmp_data_V_1, i2 0, i2 0, i1 %tmp_user_V, i1 %tmp_last_V, i1 false, i1 false)" [mnist_AXI_Stream.cpp:156]   --->   Operation 101 'write' <Predicate = (!tmp_45)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_14 : Operation 102 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_1)" [mnist_AXI_Stream.cpp:157]   --->   Operation 102 'specregionend' 'empty_11' <Predicate = (!tmp_45)> <Delay = 0.00>
ST_14 : Operation 103 [1/1] (0.00ns)   --->   "br label %.preheader" [mnist_AXI_Stream.cpp:141]   --->   Operation 103 'br' <Predicate = (!tmp_45)> <Delay = 0.00>

State 15 <SV = 11> <Delay = 0.00>
ST_15 : Operation 104 [2/2] (0.00ns)   --->   "ret i32 0" [mnist_AXI_Stream.cpp:158]   --->   Operation 104 'ret' <Predicate = true> <Delay = 0.00>

State 16 <SV = 12> <Delay = 0.00>
ST_16 : Operation 105 [1/2] (0.00ns)   --->   "ret i32 0" [mnist_AXI_Stream.cpp:158]   --->   Operation 105 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', mnist_AXI_Stream.cpp:45) [50]  (1.77 ns)

 <State 2>: 6.38ns
The critical path consists of the following:
	'load' operation ('input_0_depth_load', mnist_AXI_Stream.cpp:45) on global variable 'input_0_depth' [51]  (0 ns)
	'mul' operation of DSP[57] ('tmp1', mnist_AXI_Stream.cpp:45) [57]  (6.38 ns)

 <State 3>: 8.51ns
The critical path consists of the following:
	'load' operation ('input_0_height_load', mnist_AXI_Stream.cpp:45) on global variable 'input_0_height' [53]  (0 ns)
	'mul' operation ('tmp_40', mnist_AXI_Stream.cpp:45) [58]  (8.51 ns)

 <State 4>: 8.46ns
The critical path consists of the following:
	'call' operation (mnist_AXI_Stream.cpp:50) to 'padding2d_fix16' [70]  (8.46 ns)

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0ns
The critical path consists of the following:

 <State 9>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', mnist_AXI_Stream.cpp:136) [84]  (1.77 ns)

 <State 10>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', mnist_AXI_Stream.cpp:136) [84]  (0 ns)
	'getelementptr' operation ('MemBank_B_addr', mnist_AXI_Stream.cpp:138) [91]  (0 ns)
	'load' operation ('MemBank_B_load', mnist_AXI_Stream.cpp:138) on array 'MemBank_B', mnist_AXI_Stream.cpp:33 [92]  (3.25 ns)

 <State 11>: 6.51ns
The critical path consists of the following:
	'load' operation ('MemBank_B_load', mnist_AXI_Stream.cpp:138) on array 'MemBank_B', mnist_AXI_Stream.cpp:33 [92]  (3.25 ns)
	'store' operation (mnist_AXI_Stream.cpp:138) of variable 'MemBank_B_load', mnist_AXI_Stream.cpp:138 on array 'MemBank_Out', mnist_AXI_Stream.cpp:33 [94]  (3.25 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', mnist_AXI_Stream.cpp:141) [99]  (0 ns)
	'getelementptr' operation ('MemBank_Out_addr_1', mnist_AXI_Stream.cpp:155) [110]  (0 ns)
	'load' operation ('val', mnist_AXI_Stream.cpp:155) on array 'MemBank_Out', mnist_AXI_Stream.cpp:33 [111]  (3.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'load' operation ('val', mnist_AXI_Stream.cpp:155) on array 'MemBank_Out', mnist_AXI_Stream.cpp:33 [111]  (3.25 ns)

 <State 14>: 0ns
The critical path consists of the following:

 <State 15>: 0ns
The critical path consists of the following:

 <State 16>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
