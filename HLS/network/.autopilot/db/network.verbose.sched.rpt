

================================================================
== Vivado HLS Report for 'network'
================================================================
* Date:           Fri Dec 20 17:24:36 2019

* Version:        2018.3.1 (Build 2489210 on Tue Mar 26 04:40:43 MDT 2019)
* Project:        HLS
* Solution:       network
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     6.508|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  4708|  4708|  4708|  4708|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |   784|   784|         1|          -|          -|   784|    no    |
        |- Loop 2  |  1568|  1568|         2|          -|          -|   784|    no    |
        |- Loop 3  |  2352|  2352|         3|          -|          -|   784|    no    |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 2
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!exitcond)
	3  / (exitcond)
3 --> 
	4  / (!tmp_3)
	5  / (tmp_3)
4 --> 
	3  / true
5 --> 
	6  / (!tmp_6)
	8  / (tmp_6)
6 --> 
	7  / true
7 --> 
	5  / true
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %input_data_V_data_V), !map !121"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %input_data_V_keep_V), !map !125"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %input_data_V_strb_V), !map !129"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_user_V), !map !133"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_last_V), !map !137"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_id_V), !map !141"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_data_V_dest_V), !map !145"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %output_data_V_data_V), !map !149"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %output_data_V_keep_V), !map !153"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %output_data_V_strb_V), !map !157"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_user_V), !map !161"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_last_V), !map !165"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_id_V), !map !169"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_data_V_dest_V), !map !173"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !177"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @network_str) nounwind"   --->   Operation 24 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%MemBank_B = alloca [14400 x i16], align 16" [mnist_AXI_Stream.cpp:32]   --->   Operation 25 'alloca' 'MemBank_B' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 784> <RAM>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%MemBank_Out = alloca [784 x i16], align 16" [mnist_AXI_Stream.cpp:33]   --->   Operation 26 'alloca' 'MemBank_Out' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 784> <RAM>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %input_data_V_data_V, i2* %input_data_V_keep_V, i2* %input_data_V_strb_V, i1* %input_data_V_user_V, i1* %input_data_V_last_V, i1* %input_data_V_id_V, i1* %input_data_V_dest_V, [5 x i8]* @p_str5, i32 1, i32 1, [5 x i8]* @p_str16, i32 0, i32 0, [1 x i8]* @p_str27, [1 x i8]* @p_str27, [1 x i8]* @p_str27, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str27, [1 x i8]* @p_str27) nounwind" [mnist_AXI_Stream.cpp:28]   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, [5 x i8]* @p_str5, i32 1, i32 1, [5 x i8]* @p_str16, i32 0, i32 0, [1 x i8]* @p_str27, [1 x i8]* @p_str27, [1 x i8]* @p_str27, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str27, [1 x i8]* @p_str27) nounwind" [mnist_AXI_Stream.cpp:29]   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str27, i32 0, i32 0, [1 x i8]* @p_str27, [1 x i8]* @p_str27, [1 x i8]* @p_str27, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str27, [1 x i8]* @p_str27) nounwind" [mnist_AXI_Stream.cpp:30]   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.76ns)   --->   "br label %1" [mnist_AXI_Stream.cpp:44]   --->   Operation 30 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%i1 = phi i10 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 31 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.77ns)   --->   "%exitcond = icmp eq i10 %i1, -240" [mnist_AXI_Stream.cpp:44]   --->   Operation 32 'icmp' 'exitcond' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)"   --->   Operation 33 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.73ns)   --->   "%i = add i10 %i1, 1" [mnist_AXI_Stream.cpp:44]   --->   Operation 34 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %.preheader87.preheader, label %2" [mnist_AXI_Stream.cpp:44]   --->   Operation 35 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%empty_3 = call { i16, i2, i2, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %input_data_V_data_V, i2* %input_data_V_keep_V, i2* %input_data_V_strb_V, i1* %input_data_V_user_V, i1* %input_data_V_last_V, i1* %input_data_V_id_V, i1* %input_data_V_dest_V)" [mnist_AXI_Stream.cpp:45]   --->   Operation 36 'read' 'empty_3' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue { i16, i2, i2, i1, i1, i1, i1 } %empty_3, 0" [mnist_AXI_Stream.cpp:45]   --->   Operation 37 'extractvalue' 'tmp_data_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_1 = zext i10 %i1 to i64" [mnist_AXI_Stream.cpp:46]   --->   Operation 38 'zext' 'tmp_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%MemBank_B_addr = getelementptr inbounds [14400 x i16]* %MemBank_B, i64 0, i64 %tmp_1" [mnist_AXI_Stream.cpp:46]   --->   Operation 39 'getelementptr' 'MemBank_B_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (3.25ns)   --->   "store i16 %tmp_data_V, i16* %MemBank_B_addr, align 2" [mnist_AXI_Stream.cpp:46]   --->   Operation 40 'store' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 784> <RAM>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "br label %1" [mnist_AXI_Stream.cpp:44]   --->   Operation 41 'br' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.76ns)   --->   "br label %.preheader87" [mnist_AXI_Stream.cpp:135]   --->   Operation 42 'br' <Predicate = (exitcond)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%i2 = phi i10 [ %i_1, %3 ], [ 0, %.preheader87.preheader ]"   --->   Operation 43 'phi' 'i2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (1.77ns)   --->   "%tmp_3 = icmp eq i10 %i2, -240" [mnist_AXI_Stream.cpp:135]   --->   Operation 44 'icmp' 'tmp_3' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)"   --->   Operation 45 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.73ns)   --->   "%i_1 = add i10 %i2, 1" [mnist_AXI_Stream.cpp:135]   --->   Operation 46 'add' 'i_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %tmp_3, label %.preheader.preheader, label %3" [mnist_AXI_Stream.cpp:135]   --->   Operation 47 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_4 = zext i10 %i2 to i64" [mnist_AXI_Stream.cpp:137]   --->   Operation 48 'zext' 'tmp_4' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%MemBank_B_addr_1 = getelementptr inbounds [14400 x i16]* %MemBank_B, i64 0, i64 %tmp_4" [mnist_AXI_Stream.cpp:137]   --->   Operation 49 'getelementptr' 'MemBank_B_addr_1' <Predicate = (!tmp_3)> <Delay = 0.00>
ST_3 : Operation 50 [2/2] (3.25ns)   --->   "%MemBank_B_load = load i16* %MemBank_B_addr_1, align 2" [mnist_AXI_Stream.cpp:137]   --->   Operation 50 'load' 'MemBank_B_load' <Predicate = (!tmp_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 784> <RAM>
ST_3 : Operation 51 [1/1] (1.76ns)   --->   "br label %.preheader" [mnist_AXI_Stream.cpp:140]   --->   Operation 51 'br' <Predicate = (tmp_3)> <Delay = 1.76>

State 4 <SV = 3> <Delay = 6.50>
ST_4 : Operation 52 [1/2] (3.25ns)   --->   "%MemBank_B_load = load i16* %MemBank_B_addr_1, align 2" [mnist_AXI_Stream.cpp:137]   --->   Operation 52 'load' 'MemBank_B_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 784> <RAM>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%MemBank_Out_addr = getelementptr inbounds [784 x i16]* %MemBank_Out, i64 0, i64 %tmp_4" [mnist_AXI_Stream.cpp:137]   --->   Operation 53 'getelementptr' 'MemBank_Out_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (3.25ns)   --->   "store i16 %MemBank_B_load, i16* %MemBank_Out_addr, align 2" [mnist_AXI_Stream.cpp:137]   --->   Operation 54 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 784> <RAM>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "br label %.preheader87" [mnist_AXI_Stream.cpp:135]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 3.25>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%i3 = phi i10 [ %i_2, %4 ], [ 0, %.preheader.preheader ]"   --->   Operation 56 'phi' 'i3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%i3_cast1 = zext i10 %i3 to i64" [mnist_AXI_Stream.cpp:140]   --->   Operation 57 'zext' 'i3_cast1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (1.77ns)   --->   "%tmp_6 = icmp eq i10 %i3, -240" [mnist_AXI_Stream.cpp:140]   --->   Operation 58 'icmp' 'tmp_6' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)"   --->   Operation 59 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (1.73ns)   --->   "%i_2 = add i10 %i3, 1" [mnist_AXI_Stream.cpp:140]   --->   Operation 60 'add' 'i_2' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "br i1 %tmp_6, label %5, label %4" [mnist_AXI_Stream.cpp:140]   --->   Operation 61 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (1.77ns)   --->   "%tmp_user_V = icmp eq i10 %i3, 0" [mnist_AXI_Stream.cpp:149]   --->   Operation 62 'icmp' 'tmp_user_V' <Predicate = (!tmp_6)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 63 [1/1] (1.77ns)   --->   "%tmp_last_V = icmp eq i10 %i3, -241" [mnist_AXI_Stream.cpp:152]   --->   Operation 63 'icmp' 'tmp_last_V' <Predicate = (!tmp_6)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%MemBank_Out_addr_1 = getelementptr inbounds [784 x i16]* %MemBank_Out, i64 0, i64 %i3_cast1" [mnist_AXI_Stream.cpp:155]   --->   Operation 64 'getelementptr' 'MemBank_Out_addr_1' <Predicate = (!tmp_6)> <Delay = 0.00>
ST_5 : Operation 65 [2/2] (3.25ns)   --->   "%tmp_data_V_1 = load i16* %MemBank_Out_addr_1, align 2" [mnist_AXI_Stream.cpp:155]   --->   Operation 65 'load' 'tmp_data_V_1' <Predicate = (!tmp_6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 784> <RAM>
ST_5 : Operation 66 [2/2] (0.00ns)   --->   "ret i32 0" [mnist_AXI_Stream.cpp:158]   --->   Operation 66 'ret' <Predicate = (tmp_6)> <Delay = 0.00>

State 6 <SV = 4> <Delay = 3.25>
ST_6 : Operation 67 [1/2] (3.25ns)   --->   "%tmp_data_V_1 = load i16* %MemBank_Out_addr_1, align 2" [mnist_AXI_Stream.cpp:155]   --->   Operation 67 'load' 'tmp_data_V_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 784> <RAM>
ST_6 : Operation 68 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, i16 %tmp_data_V_1, i2 0, i2 0, i1 %tmp_user_V, i1 %tmp_last_V, i1 false, i1 false)" [mnist_AXI_Stream.cpp:156]   --->   Operation 68 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 7 <SV = 5> <Delay = 0.00>
ST_7 : Operation 69 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i2P.i2P.i1P.i1P.i1P.i1P(i16* %output_data_V_data_V, i2* %output_data_V_keep_V, i2* %output_data_V_strb_V, i1* %output_data_V_user_V, i1* %output_data_V_last_V, i1* %output_data_V_id_V, i1* %output_data_V_dest_V, i16 %tmp_data_V_1, i2 0, i2 0, i1 %tmp_user_V, i1 %tmp_last_V, i1 false, i1 false)" [mnist_AXI_Stream.cpp:156]   --->   Operation 69 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "br label %.preheader" [mnist_AXI_Stream.cpp:140]   --->   Operation 70 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 4> <Delay = 0.00>
ST_8 : Operation 71 [1/2] (0.00ns)   --->   "ret i32 0" [mnist_AXI_Stream.cpp:158]   --->   Operation 71 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', mnist_AXI_Stream.cpp:44) [38]  (1.77 ns)

 <State 2>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', mnist_AXI_Stream.cpp:44) [38]  (0 ns)
	'getelementptr' operation ('MemBank_B_addr', mnist_AXI_Stream.cpp:46) [47]  (0 ns)
	'store' operation (mnist_AXI_Stream.cpp:46) of variable 'tmp.data.V', mnist_AXI_Stream.cpp:45 on array 'MemBank_B', mnist_AXI_Stream.cpp:32 [48]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', mnist_AXI_Stream.cpp:135) [53]  (0 ns)
	'getelementptr' operation ('MemBank_B_addr_1', mnist_AXI_Stream.cpp:137) [60]  (0 ns)
	'load' operation ('MemBank_B_load', mnist_AXI_Stream.cpp:137) on array 'MemBank_B', mnist_AXI_Stream.cpp:32 [61]  (3.25 ns)

 <State 4>: 6.51ns
The critical path consists of the following:
	'load' operation ('MemBank_B_load', mnist_AXI_Stream.cpp:137) on array 'MemBank_B', mnist_AXI_Stream.cpp:32 [61]  (3.25 ns)
	'store' operation (mnist_AXI_Stream.cpp:137) of variable 'MemBank_B_load', mnist_AXI_Stream.cpp:137 on array 'MemBank_Out', mnist_AXI_Stream.cpp:33 [63]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', mnist_AXI_Stream.cpp:140) [68]  (0 ns)
	'getelementptr' operation ('MemBank_Out_addr_1', mnist_AXI_Stream.cpp:155) [77]  (0 ns)
	'load' operation ('val', mnist_AXI_Stream.cpp:155) on array 'MemBank_Out', mnist_AXI_Stream.cpp:33 [78]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('val', mnist_AXI_Stream.cpp:155) on array 'MemBank_Out', mnist_AXI_Stream.cpp:33 [78]  (3.25 ns)

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
