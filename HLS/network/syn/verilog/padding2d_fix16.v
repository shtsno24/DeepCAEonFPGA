// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module padding2d_fix16 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_depth,
        input_height,
        input_width,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_height,
        output_width,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] input_depth;
input  [15:0] input_height;
input  [15:0] input_width;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
input  [15:0] output_height;
input  [15:0] output_width;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[15:0] output_r_d0;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] tmp_s_fu_530_p1;
reg   [31:0] tmp_s_reg_1594;
wire   [16:0] tmp_15_fu_538_p2;
reg   [16:0] tmp_15_reg_1600;
wire   [31:0] tmp_16_fu_544_p1;
reg   [31:0] tmp_16_reg_1608;
wire   [31:0] tmp_17_fu_548_p1;
reg   [31:0] tmp_17_reg_1613;
wire   [31:0] tmp_18_fu_552_p1;
reg   [31:0] tmp_18_reg_1621;
wire   [16:0] tmp_19_fu_560_p2;
reg   [16:0] tmp_19_reg_1626;
wire   [16:0] tmp_20_fu_566_p2;
reg   [16:0] tmp_20_reg_1632;
wire   [16:0] tmp_21_fu_572_p2;
reg   [16:0] tmp_21_reg_1652;
wire   [31:0] next_mul3_fu_578_p2;
reg   [31:0] next_mul3_reg_1657;
wire    ap_CS_fsm_state2;
wire   [31:0] next_mul_fu_583_p2;
reg   [31:0] next_mul_reg_1662;
wire   [15:0] depth_1_fu_593_p2;
reg   [15:0] depth_1_reg_1670;
wire   [31:0] tmp_24_fu_599_p2;
reg   [31:0] tmp_24_reg_1675;
wire   [0:0] exitcond2_fu_588_p2;
wire   [15:0] width_1_fu_617_p2;
wire    ap_CS_fsm_state3;
wire   [31:0] tmp_47_fu_633_p2;
reg   [31:0] tmp_47_reg_1689;
wire   [0:0] tmp_31_fu_612_p2;
wire   [31:0] tmp_28_fu_639_p1;
reg   [31:0] tmp_28_reg_1695;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_29_fu_647_p2;
reg   [0:0] tmp_29_reg_1700;
wire  signed [31:0] tmp_64_fu_652_p2;
reg  signed [31:0] tmp_64_reg_1704;
wire  signed [31:0] tmp_33_fu_658_p2;
reg  signed [31:0] tmp_33_reg_1709;
wire    ap_CS_fsm_state5;
wire  signed [31:0] tmp5_fu_662_p2;
reg  signed [31:0] tmp5_reg_1723;
wire   [31:0] tmp21_fu_670_p2;
reg   [31:0] tmp21_reg_1728;
wire    ap_CS_fsm_state6;
wire   [31:0] tmp_43_fu_674_p1;
reg   [31:0] tmp_43_reg_1740;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_44_fu_682_p2;
reg   [0:0] tmp_44_reg_1745;
wire   [15:0] width_3_fu_707_p2;
reg   [15:0] width_3_reg_1754;
wire   [31:0] tmp_43_0_1_fu_722_p1;
reg   [31:0] tmp_43_0_1_reg_1760;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_44_0_1_fu_728_p2;
reg   [0:0] tmp_44_0_1_reg_1765;
wire   [15:0] width_3_0_1_fu_753_p2;
reg   [15:0] width_3_0_1_reg_1774;
wire   [31:0] tmp_43_0_2_fu_768_p1;
reg   [31:0] tmp_43_0_2_reg_1780;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_44_0_2_fu_774_p2;
reg   [0:0] tmp_44_0_2_reg_1785;
wire   [15:0] width_3_0_2_fu_799_p2;
reg   [15:0] width_3_0_2_reg_1794;
wire   [31:0] tmp_43_0_3_fu_814_p1;
reg   [31:0] tmp_43_0_3_reg_1800;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_44_0_3_fu_820_p2;
reg   [0:0] tmp_44_0_3_reg_1805;
wire   [15:0] width_3_0_3_fu_845_p2;
reg   [15:0] width_3_0_3_reg_1814;
wire   [31:0] tmp_43_0_4_fu_860_p1;
reg   [31:0] tmp_43_0_4_reg_1820;
wire    ap_CS_fsm_state11;
wire   [0:0] tmp_44_0_4_fu_866_p2;
reg   [0:0] tmp_44_0_4_reg_1825;
wire   [15:0] width_3_0_4_fu_891_p2;
reg   [15:0] width_3_0_4_reg_1834;
wire   [31:0] tmp_43_0_5_fu_906_p1;
reg   [31:0] tmp_43_0_5_reg_1840;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_44_0_5_fu_912_p2;
reg   [0:0] tmp_44_0_5_reg_1845;
wire   [15:0] width_3_0_5_fu_937_p2;
reg   [15:0] width_3_0_5_reg_1854;
wire   [31:0] tmp_43_0_6_fu_952_p1;
reg   [31:0] tmp_43_0_6_reg_1860;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_44_0_6_fu_958_p2;
reg   [0:0] tmp_44_0_6_reg_1865;
wire   [15:0] width_3_0_6_fu_983_p2;
reg   [15:0] width_3_0_6_reg_1874;
wire   [31:0] tmp_43_0_7_fu_998_p1;
reg   [31:0] tmp_43_0_7_reg_1880;
wire    ap_CS_fsm_state14;
wire   [0:0] tmp_44_0_7_fu_1004_p2;
wire   [15:0] width_3_0_7_fu_1029_p2;
reg   [15:0] width_3_0_7_reg_1893;
wire   [15:0] width_5_fu_1044_p2;
wire    ap_CS_fsm_state16;
wire  signed [31:0] tmp_32_s_fu_1092_p2;
reg  signed [31:0] tmp_32_s_reg_1909;
wire   [0:0] tmp_57_fu_1058_p2;
wire   [0:0] tmp_29_1_fu_1087_p2;
wire  signed [31:0] tmp_1_fu_1098_p2;
reg  signed [31:0] tmp_1_reg_1914;
wire  signed [31:0] tmp_33_1_fu_1103_p2;
reg  signed [31:0] tmp_33_1_reg_1919;
wire    ap_CS_fsm_state17;
wire   [31:0] tmp5_1_fu_1107_p2;
reg   [31:0] tmp5_1_reg_1933;
wire   [31:0] tmp_43_1_fu_1115_p1;
reg   [31:0] tmp_43_1_reg_1945;
wire    ap_CS_fsm_state19;
wire   [0:0] tmp_44_1_fu_1123_p2;
reg   [0:0] tmp_44_1_reg_1950;
wire   [15:0] width_3_1_fu_1148_p2;
reg   [15:0] width_3_1_reg_1959;
wire   [31:0] tmp_43_1_1_fu_1163_p1;
reg   [31:0] tmp_43_1_1_reg_1965;
wire    ap_CS_fsm_state20;
wire   [0:0] tmp_44_1_1_fu_1169_p2;
reg   [0:0] tmp_44_1_1_reg_1970;
wire   [15:0] width_3_1_1_fu_1194_p2;
reg   [15:0] width_3_1_1_reg_1979;
wire   [31:0] tmp_43_1_2_fu_1209_p1;
reg   [31:0] tmp_43_1_2_reg_1985;
wire    ap_CS_fsm_state21;
wire   [0:0] tmp_44_1_2_fu_1215_p2;
reg   [0:0] tmp_44_1_2_reg_1990;
wire   [15:0] width_3_1_2_fu_1240_p2;
reg   [15:0] width_3_1_2_reg_1999;
wire   [31:0] tmp_43_1_3_fu_1255_p1;
reg   [31:0] tmp_43_1_3_reg_2005;
wire    ap_CS_fsm_state22;
wire   [0:0] tmp_44_1_3_fu_1261_p2;
reg   [0:0] tmp_44_1_3_reg_2010;
wire   [15:0] width_3_1_3_fu_1286_p2;
reg   [15:0] width_3_1_3_reg_2019;
wire   [31:0] tmp_43_1_4_fu_1301_p1;
reg   [31:0] tmp_43_1_4_reg_2025;
wire    ap_CS_fsm_state23;
wire   [0:0] tmp_44_1_4_fu_1307_p2;
reg   [0:0] tmp_44_1_4_reg_2030;
wire   [15:0] width_3_1_4_fu_1332_p2;
reg   [15:0] width_3_1_4_reg_2039;
wire   [31:0] tmp_43_1_5_fu_1347_p1;
reg   [31:0] tmp_43_1_5_reg_2045;
wire    ap_CS_fsm_state24;
wire   [0:0] tmp_44_1_5_fu_1353_p2;
reg   [0:0] tmp_44_1_5_reg_2050;
wire   [15:0] width_3_1_5_fu_1378_p2;
reg   [15:0] width_3_1_5_reg_2059;
wire   [31:0] tmp_43_1_6_fu_1393_p1;
reg   [31:0] tmp_43_1_6_reg_2065;
wire    ap_CS_fsm_state25;
wire   [0:0] tmp_44_1_6_fu_1399_p2;
reg   [0:0] tmp_44_1_6_reg_2070;
wire   [15:0] width_3_1_6_fu_1424_p2;
reg   [15:0] width_3_1_6_reg_2079;
wire   [31:0] tmp_43_1_7_fu_1439_p1;
reg   [31:0] tmp_43_1_7_reg_2085;
wire    ap_CS_fsm_state26;
wire   [0:0] tmp_44_1_7_fu_1445_p2;
wire   [15:0] width_3_1_7_fu_1470_p2;
reg   [15:0] width_3_1_7_reg_2098;
wire   [15:0] width_5_1_fu_1485_p2;
wire    ap_CS_fsm_state28;
wire   [15:0] height_3_1_fu_1514_p2;
wire   [0:0] tmp_57_1_fu_1499_p2;
wire   [15:0] height_fu_1520_p2;
reg   [15:0] height_reg_2116;
wire    ap_CS_fsm_state29;
wire   [31:0] tmp_42_fu_1573_p2;
reg   [31:0] tmp_42_reg_2124;
wire   [0:0] tmp_38_fu_1534_p2;
wire   [15:0] width_4_fu_1552_p2;
wire    ap_CS_fsm_state30;
reg   [15:0] depth_reg_410;
reg   [31:0] phi_mul_reg_421;
reg  signed [31:0] phi_mul2_reg_433;
reg   [15:0] width_reg_445;
reg   [15:0] height1_reg_456;
reg   [15:0] width3_reg_468;
wire    ap_CS_fsm_state15;
reg   [15:0] width4_0_in_reg_480;
reg   [15:0] width3_1_reg_489;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state18;
reg   [15:0] width4_0_in_1_reg_501;
reg   [15:0] height5_0_in_reg_510;
wire   [0:0] tmp_46_fu_1547_p2;
reg   [15:0] width6_reg_519;
wire  signed [63:0] tmp_36_fu_628_p1;
wire  signed [63:0] tmp_41_fu_666_p1;
wire  signed [63:0] tmp_50_fu_702_p1;
wire  signed [63:0] tmp_66_fu_717_p1;
wire  signed [63:0] tmp_50_0_1_fu_748_p1;
wire  signed [63:0] tmp_52_0_1_fu_763_p1;
wire  signed [63:0] tmp_50_0_2_fu_794_p1;
wire  signed [63:0] tmp_52_0_2_fu_809_p1;
wire  signed [63:0] tmp_50_0_3_fu_840_p1;
wire  signed [63:0] tmp_52_0_3_fu_855_p1;
wire  signed [63:0] tmp_50_0_4_fu_886_p1;
wire  signed [63:0] tmp_52_0_4_fu_901_p1;
wire  signed [63:0] tmp_50_0_5_fu_932_p1;
wire  signed [63:0] tmp_52_0_5_fu_947_p1;
wire  signed [63:0] tmp_50_0_6_fu_978_p1;
wire  signed [63:0] tmp_52_0_6_fu_993_p1;
wire  signed [63:0] tmp_50_0_7_fu_1024_p1;
wire  signed [63:0] tmp_52_0_7_fu_1039_p1;
wire  signed [63:0] tmp_59_fu_1068_p1;
wire  signed [63:0] tmp_41_1_fu_1111_p1;
wire  signed [63:0] tmp_50_1_fu_1143_p1;
wire  signed [63:0] tmp_52_1_fu_1158_p1;
wire  signed [63:0] tmp_50_1_1_fu_1189_p1;
wire  signed [63:0] tmp_52_1_1_fu_1204_p1;
wire  signed [63:0] tmp_50_1_2_fu_1235_p1;
wire  signed [63:0] tmp_52_1_2_fu_1250_p1;
wire  signed [63:0] tmp_50_1_3_fu_1281_p1;
wire  signed [63:0] tmp_52_1_3_fu_1296_p1;
wire  signed [63:0] tmp_50_1_4_fu_1327_p1;
wire  signed [63:0] tmp_52_1_4_fu_1342_p1;
wire  signed [63:0] tmp_50_1_5_fu_1373_p1;
wire  signed [63:0] tmp_52_1_5_fu_1388_p1;
wire  signed [63:0] tmp_50_1_6_fu_1419_p1;
wire  signed [63:0] tmp_52_1_6_fu_1434_p1;
wire  signed [63:0] tmp_50_1_7_fu_1465_p1;
wire  signed [63:0] tmp_52_1_7_fu_1480_p1;
wire  signed [63:0] tmp_59_1_fu_1509_p1;
wire  signed [63:0] tmp_53_fu_1568_p1;
wire   [16:0] tmp_cast_fu_534_p1;
wire   [16:0] tmp_18_cast_fu_556_p1;
wire   [15:0] tmp_24_fu_599_p1;
wire   [16:0] tmp_30_cast_fu_608_p1;
wire   [31:0] tmp_30_fu_604_p1;
wire   [31:0] tmp_35_fu_623_p2;
wire   [16:0] tmp_28_cast_fu_643_p1;
wire   [15:0] tmp_33_fu_658_p0;
wire   [15:0] tmp21_fu_670_p1;
wire   [16:0] tmp_43_cast_fu_678_p1;
wire   [16:0] tmp2_fu_687_p2;
wire  signed [31:0] tmp2_cast_fu_693_p1;
wire   [31:0] tmp_49_fu_697_p2;
wire   [31:0] tmp_65_fu_713_p2;
wire   [16:0] tmp_43_0_1_cast_fu_725_p1;
wire   [16:0] tmp3_fu_733_p2;
wire  signed [31:0] tmp3_cast_fu_739_p1;
wire   [31:0] tmp_49_0_1_fu_743_p2;
wire   [31:0] tmp_51_0_1_fu_759_p2;
wire   [16:0] tmp_43_0_2_cast_fu_771_p1;
wire   [16:0] tmp4_fu_779_p2;
wire  signed [31:0] tmp4_cast_fu_785_p1;
wire   [31:0] tmp_49_0_2_fu_789_p2;
wire   [31:0] tmp_51_0_2_fu_805_p2;
wire   [16:0] tmp_43_0_3_cast_fu_817_p1;
wire   [16:0] tmp6_fu_825_p2;
wire  signed [31:0] tmp6_cast_fu_831_p1;
wire   [31:0] tmp_49_0_3_fu_835_p2;
wire   [31:0] tmp_51_0_3_fu_851_p2;
wire   [16:0] tmp_43_0_4_cast_fu_863_p1;
wire   [16:0] tmp7_fu_871_p2;
wire  signed [31:0] tmp7_cast_fu_877_p1;
wire   [31:0] tmp_49_0_4_fu_881_p2;
wire   [31:0] tmp_51_0_4_fu_897_p2;
wire   [16:0] tmp_43_0_5_cast_fu_909_p1;
wire   [16:0] tmp8_fu_917_p2;
wire  signed [31:0] tmp8_cast_fu_923_p1;
wire   [31:0] tmp_49_0_5_fu_927_p2;
wire   [31:0] tmp_51_0_5_fu_943_p2;
wire   [16:0] tmp_43_0_6_cast_fu_955_p1;
wire   [16:0] tmp9_fu_963_p2;
wire  signed [31:0] tmp9_cast_fu_969_p1;
wire   [31:0] tmp_49_0_6_fu_973_p2;
wire   [31:0] tmp_51_0_6_fu_989_p2;
wire   [16:0] tmp_43_0_7_cast_fu_1001_p1;
wire   [16:0] tmp10_fu_1009_p2;
wire  signed [31:0] tmp10_cast_fu_1015_p1;
wire   [31:0] tmp_49_0_7_fu_1019_p2;
wire   [31:0] tmp_51_0_7_fu_1035_p2;
wire   [16:0] tmp_56_cast_fu_1054_p1;
wire   [31:0] tmp_56_fu_1050_p1;
wire   [31:0] tmp_58_fu_1063_p2;
wire   [15:0] height_3_fu_1073_p2;
wire   [16:0] tmp_28_1_cast_fu_1083_p1;
wire   [31:0] tmp_28_1_fu_1079_p1;
wire   [15:0] tmp_33_1_fu_1103_p0;
wire   [15:0] tmp5_1_fu_1107_p1;
wire   [16:0] tmp_43_1_cast_fu_1119_p1;
wire   [16:0] tmp11_fu_1128_p2;
wire  signed [31:0] tmp11_cast_fu_1134_p1;
wire   [31:0] tmp_49_1_fu_1138_p2;
wire   [31:0] tmp_51_1_fu_1154_p2;
wire   [16:0] tmp_43_1_1_cast_fu_1166_p1;
wire   [16:0] tmp12_fu_1174_p2;
wire  signed [31:0] tmp12_cast_fu_1180_p1;
wire   [31:0] tmp_49_1_1_fu_1184_p2;
wire   [31:0] tmp_51_1_1_fu_1200_p2;
wire   [16:0] tmp_43_1_2_cast_fu_1212_p1;
wire   [16:0] tmp13_fu_1220_p2;
wire  signed [31:0] tmp13_cast_fu_1226_p1;
wire   [31:0] tmp_49_1_2_fu_1230_p2;
wire   [31:0] tmp_51_1_2_fu_1246_p2;
wire   [16:0] tmp_43_1_3_cast_fu_1258_p1;
wire   [16:0] tmp14_fu_1266_p2;
wire  signed [31:0] tmp14_cast_fu_1272_p1;
wire   [31:0] tmp_49_1_3_fu_1276_p2;
wire   [31:0] tmp_51_1_3_fu_1292_p2;
wire   [16:0] tmp_43_1_4_cast_fu_1304_p1;
wire   [16:0] tmp15_fu_1312_p2;
wire  signed [31:0] tmp15_cast_fu_1318_p1;
wire   [31:0] tmp_49_1_4_fu_1322_p2;
wire   [31:0] tmp_51_1_4_fu_1338_p2;
wire   [16:0] tmp_43_1_5_cast_fu_1350_p1;
wire   [16:0] tmp16_fu_1358_p2;
wire  signed [31:0] tmp16_cast_fu_1364_p1;
wire   [31:0] tmp_49_1_5_fu_1368_p2;
wire   [31:0] tmp_51_1_5_fu_1384_p2;
wire   [16:0] tmp_43_1_6_cast_fu_1396_p1;
wire   [16:0] tmp17_fu_1404_p2;
wire  signed [31:0] tmp17_cast_fu_1410_p1;
wire   [31:0] tmp_49_1_6_fu_1414_p2;
wire   [31:0] tmp_51_1_6_fu_1430_p2;
wire   [16:0] tmp_43_1_7_cast_fu_1442_p1;
wire   [16:0] tmp18_fu_1450_p2;
wire  signed [31:0] tmp18_cast_fu_1456_p1;
wire   [31:0] tmp_49_1_7_fu_1460_p2;
wire   [31:0] tmp_51_1_7_fu_1476_p2;
wire   [16:0] tmp_56_1_cast_fu_1495_p1;
wire   [31:0] tmp_56_1_fu_1491_p1;
wire   [31:0] tmp_58_1_fu_1504_p2;
wire   [16:0] tmp_37_cast_fu_1530_p1;
wire   [16:0] tmp_45_cast_fu_1543_p1;
wire   [31:0] tmp_45_fu_1539_p1;
wire   [31:0] tmp19_fu_1558_p2;
(* use_dsp48 = "no" *) wire   [31:0] tmp_52_fu_1563_p2;
wire   [15:0] tmp_42_fu_1573_p0;
wire   [15:0] tmp_42_fu_1573_p1;
reg   [29:0] ap_NS_fsm;
wire   [31:0] tmp_42_fu_1573_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
end

network_mul_mul_16ns_16ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
network_mul_mul_16ns_16ns_32_1_1_U139(
    .din0(tmp_42_fu_1573_p0),
    .din1(tmp_42_fu_1573_p1),
    .dout(tmp_42_fu_1573_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (tmp_38_fu_1534_p2 == 1'd0))) begin
        depth_reg_410 <= depth_1_reg_1670;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        depth_reg_410 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_31_fu_612_p2 == 1'd0))) begin
        height1_reg_456 <= 16'd1;
    end else if (((1'b1 == ap_CS_fsm_state28) & (tmp_57_1_fu_1499_p2 == 1'd0))) begin
        height1_reg_456 <= height_3_1_fu_1514_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (tmp_46_fu_1547_p2 == 1'd0))) begin
        height5_0_in_reg_510 <= height_reg_2116;
    end else if (((1'b1 == ap_CS_fsm_state16) & ((tmp_29_reg_1700 == 1'd0) | ((tmp_29_1_fu_1087_p2 == 1'd0) & (tmp_57_fu_1058_p2 == 1'd0))))) begin
        height5_0_in_reg_510 <= input_height;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (tmp_38_fu_1534_p2 == 1'd0))) begin
        phi_mul2_reg_433 <= next_mul3_reg_1657;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul2_reg_433 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (tmp_38_fu_1534_p2 == 1'd0))) begin
        phi_mul_reg_421 <= next_mul_reg_1662;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_421 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        width3_1_reg_489 <= 16'd1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        width3_1_reg_489 <= width_3_1_7_reg_2098;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        width3_reg_468 <= 16'd1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        width3_reg_468 <= width_3_0_7_reg_1893;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & ((tmp_44_1_reg_1950 == 1'd0) | ((tmp_44_1_1_reg_1970 == 1'd0) | ((tmp_44_1_2_reg_1990 == 1'd0) | ((tmp_44_1_3_reg_2010 == 1'd0) | ((tmp_44_1_4_reg_2030 == 1'd0) | ((tmp_44_1_5_reg_2050 == 1'd0) | ((tmp_44_1_7_fu_1445_p2 == 1'd0) | (tmp_44_1_6_reg_2070 == 1'd0)))))))))) begin
        width4_0_in_1_reg_501 <= input_width;
    end else if (((1'b1 == ap_CS_fsm_state28) & (tmp_57_1_fu_1499_p2 == 1'd1))) begin
        width4_0_in_1_reg_501 <= width_5_1_fu_1485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & ((tmp_44_reg_1745 == 1'd0) | ((tmp_44_0_1_reg_1765 == 1'd0) | ((tmp_44_0_2_reg_1785 == 1'd0) | ((tmp_44_0_3_reg_1805 == 1'd0) | ((tmp_44_0_4_reg_1825 == 1'd0) | ((tmp_44_0_5_reg_1845 == 1'd0) | ((tmp_44_0_7_fu_1004_p2 == 1'd0) | (tmp_44_0_6_reg_1865 == 1'd0)))))))))) begin
        width4_0_in_reg_480 <= input_width;
    end else if (((1'b1 == ap_CS_fsm_state16) & (tmp_57_fu_1058_p2 == 1'd1) & (tmp_29_reg_1700 == 1'd1))) begin
        width4_0_in_reg_480 <= width_5_fu_1044_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (tmp_38_fu_1534_p2 == 1'd1))) begin
        width6_reg_519 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state30) & (tmp_46_fu_1547_p2 == 1'd1))) begin
        width6_reg_519 <= width_4_fu_1552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_588_p2 == 1'd0))) begin
        width_reg_445 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (tmp_31_fu_612_p2 == 1'd1))) begin
        width_reg_445 <= width_1_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        depth_1_reg_1670 <= depth_1_fu_593_p2;
        next_mul3_reg_1657 <= next_mul3_fu_578_p2;
        next_mul_reg_1662 <= next_mul_fu_583_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        height_reg_2116 <= height_fu_1520_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp21_reg_1728 <= tmp21_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp5_1_reg_1933 <= tmp5_1_fu_1107_p2;
        tmp_33_1_reg_1919 <= tmp_33_1_fu_1103_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp5_reg_1723 <= tmp5_fu_662_p2;
        tmp_33_reg_1709 <= tmp_33_fu_658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_15_reg_1600 <= tmp_15_fu_538_p2;
        tmp_16_reg_1608[15 : 0] <= tmp_16_fu_544_p1[15 : 0];
        tmp_17_reg_1613[15 : 0] <= tmp_17_fu_548_p1[15 : 0];
        tmp_18_reg_1621[15 : 0] <= tmp_18_fu_552_p1[15 : 0];
        tmp_19_reg_1626 <= tmp_19_fu_560_p2;
        tmp_20_reg_1632 <= tmp_20_fu_566_p2;
        tmp_21_reg_1652 <= tmp_21_fu_572_p2;
        tmp_s_reg_1594[15 : 0] <= tmp_s_fu_530_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_29_1_fu_1087_p2 == 1'd1) & (tmp_29_reg_1700 == 1'd1) & (tmp_57_fu_1058_p2 == 1'd0))) begin
        tmp_1_reg_1914 <= tmp_1_fu_1098_p2;
        tmp_32_s_reg_1909 <= tmp_32_s_fu_1092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_588_p2 == 1'd0))) begin
        tmp_24_reg_1675 <= tmp_24_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_28_reg_1695[15 : 0] <= tmp_28_fu_639_p1[15 : 0];
        tmp_29_reg_1700 <= tmp_29_fu_647_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (tmp_38_fu_1534_p2 == 1'd1))) begin
        tmp_42_reg_2124 <= tmp_42_fu_1573_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_43_0_1_reg_1760[15 : 0] <= tmp_43_0_1_fu_722_p1[15 : 0];
        tmp_44_0_1_reg_1765 <= tmp_44_0_1_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_43_0_2_reg_1780[15 : 0] <= tmp_43_0_2_fu_768_p1[15 : 0];
        tmp_44_0_2_reg_1785 <= tmp_44_0_2_fu_774_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_43_0_3_reg_1800[15 : 0] <= tmp_43_0_3_fu_814_p1[15 : 0];
        tmp_44_0_3_reg_1805 <= tmp_44_0_3_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_43_0_4_reg_1820[15 : 0] <= tmp_43_0_4_fu_860_p1[15 : 0];
        tmp_44_0_4_reg_1825 <= tmp_44_0_4_fu_866_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_43_0_5_reg_1840[15 : 0] <= tmp_43_0_5_fu_906_p1[15 : 0];
        tmp_44_0_5_reg_1845 <= tmp_44_0_5_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_43_0_6_reg_1860[15 : 0] <= tmp_43_0_6_fu_952_p1[15 : 0];
        tmp_44_0_6_reg_1865 <= tmp_44_0_6_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (tmp_44_0_6_reg_1865 == 1'd1) & (tmp_44_0_5_reg_1845 == 1'd1) & (tmp_44_0_4_reg_1825 == 1'd1) & (tmp_44_0_3_reg_1805 == 1'd1) & (tmp_44_0_2_reg_1785 == 1'd1) & (tmp_44_0_1_reg_1765 == 1'd1) & (tmp_44_reg_1745 == 1'd1))) begin
        tmp_43_0_7_reg_1880[15 : 0] <= tmp_43_0_7_fu_998_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_43_1_1_reg_1965[15 : 0] <= tmp_43_1_1_fu_1163_p1[15 : 0];
        tmp_44_1_1_reg_1970 <= tmp_44_1_1_fu_1169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_43_1_2_reg_1985[15 : 0] <= tmp_43_1_2_fu_1209_p1[15 : 0];
        tmp_44_1_2_reg_1990 <= tmp_44_1_2_fu_1215_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_43_1_3_reg_2005[15 : 0] <= tmp_43_1_3_fu_1255_p1[15 : 0];
        tmp_44_1_3_reg_2010 <= tmp_44_1_3_fu_1261_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_43_1_4_reg_2025[15 : 0] <= tmp_43_1_4_fu_1301_p1[15 : 0];
        tmp_44_1_4_reg_2030 <= tmp_44_1_4_fu_1307_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_43_1_5_reg_2045[15 : 0] <= tmp_43_1_5_fu_1347_p1[15 : 0];
        tmp_44_1_5_reg_2050 <= tmp_44_1_5_fu_1353_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_43_1_6_reg_2065[15 : 0] <= tmp_43_1_6_fu_1393_p1[15 : 0];
        tmp_44_1_6_reg_2070 <= tmp_44_1_6_fu_1399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (tmp_44_1_6_reg_2070 == 1'd1) & (tmp_44_1_5_reg_2050 == 1'd1) & (tmp_44_1_4_reg_2030 == 1'd1) & (tmp_44_1_3_reg_2010 == 1'd1) & (tmp_44_1_2_reg_1990 == 1'd1) & (tmp_44_1_1_reg_1970 == 1'd1) & (tmp_44_1_reg_1950 == 1'd1))) begin
        tmp_43_1_7_reg_2085[15 : 0] <= tmp_43_1_7_fu_1439_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_43_1_reg_1945[15 : 0] <= tmp_43_1_fu_1115_p1[15 : 0];
        tmp_44_1_reg_1950 <= tmp_44_1_fu_1123_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_43_reg_1740[15 : 0] <= tmp_43_fu_674_p1[15 : 0];
        tmp_44_reg_1745 <= tmp_44_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_31_fu_612_p2 == 1'd0))) begin
        tmp_47_reg_1689 <= tmp_47_fu_633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_29_fu_647_p2 == 1'd1))) begin
        tmp_64_reg_1704 <= tmp_64_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_44_0_1_fu_728_p2 == 1'd1))) begin
        width_3_0_1_reg_1774 <= width_3_0_1_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_44_0_2_fu_774_p2 == 1'd1))) begin
        width_3_0_2_reg_1794 <= width_3_0_2_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_44_0_3_fu_820_p2 == 1'd1))) begin
        width_3_0_3_reg_1814 <= width_3_0_3_fu_845_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (tmp_44_0_4_fu_866_p2 == 1'd1))) begin
        width_3_0_4_reg_1834 <= width_3_0_4_fu_891_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_44_0_5_fu_912_p2 == 1'd1))) begin
        width_3_0_5_reg_1854 <= width_3_0_5_fu_937_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (tmp_44_0_6_fu_958_p2 == 1'd1))) begin
        width_3_0_6_reg_1874 <= width_3_0_6_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (tmp_44_0_7_fu_1004_p2 == 1'd1) & (tmp_44_0_6_reg_1865 == 1'd1) & (tmp_44_0_5_reg_1845 == 1'd1) & (tmp_44_0_4_reg_1825 == 1'd1) & (tmp_44_0_3_reg_1805 == 1'd1) & (tmp_44_0_2_reg_1785 == 1'd1) & (tmp_44_0_1_reg_1765 == 1'd1) & (tmp_44_reg_1745 == 1'd1))) begin
        width_3_0_7_reg_1893 <= width_3_0_7_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (tmp_44_1_1_fu_1169_p2 == 1'd1))) begin
        width_3_1_1_reg_1979 <= width_3_1_1_fu_1194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (tmp_44_1_2_fu_1215_p2 == 1'd1))) begin
        width_3_1_2_reg_1999 <= width_3_1_2_fu_1240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (tmp_44_1_3_fu_1261_p2 == 1'd1))) begin
        width_3_1_3_reg_2019 <= width_3_1_3_fu_1286_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (tmp_44_1_4_fu_1307_p2 == 1'd1))) begin
        width_3_1_4_reg_2039 <= width_3_1_4_fu_1332_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (tmp_44_1_5_fu_1353_p2 == 1'd1))) begin
        width_3_1_5_reg_2059 <= width_3_1_5_fu_1378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (tmp_44_1_6_fu_1399_p2 == 1'd1))) begin
        width_3_1_6_reg_2079 <= width_3_1_6_fu_1424_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (tmp_44_1_7_fu_1445_p2 == 1'd1) & (tmp_44_1_6_reg_2070 == 1'd1) & (tmp_44_1_5_reg_2050 == 1'd1) & (tmp_44_1_4_reg_2030 == 1'd1) & (tmp_44_1_3_reg_2010 == 1'd1) & (tmp_44_1_2_reg_1990 == 1'd1) & (tmp_44_1_1_reg_1970 == 1'd1) & (tmp_44_1_reg_1950 == 1'd1))) begin
        width_3_1_7_reg_2098 <= width_3_1_7_fu_1470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_44_1_fu_1123_p2 == 1'd1))) begin
        width_3_1_reg_1959 <= width_3_1_fu_1148_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (tmp_44_fu_682_p2 == 1'd1))) begin
        width_3_reg_1754 <= width_3_fu_707_p2;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_588_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_588_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        input_r_address0 = tmp_50_1_7_fu_1465_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        input_r_address0 = tmp_50_1_6_fu_1419_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        input_r_address0 = tmp_50_1_5_fu_1373_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        input_r_address0 = tmp_50_1_4_fu_1327_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        input_r_address0 = tmp_50_1_3_fu_1281_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        input_r_address0 = tmp_50_1_2_fu_1235_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        input_r_address0 = tmp_50_1_1_fu_1189_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_address0 = tmp_50_1_fu_1143_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        input_r_address0 = tmp_50_0_7_fu_1024_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        input_r_address0 = tmp_50_0_6_fu_978_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address0 = tmp_50_0_5_fu_932_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address0 = tmp_50_0_4_fu_886_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = tmp_50_0_3_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address0 = tmp_50_0_2_fu_794_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address0 = tmp_50_0_1_fu_748_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address0 = tmp_50_fu_702_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        output_r_address0 = tmp_53_fu_1568_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        output_r_address0 = tmp_59_1_fu_1509_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_r_address0 = tmp_52_1_7_fu_1480_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        output_r_address0 = tmp_52_1_6_fu_1434_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        output_r_address0 = tmp_52_1_5_fu_1388_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        output_r_address0 = tmp_52_1_4_fu_1342_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_r_address0 = tmp_52_1_3_fu_1296_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        output_r_address0 = tmp_52_1_2_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_r_address0 = tmp_52_1_1_fu_1204_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_r_address0 = tmp_52_1_fu_1158_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        output_r_address0 = tmp_41_1_fu_1111_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_address0 = tmp_59_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        output_r_address0 = tmp_52_0_7_fu_1039_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        output_r_address0 = tmp_52_0_6_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        output_r_address0 = tmp_52_0_5_fu_947_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_address0 = tmp_52_0_4_fu_901_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_address0 = tmp_52_0_3_fu_855_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_address0 = tmp_52_0_2_fu_809_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_address0 = tmp_52_0_1_fu_763_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_address0 = tmp_66_fu_717_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_address0 = tmp_41_fu_666_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_r_address0 = tmp_36_fu_628_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        output_r_d0 = input_r_q0;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_d0 = 16'd0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state30) & (tmp_46_fu_1547_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state28) & (tmp_57_1_fu_1499_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state26) & (tmp_44_1_6_reg_2070 == 1'd1) & (tmp_44_1_5_reg_2050 == 1'd1) & (tmp_44_1_4_reg_2030 == 1'd1) & (tmp_44_1_3_reg_2010 == 1'd1) & (tmp_44_1_2_reg_1990 == 1'd1) & (tmp_44_1_1_reg_1970 == 1'd1) & (tmp_44_1_reg_1950 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (tmp_57_fu_1058_p2 == 1'd1) & (tmp_29_reg_1700 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (tmp_44_0_6_reg_1865 == 1'd1) & (tmp_44_0_5_reg_1845 == 1'd1) & (tmp_44_0_4_reg_1825 == 1'd1) & (tmp_44_0_3_reg_1805 == 1'd1) & (tmp_44_0_2_reg_1785 == 1'd1) & (tmp_44_0_1_reg_1765 == 1'd1) & (tmp_44_reg_1745 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_31_fu_612_p2 == 1'd1)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond2_fu_588_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_31_fu_612_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_29_fu_647_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (tmp_44_fu_682_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_44_0_1_fu_728_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_44_0_2_fu_774_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (tmp_44_0_3_fu_820_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (tmp_44_0_4_fu_866_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (tmp_44_0_5_fu_912_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & ((tmp_44_reg_1745 == 1'd0) | ((tmp_44_0_1_reg_1765 == 1'd0) | ((tmp_44_0_2_reg_1785 == 1'd0) | ((tmp_44_0_3_reg_1805 == 1'd0) | ((tmp_44_0_4_reg_1825 == 1'd0) | ((tmp_44_0_5_reg_1845 == 1'd0) | ((tmp_44_0_7_fu_1004_p2 == 1'd0) | (tmp_44_0_6_reg_1865 == 1'd0)))))))))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & ((tmp_29_reg_1700 == 1'd0) | ((tmp_29_1_fu_1087_p2 == 1'd0) & (tmp_57_fu_1058_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else if (((1'b1 == ap_CS_fsm_state16) & (tmp_29_1_fu_1087_p2 == 1'd1) & (tmp_29_reg_1700 == 1'd1) & (tmp_57_fu_1058_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (tmp_44_1_fu_1123_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (tmp_44_1_1_fu_1169_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (tmp_44_1_2_fu_1215_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (tmp_44_1_3_fu_1261_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (tmp_44_1_4_fu_1307_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (tmp_44_1_5_fu_1353_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & ((tmp_44_1_reg_1950 == 1'd0) | ((tmp_44_1_1_reg_1970 == 1'd0) | ((tmp_44_1_2_reg_1990 == 1'd0) | ((tmp_44_1_3_reg_2010 == 1'd0) | ((tmp_44_1_4_reg_2030 == 1'd0) | ((tmp_44_1_5_reg_2050 == 1'd0) | ((tmp_44_1_7_fu_1445_p2 == 1'd0) | (tmp_44_1_6_reg_2070 == 1'd0)))))))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (tmp_57_1_fu_1499_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (tmp_38_fu_1534_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (tmp_46_fu_1547_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign depth_1_fu_593_p2 = (depth_reg_410 + 16'd1);

assign exitcond2_fu_588_p2 = ((depth_reg_410 == input_depth) ? 1'b1 : 1'b0);

assign height_3_1_fu_1514_p2 = (height1_reg_456 + 16'd2);

assign height_3_fu_1073_p2 = (height1_reg_456 + 16'd1);

assign height_fu_1520_p2 = (height5_0_in_reg_510 + 16'd1);

assign next_mul3_fu_578_p2 = ($signed(phi_mul2_reg_433) + $signed(tmp_16_reg_1608));

assign next_mul_fu_583_p2 = (phi_mul_reg_421 + tmp_18_reg_1621);

assign tmp10_cast_fu_1015_p1 = $signed(tmp10_fu_1009_p2);

assign tmp10_fu_1009_p2 = ($signed(tmp_43_0_7_cast_fu_1001_p1) + $signed(17'd131071));

assign tmp11_cast_fu_1134_p1 = $signed(tmp11_fu_1128_p2);

assign tmp11_fu_1128_p2 = ($signed(tmp_43_1_cast_fu_1119_p1) + $signed(17'd131071));

assign tmp12_cast_fu_1180_p1 = $signed(tmp12_fu_1174_p2);

assign tmp12_fu_1174_p2 = ($signed(tmp_43_1_1_cast_fu_1166_p1) + $signed(17'd131071));

assign tmp13_cast_fu_1226_p1 = $signed(tmp13_fu_1220_p2);

assign tmp13_fu_1220_p2 = ($signed(tmp_43_1_2_cast_fu_1212_p1) + $signed(17'd131071));

assign tmp14_cast_fu_1272_p1 = $signed(tmp14_fu_1266_p2);

assign tmp14_fu_1266_p2 = ($signed(tmp_43_1_3_cast_fu_1258_p1) + $signed(17'd131071));

assign tmp15_cast_fu_1318_p1 = $signed(tmp15_fu_1312_p2);

assign tmp15_fu_1312_p2 = ($signed(tmp_43_1_4_cast_fu_1304_p1) + $signed(17'd131071));

assign tmp16_cast_fu_1364_p1 = $signed(tmp16_fu_1358_p2);

assign tmp16_fu_1358_p2 = ($signed(tmp_43_1_5_cast_fu_1350_p1) + $signed(17'd131071));

assign tmp17_cast_fu_1410_p1 = $signed(tmp17_fu_1404_p2);

assign tmp17_fu_1404_p2 = ($signed(tmp_43_1_6_cast_fu_1396_p1) + $signed(17'd131071));

assign tmp18_cast_fu_1456_p1 = $signed(tmp18_fu_1450_p2);

assign tmp18_fu_1450_p2 = ($signed(tmp_43_1_7_cast_fu_1442_p1) + $signed(17'd131071));

assign tmp19_fu_1558_p2 = (tmp_24_reg_1675 + tmp_45_fu_1539_p1);

assign tmp21_fu_670_p1 = tmp_s_reg_1594;

assign tmp21_fu_670_p2 = ($signed(tmp5_reg_1723) * $signed({{1'b0}, {tmp21_fu_670_p1}}));

assign tmp2_cast_fu_693_p1 = $signed(tmp2_fu_687_p2);

assign tmp2_fu_687_p2 = ($signed(tmp_43_cast_fu_678_p1) + $signed(17'd131071));

assign tmp3_cast_fu_739_p1 = $signed(tmp3_fu_733_p2);

assign tmp3_fu_733_p2 = ($signed(tmp_43_0_1_cast_fu_725_p1) + $signed(17'd131071));

assign tmp4_cast_fu_785_p1 = $signed(tmp4_fu_779_p2);

assign tmp4_fu_779_p2 = ($signed(tmp_43_0_2_cast_fu_771_p1) + $signed(17'd131071));

assign tmp5_1_fu_1107_p1 = tmp_s_reg_1594;

assign tmp5_1_fu_1107_p2 = ($signed(tmp_1_reg_1914) * $signed({{1'b0}, {tmp5_1_fu_1107_p1}}));

assign tmp5_fu_662_p2 = (tmp_47_reg_1689 + tmp_28_reg_1695);

assign tmp6_cast_fu_831_p1 = $signed(tmp6_fu_825_p2);

assign tmp6_fu_825_p2 = ($signed(tmp_43_0_3_cast_fu_817_p1) + $signed(17'd131071));

assign tmp7_cast_fu_877_p1 = $signed(tmp7_fu_871_p2);

assign tmp7_fu_871_p2 = ($signed(tmp_43_0_4_cast_fu_863_p1) + $signed(17'd131071));

assign tmp8_cast_fu_923_p1 = $signed(tmp8_fu_917_p2);

assign tmp8_fu_917_p2 = ($signed(tmp_43_0_5_cast_fu_909_p1) + $signed(17'd131071));

assign tmp9_cast_fu_969_p1 = $signed(tmp9_fu_963_p2);

assign tmp9_fu_963_p2 = ($signed(tmp_43_0_6_cast_fu_955_p1) + $signed(17'd131071));

assign tmp_15_fu_538_p2 = (tmp_cast_fu_534_p1 + 17'd2);

assign tmp_16_fu_544_p1 = output_height;

assign tmp_17_fu_548_p1 = output_width;

assign tmp_18_cast_fu_556_p1 = input_height;

assign tmp_18_fu_552_p1 = input_height;

assign tmp_19_fu_560_p2 = (tmp_18_cast_fu_556_p1 + 17'd1);

assign tmp_1_fu_1098_p2 = (tmp_47_reg_1689 + tmp_28_1_fu_1079_p1);

assign tmp_20_fu_566_p2 = (tmp_cast_fu_534_p1 + 17'd1);

assign tmp_21_fu_572_p2 = (tmp_18_cast_fu_556_p1 + 17'd2);

assign tmp_24_fu_599_p1 = tmp_17_reg_1613;

assign tmp_24_fu_599_p2 = ($signed(phi_mul2_reg_433) * $signed({{1'b0}, {tmp_24_fu_599_p1}}));

assign tmp_28_1_cast_fu_1083_p1 = height_3_fu_1073_p2;

assign tmp_28_1_fu_1079_p1 = height_3_fu_1073_p2;

assign tmp_28_cast_fu_643_p1 = height1_reg_456;

assign tmp_28_fu_639_p1 = height1_reg_456;

assign tmp_29_1_fu_1087_p2 = ((tmp_28_1_cast_fu_1083_p1 < tmp_19_reg_1626) ? 1'b1 : 1'b0);

assign tmp_29_fu_647_p2 = ((tmp_28_cast_fu_643_p1 < tmp_19_reg_1626) ? 1'b1 : 1'b0);

assign tmp_30_cast_fu_608_p1 = width_reg_445;

assign tmp_30_fu_604_p1 = width_reg_445;

assign tmp_31_fu_612_p2 = ((tmp_30_cast_fu_608_p1 < tmp_15_reg_1600) ? 1'b1 : 1'b0);

assign tmp_32_s_fu_1092_p2 = ($signed(tmp_28_1_fu_1079_p1) + $signed(phi_mul2_reg_433));

assign tmp_33_1_fu_1103_p0 = tmp_17_reg_1613;

assign tmp_33_1_fu_1103_p2 = ($signed({{1'b0}, {tmp_33_1_fu_1103_p0}}) * $signed(tmp_32_s_reg_1909));

assign tmp_33_fu_658_p0 = tmp_17_reg_1613;

assign tmp_33_fu_658_p2 = ($signed({{1'b0}, {tmp_33_fu_658_p0}}) * $signed(tmp_64_reg_1704));

assign tmp_35_fu_623_p2 = (tmp_24_reg_1675 + tmp_30_fu_604_p1);

assign tmp_36_fu_628_p1 = $signed(tmp_35_fu_623_p2);

assign tmp_37_cast_fu_1530_p1 = height_fu_1520_p2;

assign tmp_38_fu_1534_p2 = ((tmp_37_cast_fu_1530_p1 < tmp_21_reg_1652) ? 1'b1 : 1'b0);

assign tmp_41_1_fu_1111_p1 = tmp_33_1_reg_1919;

assign tmp_41_fu_666_p1 = tmp_33_reg_1709;

assign tmp_42_fu_1573_p0 = tmp_42_fu_1573_p00;

assign tmp_42_fu_1573_p00 = height_fu_1520_p2;

assign tmp_42_fu_1573_p1 = tmp_17_reg_1613;

assign tmp_43_0_1_cast_fu_725_p1 = width_3_reg_1754;

assign tmp_43_0_1_fu_722_p1 = width_3_reg_1754;

assign tmp_43_0_2_cast_fu_771_p1 = width_3_0_1_reg_1774;

assign tmp_43_0_2_fu_768_p1 = width_3_0_1_reg_1774;

assign tmp_43_0_3_cast_fu_817_p1 = width_3_0_2_reg_1794;

assign tmp_43_0_3_fu_814_p1 = width_3_0_2_reg_1794;

assign tmp_43_0_4_cast_fu_863_p1 = width_3_0_3_reg_1814;

assign tmp_43_0_4_fu_860_p1 = width_3_0_3_reg_1814;

assign tmp_43_0_5_cast_fu_909_p1 = width_3_0_4_reg_1834;

assign tmp_43_0_5_fu_906_p1 = width_3_0_4_reg_1834;

assign tmp_43_0_6_cast_fu_955_p1 = width_3_0_5_reg_1854;

assign tmp_43_0_6_fu_952_p1 = width_3_0_5_reg_1854;

assign tmp_43_0_7_cast_fu_1001_p1 = width_3_0_6_reg_1874;

assign tmp_43_0_7_fu_998_p1 = width_3_0_6_reg_1874;

assign tmp_43_1_1_cast_fu_1166_p1 = width_3_1_reg_1959;

assign tmp_43_1_1_fu_1163_p1 = width_3_1_reg_1959;

assign tmp_43_1_2_cast_fu_1212_p1 = width_3_1_1_reg_1979;

assign tmp_43_1_2_fu_1209_p1 = width_3_1_1_reg_1979;

assign tmp_43_1_3_cast_fu_1258_p1 = width_3_1_2_reg_1999;

assign tmp_43_1_3_fu_1255_p1 = width_3_1_2_reg_1999;

assign tmp_43_1_4_cast_fu_1304_p1 = width_3_1_3_reg_2019;

assign tmp_43_1_4_fu_1301_p1 = width_3_1_3_reg_2019;

assign tmp_43_1_5_cast_fu_1350_p1 = width_3_1_4_reg_2039;

assign tmp_43_1_5_fu_1347_p1 = width_3_1_4_reg_2039;

assign tmp_43_1_6_cast_fu_1396_p1 = width_3_1_5_reg_2059;

assign tmp_43_1_6_fu_1393_p1 = width_3_1_5_reg_2059;

assign tmp_43_1_7_cast_fu_1442_p1 = width_3_1_6_reg_2079;

assign tmp_43_1_7_fu_1439_p1 = width_3_1_6_reg_2079;

assign tmp_43_1_cast_fu_1119_p1 = width3_1_reg_489;

assign tmp_43_1_fu_1115_p1 = width3_1_reg_489;

assign tmp_43_cast_fu_678_p1 = width3_reg_468;

assign tmp_43_fu_674_p1 = width3_reg_468;

assign tmp_44_0_1_fu_728_p2 = ((tmp_43_0_1_cast_fu_725_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_0_2_fu_774_p2 = ((tmp_43_0_2_cast_fu_771_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_0_3_fu_820_p2 = ((tmp_43_0_3_cast_fu_817_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_0_4_fu_866_p2 = ((tmp_43_0_4_cast_fu_863_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_0_5_fu_912_p2 = ((tmp_43_0_5_cast_fu_909_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_0_6_fu_958_p2 = ((tmp_43_0_6_cast_fu_955_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_0_7_fu_1004_p2 = ((tmp_43_0_7_cast_fu_1001_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_1_1_fu_1169_p2 = ((tmp_43_1_1_cast_fu_1166_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_1_2_fu_1215_p2 = ((tmp_43_1_2_cast_fu_1212_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_1_3_fu_1261_p2 = ((tmp_43_1_3_cast_fu_1258_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_1_4_fu_1307_p2 = ((tmp_43_1_4_cast_fu_1304_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_1_5_fu_1353_p2 = ((tmp_43_1_5_cast_fu_1350_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_1_6_fu_1399_p2 = ((tmp_43_1_6_cast_fu_1396_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_1_7_fu_1445_p2 = ((tmp_43_1_7_cast_fu_1442_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_1_fu_1123_p2 = ((tmp_43_1_cast_fu_1119_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_44_fu_682_p2 = ((tmp_43_cast_fu_678_p1 < tmp_20_reg_1632) ? 1'b1 : 1'b0);

assign tmp_45_cast_fu_1543_p1 = width6_reg_519;

assign tmp_45_fu_1539_p1 = width6_reg_519;

assign tmp_46_fu_1547_p2 = ((tmp_45_cast_fu_1543_p1 < tmp_15_reg_1600) ? 1'b1 : 1'b0);

assign tmp_47_fu_633_p2 = ($signed(phi_mul_reg_421) + $signed(32'd4294967295));

assign tmp_49_0_1_fu_743_p2 = ($signed(tmp3_cast_fu_739_p1) + $signed(tmp21_reg_1728));

assign tmp_49_0_2_fu_789_p2 = ($signed(tmp4_cast_fu_785_p1) + $signed(tmp21_reg_1728));

assign tmp_49_0_3_fu_835_p2 = ($signed(tmp6_cast_fu_831_p1) + $signed(tmp21_reg_1728));

assign tmp_49_0_4_fu_881_p2 = ($signed(tmp7_cast_fu_877_p1) + $signed(tmp21_reg_1728));

assign tmp_49_0_5_fu_927_p2 = ($signed(tmp8_cast_fu_923_p1) + $signed(tmp21_reg_1728));

assign tmp_49_0_6_fu_973_p2 = ($signed(tmp9_cast_fu_969_p1) + $signed(tmp21_reg_1728));

assign tmp_49_0_7_fu_1019_p2 = ($signed(tmp10_cast_fu_1015_p1) + $signed(tmp21_reg_1728));

assign tmp_49_1_1_fu_1184_p2 = ($signed(tmp12_cast_fu_1180_p1) + $signed(tmp5_1_reg_1933));

assign tmp_49_1_2_fu_1230_p2 = ($signed(tmp13_cast_fu_1226_p1) + $signed(tmp5_1_reg_1933));

assign tmp_49_1_3_fu_1276_p2 = ($signed(tmp14_cast_fu_1272_p1) + $signed(tmp5_1_reg_1933));

assign tmp_49_1_4_fu_1322_p2 = ($signed(tmp15_cast_fu_1318_p1) + $signed(tmp5_1_reg_1933));

assign tmp_49_1_5_fu_1368_p2 = ($signed(tmp16_cast_fu_1364_p1) + $signed(tmp5_1_reg_1933));

assign tmp_49_1_6_fu_1414_p2 = ($signed(tmp17_cast_fu_1410_p1) + $signed(tmp5_1_reg_1933));

assign tmp_49_1_7_fu_1460_p2 = ($signed(tmp18_cast_fu_1456_p1) + $signed(tmp5_1_reg_1933));

assign tmp_49_1_fu_1138_p2 = ($signed(tmp11_cast_fu_1134_p1) + $signed(tmp5_1_reg_1933));

assign tmp_49_fu_697_p2 = ($signed(tmp2_cast_fu_693_p1) + $signed(tmp21_reg_1728));

assign tmp_50_0_1_fu_748_p1 = $signed(tmp_49_0_1_fu_743_p2);

assign tmp_50_0_2_fu_794_p1 = $signed(tmp_49_0_2_fu_789_p2);

assign tmp_50_0_3_fu_840_p1 = $signed(tmp_49_0_3_fu_835_p2);

assign tmp_50_0_4_fu_886_p1 = $signed(tmp_49_0_4_fu_881_p2);

assign tmp_50_0_5_fu_932_p1 = $signed(tmp_49_0_5_fu_927_p2);

assign tmp_50_0_6_fu_978_p1 = $signed(tmp_49_0_6_fu_973_p2);

assign tmp_50_0_7_fu_1024_p1 = $signed(tmp_49_0_7_fu_1019_p2);

assign tmp_50_1_1_fu_1189_p1 = $signed(tmp_49_1_1_fu_1184_p2);

assign tmp_50_1_2_fu_1235_p1 = $signed(tmp_49_1_2_fu_1230_p2);

assign tmp_50_1_3_fu_1281_p1 = $signed(tmp_49_1_3_fu_1276_p2);

assign tmp_50_1_4_fu_1327_p1 = $signed(tmp_49_1_4_fu_1322_p2);

assign tmp_50_1_5_fu_1373_p1 = $signed(tmp_49_1_5_fu_1368_p2);

assign tmp_50_1_6_fu_1419_p1 = $signed(tmp_49_1_6_fu_1414_p2);

assign tmp_50_1_7_fu_1465_p1 = $signed(tmp_49_1_7_fu_1460_p2);

assign tmp_50_1_fu_1143_p1 = $signed(tmp_49_1_fu_1138_p2);

assign tmp_50_fu_702_p1 = $signed(tmp_49_fu_697_p2);

assign tmp_51_0_1_fu_759_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_43_0_1_reg_1760));

assign tmp_51_0_2_fu_805_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_43_0_2_reg_1780));

assign tmp_51_0_3_fu_851_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_43_0_3_reg_1800));

assign tmp_51_0_4_fu_897_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_43_0_4_reg_1820));

assign tmp_51_0_5_fu_943_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_43_0_5_reg_1840));

assign tmp_51_0_6_fu_989_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_43_0_6_reg_1860));

assign tmp_51_0_7_fu_1035_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_43_0_7_reg_1880));

assign tmp_51_1_1_fu_1200_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_43_1_1_reg_1965));

assign tmp_51_1_2_fu_1246_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_43_1_2_reg_1985));

assign tmp_51_1_3_fu_1292_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_43_1_3_reg_2005));

assign tmp_51_1_4_fu_1338_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_43_1_4_reg_2025));

assign tmp_51_1_5_fu_1384_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_43_1_5_reg_2045));

assign tmp_51_1_6_fu_1430_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_43_1_6_reg_2065));

assign tmp_51_1_7_fu_1476_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_43_1_7_reg_2085));

assign tmp_51_1_fu_1154_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_43_1_reg_1945));

assign tmp_52_0_1_fu_763_p1 = $signed(tmp_51_0_1_fu_759_p2);

assign tmp_52_0_2_fu_809_p1 = $signed(tmp_51_0_2_fu_805_p2);

assign tmp_52_0_3_fu_855_p1 = $signed(tmp_51_0_3_fu_851_p2);

assign tmp_52_0_4_fu_901_p1 = $signed(tmp_51_0_4_fu_897_p2);

assign tmp_52_0_5_fu_947_p1 = $signed(tmp_51_0_5_fu_943_p2);

assign tmp_52_0_6_fu_993_p1 = $signed(tmp_51_0_6_fu_989_p2);

assign tmp_52_0_7_fu_1039_p1 = $signed(tmp_51_0_7_fu_1035_p2);

assign tmp_52_1_1_fu_1204_p1 = $signed(tmp_51_1_1_fu_1200_p2);

assign tmp_52_1_2_fu_1250_p1 = $signed(tmp_51_1_2_fu_1246_p2);

assign tmp_52_1_3_fu_1296_p1 = $signed(tmp_51_1_3_fu_1292_p2);

assign tmp_52_1_4_fu_1342_p1 = $signed(tmp_51_1_4_fu_1338_p2);

assign tmp_52_1_5_fu_1388_p1 = $signed(tmp_51_1_5_fu_1384_p2);

assign tmp_52_1_6_fu_1434_p1 = $signed(tmp_51_1_6_fu_1430_p2);

assign tmp_52_1_7_fu_1480_p1 = $signed(tmp_51_1_7_fu_1476_p2);

assign tmp_52_1_fu_1158_p1 = $signed(tmp_51_1_fu_1154_p2);

assign tmp_52_fu_1563_p2 = (tmp19_fu_1558_p2 + tmp_42_reg_2124);

assign tmp_53_fu_1568_p1 = $signed(tmp_52_fu_1563_p2);

assign tmp_56_1_cast_fu_1495_p1 = width_5_1_fu_1485_p2;

assign tmp_56_1_fu_1491_p1 = width_5_1_fu_1485_p2;

assign tmp_56_cast_fu_1054_p1 = width_5_fu_1044_p2;

assign tmp_56_fu_1050_p1 = width_5_fu_1044_p2;

assign tmp_57_1_fu_1499_p2 = ((tmp_56_1_cast_fu_1495_p1 < tmp_15_reg_1600) ? 1'b1 : 1'b0);

assign tmp_57_fu_1058_p2 = ((tmp_56_cast_fu_1054_p1 < tmp_15_reg_1600) ? 1'b1 : 1'b0);

assign tmp_58_1_fu_1504_p2 = ($signed(tmp_33_1_reg_1919) + $signed(tmp_56_1_fu_1491_p1));

assign tmp_58_fu_1063_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_56_fu_1050_p1));

assign tmp_59_1_fu_1509_p1 = $signed(tmp_58_1_fu_1504_p2);

assign tmp_59_fu_1068_p1 = $signed(tmp_58_fu_1063_p2);

assign tmp_64_fu_652_p2 = ($signed(tmp_28_fu_639_p1) + $signed(phi_mul2_reg_433));

assign tmp_65_fu_713_p2 = ($signed(tmp_33_reg_1709) + $signed(tmp_43_reg_1740));

assign tmp_66_fu_717_p1 = $signed(tmp_65_fu_713_p2);

assign tmp_cast_fu_534_p1 = input_width;

assign tmp_s_fu_530_p1 = input_width;

assign width_1_fu_617_p2 = (width_reg_445 + 16'd1);

assign width_3_0_1_fu_753_p2 = (width3_reg_468 + 16'd2);

assign width_3_0_2_fu_799_p2 = (width3_reg_468 + 16'd3);

assign width_3_0_3_fu_845_p2 = (width3_reg_468 + 16'd4);

assign width_3_0_4_fu_891_p2 = (width3_reg_468 + 16'd5);

assign width_3_0_5_fu_937_p2 = (width3_reg_468 + 16'd6);

assign width_3_0_6_fu_983_p2 = (width3_reg_468 + 16'd7);

assign width_3_0_7_fu_1029_p2 = (width3_reg_468 + 16'd8);

assign width_3_1_1_fu_1194_p2 = (width3_1_reg_489 + 16'd2);

assign width_3_1_2_fu_1240_p2 = (width3_1_reg_489 + 16'd3);

assign width_3_1_3_fu_1286_p2 = (width3_1_reg_489 + 16'd4);

assign width_3_1_4_fu_1332_p2 = (width3_1_reg_489 + 16'd5);

assign width_3_1_5_fu_1378_p2 = (width3_1_reg_489 + 16'd6);

assign width_3_1_6_fu_1424_p2 = (width3_1_reg_489 + 16'd7);

assign width_3_1_7_fu_1470_p2 = (width3_1_reg_489 + 16'd8);

assign width_3_1_fu_1148_p2 = (width3_1_reg_489 + 16'd1);

assign width_3_fu_707_p2 = (width3_reg_468 + 16'd1);

assign width_4_fu_1552_p2 = (width6_reg_519 + 16'd1);

assign width_5_1_fu_1485_p2 = (width4_0_in_1_reg_501 + 16'd1);

assign width_5_fu_1044_p2 = (width4_0_in_reg_480 + 16'd1);

always @ (posedge ap_clk) begin
    tmp_s_reg_1594[31:16] <= 16'b0000000000000000;
    tmp_16_reg_1608[31:16] <= 16'b0000000000000000;
    tmp_17_reg_1613[31:16] <= 16'b0000000000000000;
    tmp_18_reg_1621[31:16] <= 16'b0000000000000000;
    tmp_28_reg_1695[31:16] <= 16'b0000000000000000;
    tmp_43_reg_1740[31:16] <= 16'b0000000000000000;
    tmp_43_0_1_reg_1760[31:16] <= 16'b0000000000000000;
    tmp_43_0_2_reg_1780[31:16] <= 16'b0000000000000000;
    tmp_43_0_3_reg_1800[31:16] <= 16'b0000000000000000;
    tmp_43_0_4_reg_1820[31:16] <= 16'b0000000000000000;
    tmp_43_0_5_reg_1840[31:16] <= 16'b0000000000000000;
    tmp_43_0_6_reg_1860[31:16] <= 16'b0000000000000000;
    tmp_43_0_7_reg_1880[31:16] <= 16'b0000000000000000;
    tmp_43_1_reg_1945[31:16] <= 16'b0000000000000000;
    tmp_43_1_1_reg_1965[31:16] <= 16'b0000000000000000;
    tmp_43_1_2_reg_1985[31:16] <= 16'b0000000000000000;
    tmp_43_1_3_reg_2005[31:16] <= 16'b0000000000000000;
    tmp_43_1_4_reg_2025[31:16] <= 16'b0000000000000000;
    tmp_43_1_5_reg_2045[31:16] <= 16'b0000000000000000;
    tmp_43_1_6_reg_2065[31:16] <= 16'b0000000000000000;
    tmp_43_1_7_reg_2085[31:16] <= 16'b0000000000000000;
end

endmodule //padding2d_fix16
