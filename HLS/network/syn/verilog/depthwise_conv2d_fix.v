// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module depthwise_conv2d_fix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg[13:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[15:0] output_r_d0;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [15:0] reg_249;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
reg  signed [15:0] reg_254;
wire    ap_CS_fsm_state7;
reg  signed [15:0] reg_258;
wire   [4:0] out_h_4_fu_269_p2;
reg   [4:0] out_h_4_reg_1057;
wire    ap_CS_fsm_state2;
wire   [10:0] tmp44_fu_299_p2;
reg   [10:0] tmp44_reg_1062;
wire   [0:0] exitcond3_fu_263_p2;
wire   [9:0] tmp_60_fu_305_p1;
reg   [9:0] tmp_60_reg_1072;
wire   [10:0] tmp7_fu_321_p2;
reg   [10:0] tmp7_reg_1077;
wire   [10:0] tmp5_0_1_fu_327_p2;
reg   [10:0] tmp5_0_1_reg_1083;
wire    ap_CS_fsm_state3;
wire   [9:0] tmp5_0_2_cast_fu_332_p2;
reg   [9:0] tmp5_0_2_cast_reg_1092;
wire   [10:0] tmp_71_cast_fu_343_p1;
reg   [10:0] tmp_71_cast_reg_1104;
wire    ap_CS_fsm_state4;
wire   [0:0] exitcond2_fu_337_p2;
wire   [10:0] tmp_69_fu_347_p2;
reg   [10:0] tmp_69_reg_1110;
wire   [4:0] tmp_111_0_0_2_fu_352_p2;
reg   [4:0] tmp_111_0_0_2_reg_1115;
wire    ap_CS_fsm_state5;
wire   [4:0] tmp_111_0_0_s_fu_366_p2;
reg   [4:0] tmp_111_0_0_s_reg_1127;
wire   [10:0] tmp_111_0_0_cast_fu_372_p1;
reg   [10:0] tmp_111_0_0_cast_reg_1133;
wire   [10:0] tmp_112_0_0_1_fu_376_p2;
reg   [10:0] tmp_112_0_0_1_reg_1139;
wire   [10:0] tmp_111_0_0_2_cast_fu_381_p1;
reg   [10:0] tmp_111_0_0_2_cast_reg_1144;
wire   [10:0] tmp_112_0_0_2_fu_384_p2;
reg   [10:0] tmp_112_0_0_2_reg_1149;
wire   [10:0] tmp_112_0_1_fu_405_p2;
reg   [10:0] tmp_112_0_1_reg_1164;
wire   [10:0] tmp_112_0_1_1_fu_409_p2;
reg   [10:0] tmp_112_0_1_1_reg_1169;
wire   [10:0] tmp_s_fu_413_p2;
reg   [10:0] tmp_s_reg_1174;
wire   [10:0] tmp_105_1_fu_417_p2;
reg   [10:0] tmp_105_1_reg_1179;
wire   [10:0] tmp_112_0_1_2_fu_441_p2;
reg   [10:0] tmp_112_0_1_2_reg_1194;
wire   [9:0] tmp_112_0_2_fu_445_p2;
reg   [9:0] tmp_112_0_2_reg_1199;
wire  signed [29:0] tmp_114_0_0_1_cast_fu_457_p1;
wire   [9:0] tmp_112_0_2_1_fu_480_p2;
reg   [9:0] tmp_112_0_2_1_reg_1230;
wire   [9:0] tmp_112_0_2_2_fu_485_p2;
reg   [9:0] tmp_112_0_2_2_reg_1235;
wire   [5:0] tmp_111_1_0_1_fu_493_p2;
reg   [5:0] tmp_111_1_0_1_reg_1240;
wire   [5:0] tmp_111_1_0_2_fu_499_p2;
reg   [5:0] tmp_111_1_0_2_reg_1246;
wire   [10:0] tmp_112_1_0_1_fu_523_p2;
reg   [10:0] tmp_112_1_0_1_reg_1267;
wire   [10:0] tmp_112_1_0_2_fu_534_p2;
reg   [10:0] tmp_112_1_0_2_reg_1272;
wire   [10:0] tmp_112_1_1_1_fu_539_p2;
reg   [10:0] tmp_112_1_1_1_reg_1277;
wire   [10:0] tmp_112_1_1_2_fu_544_p2;
reg   [10:0] tmp_112_1_1_2_reg_1282;
wire   [9:0] tmp_112_1_2_1_fu_549_p2;
reg   [9:0] tmp_112_1_2_1_reg_1287;
wire   [9:0] tmp_112_1_2_2_fu_554_p2;
reg   [9:0] tmp_112_1_2_2_reg_1292;
wire  signed [29:0] grp_fu_946_p2;
reg  signed [29:0] tmp_71_reg_1297;
wire  signed [29:0] grp_fu_952_p2;
reg  signed [29:0] tmp_119_0_0_1_reg_1302;
wire  signed [27:0] grp_fu_958_p2;
reg  signed [27:0] tmp_119_0_0_2_reg_1307;
wire  signed [29:0] grp_fu_964_p2;
reg  signed [29:0] tmp_119_1_reg_1322;
reg   [13:0] tmp_61_reg_1337;
wire  signed [29:0] grp_fu_970_p2;
reg  signed [29:0] tmp_119_0_1_reg_1342;
wire  signed [29:0] tmp_114_0_1_1_cast_fu_610_p1;
wire   [15:0] tmp1_fu_626_p2;
reg   [15:0] tmp1_reg_1368;
reg   [15:0] tmp_121_1_reg_1373;
wire  signed [27:0] grp_fu_976_p2;
reg  signed [27:0] tmp_119_0_1_2_reg_1388;
wire  signed [26:0] grp_fu_982_p2;
reg  signed [26:0] tmp_119_0_2_reg_1393;
wire   [15:0] tmp_fu_675_p2;
reg   [15:0] tmp_reg_1398;
wire  signed [29:0] grp_fu_988_p2;
reg  signed [29:0] tmp_119_0_1_1_reg_1423;
reg   [13:0] tmp_62_reg_1428;
reg   [12:0] tmp_63_reg_1433;
wire  signed [28:0] grp_fu_994_p2;
reg  signed [28:0] tmp_119_0_2_1_reg_1438;
wire  signed [28:0] grp_fu_1000_p2;
reg  signed [28:0] tmp_119_0_2_2_reg_1443;
wire  signed [29:0] grp_fu_1006_p2;
reg  signed [29:0] tmp_119_1_1_reg_1448;
wire  signed [26:0] grp_fu_1012_p2;
reg  signed [26:0] tmp_119_1_2_reg_1463;
wire   [15:0] tmp4_fu_763_p2;
reg   [15:0] tmp4_reg_1468;
wire    ap_CS_fsm_state14;
wire   [15:0] tmp5_fu_775_p2;
reg   [15:0] tmp5_reg_1473;
wire  signed [29:0] grp_fu_1018_p2;
reg  signed [29:0] tmp_119_1_0_1_reg_1478;
wire  signed [27:0] grp_fu_1024_p2;
reg  signed [27:0] tmp_119_1_0_2_reg_1483;
reg   [15:0] tmp_121_1_1_reg_1488;
reg   [12:0] tmp_68_reg_1493;
wire   [15:0] buffer_6_0_2_2_fu_811_p2;
reg   [15:0] buffer_6_0_2_2_reg_1508;
wire    ap_CS_fsm_state15;
reg   [13:0] tmp_66_reg_1513;
wire  signed [29:0] grp_fu_1030_p2;
reg  signed [29:0] tmp_119_1_1_1_reg_1518;
wire  signed [27:0] grp_fu_1036_p2;
reg  signed [27:0] tmp_119_1_1_2_reg_1523;
wire   [15:0] tmp10_fu_834_p2;
reg   [15:0] tmp10_reg_1528;
wire  signed [28:0] grp_fu_1042_p2;
reg  signed [28:0] tmp_119_1_2_1_reg_1533;
wire    ap_CS_fsm_state16;
wire  signed [28:0] grp_fu_1048_p2;
reg  signed [28:0] tmp_119_1_2_2_reg_1538;
wire   [15:0] tmp9_fu_877_p2;
reg   [15:0] tmp9_reg_1543;
wire   [15:0] tmp13_fu_882_p2;
reg   [15:0] tmp13_reg_1548;
wire   [15:0] tmp14_fu_923_p2;
reg   [15:0] tmp14_reg_1553;
wire    ap_CS_fsm_state17;
wire   [15:0] buffer_6_1_2_2_fu_933_p2;
reg   [15:0] buffer_6_1_2_2_reg_1558;
wire    ap_CS_fsm_state18;
reg   [4:0] out_h_reg_226;
reg   [4:0] out_w_reg_237;
wire    ap_CS_fsm_state19;
wire   [63:0] tmp_70_fu_361_p1;
wire   [63:0] tmp_113_0_0_1_fu_392_p1;
wire   [63:0] tmp_113_0_0_2_fu_400_p1;
wire   [63:0] tmp_113_0_1_fu_428_p1;
wire   [63:0] tmp_113_0_1_1_fu_436_p1;
wire   [63:0] tmp_113_0_1_2_fu_471_p1;
wire   [63:0] tmp_113_0_2_fu_476_p1;
wire   [63:0] tmp_113_0_2_1_fu_509_p1;
wire   [63:0] tmp_113_0_2_2_fu_513_p1;
wire   [63:0] tmp_113_1_0_1_fu_570_p1;
wire   [63:0] tmp_113_1_0_2_fu_578_p1;
wire   [63:0] tmp_113_1_1_1_fu_644_p1;
wire   [63:0] tmp_113_1_1_2_fu_652_p1;
wire   [63:0] tmp_113_1_2_1_fu_688_p1;
wire   [63:0] tmp_113_1_2_2_fu_692_p1;
wire   [63:0] tmp_58_fu_842_p1;
wire   [63:0] tmp_106_1_fu_941_p1;
wire   [9:0] p_shl5_fu_275_p3;
wire   [5:0] p_shl6_fu_287_p3;
wire   [10:0] p_shl5_cast_fu_283_p1;
wire   [10:0] p_shl6_cast_fu_295_p1;
wire   [6:0] p_shl8_fu_309_p3;
wire   [10:0] p_shl8_cast_fu_317_p1;
wire  signed [31:0] tmp_112_0_cast_fu_358_p1;
wire  signed [31:0] tmp_112_0_0_1_cast_fu_389_p1;
wire  signed [31:0] tmp_112_0_0_2_cast_fu_397_p1;
wire  signed [31:0] tmp_112_0_1_cast_fu_425_p1;
wire  signed [31:0] tmp_112_0_1_1_cast_fu_433_p1;
wire   [9:0] tmp_71_cast1_fu_421_p1;
wire  signed [31:0] tmp_112_0_1_2_cast_fu_468_p1;
wire   [9:0] tmp_111_0_0_cast1_fu_454_p1;
wire   [9:0] tmp_111_0_0_2_cast1_fu_461_p1;
wire   [5:0] tmp_104_1_cast2_fu_490_p1;
wire   [10:0] tmp_111_1_0_1_cast_fu_520_p1;
wire   [10:0] tmp_111_1_0_2_cast_fu_531_p1;
wire   [9:0] tmp_111_1_0_1_cast1_fu_517_p1;
wire   [9:0] tmp_111_1_0_2_cast1_fu_528_p1;
wire  signed [31:0] tmp_112_1_0_1_cast_fu_567_p1;
wire  signed [31:0] tmp_112_1_0_2_cast_fu_575_p1;
wire   [15:0] tmp_72_fu_583_p4;
wire   [15:0] tmp_121_0_0_1_fu_592_p4;
wire  signed [31:0] tmp_112_1_1_1_cast_fu_641_p1;
wire  signed [31:0] tmp_112_1_1_2_cast_fu_649_p1;
wire   [15:0] tmp_121_0_1_fu_660_p4;
wire  signed [15:0] tmp_121_0_0_2_fu_657_p1;
wire   [15:0] tmp2_fu_669_p2;
wire   [14:0] tmp_64_fu_737_p4;
wire   [14:0] tmp_65_fu_750_p4;
wire  signed [15:0] tmp_121_0_1_2_fu_731_p1;
wire   [15:0] tmp_121_0_1_1_fu_722_p4;
wire  signed [15:0] tmp_121_0_2_2_fu_759_p1;
wire  signed [15:0] tmp_121_0_2_1_fu_746_p1;
wire  signed [15:0] tmp_121_0_2_fu_734_p1;
wire   [15:0] tmp8_fu_769_p2;
wire   [15:0] tmp3_fu_807_p2;
wire   [15:0] tmp_121_1_0_1_fu_816_p4;
wire  signed [31:0] tmp_72_cast_fu_839_p1;
wire   [13:0] tmp_67_fu_859_p4;
wire  signed [15:0] tmp_121_1_0_2_fu_847_p1;
wire   [15:0] tmp11_fu_872_p2;
wire  signed [15:0] tmp_121_1_1_2_fu_868_p1;
wire   [15:0] tmp_121_1_1_1_fu_850_p4;
wire   [14:0] tmp_73_fu_891_p4;
wire   [14:0] tmp_74_fu_904_p4;
wire  signed [15:0] tmp_121_1_2_2_fu_913_p1;
wire  signed [15:0] tmp_121_1_2_1_fu_900_p1;
wire  signed [15:0] tmp_121_1_2_fu_888_p1;
wire   [15:0] tmp15_fu_917_p2;
wire   [15:0] tmp12_fu_929_p2;
wire  signed [31:0] tmp_105_1_cast_fu_938_p1;
wire  signed [14:0] grp_fu_946_p1;
wire  signed [15:0] grp_fu_952_p0;
wire  signed [14:0] grp_fu_952_p1;
wire   [11:0] grp_fu_958_p1;
wire  signed [15:0] grp_fu_964_p0;
wire  signed [14:0] grp_fu_964_p1;
wire  signed [13:0] grp_fu_970_p1;
wire  signed [11:0] grp_fu_976_p1;
wire  signed [10:0] grp_fu_982_p1;
wire  signed [15:0] grp_fu_988_p0;
wire  signed [13:0] grp_fu_988_p1;
wire   [12:0] grp_fu_994_p1;
wire  signed [12:0] grp_fu_1000_p1;
wire  signed [15:0] grp_fu_1006_p0;
wire  signed [13:0] grp_fu_1006_p1;
wire  signed [10:0] grp_fu_1012_p1;
wire  signed [14:0] grp_fu_1018_p1;
wire   [11:0] grp_fu_1024_p1;
wire  signed [13:0] grp_fu_1030_p1;
wire  signed [11:0] grp_fu_1036_p1;
wire   [12:0] grp_fu_1042_p1;
wire  signed [12:0] grp_fu_1048_p1;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
end

network_mul_mul_16s_15s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_3_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_249),
    .din1(grp_fu_946_p1),
    .ce(1'b1),
    .dout(grp_fu_946_p2)
);

network_mul_mul_16s_15s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_3_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_952_p0),
    .din1(grp_fu_952_p1),
    .ce(1'b1),
    .dout(grp_fu_952_p2)
);

network_mul_mul_16s_12ns_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12ns_28_3_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_258),
    .din1(grp_fu_958_p1),
    .ce(1'b1),
    .dout(grp_fu_958_p2)
);

network_mul_mul_16s_15s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_3_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_964_p0),
    .din1(grp_fu_964_p1),
    .ce(1'b1),
    .dout(grp_fu_964_p2)
);

network_mul_mul_16s_14s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_3_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_249),
    .din1(grp_fu_970_p1),
    .ce(1'b1),
    .dout(grp_fu_970_p2)
);

network_mul_mul_16s_12s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12s_28_3_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_249),
    .din1(grp_fu_976_p1),
    .ce(1'b1),
    .dout(grp_fu_976_p2)
);

network_mul_mul_16s_11s_27_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_mul_16s_11s_27_3_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_258),
    .din1(grp_fu_982_p1),
    .ce(1'b1),
    .dout(grp_fu_982_p2)
);

network_mul_mul_16s_14s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_3_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_988_p0),
    .din1(grp_fu_988_p1),
    .ce(1'b1),
    .dout(grp_fu_988_p2)
);

network_mul_mul_16s_13ns_29_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13ns_29_3_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_249),
    .din1(grp_fu_994_p1),
    .ce(1'b1),
    .dout(grp_fu_994_p2)
);

network_mul_mul_16s_13s_29_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13s_29_3_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_258),
    .din1(grp_fu_1000_p1),
    .ce(1'b1),
    .dout(grp_fu_1000_p2)
);

network_mul_mul_16s_14s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_3_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1006_p0),
    .din1(grp_fu_1006_p1),
    .ce(1'b1),
    .dout(grp_fu_1006_p2)
);

network_mul_mul_16s_11s_27_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_mul_16s_11s_27_3_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_249),
    .din1(grp_fu_1012_p1),
    .ce(1'b1),
    .dout(grp_fu_1012_p2)
);

network_mul_mul_16s_15s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_3_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_249),
    .din1(grp_fu_1018_p1),
    .ce(1'b1),
    .dout(grp_fu_1018_p2)
);

network_mul_mul_16s_12ns_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12ns_28_3_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_254),
    .din1(grp_fu_1024_p1),
    .ce(1'b1),
    .dout(grp_fu_1024_p2)
);

network_mul_mul_16s_14s_30_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_3_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_249),
    .din1(grp_fu_1030_p1),
    .ce(1'b1),
    .dout(grp_fu_1030_p2)
);

network_mul_mul_16s_12s_28_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12s_28_3_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_254),
    .din1(grp_fu_1036_p1),
    .ce(1'b1),
    .dout(grp_fu_1036_p2)
);

network_mul_mul_16s_13ns_29_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13ns_29_3_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_249),
    .din1(grp_fu_1042_p1),
    .ce(1'b1),
    .dout(grp_fu_1042_p2)
);

network_mul_mul_16s_13s_29_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13s_29_3_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_254),
    .din1(grp_fu_1048_p1),
    .ce(1'b1),
    .dout(grp_fu_1048_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_337_p2 == 1'd1))) begin
        out_h_reg_226 <= out_h_4_reg_1057;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_h_reg_226 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_w_reg_237 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_w_reg_237 <= tmp_111_0_0_2_reg_1115;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_249 <= input_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_249 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_258 <= input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_258 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        buffer_6_0_2_2_reg_1508 <= buffer_6_0_2_2_fu_811_p2;
        tmp10_reg_1528 <= tmp10_fu_834_p2;
        tmp_119_1_1_1_reg_1518 <= grp_fu_1030_p2;
        tmp_119_1_1_2_reg_1523 <= grp_fu_1036_p2;
        tmp_66_reg_1513 <= {{tmp_119_1_0_2_reg_1483[27:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        buffer_6_1_2_2_reg_1558 <= buffer_6_1_2_2_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_h_4_reg_1057 <= out_h_4_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_254 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp13_reg_1548 <= tmp13_fu_882_p2;
        tmp9_reg_1543 <= tmp9_fu_877_p2;
        tmp_119_1_2_1_reg_1533 <= grp_fu_1042_p2;
        tmp_119_1_2_2_reg_1538 <= grp_fu_1048_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp14_reg_1553 <= tmp14_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp1_reg_1368 <= tmp1_fu_626_p2;
        tmp_119_0_1_reg_1342 <= grp_fu_970_p2;
        tmp_121_1_reg_1373 <= {{tmp_119_1_reg_1322[29:14]}};
        tmp_61_reg_1337 <= {{tmp_119_0_0_2_reg_1307[27:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_263_p2 == 1'd0))) begin
        tmp44_reg_1062[10 : 1] <= tmp44_fu_299_p2[10 : 1];
        tmp7_reg_1077[10 : 2] <= tmp7_fu_321_p2[10 : 2];
        tmp_60_reg_1072[9 : 1] <= tmp_60_fu_305_p1[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp4_reg_1468 <= tmp4_fu_763_p2;
        tmp5_reg_1473 <= tmp5_fu_775_p2;
        tmp_119_1_0_1_reg_1478 <= grp_fu_1018_p2;
        tmp_119_1_0_2_reg_1483 <= grp_fu_1024_p2;
        tmp_121_1_1_reg_1488 <= {{tmp_119_1_1_reg_1448[29:14]}};
        tmp_68_reg_1493 <= {{tmp_119_1_2_reg_1463[26:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp5_0_1_reg_1083[10 : 1] <= tmp5_0_1_fu_327_p2[10 : 1];
        tmp5_0_2_cast_reg_1092[9 : 1] <= tmp5_0_2_cast_fu_332_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_105_1_reg_1179[10 : 1] <= tmp_105_1_fu_417_p2[10 : 1];
        tmp_112_0_1_1_reg_1169[10 : 1] <= tmp_112_0_1_1_fu_409_p2[10 : 1];
        tmp_112_0_1_reg_1164 <= tmp_112_0_1_fu_405_p2;
        tmp_s_reg_1174 <= tmp_s_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_111_0_0_2_cast_reg_1144[4 : 0] <= tmp_111_0_0_2_cast_fu_381_p1[4 : 0];
        tmp_111_0_0_cast_reg_1133[4 : 1] <= tmp_111_0_0_cast_fu_372_p1[4 : 1];
        tmp_111_0_0_s_reg_1127[4 : 1] <= tmp_111_0_0_s_fu_366_p2[4 : 1];
        tmp_112_0_0_1_reg_1139[10 : 1] <= tmp_112_0_0_1_fu_376_p2[10 : 1];
        tmp_112_0_0_2_reg_1149 <= tmp_112_0_0_2_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_337_p2 == 1'd0))) begin
        tmp_111_0_0_2_reg_1115 <= tmp_111_0_0_2_fu_352_p2;
        tmp_69_reg_1110 <= tmp_69_fu_347_p2;
        tmp_71_cast_reg_1104[4 : 0] <= tmp_71_cast_fu_343_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_111_1_0_1_reg_1240[5 : 1] <= tmp_111_1_0_1_fu_493_p2[5 : 1];
        tmp_111_1_0_2_reg_1246[5 : 1] <= tmp_111_1_0_2_fu_499_p2[5 : 1];
        tmp_112_0_2_1_reg_1230[9 : 1] <= tmp_112_0_2_1_fu_480_p2[9 : 1];
        tmp_112_0_2_2_reg_1235 <= tmp_112_0_2_2_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_112_0_1_2_reg_1194 <= tmp_112_0_1_2_fu_441_p2;
        tmp_112_0_2_reg_1199 <= tmp_112_0_2_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_112_1_0_1_reg_1267[10 : 1] <= tmp_112_1_0_1_fu_523_p2[10 : 1];
        tmp_112_1_0_2_reg_1272[10 : 1] <= tmp_112_1_0_2_fu_534_p2[10 : 1];
        tmp_112_1_1_1_reg_1277[10 : 1] <= tmp_112_1_1_1_fu_539_p2[10 : 1];
        tmp_112_1_1_2_reg_1282[10 : 1] <= tmp_112_1_1_2_fu_544_p2[10 : 1];
        tmp_112_1_2_1_reg_1287[9 : 1] <= tmp_112_1_2_1_fu_549_p2[9 : 1];
        tmp_112_1_2_2_reg_1292[9 : 1] <= tmp_112_1_2_2_fu_554_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_119_0_0_1_reg_1302 <= grp_fu_952_p2;
        tmp_119_0_0_2_reg_1307 <= grp_fu_958_p2;
        tmp_119_1_reg_1322 <= grp_fu_964_p2;
        tmp_71_reg_1297 <= grp_fu_946_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_119_0_1_1_reg_1423 <= grp_fu_988_p2;
        tmp_119_0_2_1_reg_1438 <= grp_fu_994_p2;
        tmp_119_0_2_2_reg_1443 <= grp_fu_1000_p2;
        tmp_119_1_1_reg_1448 <= grp_fu_1006_p2;
        tmp_119_1_2_reg_1463 <= grp_fu_1012_p2;
        tmp_62_reg_1428 <= {{tmp_119_0_1_2_reg_1388[27:14]}};
        tmp_63_reg_1433 <= {{tmp_119_0_2_reg_1393[26:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_119_0_1_2_reg_1388 <= grp_fu_976_p2;
        tmp_119_0_2_reg_1393 <= grp_fu_982_p2;
        tmp_reg_1398 <= tmp_fu_675_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_263_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_263_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address0 = tmp_113_1_2_2_fu_692_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address0 = tmp_113_1_1_2_fu_652_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = tmp_113_1_0_2_fu_578_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address0 = tmp_113_0_2_2_fu_513_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address0 = tmp_113_0_2_fu_476_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address0 = tmp_113_0_1_1_fu_436_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address0 = tmp_113_0_0_1_fu_392_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_r_address0 = tmp_70_fu_361_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address1 = tmp_113_1_2_1_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address1 = tmp_113_1_1_1_fu_644_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address1 = tmp_113_1_0_1_fu_570_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address1 = tmp_113_0_2_1_fu_509_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address1 = tmp_113_0_1_2_fu_471_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address1 = tmp_113_0_1_fu_428_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address1 = tmp_113_0_0_2_fu_400_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state7))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        output_r_address0 = tmp_106_1_fu_941_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_address0 = tmp_58_fu_842_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        output_r_d0 = buffer_6_1_2_2_reg_1558;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_d0 = buffer_6_0_2_2_reg_1508;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond3_fu_263_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond2_fu_337_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign buffer_6_0_2_2_fu_811_p2 = (tmp_reg_1398 + tmp3_fu_807_p2);

assign buffer_6_1_2_2_fu_933_p2 = (tmp9_reg_1543 + tmp12_fu_929_p2);

assign exitcond2_fu_337_p2 = ((out_w_reg_237 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond3_fu_263_p2 = ((out_h_reg_226 == 5'd28) ? 1'b1 : 1'b0);

assign grp_fu_1000_p1 = 29'd536867259;

assign grp_fu_1006_p0 = tmp_114_0_1_1_cast_fu_610_p1;

assign grp_fu_1006_p1 = 30'd1073736502;

assign grp_fu_1012_p1 = 27'd134216945;

assign grp_fu_1018_p1 = 30'd1073729139;

assign grp_fu_1024_p1 = 28'd1933;

assign grp_fu_1030_p1 = 30'd1073734222;

assign grp_fu_1036_p1 = 28'd268434419;

assign grp_fu_1042_p1 = 29'd3015;

assign grp_fu_1048_p1 = 29'd536867259;

assign grp_fu_946_p1 = 30'd1073729270;

assign grp_fu_952_p0 = tmp_114_0_0_1_cast_fu_457_p1;

assign grp_fu_952_p1 = 30'd1073729139;

assign grp_fu_958_p1 = 28'd1933;

assign grp_fu_964_p0 = tmp_114_0_0_1_cast_fu_457_p1;

assign grp_fu_964_p1 = 30'd1073729270;

assign grp_fu_970_p1 = 30'd1073736502;

assign grp_fu_976_p1 = 28'd268434419;

assign grp_fu_982_p1 = 27'd134216945;

assign grp_fu_988_p0 = tmp_114_0_1_1_cast_fu_610_p1;

assign grp_fu_988_p1 = 30'd1073734222;

assign grp_fu_994_p1 = 29'd3015;

assign out_h_4_fu_269_p2 = (out_h_reg_226 + 5'd1);

assign p_shl5_cast_fu_283_p1 = p_shl5_fu_275_p3;

assign p_shl5_fu_275_p3 = {{out_h_reg_226}, {5'd0}};

assign p_shl6_cast_fu_295_p1 = p_shl6_fu_287_p3;

assign p_shl6_fu_287_p3 = {{out_h_reg_226}, {1'd0}};

assign p_shl8_cast_fu_317_p1 = p_shl8_fu_309_p3;

assign p_shl8_fu_309_p3 = {{out_h_reg_226}, {2'd0}};

assign tmp10_fu_834_p2 = (tmp_121_1_reg_1373 + tmp_121_1_0_1_fu_816_p4);

assign tmp11_fu_872_p2 = ($signed(tmp_121_1_1_reg_1488) + $signed(tmp_121_1_0_2_fu_847_p1));

assign tmp12_fu_929_p2 = (tmp13_reg_1548 + tmp14_reg_1553);

assign tmp13_fu_882_p2 = ($signed(tmp_121_1_1_2_fu_868_p1) + $signed(tmp_121_1_1_1_fu_850_p4));

assign tmp14_fu_923_p2 = ($signed(tmp_121_1_2_fu_888_p1) + $signed(tmp15_fu_917_p2));

assign tmp15_fu_917_p2 = ($signed(tmp_121_1_2_2_fu_913_p1) + $signed(tmp_121_1_2_1_fu_900_p1));

assign tmp1_fu_626_p2 = (tmp_72_fu_583_p4 + tmp_121_0_0_1_fu_592_p4);

assign tmp2_fu_669_p2 = ($signed(tmp_121_0_1_fu_660_p4) + $signed(tmp_121_0_0_2_fu_657_p1));

assign tmp3_fu_807_p2 = (tmp4_reg_1468 + tmp5_reg_1473);

assign tmp44_fu_299_p2 = (p_shl5_cast_fu_283_p1 - p_shl6_cast_fu_295_p1);

assign tmp4_fu_763_p2 = ($signed(tmp_121_0_1_2_fu_731_p1) + $signed(tmp_121_0_1_1_fu_722_p4));

assign tmp5_0_1_fu_327_p2 = (11'd30 + tmp44_reg_1062);

assign tmp5_0_2_cast_fu_332_p2 = (10'd60 + tmp_60_reg_1072);

assign tmp5_fu_775_p2 = ($signed(tmp_121_0_2_fu_734_p1) + $signed(tmp8_fu_769_p2));

assign tmp7_fu_321_p2 = (p_shl5_cast_fu_283_p1 - p_shl8_cast_fu_317_p1);

assign tmp8_fu_769_p2 = ($signed(tmp_121_0_2_2_fu_759_p1) + $signed(tmp_121_0_2_1_fu_746_p1));

assign tmp9_fu_877_p2 = (tmp10_reg_1528 + tmp11_fu_872_p2);

assign tmp_104_1_cast2_fu_490_p1 = tmp_111_0_0_s_reg_1127;

assign tmp_105_1_cast_fu_938_p1 = $signed(tmp_105_1_reg_1179);

assign tmp_105_1_fu_417_p2 = (tmp_111_0_0_cast_reg_1133 + tmp7_reg_1077);

assign tmp_106_1_fu_941_p1 = $unsigned(tmp_105_1_cast_fu_938_p1);

assign tmp_111_0_0_2_cast1_fu_461_p1 = tmp_111_0_0_2_reg_1115;

assign tmp_111_0_0_2_cast_fu_381_p1 = tmp_111_0_0_2_reg_1115;

assign tmp_111_0_0_2_fu_352_p2 = (out_w_reg_237 + 5'd2);

assign tmp_111_0_0_cast1_fu_454_p1 = tmp_111_0_0_s_reg_1127;

assign tmp_111_0_0_cast_fu_372_p1 = tmp_111_0_0_s_fu_366_p2;

assign tmp_111_0_0_s_fu_366_p2 = (out_w_reg_237 | 5'd1);

assign tmp_111_1_0_1_cast1_fu_517_p1 = tmp_111_1_0_1_reg_1240;

assign tmp_111_1_0_1_cast_fu_520_p1 = tmp_111_1_0_1_reg_1240;

assign tmp_111_1_0_1_fu_493_p2 = (tmp_104_1_cast2_fu_490_p1 + 6'd1);

assign tmp_111_1_0_2_cast1_fu_528_p1 = tmp_111_1_0_2_reg_1246;

assign tmp_111_1_0_2_cast_fu_531_p1 = tmp_111_1_0_2_reg_1246;

assign tmp_111_1_0_2_fu_499_p2 = (tmp_104_1_cast2_fu_490_p1 + 6'd2);

assign tmp_112_0_0_1_cast_fu_389_p1 = $signed(tmp_112_0_0_1_reg_1139);

assign tmp_112_0_0_1_fu_376_p2 = (tmp44_reg_1062 + tmp_111_0_0_cast_fu_372_p1);

assign tmp_112_0_0_2_cast_fu_397_p1 = $signed(tmp_112_0_0_2_reg_1149);

assign tmp_112_0_0_2_fu_384_p2 = (tmp44_reg_1062 + tmp_111_0_0_2_cast_fu_381_p1);

assign tmp_112_0_1_1_cast_fu_433_p1 = $signed(tmp_112_0_1_1_reg_1169);

assign tmp_112_0_1_1_fu_409_p2 = (tmp5_0_1_reg_1083 + tmp_111_0_0_cast_reg_1133);

assign tmp_112_0_1_2_cast_fu_468_p1 = $signed(tmp_112_0_1_2_reg_1194);

assign tmp_112_0_1_2_fu_441_p2 = (tmp5_0_1_reg_1083 + tmp_111_0_0_2_cast_reg_1144);

assign tmp_112_0_1_cast_fu_425_p1 = $signed(tmp_112_0_1_reg_1164);

assign tmp_112_0_1_fu_405_p2 = (tmp_71_cast_reg_1104 + tmp5_0_1_reg_1083);

assign tmp_112_0_2_1_fu_480_p2 = (tmp5_0_2_cast_reg_1092 + tmp_111_0_0_cast1_fu_454_p1);

assign tmp_112_0_2_2_fu_485_p2 = (tmp5_0_2_cast_reg_1092 + tmp_111_0_0_2_cast1_fu_461_p1);

assign tmp_112_0_2_fu_445_p2 = (tmp_71_cast1_fu_421_p1 + tmp5_0_2_cast_reg_1092);

assign tmp_112_0_cast_fu_358_p1 = $signed(tmp_69_reg_1110);

assign tmp_112_1_0_1_cast_fu_567_p1 = $signed(tmp_112_1_0_1_reg_1267);

assign tmp_112_1_0_1_fu_523_p2 = (tmp44_reg_1062 + tmp_111_1_0_1_cast_fu_520_p1);

assign tmp_112_1_0_2_cast_fu_575_p1 = $signed(tmp_112_1_0_2_reg_1272);

assign tmp_112_1_0_2_fu_534_p2 = (tmp44_reg_1062 + tmp_111_1_0_2_cast_fu_531_p1);

assign tmp_112_1_1_1_cast_fu_641_p1 = $signed(tmp_112_1_1_1_reg_1277);

assign tmp_112_1_1_1_fu_539_p2 = (tmp5_0_1_reg_1083 + tmp_111_1_0_1_cast_fu_520_p1);

assign tmp_112_1_1_2_cast_fu_649_p1 = $signed(tmp_112_1_1_2_reg_1282);

assign tmp_112_1_1_2_fu_544_p2 = (tmp5_0_1_reg_1083 + tmp_111_1_0_2_cast_fu_531_p1);

assign tmp_112_1_2_1_fu_549_p2 = (tmp5_0_2_cast_reg_1092 + tmp_111_1_0_1_cast1_fu_517_p1);

assign tmp_112_1_2_2_fu_554_p2 = (tmp5_0_2_cast_reg_1092 + tmp_111_1_0_2_cast1_fu_528_p1);

assign tmp_113_0_0_1_fu_392_p1 = $unsigned(tmp_112_0_0_1_cast_fu_389_p1);

assign tmp_113_0_0_2_fu_400_p1 = $unsigned(tmp_112_0_0_2_cast_fu_397_p1);

assign tmp_113_0_1_1_fu_436_p1 = $unsigned(tmp_112_0_1_1_cast_fu_433_p1);

assign tmp_113_0_1_2_fu_471_p1 = $unsigned(tmp_112_0_1_2_cast_fu_468_p1);

assign tmp_113_0_1_fu_428_p1 = $unsigned(tmp_112_0_1_cast_fu_425_p1);

assign tmp_113_0_2_1_fu_509_p1 = tmp_112_0_2_1_reg_1230;

assign tmp_113_0_2_2_fu_513_p1 = tmp_112_0_2_2_reg_1235;

assign tmp_113_0_2_fu_476_p1 = tmp_112_0_2_reg_1199;

assign tmp_113_1_0_1_fu_570_p1 = $unsigned(tmp_112_1_0_1_cast_fu_567_p1);

assign tmp_113_1_0_2_fu_578_p1 = $unsigned(tmp_112_1_0_2_cast_fu_575_p1);

assign tmp_113_1_1_1_fu_644_p1 = $unsigned(tmp_112_1_1_1_cast_fu_641_p1);

assign tmp_113_1_1_2_fu_652_p1 = $unsigned(tmp_112_1_1_2_cast_fu_649_p1);

assign tmp_113_1_2_1_fu_688_p1 = tmp_112_1_2_1_reg_1287;

assign tmp_113_1_2_2_fu_692_p1 = tmp_112_1_2_2_reg_1292;

assign tmp_114_0_0_1_cast_fu_457_p1 = reg_254;

assign tmp_114_0_1_1_cast_fu_610_p1 = reg_254;

assign tmp_121_0_0_1_fu_592_p4 = {{tmp_119_0_0_1_reg_1302[29:14]}};

assign tmp_121_0_0_2_fu_657_p1 = $signed(tmp_61_reg_1337);

assign tmp_121_0_1_1_fu_722_p4 = {{tmp_119_0_1_1_reg_1423[29:14]}};

assign tmp_121_0_1_2_fu_731_p1 = $signed(tmp_62_reg_1428);

assign tmp_121_0_1_fu_660_p4 = {{tmp_119_0_1_reg_1342[29:14]}};

assign tmp_121_0_2_1_fu_746_p1 = $signed(tmp_64_fu_737_p4);

assign tmp_121_0_2_2_fu_759_p1 = $signed(tmp_65_fu_750_p4);

assign tmp_121_0_2_fu_734_p1 = $signed(tmp_63_reg_1433);

assign tmp_121_1_0_1_fu_816_p4 = {{tmp_119_1_0_1_reg_1478[29:14]}};

assign tmp_121_1_0_2_fu_847_p1 = $signed(tmp_66_reg_1513);

assign tmp_121_1_1_1_fu_850_p4 = {{tmp_119_1_1_1_reg_1518[29:14]}};

assign tmp_121_1_1_2_fu_868_p1 = $signed(tmp_67_fu_859_p4);

assign tmp_121_1_2_1_fu_900_p1 = $signed(tmp_73_fu_891_p4);

assign tmp_121_1_2_2_fu_913_p1 = $signed(tmp_74_fu_904_p4);

assign tmp_121_1_2_fu_888_p1 = $signed(tmp_68_reg_1493);

assign tmp_58_fu_842_p1 = $unsigned(tmp_72_cast_fu_839_p1);

assign tmp_60_fu_305_p1 = tmp44_fu_299_p2[9:0];

assign tmp_64_fu_737_p4 = {{tmp_119_0_2_1_reg_1438[28:14]}};

assign tmp_65_fu_750_p4 = {{tmp_119_0_2_2_reg_1443[28:14]}};

assign tmp_67_fu_859_p4 = {{tmp_119_1_1_2_reg_1523[27:14]}};

assign tmp_69_fu_347_p2 = (tmp_71_cast_fu_343_p1 + tmp44_reg_1062);

assign tmp_70_fu_361_p1 = $unsigned(tmp_112_0_cast_fu_358_p1);

assign tmp_71_cast1_fu_421_p1 = out_w_reg_237;

assign tmp_71_cast_fu_343_p1 = out_w_reg_237;

assign tmp_72_cast_fu_839_p1 = $signed(tmp_s_reg_1174);

assign tmp_72_fu_583_p4 = {{tmp_71_reg_1297[29:14]}};

assign tmp_73_fu_891_p4 = {{tmp_119_1_2_1_reg_1533[28:14]}};

assign tmp_74_fu_904_p4 = {{tmp_119_1_2_2_reg_1538[28:14]}};

assign tmp_fu_675_p2 = (tmp1_reg_1368 + tmp2_fu_669_p2);

assign tmp_s_fu_413_p2 = (tmp_71_cast_reg_1104 + tmp7_reg_1077);

always @ (posedge ap_clk) begin
    tmp44_reg_1062[0] <= 1'b0;
    tmp_60_reg_1072[0] <= 1'b0;
    tmp7_reg_1077[1:0] <= 2'b00;
    tmp5_0_1_reg_1083[0] <= 1'b0;
    tmp5_0_2_cast_reg_1092[0] <= 1'b0;
    tmp_71_cast_reg_1104[10:5] <= 6'b000000;
    tmp_111_0_0_s_reg_1127[0] <= 1'b1;
    tmp_111_0_0_cast_reg_1133[0] <= 1'b1;
    tmp_111_0_0_cast_reg_1133[10:5] <= 6'b000000;
    tmp_112_0_0_1_reg_1139[0] <= 1'b1;
    tmp_111_0_0_2_cast_reg_1144[10:5] <= 6'b000000;
    tmp_112_0_1_1_reg_1169[0] <= 1'b1;
    tmp_105_1_reg_1179[0] <= 1'b1;
    tmp_112_0_2_1_reg_1230[0] <= 1'b1;
    tmp_111_1_0_1_reg_1240[0] <= 1'b0;
    tmp_111_1_0_2_reg_1246[0] <= 1'b1;
    tmp_112_1_0_1_reg_1267[0] <= 1'b0;
    tmp_112_1_0_2_reg_1272[0] <= 1'b1;
    tmp_112_1_1_1_reg_1277[0] <= 1'b0;
    tmp_112_1_1_2_reg_1282[0] <= 1'b1;
    tmp_112_1_2_1_reg_1287[0] <= 1'b0;
    tmp_112_1_2_2_reg_1292[0] <= 1'b1;
end

endmodule //depthwise_conv2d_fix
