// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module depthwise_conv2d_fix_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_height,
        input_width,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_height,
        output_width,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        bias_address0,
        bias_ce0,
        bias_q0,
        kernel_0_address0,
        kernel_0_ce0,
        kernel_0_q0,
        kernel_0_address1,
        kernel_0_ce1,
        kernel_0_q1
);

parameter    ap_ST_fsm_state1 = 63'd1;
parameter    ap_ST_fsm_state2 = 63'd2;
parameter    ap_ST_fsm_state3 = 63'd4;
parameter    ap_ST_fsm_state4 = 63'd8;
parameter    ap_ST_fsm_state5 = 63'd16;
parameter    ap_ST_fsm_state6 = 63'd32;
parameter    ap_ST_fsm_state7 = 63'd64;
parameter    ap_ST_fsm_state8 = 63'd128;
parameter    ap_ST_fsm_state9 = 63'd256;
parameter    ap_ST_fsm_state10 = 63'd512;
parameter    ap_ST_fsm_state11 = 63'd1024;
parameter    ap_ST_fsm_state12 = 63'd2048;
parameter    ap_ST_fsm_state13 = 63'd4096;
parameter    ap_ST_fsm_state14 = 63'd8192;
parameter    ap_ST_fsm_state15 = 63'd16384;
parameter    ap_ST_fsm_state16 = 63'd32768;
parameter    ap_ST_fsm_state17 = 63'd65536;
parameter    ap_ST_fsm_state18 = 63'd131072;
parameter    ap_ST_fsm_state19 = 63'd262144;
parameter    ap_ST_fsm_state20 = 63'd524288;
parameter    ap_ST_fsm_state21 = 63'd1048576;
parameter    ap_ST_fsm_state22 = 63'd2097152;
parameter    ap_ST_fsm_state23 = 63'd4194304;
parameter    ap_ST_fsm_state24 = 63'd8388608;
parameter    ap_ST_fsm_state25 = 63'd16777216;
parameter    ap_ST_fsm_state26 = 63'd33554432;
parameter    ap_ST_fsm_state27 = 63'd67108864;
parameter    ap_ST_fsm_state28 = 63'd134217728;
parameter    ap_ST_fsm_state29 = 63'd268435456;
parameter    ap_ST_fsm_state30 = 63'd536870912;
parameter    ap_ST_fsm_state31 = 63'd1073741824;
parameter    ap_ST_fsm_state32 = 63'd2147483648;
parameter    ap_ST_fsm_state33 = 63'd4294967296;
parameter    ap_ST_fsm_state34 = 63'd8589934592;
parameter    ap_ST_fsm_state35 = 63'd17179869184;
parameter    ap_ST_fsm_state36 = 63'd34359738368;
parameter    ap_ST_fsm_state37 = 63'd68719476736;
parameter    ap_ST_fsm_state38 = 63'd137438953472;
parameter    ap_ST_fsm_state39 = 63'd274877906944;
parameter    ap_ST_fsm_state40 = 63'd549755813888;
parameter    ap_ST_fsm_state41 = 63'd1099511627776;
parameter    ap_ST_fsm_state42 = 63'd2199023255552;
parameter    ap_ST_fsm_state43 = 63'd4398046511104;
parameter    ap_ST_fsm_state44 = 63'd8796093022208;
parameter    ap_ST_fsm_state45 = 63'd17592186044416;
parameter    ap_ST_fsm_state46 = 63'd35184372088832;
parameter    ap_ST_fsm_state47 = 63'd70368744177664;
parameter    ap_ST_fsm_state48 = 63'd140737488355328;
parameter    ap_ST_fsm_state49 = 63'd281474976710656;
parameter    ap_ST_fsm_state50 = 63'd562949953421312;
parameter    ap_ST_fsm_state51 = 63'd1125899906842624;
parameter    ap_ST_fsm_state52 = 63'd2251799813685248;
parameter    ap_ST_fsm_state53 = 63'd4503599627370496;
parameter    ap_ST_fsm_state54 = 63'd9007199254740992;
parameter    ap_ST_fsm_state55 = 63'd18014398509481984;
parameter    ap_ST_fsm_state56 = 63'd36028797018963968;
parameter    ap_ST_fsm_state57 = 63'd72057594037927936;
parameter    ap_ST_fsm_state58 = 63'd144115188075855872;
parameter    ap_ST_fsm_state59 = 63'd288230376151711744;
parameter    ap_ST_fsm_state60 = 63'd576460752303423488;
parameter    ap_ST_fsm_state61 = 63'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 63'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 63'd4611686018427387904;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [6:0] input_height;
input  [5:0] input_width;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
input  [5:0] output_height;
input  [5:0] output_width;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;
output  [3:0] bias_address0;
output   bias_ce0;
input  [15:0] bias_q0;
output  [7:0] kernel_0_address0;
output   kernel_0_ce0;
input  [15:0] kernel_0_q0;
output  [7:0] kernel_0_address1;
output   kernel_0_ce1;
input  [15:0] kernel_0_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg[13:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[15:0] output_r_d0;
reg bias_ce0;
reg[7:0] kernel_0_address0;
reg kernel_0_ce0;
reg[7:0] kernel_0_address1;
reg kernel_0_ce1;

(* fsm_encoding = "none" *) reg   [62:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [15:0] grp_fu_514_p2;
reg   [16:0] reg_482;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond4_fu_6791_p2;
wire   [16:0] grp_fu_517_p2;
wire    ap_CS_fsm_state50;
wire   [16:0] grp_fu_502_p2;
wire    ap_CS_fsm_state51;
wire   [16:0] grp_fu_515_p2;
wire    ap_CS_fsm_state58;
wire   [16:0] grp_fu_510_p2;
wire    ap_CS_fsm_state59;
wire   [14:0] tmp7_fu_4942_p2;
wire    ap_CS_fsm_state5;
wire   [8:0] next_mul3_fu_509_p2;
reg   [8:0] next_mul3_reg_1005;
wire   [8:0] next_mul_fu_497_p2;
reg   [8:0] next_mul_reg_1010;
wire   [4:0] out_d_4_fu_495_p2;
reg   [4:0] out_d_4_reg_1015;
wire   [4:0] out_h_4_fu_518_p2;
reg   [4:0] out_h_4_reg_2125;
wire    ap_CS_fsm_state4;
wire   [16:0] grp_fu_499_p2;
reg   [8:0] tmp6_reg_2128;
wire   [0:0] exitcond3_fu_6873_p2;
reg   [16:0] reg_2131;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [16:0] grp_fu_512_p2;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [16:0] grp_fu_496_p2;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
reg   [0:0] exitcond2_1_reg_7575;
wire    ap_CS_fsm_state25;
wire   [15:0] grp_fu_501_p2;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire   [15:0] grp_fu_511_p2;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state49;
reg   [0:0] exitcond2_reg_7539;
reg   [0:0] exitcond2_2_reg_7849;
reg   [0:0] exitcond2_3_reg_7938;
wire   [16:0] grp_fu_506_p2;
reg   [8:0] tmp_0_2_reg_2134;
reg   [16:0] reg_2137;
wire   [16:0] grp_fu_504_p2;
wire    ap_CS_fsm_state24;
wire   [16:0] grp_fu_508_p2;
wire   [16:0] grp_fu_513_p2;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire   [16:0] grp_fu_521_p2;
reg   [16:0] reg_2140;
wire   [16:0] grp_fu_516_p2;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state23;
wire   [16:0] grp_fu_494_p2;
reg   [16:0] reg_2143;
wire    ap_CS_fsm_state7;
wire   [0:0] exitcond2_fu_6920_p2;
wire   [16:0] grp_fu_498_p2;
wire   [16:0] grp_fu_507_p2;
wire   [16:0] grp_fu_522_p2;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state57;
reg   [16:0] reg_2146;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state62;
reg   [15:0] buffer_6_2_2_2_reg_4297;
wire    ap_CS_fsm_state48;
reg   [16:0] tmp_105_2_reg_4302;
reg  signed [15:0] reg_6681;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state54;
reg  signed [15:0] reg_6686;
wire    ap_CS_fsm_state26;
reg   [15:0] reg_6691;
reg  signed [15:0] reg_6696;
reg   [15:0] reg_6701;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state56;
reg   [15:0] reg_6707;
reg   [15:0] reg_6713;
reg   [15:0] reg_6719;
reg   [15:0] reg_6725;
reg   [15:0] reg_6731;
reg   [15:0] reg_6737;
wire    ap_CS_fsm_state29;
reg   [15:0] reg_6743;
reg   [15:0] reg_6749;
reg   [15:0] reg_6755;
reg   [15:0] reg_6761;
wire   [15:0] output_width_cast_fu_6771_p1;
reg   [15:0] output_width_cast_reg_7412;
wire   [8:0] tmp_cast_fu_6775_p1;
reg   [8:0] tmp_cast_reg_7420;
wire   [15:0] tmp_62_cast1_cast_fu_6779_p1;
reg   [15:0] tmp_62_cast1_cast_reg_7425;
wire   [8:0] tmp_63_cast_fu_6783_p1;
reg   [8:0] tmp_63_cast_reg_7432;
wire   [14:0] tmp_64_cast_cast_fu_6787_p1;
reg   [14:0] tmp_64_cast_cast_reg_7437;
reg   [3:0] bias_addr_reg_7445;
reg   [7:0] kernel_0_addr_reg_7450;
wire    ap_CS_fsm_state3;
reg   [7:0] kernel_0_addr_1_reg_7455;
reg   [7:0] kernel_0_addr_2_reg_7460;
reg   [7:0] kernel_0_addr_3_reg_7465;
reg   [7:0] kernel_0_addr_4_reg_7470;
reg   [7:0] kernel_0_addr_5_reg_7475;
reg   [7:0] kernel_0_addr_6_reg_7480;
reg   [7:0] kernel_0_addr_7_reg_7485;
reg   [7:0] kernel_0_addr_8_reg_7490;
wire   [16:0] tmp41_cast_fu_6894_p1;
reg   [16:0] tmp41_cast_reg_7498;
wire    ap_CS_fsm_state6;
wire   [16:0] tmp5_0_1_cast_fu_6903_p1;
reg   [16:0] tmp5_0_1_cast_reg_7509;
wire   [16:0] tmp5_0_2_cast_fu_6912_p1;
reg   [16:0] tmp5_0_2_cast_reg_7520;
wire   [16:0] tmp7_cast_fu_6916_p1;
reg   [16:0] tmp7_cast_reg_7532;
wire   [16:0] tmp_71_cast_fu_6925_p1;
reg   [16:0] tmp_71_cast_reg_7543;
wire   [16:0] tmp_111_0_0_cast_fu_6941_p1;
reg   [16:0] tmp_111_0_0_cast_reg_7554;
wire   [15:0] tmp_111_0_0_3_fu_6946_p2;
reg   [15:0] tmp_111_0_0_3_reg_7562;
wire   [16:0] tmp_111_0_0_3_cast_fu_6952_p1;
reg   [16:0] tmp_111_0_0_3_cast_reg_7567;
wire   [0:0] exitcond2_1_fu_6957_p2;
reg   [15:0] kernel_0_load_reg_7579;
reg  signed [15:0] kernel_0_load_1_reg_7594;
reg   [15:0] kernel_0_load_2_reg_7599;
reg  signed [15:0] kernel_0_load_3_reg_7614;
reg  signed [15:0] input_load_197_reg_7619;
reg  signed [15:0] kernel_0_load_4_reg_7624;
reg  signed [15:0] input_load_198_reg_7639;
wire    ap_CS_fsm_state12;
reg  signed [15:0] kernel_0_load_5_reg_7644;
reg  signed [15:0] input_load_199_reg_7649;
reg  signed [15:0] kernel_0_load_6_reg_7654;
reg   [15:0] input_load_200_reg_7669;
wire    ap_CS_fsm_state13;
reg   [15:0] kernel_0_load_7_reg_7674;
reg  signed [15:0] input_load_201_reg_7679;
reg  signed [15:0] kernel_0_load_8_reg_7684;
wire  signed [29:0] tmp_114_0_0_2_cast_fu_7002_p1;
reg  signed [29:0] tmp_114_0_0_2_cast_reg_7689;
wire    ap_CS_fsm_state14;
wire  signed [29:0] tmp_118_0_0_2_cast_fu_7007_p1;
reg  signed [29:0] tmp_118_0_0_2_cast_reg_7695;
wire  signed [29:0] tmp_118_0_1_cast_fu_7016_p1;
reg  signed [29:0] tmp_118_0_1_cast_reg_7708;
wire  signed [29:0] tmp_114_0_2_1_cast_fu_7020_p1;
reg  signed [29:0] tmp_114_0_2_1_cast_reg_7716;
wire  signed [29:0] tmp_118_0_2_1_cast_fu_7024_p1;
reg  signed [29:0] tmp_118_0_2_1_cast_reg_7722;
wire  signed [29:0] tmp_114_0_2_2_cast_fu_7028_p1;
reg  signed [29:0] tmp_114_0_2_2_cast_reg_7730;
wire  signed [29:0] tmp_118_0_2_2_cast_fu_7032_p1;
reg  signed [29:0] tmp_118_0_2_2_cast_reg_7736;
wire  signed [29:0] tmp_114_0_cast_fu_7036_p1;
wire    ap_CS_fsm_state15;
wire  signed [29:0] tmp_118_0_cast_fu_7041_p1;
reg  signed [29:0] tmp_118_0_cast_reg_7749;
wire  signed [29:0] tmp_114_0_0_1_cast_fu_7045_p1;
reg  signed [29:0] tmp_114_0_0_1_cast_reg_7756;
wire  signed [29:0] tmp_118_0_0_1_cast_fu_7050_p1;
reg  signed [29:0] tmp_118_0_0_1_cast_reg_7762;
wire  signed [29:0] tmp_114_0_1_1_cast_fu_7054_p1;
reg  signed [29:0] tmp_114_0_1_1_cast_reg_7770;
wire  signed [29:0] tmp_118_0_1_1_cast_fu_7058_p1;
reg  signed [29:0] tmp_118_0_1_1_cast_reg_7776;
wire  signed [29:0] tmp_114_0_1_2_cast_fu_7062_p1;
reg  signed [29:0] tmp_114_0_1_2_cast_reg_7784;
wire  signed [29:0] tmp_118_0_1_2_cast_fu_7066_p1;
reg  signed [29:0] tmp_118_0_1_2_cast_reg_7790;
wire  signed [29:0] tmp_118_0_2_cast_fu_7074_p1;
reg  signed [29:0] tmp_118_0_2_cast_reg_7803;
reg   [15:0] tmp_121_0_1_reg_7811;
reg   [15:0] tmp_121_0_2_2_reg_7816;
reg   [15:0] bias_load_reg_7821;
reg   [15:0] tmp_121_0_0_1_reg_7829;
reg   [15:0] tmp_121_0_1_1_reg_7834;
reg   [15:0] tmp_121_0_1_2_reg_7839;
reg   [15:0] tmp_121_0_2_reg_7844;
wire   [0:0] exitcond2_2_fu_7143_p2;
wire   [15:0] tmp_111_1_0_s_fu_7147_p2;
reg   [15:0] tmp_111_1_0_s_reg_7853;
wire   [16:0] tmp_111_1_0_cast_fu_7153_p1;
reg   [16:0] tmp_111_1_0_cast_reg_7858;
wire  signed [29:0] tmp_114_1_0_2_cast_fu_7178_p1;
reg  signed [29:0] tmp_114_1_0_2_cast_reg_7887;
wire  signed [29:0] tmp_114_1_2_1_cast_fu_7198_p1;
wire    ap_CS_fsm_state28;
wire  signed [29:0] tmp_114_1_2_2_cast_fu_7203_p1;
reg  signed [29:0] tmp_114_1_2_2_cast_reg_7914;
wire  signed [29:0] tmp_114_1_1_1_cast_fu_7208_p1;
wire  signed [29:0] tmp_114_1_1_2_cast_fu_7213_p1;
reg  signed [29:0] tmp_114_1_1_2_cast_reg_7926;
reg   [15:0] tmp_121_1_0_1_reg_7933;
wire   [0:0] exitcond2_3_fu_7233_p2;
reg   [15:0] tmp_121_2_reg_7947;
reg   [15:0] tmp_121_2_1_reg_7952;
reg   [15:0] tmp_121_2_2_reg_7962;
wire    ap_CS_fsm_state41;
wire  signed [29:0] tmp_114_2_1_2_cast_fu_7292_p1;
wire    ap_CS_fsm_state42;
reg   [15:0] tmp_121_2_0_2_reg_7987;
wire    ap_CS_fsm_state43;
reg   [15:0] tmp_121_2_0_1_reg_7992;
reg   [15:0] tmp_121_2_2_1_reg_7997;
reg   [15:0] tmp_121_2_2_2_reg_8002;
wire  signed [29:0] tmp_114_3_0_1_cast_fu_7362_p1;
wire  signed [29:0] tmp_114_3_0_2_cast_fu_7367_p1;
wire  signed [29:0] tmp_114_3_1_1_cast_fu_7382_p1;
wire  signed [29:0] tmp_114_3_1_2_cast_fu_7387_p1;
wire  signed [29:0] tmp_114_3_2_1_cast_fu_7392_p1;
wire    ap_CS_fsm_state55;
wire  signed [29:0] tmp_114_3_2_2_cast_fu_7397_p1;
reg   [4:0] out_d_reg_436;
reg   [8:0] phi_mul_reg_447;
reg   [8:0] phi_mul2_reg_459;
reg   [4:0] out_h_reg_471;
wire    ap_CS_fsm_state63;
wire   [63:0] tmp_s_fu_6797_p1;
wire   [63:0] tmp_57_fu_6824_p1;
wire   [63:0] tmp_117_0_0_1_fu_6829_p1;
wire   [63:0] tmp_117_0_0_2_fu_6834_p1;
wire   [63:0] tmp_117_0_1_fu_6839_p1;
wire   [63:0] tmp_117_0_1_1_fu_6844_p1;
wire   [63:0] tmp_117_0_1_2_fu_6849_p1;
wire   [63:0] tmp_117_0_2_fu_6854_p1;
wire   [63:0] tmp_117_0_2_1_fu_6859_p1;
wire   [63:0] tmp_117_0_2_2_fu_6864_p1;
wire   [63:0] tmp_59_fu_6930_p1;
wire   [63:0] tmp_113_0_0_1_fu_6962_p1;
wire   [63:0] tmp_113_0_0_2_fu_6967_p1;
wire   [63:0] tmp_113_0_1_fu_6972_p1;
wire   [63:0] tmp_113_0_1_1_fu_6977_p1;
wire   [63:0] tmp_113_0_1_2_fu_6982_p1;
wire   [63:0] tmp_113_0_2_fu_6987_p1;
wire   [63:0] tmp_113_0_2_1_fu_6992_p1;
wire   [63:0] tmp_113_0_2_2_fu_6997_p1;
wire   [63:0] tmp_62_fu_7138_p1;
wire   [63:0] tmp_113_1_0_1_fu_7158_p1;
wire   [63:0] tmp_113_1_0_2_fu_7163_p1;
wire   [63:0] tmp_113_1_1_1_fu_7168_p1;
wire   [63:0] tmp_113_1_1_2_fu_7173_p1;
wire   [63:0] tmp_113_1_2_1_fu_7183_p1;
wire   [63:0] tmp_113_1_2_2_fu_7188_p1;
wire   [63:0] tmp_106_1_fu_7228_p1;
wire   [63:0] tmp_113_2_0_2_fu_7237_p1;
wire   [63:0] tmp_113_2_1_2_fu_7262_p1;
wire   [63:0] tmp_113_2_2_2_fu_7277_p1;
wire   [63:0] tmp_106_2_fu_7337_p1;
wire   [63:0] tmp_113_3_0_1_fu_7342_p1;
wire   [63:0] tmp_113_3_0_2_fu_7347_p1;
wire   [63:0] tmp_113_3_1_1_fu_7352_p1;
wire   [63:0] tmp_113_3_1_2_fu_7357_p1;
wire   [63:0] tmp_113_3_2_1_fu_7372_p1;
wire   [63:0] tmp_113_3_2_2_fu_7377_p1;
wire   [63:0] tmp_106_3_fu_7402_p1;
reg   [16:0] grp_fu_494_p0;
reg   [16:0] grp_fu_494_p1;
reg   [16:0] grp_fu_496_p0;
reg   [16:0] grp_fu_496_p1;
reg   [16:0] grp_fu_498_p0;
reg   [16:0] grp_fu_498_p1;
reg   [16:0] grp_fu_499_p0;
wire   [8:0] tmp_70_cast_fu_6878_p1;
reg   [16:0] grp_fu_499_p1;
wire   [7:0] tmp_116_0_0_2_fu_500_p1;
reg   [15:0] grp_fu_501_p0;
reg   [15:0] grp_fu_501_p1;
reg   [16:0] grp_fu_502_p0;
reg   [16:0] grp_fu_502_p1;
wire   [7:0] tmp_116_0_2_2_fu_503_p1;
reg   [16:0] grp_fu_504_p0;
reg   [16:0] grp_fu_504_p1;
wire   [7:0] tmp_116_0_0_1_fu_505_p1;
reg   [16:0] grp_fu_506_p1;
reg   [16:0] grp_fu_507_p0;
reg   [16:0] grp_fu_507_p1;
reg   [16:0] grp_fu_508_p0;
reg   [16:0] grp_fu_508_p1;
reg   [16:0] grp_fu_510_p0;
reg   [16:0] grp_fu_510_p1;
reg   [15:0] grp_fu_511_p0;
reg   [15:0] grp_fu_511_p1;
reg   [16:0] grp_fu_512_p0;
reg   [16:0] grp_fu_512_p1;
reg   [16:0] grp_fu_513_p0;
reg   [16:0] grp_fu_513_p1;
reg   [15:0] grp_fu_514_p0;
wire   [7:0] tmp_66_cast2_fu_6802_p1;
reg   [15:0] grp_fu_514_p1;
wire   [7:0] p_shl_cast_fu_6819_p1;
reg   [16:0] grp_fu_515_p0;
reg   [16:0] grp_fu_515_p1;
reg   [16:0] grp_fu_516_p0;
reg   [16:0] grp_fu_516_p1;
reg   [16:0] grp_fu_517_p0;
reg   [16:0] grp_fu_517_p1;
wire   [7:0] tmp_116_0_1_fu_519_p1;
wire   [7:0] tmp_116_0_1_2_fu_520_p1;
reg   [16:0] grp_fu_521_p0;
reg   [16:0] grp_fu_521_p1;
reg   [16:0] grp_fu_522_p0;
reg   [16:0] grp_fu_522_p1;
reg  signed [15:0] grp_fu_4935_p0;
reg  signed [15:0] grp_fu_4935_p1;
wire  signed [15:0] grp_fu_4937_p0;
reg  signed [15:0] grp_fu_4937_p1;
wire  signed [15:0] grp_fu_4938_p0;
reg  signed [15:0] grp_fu_4939_p0;
reg  signed [15:0] grp_fu_4939_p1;
wire   [6:0] tmp5_0_2_fu_4940_p0;
wire   [8:0] tmp5_0_2_fu_4940_p1;
reg  signed [15:0] grp_fu_4941_p0;
reg  signed [15:0] grp_fu_4941_p1;
wire   [5:0] tmp7_fu_4942_p0;
wire   [8:0] tmp7_fu_4942_p1;
wire   [6:0] tmp5_0_1_fu_4943_p0;
wire   [8:0] tmp5_0_1_fu_4943_p1;
reg  signed [15:0] grp_fu_4945_p0;
reg  signed [15:0] grp_fu_4945_p1;
reg  signed [15:0] grp_fu_4946_p0;
reg  signed [15:0] grp_fu_4946_p1;
reg  signed [15:0] grp_fu_4947_p0;
reg  signed [15:0] grp_fu_4947_p1;
wire  signed [15:0] grp_fu_4948_p0;
wire  signed [15:0] grp_fu_4948_p1;
reg  signed [15:0] grp_fu_4950_p0;
reg  signed [15:0] grp_fu_4950_p1;
reg  signed [15:0] grp_fu_4951_p0;
reg  signed [15:0] grp_fu_4951_p1;
wire   [6:0] tmp37_fu_4952_p0;
wire   [8:0] tmp37_fu_4952_p1;
reg  signed [15:0] grp_fu_4953_p0;
reg  signed [15:0] grp_fu_4953_p1;
wire  signed [15:0] grp_fu_4954_p0;
wire  signed [15:0] grp_fu_4955_p0;
wire  signed [15:0] grp_fu_4955_p1;
wire  signed [15:0] grp_fu_4956_p0;
wire  signed [15:0] grp_fu_4956_p1;
wire  signed [15:0] grp_fu_4957_p0;
wire  signed [15:0] grp_fu_4957_p1;
wire  signed [15:0] grp_fu_4958_p0;
wire  signed [15:0] grp_fu_4959_p0;
wire  signed [15:0] grp_fu_4959_p1;
reg  signed [15:0] grp_fu_4962_p0;
reg  signed [15:0] grp_fu_4962_p1;
wire   [29:0] grp_fu_4950_p2;
wire   [29:0] grp_fu_4941_p2;
wire   [29:0] grp_fu_4946_p2;
wire   [29:0] grp_fu_4937_p2;
wire   [29:0] grp_fu_4962_p2;
wire   [29:0] grp_fu_4935_p2;
wire   [29:0] grp_fu_4951_p2;
wire   [29:0] grp_fu_4945_p2;
wire   [29:0] grp_fu_4939_p2;
wire   [29:0] grp_fu_4953_p2;
wire   [29:0] grp_fu_4947_p2;
wire  signed [6:0] input_width_cast_fu_6767_p1;
wire   [3:0] tmp_35_fu_6807_p1;
wire   [6:0] p_shl_fu_6811_p3;
wire   [7:0] tmp_57_fu_6824_p0;
wire   [7:0] tmp_116_0_0_1_fu_505_p2;
wire   [7:0] tmp_116_0_0_2_fu_500_p2;
wire   [7:0] tmp_116_0_1_fu_519_p2;
wire   [7:0] tmp_117_0_1_1_fu_6844_p0;
wire   [7:0] tmp_116_0_1_2_fu_520_p2;
wire   [7:0] tmp_117_0_2_fu_6854_p0;
wire   [7:0] tmp_117_0_2_1_fu_6859_p0;
wire   [7:0] tmp_116_0_2_2_fu_503_p2;
wire   [5:0] out_h_cast_fu_6869_p1;
wire   [8:0] tmp_0_cast_cast_fu_6889_p0;
wire   [15:0] tmp37_fu_4952_p2;
wire   [8:0] tmp_0_1_cast_cast_fu_6898_p0;
wire   [15:0] tmp5_0_1_fu_4943_p2;
wire   [15:0] tmp5_0_2_fu_4940_p2;
wire   [14:0] tmp7_cast_fu_6916_p0;
wire   [15:0] exitcond2_fu_6920_p0;
wire   [15:0] tmp_71_cast_fu_6925_p0;
wire   [15:0] tmp_111_0_0_s_fu_6935_p0;
wire   [15:0] tmp_111_0_0_s_fu_6935_p2;
wire   [15:0] tmp_111_0_0_3_fu_6946_p0;
wire   [29:0] grp_fu_4949_p2;
wire   [29:0] grp_fu_4963_p2;
wire   [29:0] grp_fu_4944_p2;
wire   [29:0] grp_fu_4961_p2;
wire   [29:0] grp_fu_4936_p2;
wire   [29:0] grp_fu_4960_p2;
wire   [15:0] tmp_111_1_0_s_fu_7147_p0;
wire   [29:0] grp_fu_4958_p2;
wire   [29:0] grp_fu_4957_p2;
wire   [29:0] grp_fu_4948_p2;
wire   [29:0] grp_fu_4956_p2;
wire   [29:0] grp_fu_4938_p2;
wire   [29:0] grp_fu_4959_p2;
wire   [29:0] grp_fu_4955_p2;
wire   [29:0] grp_fu_4954_p2;
reg   [62:0] ap_NS_fsm;
wire   [15:0] tmp37_fu_4952_p10;
wire   [15:0] tmp5_0_1_fu_4943_p10;
wire   [15:0] tmp5_0_2_fu_4940_p10;
wire   [14:0] tmp7_fu_4942_p10;
wire   [15:0] tmp_117_0_1_1_fu_6844_p00;
wire   [16:0] tmp_117_0_2_1_fu_6859_p00;
wire   [15:0] tmp_117_0_2_fu_6854_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 63'd1;
end

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4935_p0),
    .din1(grp_fu_4935_p1),
    .ce(1'b1),
    .dout(grp_fu_4935_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_0_load_5_reg_7644),
    .din1(input_load_198_reg_7639),
    .ce(1'b1),
    .dout(grp_fu_4936_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4937_p0),
    .din1(grp_fu_4937_p1),
    .ce(1'b1),
    .dout(grp_fu_4937_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4938_p0),
    .din1(reg_6681),
    .ce(1'b1),
    .dout(grp_fu_4938_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4939_p0),
    .din1(grp_fu_4939_p1),
    .ce(1'b1),
    .dout(grp_fu_4939_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4941_p0),
    .din1(grp_fu_4941_p1),
    .ce(1'b1),
    .dout(grp_fu_4941_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_0_load_1_reg_7594),
    .din1(reg_6686),
    .ce(1'b1),
    .dout(grp_fu_4944_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4945_p0),
    .din1(grp_fu_4945_p1),
    .ce(1'b1),
    .dout(grp_fu_4945_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4946_p0),
    .din1(grp_fu_4946_p1),
    .ce(1'b1),
    .dout(grp_fu_4946_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4947_p0),
    .din1(grp_fu_4947_p1),
    .ce(1'b1),
    .dout(grp_fu_4947_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4948_p0),
    .din1(grp_fu_4948_p1),
    .ce(1'b1),
    .dout(grp_fu_4948_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_0_load_3_reg_7614),
    .din1(reg_6696),
    .ce(1'b1),
    .dout(grp_fu_4949_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4950_p0),
    .din1(grp_fu_4950_p1),
    .ce(1'b1),
    .dout(grp_fu_4950_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4951_p0),
    .din1(grp_fu_4951_p1),
    .ce(1'b1),
    .dout(grp_fu_4951_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4953_p0),
    .din1(grp_fu_4953_p1),
    .ce(1'b1),
    .dout(grp_fu_4953_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4954_p0),
    .din1(reg_6686),
    .ce(1'b1),
    .dout(grp_fu_4954_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4955_p0),
    .din1(grp_fu_4955_p1),
    .ce(1'b1),
    .dout(grp_fu_4955_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4956_p0),
    .din1(grp_fu_4956_p1),
    .ce(1'b1),
    .dout(grp_fu_4956_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4957_p0),
    .din1(grp_fu_4957_p1),
    .ce(1'b1),
    .dout(grp_fu_4957_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4958_p0),
    .din1(reg_6681),
    .ce(1'b1),
    .dout(grp_fu_4958_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4959_p0),
    .din1(grp_fu_4959_p1),
    .ce(1'b1),
    .dout(grp_fu_4959_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_0_load_6_reg_7654),
    .din1(input_load_199_reg_7649),
    .ce(1'b1),
    .dout(grp_fu_4960_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_0_load_4_reg_7624),
    .din1(input_load_197_reg_7619),
    .ce(1'b1),
    .dout(grp_fu_4961_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4962_p0),
    .din1(grp_fu_4962_p1),
    .ce(1'b1),
    .dout(grp_fu_4962_p2)
);

network_mul_16s_16s_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_16s_16s_30_4_1_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(kernel_0_load_8_reg_7684),
    .din1(input_load_201_reg_7679),
    .ce(1'b1),
    .dout(grp_fu_4963_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_fu_6873_p2 == 1'd1))) begin
        out_d_reg_436 <= out_d_4_reg_1015;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_d_reg_436 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_h_reg_471 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state49) & ((exitcond2_reg_7539 == 1'd1) | ((exitcond2_1_reg_7575 == 1'd1) | ((exitcond2_3_reg_7938 == 1'd1) | (exitcond2_2_reg_7849 == 1'd1)))))) begin
        out_h_reg_471 <= out_h_4_reg_2125;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_fu_6873_p2 == 1'd1))) begin
        phi_mul2_reg_459 <= next_mul3_reg_1005;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul2_reg_459 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_fu_6873_p2 == 1'd1))) begin
        phi_mul_reg_447 <= next_mul_reg_1010;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_447 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state32))) begin
        reg_2131 <= grp_fu_511_p2;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_2131 <= grp_fu_514_p2;
    end else if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_2131 <= grp_fu_501_p2;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_2131 <= grp_fu_499_p2;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state18) | ((1'b1 == ap_CS_fsm_state22) & (exitcond2_1_reg_7575 == 1'd0)))) begin
        reg_2131 <= grp_fu_496_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state49) & (exitcond2_3_reg_7938 == 1'd0) & (exitcond2_2_reg_7849 == 1'd0) & (exitcond2_reg_7539 == 1'd0) & (exitcond2_1_reg_7575 == 1'd0)))) begin
        reg_2131 <= grp_fu_510_p2;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_2131 <= grp_fu_512_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_2131 <= grp_fu_515_p2;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_2131 <= grp_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        reg_2137 <= grp_fu_499_p2;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond2_3_reg_7938 == 1'd0) & (exitcond2_2_reg_7849 == 1'd0) & (exitcond2_reg_7539 == 1'd0) & (exitcond2_1_reg_7575 == 1'd0))) begin
        reg_2137 <= grp_fu_496_p2;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_2137 <= grp_fu_513_p2;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_2137 <= grp_fu_508_p2;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state51))) begin
        reg_2137 <= grp_fu_504_p2;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | ((1'b1 == ap_CS_fsm_state4) & (exitcond3_fu_6873_p2 == 1'd0)))) begin
        reg_2137 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) | ((1'b1 == ap_CS_fsm_state49) & (exitcond2_3_reg_7938 == 1'd0) & (exitcond2_2_reg_7849 == 1'd0) & (exitcond2_reg_7539 == 1'd0) & (exitcond2_1_reg_7575 == 1'd0)))) begin
        reg_2140 <= grp_fu_494_p2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        reg_2140 <= grp_fu_515_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state38))) begin
        reg_2140 <= grp_fu_512_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_2140 <= grp_fu_516_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_2140 <= grp_fu_510_p2;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_2140 <= grp_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        reg_2143 <= grp_fu_511_p2;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state51) | ((1'b1 == ap_CS_fsm_state36) & (exitcond2_2_reg_7849 == 1'd0)))) begin
        reg_2143 <= grp_fu_522_p2;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state49) & (exitcond2_3_reg_7938 == 1'd0) & (exitcond2_2_reg_7849 == 1'd0) & (exitcond2_reg_7539 == 1'd0) & (exitcond2_1_reg_7575 == 1'd0)))) begin
        reg_2143 <= grp_fu_507_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_2143 <= grp_fu_494_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_2143 <= grp_fu_498_p2;
    end else if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state46) | ((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_6920_p2 == 1'd0)))) begin
        reg_2143 <= grp_fu_516_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        reg_2146 <= grp_fu_501_p2;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state51))) begin
        reg_2146 <= grp_fu_506_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state50))) begin
        reg_2146 <= grp_fu_513_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_482 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        reg_482 <= reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_482 <= tmp7_fu_4942_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        reg_482 <= grp_fu_510_p2;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        reg_482 <= grp_fu_515_p2;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        reg_482 <= grp_fu_502_p2;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        reg_482 <= grp_fu_517_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_6791_p2 == 1'd0))) begin
        reg_482 <= grp_fu_514_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_6681 <= input_r_q1;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_6681 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state53))) begin
        reg_6686 <= input_r_q1;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_6686 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_6691 <= input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_6691 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_6696 <= input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_6696 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_6791_p2 == 1'd0))) begin
        bias_addr_reg_7445 <= tmp_s_fu_6797_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        bias_load_reg_7821 <= bias_q0;
        tmp_121_0_0_1_reg_7829 <= {{grp_fu_4944_p2[29:14]}};
        tmp_121_0_1_1_reg_7834 <= {{grp_fu_4961_p2[29:14]}};
        tmp_121_0_1_2_reg_7839 <= {{grp_fu_4936_p2[29:14]}};
        tmp_121_0_2_reg_7844 <= {{grp_fu_4960_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        buffer_6_2_2_2_reg_4297 <= grp_fu_498_p2;
        tmp_105_2_reg_4302 <= grp_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        exitcond2_1_reg_7575 <= exitcond2_1_fu_6957_p2;
        tmp_111_0_0_3_cast_reg_7567[0] <= tmp_111_0_0_3_cast_fu_6952_p1[0];
tmp_111_0_0_3_cast_reg_7567[15 : 2] <= tmp_111_0_0_3_cast_fu_6952_p1[15 : 2];
        tmp_111_0_0_3_reg_7562[0] <= tmp_111_0_0_3_fu_6946_p2[0];
tmp_111_0_0_3_reg_7562[15 : 2] <= tmp_111_0_0_3_fu_6946_p2[15 : 2];
        tmp_111_0_0_cast_reg_7554[15 : 1] <= tmp_111_0_0_cast_fu_6941_p1[15 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (exitcond2_1_reg_7575 == 1'd0))) begin
        exitcond2_2_reg_7849 <= exitcond2_2_fu_7143_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (exitcond2_2_reg_7849 == 1'd0))) begin
        exitcond2_3_reg_7938 <= exitcond2_3_fu_7233_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        exitcond2_reg_7539 <= exitcond2_fu_6920_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        input_load_197_reg_7619 <= input_r_q0;
        kernel_0_load_3_reg_7614 <= kernel_0_q1;
        kernel_0_load_4_reg_7624 <= kernel_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        input_load_198_reg_7639 <= input_r_q1;
        input_load_199_reg_7649 <= input_r_q0;
        kernel_0_load_5_reg_7644 <= kernel_0_q1;
        kernel_0_load_6_reg_7654 <= kernel_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        input_load_200_reg_7669 <= input_r_q1;
        input_load_201_reg_7679 <= input_r_q0;
        kernel_0_load_7_reg_7674 <= kernel_0_q1;
        kernel_0_load_8_reg_7684 <= kernel_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_0_addr_1_reg_7455 <= tmp_117_0_0_1_fu_6829_p1;
        kernel_0_addr_2_reg_7460 <= tmp_117_0_0_2_fu_6834_p1;
        kernel_0_addr_3_reg_7465 <= tmp_117_0_1_fu_6839_p1;
        kernel_0_addr_4_reg_7470 <= tmp_117_0_1_1_fu_6844_p1;
        kernel_0_addr_5_reg_7475 <= tmp_117_0_1_2_fu_6849_p1;
        kernel_0_addr_6_reg_7480 <= tmp_117_0_2_fu_6854_p1;
        kernel_0_addr_7_reg_7485 <= tmp_117_0_2_1_fu_6859_p1;
        kernel_0_addr_8_reg_7490 <= tmp_117_0_2_2_fu_6864_p1;
        kernel_0_addr_reg_7450 <= tmp_57_fu_6824_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        kernel_0_load_1_reg_7594 <= kernel_0_q0;
        kernel_0_load_2_reg_7599 <= kernel_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernel_0_load_reg_7579 <= kernel_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        next_mul3_reg_1005 <= next_mul3_fu_509_p2;
        next_mul_reg_1010 <= next_mul_fu_497_p2;
        out_d_4_reg_1015 <= out_d_4_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_h_4_reg_2125 <= out_h_4_fu_518_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        output_width_cast_reg_7412[5 : 0] <= output_width_cast_fu_6771_p1[5 : 0];
        tmp_62_cast1_cast_reg_7425[6 : 0] <= tmp_62_cast1_cast_fu_6779_p1[6 : 0];
        tmp_63_cast_reg_7432[5 : 0] <= tmp_63_cast_fu_6783_p1[5 : 0];
        tmp_64_cast_cast_reg_7437[5 : 0] <= tmp_64_cast_cast_fu_6787_p1[5 : 0];
        tmp_cast_reg_7420[6 : 0] <= tmp_cast_fu_6775_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_6701 <= {{grp_fu_4950_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state45))) begin
        reg_6707 <= {{grp_fu_4941_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_6713 <= {{grp_fu_4946_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_6719 <= {{grp_fu_4937_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_6725 <= {{grp_fu_4962_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_6731 <= {{grp_fu_4935_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state57))) begin
        reg_6737 <= {{grp_fu_4951_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_6743 <= {{grp_fu_4945_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state31))) begin
        reg_6749 <= {{grp_fu_4939_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_6755 <= {{grp_fu_4953_p2[29:14]}};
        reg_6761 <= {{grp_fu_4947_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp41_cast_reg_7498[15 : 0] <= tmp41_cast_fu_6894_p1[15 : 0];
        tmp5_0_1_cast_reg_7509[15 : 0] <= tmp5_0_1_cast_fu_6903_p1[15 : 0];
        tmp5_0_2_cast_reg_7520[15 : 0] <= tmp5_0_2_cast_fu_6912_p1[15 : 0];
        tmp7_cast_reg_7532[14 : 0] <= tmp7_cast_fu_6916_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_fu_6873_p2 == 1'd0))) begin
        tmp6_reg_2128 <= grp_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_0_2_reg_2134 <= grp_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_111_1_0_cast_reg_7858[15 : 2] <= tmp_111_1_0_cast_fu_7153_p1[15 : 2];
        tmp_111_1_0_s_reg_7853[15 : 2] <= tmp_111_1_0_s_fu_7147_p2[15 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_114_0_0_1_cast_reg_7756 <= tmp_114_0_0_1_cast_fu_7045_p1;
        tmp_114_0_1_1_cast_reg_7770 <= tmp_114_0_1_1_cast_fu_7054_p1;
        tmp_114_0_1_2_cast_reg_7784 <= tmp_114_0_1_2_cast_fu_7062_p1;
        tmp_118_0_0_1_cast_reg_7762 <= tmp_118_0_0_1_cast_fu_7050_p1;
        tmp_118_0_1_1_cast_reg_7776 <= tmp_118_0_1_1_cast_fu_7058_p1;
        tmp_118_0_1_2_cast_reg_7790 <= tmp_118_0_1_2_cast_fu_7066_p1;
        tmp_118_0_2_cast_reg_7803 <= tmp_118_0_2_cast_fu_7074_p1;
        tmp_118_0_cast_reg_7749 <= tmp_118_0_cast_fu_7041_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_114_0_0_2_cast_reg_7689 <= tmp_114_0_0_2_cast_fu_7002_p1;
        tmp_114_0_2_1_cast_reg_7716 <= tmp_114_0_2_1_cast_fu_7020_p1;
        tmp_114_0_2_2_cast_reg_7730 <= tmp_114_0_2_2_cast_fu_7028_p1;
        tmp_118_0_0_2_cast_reg_7695 <= tmp_118_0_0_2_cast_fu_7007_p1;
        tmp_118_0_1_cast_reg_7708 <= tmp_118_0_1_cast_fu_7016_p1;
        tmp_118_0_2_1_cast_reg_7722 <= tmp_118_0_2_1_cast_fu_7024_p1;
        tmp_118_0_2_2_cast_reg_7736 <= tmp_118_0_2_2_cast_fu_7032_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_114_1_0_2_cast_reg_7887 <= tmp_114_1_0_2_cast_fu_7178_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_114_1_1_2_cast_reg_7926 <= tmp_114_1_1_2_cast_fu_7213_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_114_1_2_2_cast_reg_7914 <= tmp_114_1_2_2_cast_fu_7203_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_121_0_1_reg_7811 <= {{grp_fu_4949_p2[29:14]}};
        tmp_121_0_2_2_reg_7816 <= {{grp_fu_4963_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_121_1_0_1_reg_7933 <= {{grp_fu_4958_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_121_2_0_1_reg_7992 <= {{grp_fu_4959_p2[29:14]}};
        tmp_121_2_2_1_reg_7997 <= {{grp_fu_4955_p2[29:14]}};
        tmp_121_2_2_2_reg_8002 <= {{grp_fu_4954_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        tmp_121_2_0_2_reg_7987 <= {{grp_fu_4938_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_121_2_1_reg_7952 <= {{grp_fu_4948_p2[29:14]}};
        tmp_121_2_2_reg_7962 <= {{grp_fu_4956_p2[29:14]}};
        tmp_121_2_reg_7947 <= {{grp_fu_4957_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_6920_p2 == 1'd0))) begin
        tmp_71_cast_reg_7543[15 : 0] <= tmp_71_cast_fu_6925_p1[15 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_6791_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_6791_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_4935_p0 = tmp_118_0_0_2_cast_reg_7695;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_4935_p0 = tmp_118_0_2_cast_reg_7803;
    end else begin
        grp_fu_4935_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_4935_p1 = tmp_114_3_0_2_cast_fu_7367_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_4935_p1 = tmp_114_0_2_1_cast_reg_7716;
    end else begin
        grp_fu_4935_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_4937_p1 = tmp_114_1_0_2_cast_reg_7887;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_4937_p1 = tmp_114_0_0_1_cast_reg_7756;
    end else begin
        grp_fu_4937_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_4939_p0 = tmp_118_0_1_1_cast_reg_7776;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_4939_p0 = tmp_118_0_2_2_cast_reg_7736;
    end else begin
        grp_fu_4939_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_4939_p1 = tmp_114_3_1_1_cast_fu_7382_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_4939_p1 = tmp_114_1_2_2_cast_fu_7203_p1;
    end else begin
        grp_fu_4939_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_4941_p0 = tmp_118_0_1_2_cast_reg_7790;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_4941_p0 = tmp_118_0_2_1_cast_fu_7024_p1;
    end else begin
        grp_fu_4941_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_4941_p1 = tmp_114_2_1_2_cast_fu_7292_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_4941_p1 = tmp_114_0_2_1_cast_fu_7020_p1;
    end else begin
        grp_fu_4941_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_4945_p0 = tmp_118_0_1_cast_reg_7708;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_4945_p0 = tmp_118_0_2_1_cast_reg_7722;
    end else begin
        grp_fu_4945_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_4945_p1 = tmp_114_1_1_2_cast_reg_7926;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_4945_p1 = tmp_114_1_2_1_cast_fu_7198_p1;
    end else begin
        grp_fu_4945_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_4946_p0 = tmp_118_0_2_cast_reg_7803;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_4946_p0 = tmp_118_0_cast_fu_7041_p1;
    end else begin
        grp_fu_4946_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_4946_p1 = tmp_114_1_2_2_cast_reg_7914;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_4946_p1 = tmp_114_0_cast_fu_7036_p1;
    end else begin
        grp_fu_4946_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_4947_p0 = tmp_118_0_2_2_cast_reg_7736;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_4947_p0 = tmp_118_0_1_2_cast_reg_7790;
    end else begin
        grp_fu_4947_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_4947_p1 = tmp_114_3_2_2_cast_fu_7397_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_4947_p1 = tmp_114_1_1_2_cast_fu_7213_p1;
    end else begin
        grp_fu_4947_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_494_p0 = tmp7_cast_reg_7532;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_494_p0 = tmp_121_2_2_1_reg_7997;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_494_p0 = reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_494_p0 = tmp_111_0_0_3_cast_reg_7567;
    end else begin
        grp_fu_494_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_494_p1 = tmp_111_1_0_cast_reg_7858;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_494_p1 = tmp_121_2_2_2_reg_8002;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_494_p1 = tmp41_cast_reg_7498;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_494_p1 = tmp5_0_1_cast_reg_7509;
    end else begin
        grp_fu_494_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_4950_p0 = tmp_118_0_0_1_cast_reg_7762;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_4950_p0 = tmp_118_0_0_2_cast_fu_7007_p1;
    end else begin
        grp_fu_4950_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_4950_p1 = tmp_114_3_0_1_cast_fu_7362_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_4950_p1 = tmp_114_0_0_2_cast_fu_7002_p1;
    end else begin
        grp_fu_4950_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_4951_p0 = tmp_118_0_1_2_cast_reg_7790;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_4951_p0 = tmp_118_0_0_2_cast_reg_7695;
    end else begin
        grp_fu_4951_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_4951_p1 = tmp_114_3_1_2_cast_fu_7387_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_4951_p1 = tmp_114_1_0_2_cast_fu_7178_p1;
    end else begin
        grp_fu_4951_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_4953_p0 = tmp_118_0_2_1_cast_reg_7722;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_4953_p0 = tmp_118_0_1_1_cast_reg_7776;
    end else begin
        grp_fu_4953_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_4953_p1 = tmp_114_3_2_1_cast_fu_7392_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_4953_p1 = tmp_114_1_1_1_cast_fu_7208_p1;
    end else begin
        grp_fu_4953_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_4962_p0 = tmp_118_0_1_1_cast_reg_7776;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_4962_p0 = tmp_118_0_1_cast_reg_7708;
    end else begin
        grp_fu_4962_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_4962_p1 = tmp_114_1_1_2_cast_reg_7926;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_4962_p1 = tmp_114_0_1_1_cast_reg_7770;
    end else begin
        grp_fu_4962_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_496_p0 = tmp_111_1_0_cast_reg_7858;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_496_p0 = reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_496_p0 = tmp_111_0_0_cast_reg_7554;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_496_p0 = reg_6707;
    end else begin
        grp_fu_496_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        grp_fu_496_p1 = tmp41_cast_reg_7498;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_496_p1 = 17'd1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_496_p1 = tmp_121_0_2_2_reg_7816;
    end else begin
        grp_fu_496_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_498_p0 = reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_498_p0 = tmp7_cast_reg_7532;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_498_p0 = tmp5_0_1_cast_reg_7509;
    end else begin
        grp_fu_498_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state32))) begin
        grp_fu_498_p1 = reg_2137;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_498_p1 = tmp_71_cast_reg_7543;
    end else begin
        grp_fu_498_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_499_p0 = reg_6755;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_499_p0 = reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_499_p0 = tmp_70_cast_fu_6878_p1;
    end else begin
        grp_fu_499_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_499_p1 = reg_6761;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_499_p1 = reg_6731;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_499_p1 = tmp5_0_2_cast_reg_7520;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_499_p1 = phi_mul2_reg_459;
    end else begin
        grp_fu_499_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_501_p0 = bias_load_reg_7821;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_501_p0 = tmp_121_2_0_2_reg_7987;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_501_p0 = reg_6737;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_501_p0 = 8'd4;
    end else begin
        grp_fu_501_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_501_p1 = reg_6719;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_fu_501_p1 = tmp_121_2_1_reg_7952;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_501_p1 = reg_6725;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_501_p1 = reg_482;
    end else begin
        grp_fu_501_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_502_p0 = reg_2137;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_502_p0 = tmp_70_cast_fu_6878_p1;
    end else begin
        grp_fu_502_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_fu_502_p1 = reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_502_p1 = reg_6713;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_502_p1 = tmp5_0_2_cast_reg_7520;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_502_p1 = phi_mul_reg_447;
    end else begin
        grp_fu_502_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_504_p0 = reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_504_p0 = tmp_111_1_0_cast_reg_7858;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_504_p0 = tmp_121_0_1_1_reg_7834;
    end else begin
        grp_fu_504_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_504_p1 = reg_2131;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_504_p1 = tmp5_0_1_cast_reg_7509;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_504_p1 = tmp_121_0_1_2_reg_7839;
    end else begin
        grp_fu_504_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_506_p1 = reg_482;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_506_p1 = tmp5_0_1_cast_reg_7509;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_506_p1 = 9'd2;
    end else begin
        grp_fu_506_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_507_p0 = tmp_111_1_0_cast_reg_7858;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state45))) begin
        grp_fu_507_p0 = reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_507_p0 = tmp_111_0_0_cast_reg_7554;
    end else begin
        grp_fu_507_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_507_p1 = 17'd2;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_507_p1 = tmp_121_2_0_1_reg_7992;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_507_p1 = tmp5_0_1_cast_reg_7509;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_507_p1 = tmp5_0_2_cast_reg_7520;
    end else begin
        grp_fu_507_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_508_p0 = tmp7_cast_reg_7532;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_508_p0 = tmp_111_1_0_cast_reg_7858;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_508_p0 = 8'd7;
    end else begin
        grp_fu_508_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_508_p1 = tmp_111_0_0_3_cast_reg_7567;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_508_p1 = tmp_111_0_0_cast_reg_7554;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_508_p1 = tmp5_0_2_cast_reg_7520;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_508_p1 = reg_482;
    end else begin
        grp_fu_508_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_510_p0 = reg_482;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_510_p0 = reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_510_p0 = tmp_111_0_0_3_cast_reg_7567;
    end else begin
        grp_fu_510_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_510_p1 = reg_2146;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_510_p1 = 16'd4;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_510_p1 = tmp_121_0_2_reg_7844;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_510_p1 = tmp5_0_2_cast_reg_7520;
    end else begin
        grp_fu_510_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_511_p0 = reg_6749;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_511_p0 = bias_load_reg_7821;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_511_p0 = reg_6743;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_511_p0 = 8'd6;
    end else begin
        grp_fu_511_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_511_p1 = reg_6737;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_511_p1 = tmp_121_2_reg_7947;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_511_p1 = reg_6749;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_511_p1 = reg_482;
    end else begin
        grp_fu_511_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_512_p0 = reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_512_p0 = tmp_111_1_0_cast_fu_7153_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_512_p0 = tmp5_0_2_cast_reg_7520;
    end else begin
        grp_fu_512_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_512_p1 = reg_2140;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_512_p1 = tmp5_0_2_cast_reg_7520;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_512_p1 = tmp41_cast_reg_7498;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_512_p1 = tmp_71_cast_reg_7543;
    end else begin
        grp_fu_512_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_513_p0 = reg_6755;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_513_p0 = bias_load_reg_7821;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_513_p0 = reg_2137;
    end else begin
        grp_fu_513_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_513_p1 = tmp41_cast_reg_7498;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_513_p1 = reg_6761;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_513_p1 = reg_6719;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_513_p1 = 9'd1;
    end else begin
        grp_fu_513_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_514_p0 = reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_514_p0 = tmp_66_cast2_fu_6802_p1;
    end else begin
        grp_fu_514_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_514_p1 = reg_2137;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_514_p1 = tmp_121_1_0_1_reg_7933;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_514_p1 = p_shl_cast_fu_6819_p1;
    end else begin
        grp_fu_514_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_515_p0 = reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_515_p0 = reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_515_p0 = bias_load_reg_7821;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_515_p0 = tmp_111_0_0_cast_reg_7554;
    end else begin
        grp_fu_515_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_515_p1 = reg_6701;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_515_p1 = reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_515_p1 = reg_6713;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_515_p1 = tmp5_0_1_cast_reg_7509;
    end else begin
        grp_fu_515_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fu_516_p0 = reg_6731;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state46))) begin
        grp_fu_516_p0 = reg_2140;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_516_p0 = tmp41_cast_reg_7498;
    end else begin
        grp_fu_516_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_fu_516_p1 = reg_6743;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_516_p1 = tmp_121_2_2_reg_7962;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_516_p1 = reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_516_p1 = tmp_71_cast_fu_6925_p1;
    end else begin
        grp_fu_516_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_517_p0 = reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_517_p0 = tmp_111_0_0_cast_fu_6941_p1;
    end else begin
        grp_fu_517_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_517_p1 = tmp5_0_1_cast_reg_7509;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_517_p1 = reg_2131;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_517_p1 = tmp41_cast_reg_7498;
    end else begin
        grp_fu_517_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_521_p0 = reg_6725;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_521_p0 = reg_2140;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_521_p0 = tmp_111_0_0_3_cast_fu_6952_p1;
    end else begin
        grp_fu_521_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_521_p1 = reg_6707;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_521_p1 = reg_2137;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_521_p1 = tmp41_cast_reg_7498;
    end else begin
        grp_fu_521_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_522_p0 = tmp_111_0_0_3_cast_reg_7567;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_522_p0 = reg_2143;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_522_p0 = reg_6701;
    end else begin
        grp_fu_522_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_522_p1 = tmp5_0_2_cast_reg_7520;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_522_p1 = 17'd2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_522_p1 = tmp_121_0_0_1_reg_7829;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_522_p1 = tmp_121_0_1_reg_7811;
    end else begin
        grp_fu_522_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        input_r_address0 = tmp_113_3_2_1_fu_7372_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        input_r_address0 = tmp_113_3_1_1_fu_7352_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        input_r_address0 = tmp_113_3_0_1_fu_7342_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        input_r_address0 = tmp_113_2_1_2_fu_7262_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        input_r_address0 = tmp_113_1_2_2_fu_7188_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        input_r_address0 = tmp_113_1_1_2_fu_7173_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        input_r_address0 = tmp_113_1_0_2_fu_7163_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address0 = tmp_113_0_2_2_fu_6997_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address0 = tmp_113_0_2_fu_6987_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = tmp_113_0_1_1_fu_6977_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address0 = tmp_113_0_0_1_fu_6962_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address0 = tmp_59_fu_6930_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        input_r_address1 = tmp_113_3_2_2_fu_7377_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        input_r_address1 = tmp_113_3_1_2_fu_7357_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        input_r_address1 = tmp_113_3_0_2_fu_7347_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        input_r_address1 = tmp_113_2_2_2_fu_7277_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        input_r_address1 = tmp_113_2_0_2_fu_7237_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        input_r_address1 = tmp_113_1_2_1_fu_7183_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        input_r_address1 = tmp_113_1_1_1_fu_7168_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        input_r_address1 = tmp_113_1_0_1_fu_7158_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address1 = tmp_113_0_2_1_fu_6992_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address1 = tmp_113_0_1_2_fu_6982_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address1 = tmp_113_0_1_fu_6972_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address1 = tmp_113_0_0_2_fu_6967_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state51))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state51))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        kernel_0_address0 = kernel_0_addr_8_reg_7490;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        kernel_0_address0 = kernel_0_addr_6_reg_7480;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        kernel_0_address0 = kernel_0_addr_4_reg_7470;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        kernel_0_address0 = kernel_0_addr_1_reg_7455;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        kernel_0_address0 = kernel_0_addr_reg_7450;
    end else begin
        kernel_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        kernel_0_address1 = kernel_0_addr_7_reg_7485;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        kernel_0_address1 = kernel_0_addr_5_reg_7475;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        kernel_0_address1 = kernel_0_addr_3_reg_7465;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        kernel_0_address1 = kernel_0_addr_2_reg_7460;
    end else begin
        kernel_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        kernel_0_ce0 = 1'b1;
    end else begin
        kernel_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        kernel_0_ce1 = 1'b1;
    end else begin
        kernel_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        output_r_address0 = tmp_106_3_fu_7402_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        output_r_address0 = tmp_106_2_fu_7337_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_r_address0 = tmp_106_1_fu_7228_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        output_r_address0 = tmp_62_fu_7138_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state22))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        output_r_d0 = reg_2146;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        output_r_d0 = buffer_6_2_2_2_reg_4297;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state22))) begin
        output_r_d0 = reg_2140;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state49) & (exitcond2_2_reg_7849 == 1'd0) & (exitcond2_reg_7539 == 1'd0) & (exitcond2_1_reg_7575 == 1'd0)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond4_fu_6791_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond3_fu_6873_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond2_fu_6920_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((exitcond2_1_reg_7575 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((exitcond2_2_reg_7849 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & ((exitcond2_reg_7539 == 1'd1) | ((exitcond2_1_reg_7575 == 1'd1) | ((exitcond2_3_reg_7938 == 1'd1) | (exitcond2_2_reg_7849 == 1'd1)))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bias_address0 = bias_addr_reg_7445;

assign exitcond2_1_fu_6957_p2 = ((tmp_111_0_0_s_fu_6935_p2 == output_width_cast_reg_7412) ? 1'b1 : 1'b0);

assign exitcond2_2_fu_7143_p2 = ((tmp_111_0_0_3_reg_7562 == output_width_cast_reg_7412) ? 1'b1 : 1'b0);

assign exitcond2_3_fu_7233_p2 = ((tmp_111_1_0_s_reg_7853 == output_width_cast_reg_7412) ? 1'b1 : 1'b0);

assign exitcond2_fu_6920_p0 = reg_482;

assign exitcond2_fu_6920_p2 = ((exitcond2_fu_6920_p0 == output_width_cast_reg_7412) ? 1'b1 : 1'b0);

assign exitcond3_fu_6873_p2 = ((out_h_cast_fu_6869_p1 == output_height) ? 1'b1 : 1'b0);

assign exitcond4_fu_6791_p2 = ((out_d_reg_436 == 5'd16) ? 1'b1 : 1'b0);

assign grp_fu_4937_p0 = tmp_118_0_cast_reg_7749;

assign grp_fu_4938_p0 = tmp_118_0_0_2_cast_reg_7695;

assign grp_fu_4948_p0 = tmp_118_0_1_cast_reg_7708;

assign grp_fu_4948_p1 = tmp_114_0_1_2_cast_reg_7784;

assign grp_fu_494_p2 = (grp_fu_494_p0 + grp_fu_494_p1);

assign grp_fu_4954_p0 = tmp_118_0_2_2_cast_reg_7736;

assign grp_fu_4955_p0 = tmp_118_0_2_1_cast_reg_7722;

assign grp_fu_4955_p1 = tmp_114_1_2_2_cast_reg_7914;

assign grp_fu_4956_p0 = tmp_118_0_2_cast_reg_7803;

assign grp_fu_4956_p1 = tmp_114_0_2_2_cast_reg_7730;

assign grp_fu_4957_p0 = tmp_118_0_cast_reg_7749;

assign grp_fu_4957_p1 = tmp_114_0_0_2_cast_reg_7689;

assign grp_fu_4958_p0 = tmp_118_0_0_1_cast_reg_7762;

assign grp_fu_4959_p0 = tmp_118_0_0_1_cast_reg_7762;

assign grp_fu_4959_p1 = tmp_114_1_0_2_cast_reg_7887;

assign grp_fu_496_p2 = (grp_fu_496_p0 + grp_fu_496_p1);

assign grp_fu_498_p2 = (grp_fu_498_p0 + grp_fu_498_p1);

assign grp_fu_499_p2 = (grp_fu_499_p0 + grp_fu_499_p1);

assign grp_fu_501_p2 = (grp_fu_501_p0 + grp_fu_501_p1);

assign grp_fu_502_p2 = (grp_fu_502_p0 + grp_fu_502_p1);

assign grp_fu_504_p2 = (grp_fu_504_p0 + grp_fu_504_p1);

assign grp_fu_506_p2 = (reg_2137 + grp_fu_506_p1);

assign grp_fu_507_p2 = (grp_fu_507_p0 + grp_fu_507_p1);

assign grp_fu_508_p2 = (grp_fu_508_p0 + grp_fu_508_p1);

assign grp_fu_510_p2 = (grp_fu_510_p0 + grp_fu_510_p1);

assign grp_fu_511_p2 = (grp_fu_511_p0 + grp_fu_511_p1);

assign grp_fu_512_p2 = (grp_fu_512_p0 + grp_fu_512_p1);

assign grp_fu_513_p2 = (grp_fu_513_p0 + grp_fu_513_p1);

assign grp_fu_514_p2 = (grp_fu_514_p0 + grp_fu_514_p1);

assign grp_fu_515_p2 = (grp_fu_515_p0 + grp_fu_515_p1);

assign grp_fu_516_p2 = (grp_fu_516_p0 + grp_fu_516_p1);

assign grp_fu_517_p2 = (grp_fu_517_p0 + grp_fu_517_p1);

assign grp_fu_521_p2 = (grp_fu_521_p0 + grp_fu_521_p1);

assign grp_fu_522_p2 = (grp_fu_522_p0 + grp_fu_522_p1);

assign input_width_cast_fu_6767_p1 = $signed(input_width);

assign next_mul3_fu_509_p2 = (phi_mul2_reg_459 + tmp_63_cast_reg_7432);

assign next_mul_fu_497_p2 = (phi_mul_reg_447 + tmp_cast_reg_7420);

assign out_d_4_fu_495_p2 = (out_d_reg_436 + 5'd1);

assign out_h_4_fu_518_p2 = (out_h_reg_471 + 5'd1);

assign out_h_cast_fu_6869_p1 = out_h_reg_471;

assign output_width_cast_fu_6771_p1 = output_width;

assign p_shl_cast_fu_6819_p1 = p_shl_fu_6811_p3;

assign p_shl_fu_6811_p3 = {{tmp_35_fu_6807_p1}, {3'd0}};

assign tmp37_fu_4952_p0 = tmp_62_cast1_cast_reg_7425;

assign tmp37_fu_4952_p1 = tmp37_fu_4952_p10;

assign tmp37_fu_4952_p10 = tmp_0_cast_cast_fu_6889_p0;

assign tmp37_fu_4952_p2 = (tmp37_fu_4952_p0 * tmp37_fu_4952_p1);

assign tmp41_cast_fu_6894_p1 = tmp37_fu_4952_p2;

assign tmp5_0_1_cast_fu_6903_p1 = tmp5_0_1_fu_4943_p2;

assign tmp5_0_1_fu_4943_p0 = tmp_62_cast1_cast_reg_7425;

assign tmp5_0_1_fu_4943_p1 = tmp5_0_1_fu_4943_p10;

assign tmp5_0_1_fu_4943_p10 = tmp_0_1_cast_cast_fu_6898_p0;

assign tmp5_0_1_fu_4943_p2 = (tmp5_0_1_fu_4943_p0 * tmp5_0_1_fu_4943_p1);

assign tmp5_0_2_cast_fu_6912_p1 = tmp5_0_2_fu_4940_p2;

assign tmp5_0_2_fu_4940_p0 = tmp_62_cast1_cast_reg_7425;

assign tmp5_0_2_fu_4940_p1 = tmp5_0_2_fu_4940_p10;

assign tmp5_0_2_fu_4940_p10 = tmp_0_2_reg_2134;

assign tmp5_0_2_fu_4940_p2 = (tmp5_0_2_fu_4940_p0 * tmp5_0_2_fu_4940_p1);

assign tmp7_cast_fu_6916_p0 = reg_482;

assign tmp7_cast_fu_6916_p1 = tmp7_cast_fu_6916_p0;

assign tmp7_fu_4942_p0 = tmp_64_cast_cast_reg_7437;

assign tmp7_fu_4942_p1 = tmp7_fu_4942_p10;

assign tmp7_fu_4942_p10 = tmp6_reg_2128;

assign tmp7_fu_4942_p2 = (tmp7_fu_4942_p0 * tmp7_fu_4942_p1);

assign tmp_0_1_cast_cast_fu_6898_p0 = reg_2146;

assign tmp_0_cast_cast_fu_6889_p0 = reg_2137;

assign tmp_106_1_fu_7228_p1 = reg_2137;

assign tmp_106_2_fu_7337_p1 = tmp_105_2_reg_4302;

assign tmp_106_3_fu_7402_p1 = reg_2140;

assign tmp_111_0_0_3_cast_fu_6952_p1 = tmp_111_0_0_3_fu_6946_p2;

assign tmp_111_0_0_3_fu_6946_p0 = reg_482;

assign tmp_111_0_0_3_fu_6946_p2 = (tmp_111_0_0_3_fu_6946_p0 | 16'd2);

assign tmp_111_0_0_cast_fu_6941_p1 = tmp_111_0_0_s_fu_6935_p2;

assign tmp_111_0_0_s_fu_6935_p0 = reg_482;

assign tmp_111_0_0_s_fu_6935_p2 = (tmp_111_0_0_s_fu_6935_p0 | 16'd1);

assign tmp_111_1_0_cast_fu_7153_p1 = tmp_111_1_0_s_fu_7147_p2;

assign tmp_111_1_0_s_fu_7147_p0 = reg_482;

assign tmp_111_1_0_s_fu_7147_p2 = (tmp_111_1_0_s_fu_7147_p0 | 16'd3);

assign tmp_113_0_0_1_fu_6962_p1 = reg_2131;

assign tmp_113_0_0_2_fu_6967_p1 = reg_2140;

assign tmp_113_0_1_1_fu_6977_p1 = reg_2131;

assign tmp_113_0_1_2_fu_6982_p1 = reg_2143;

assign tmp_113_0_1_fu_6972_p1 = reg_2143;

assign tmp_113_0_2_1_fu_6992_p1 = reg_2143;

assign tmp_113_0_2_2_fu_6997_p1 = reg_2131;

assign tmp_113_0_2_fu_6987_p1 = reg_2131;

assign tmp_113_1_0_1_fu_7158_p1 = reg_2143;

assign tmp_113_1_0_2_fu_7163_p1 = reg_2140;

assign tmp_113_1_1_1_fu_7168_p1 = reg_2143;

assign tmp_113_1_1_2_fu_7173_p1 = reg_2137;

assign tmp_113_1_2_1_fu_7183_p1 = reg_2131;

assign tmp_113_1_2_2_fu_7188_p1 = reg_2137;

assign tmp_113_2_0_2_fu_7237_p1 = reg_2131;

assign tmp_113_2_1_2_fu_7262_p1 = reg_2131;

assign tmp_113_2_2_2_fu_7277_p1 = reg_2140;

assign tmp_113_3_0_1_fu_7342_p1 = reg_2146;

assign tmp_113_3_0_2_fu_7347_p1 = reg_482;

assign tmp_113_3_1_1_fu_7352_p1 = reg_2146;

assign tmp_113_3_1_2_fu_7357_p1 = reg_2137;

assign tmp_113_3_2_1_fu_7372_p1 = reg_482;

assign tmp_113_3_2_2_fu_7377_p1 = reg_2143;

assign tmp_114_0_0_1_cast_fu_7045_p1 = reg_6686;

assign tmp_114_0_0_2_cast_fu_7002_p1 = $signed(reg_6691);

assign tmp_114_0_1_1_cast_fu_7054_p1 = input_load_197_reg_7619;

assign tmp_114_0_1_2_cast_fu_7062_p1 = input_load_198_reg_7639;

assign tmp_114_0_2_1_cast_fu_7020_p1 = $signed(input_load_200_reg_7669);

assign tmp_114_0_2_2_cast_fu_7028_p1 = input_load_201_reg_7679;

assign tmp_114_0_cast_fu_7036_p1 = reg_6681;

assign tmp_114_1_0_2_cast_fu_7178_p1 = reg_6686;

assign tmp_114_1_1_1_cast_fu_7208_p1 = reg_6686;

assign tmp_114_1_1_2_cast_fu_7213_p1 = $signed(reg_6691);

assign tmp_114_1_2_1_cast_fu_7198_p1 = reg_6681;

assign tmp_114_1_2_2_cast_fu_7203_p1 = reg_6696;

assign tmp_114_2_1_2_cast_fu_7292_p1 = reg_6681;

assign tmp_114_3_0_1_cast_fu_7362_p1 = reg_6681;

assign tmp_114_3_0_2_cast_fu_7367_p1 = reg_6686;

assign tmp_114_3_1_1_cast_fu_7382_p1 = reg_6681;

assign tmp_114_3_1_2_cast_fu_7387_p1 = reg_6686;

assign tmp_114_3_2_1_cast_fu_7392_p1 = reg_6681;

assign tmp_114_3_2_2_cast_fu_7397_p1 = reg_6686;

assign tmp_116_0_0_1_fu_505_p1 = reg_482;

assign tmp_116_0_0_1_fu_505_p2 = (8'd1 + tmp_116_0_0_1_fu_505_p1);

assign tmp_116_0_0_2_fu_500_p1 = reg_482;

assign tmp_116_0_0_2_fu_500_p2 = (8'd2 + tmp_116_0_0_2_fu_500_p1);

assign tmp_116_0_1_2_fu_520_p1 = reg_482;

assign tmp_116_0_1_2_fu_520_p2 = (8'd5 + tmp_116_0_1_2_fu_520_p1);

assign tmp_116_0_1_fu_519_p1 = reg_482;

assign tmp_116_0_1_fu_519_p2 = (8'd3 + tmp_116_0_1_fu_519_p1);

assign tmp_116_0_2_2_fu_503_p1 = reg_482;

assign tmp_116_0_2_2_fu_503_p2 = (8'd8 + tmp_116_0_2_2_fu_503_p1);

assign tmp_117_0_0_1_fu_6829_p1 = tmp_116_0_0_1_fu_505_p2;

assign tmp_117_0_0_2_fu_6834_p1 = tmp_116_0_0_2_fu_500_p2;

assign tmp_117_0_1_1_fu_6844_p0 = tmp_117_0_1_1_fu_6844_p00;

assign tmp_117_0_1_1_fu_6844_p00 = (grp_fu_501_p0 + grp_fu_501_p1);

assign tmp_117_0_1_1_fu_6844_p1 = tmp_117_0_1_1_fu_6844_p0;

assign tmp_117_0_1_2_fu_6849_p1 = tmp_116_0_1_2_fu_520_p2;

assign tmp_117_0_1_fu_6839_p1 = tmp_116_0_1_fu_519_p2;

assign tmp_117_0_2_1_fu_6859_p0 = tmp_117_0_2_1_fu_6859_p00;

assign tmp_117_0_2_1_fu_6859_p00 = (grp_fu_508_p0 + grp_fu_508_p1);

assign tmp_117_0_2_1_fu_6859_p1 = tmp_117_0_2_1_fu_6859_p0;

assign tmp_117_0_2_2_fu_6864_p1 = tmp_116_0_2_2_fu_503_p2;

assign tmp_117_0_2_fu_6854_p0 = tmp_117_0_2_fu_6854_p00;

assign tmp_117_0_2_fu_6854_p00 = (grp_fu_511_p0 + grp_fu_511_p1);

assign tmp_117_0_2_fu_6854_p1 = tmp_117_0_2_fu_6854_p0;

assign tmp_118_0_0_1_cast_fu_7050_p1 = kernel_0_load_1_reg_7594;

assign tmp_118_0_0_2_cast_fu_7007_p1 = $signed(kernel_0_load_2_reg_7599);

assign tmp_118_0_1_1_cast_fu_7058_p1 = kernel_0_load_4_reg_7624;

assign tmp_118_0_1_2_cast_fu_7066_p1 = kernel_0_load_5_reg_7644;

assign tmp_118_0_1_cast_fu_7016_p1 = kernel_0_load_3_reg_7614;

assign tmp_118_0_2_1_cast_fu_7024_p1 = $signed(kernel_0_load_7_reg_7674);

assign tmp_118_0_2_2_cast_fu_7032_p1 = kernel_0_load_8_reg_7684;

assign tmp_118_0_2_cast_fu_7074_p1 = kernel_0_load_6_reg_7654;

assign tmp_118_0_cast_fu_7041_p1 = $signed(kernel_0_load_reg_7579);

assign tmp_35_fu_6807_p1 = out_d_reg_436[3:0];

assign tmp_57_fu_6824_p0 = reg_482;

assign tmp_57_fu_6824_p1 = tmp_57_fu_6824_p0;

assign tmp_59_fu_6930_p1 = reg_2143;

assign tmp_62_cast1_cast_fu_6779_p1 = $unsigned(input_width_cast_fu_6767_p1);

assign tmp_62_fu_7138_p1 = reg_2143;

assign tmp_63_cast_fu_6783_p1 = output_height;

assign tmp_64_cast_cast_fu_6787_p1 = output_width;

assign tmp_66_cast2_fu_6802_p1 = out_d_reg_436;

assign tmp_70_cast_fu_6878_p1 = out_h_reg_471;

assign tmp_71_cast_fu_6925_p0 = reg_482;

assign tmp_71_cast_fu_6925_p1 = tmp_71_cast_fu_6925_p0;

assign tmp_cast_fu_6775_p1 = input_height;

assign tmp_s_fu_6797_p1 = out_d_reg_436;

always @ (posedge ap_clk) begin
    output_width_cast_reg_7412[15:6] <= 10'b0000000000;
    tmp_cast_reg_7420[8:7] <= 2'b00;
    tmp_62_cast1_cast_reg_7425[15:7] <= 9'b000000000;
    tmp_63_cast_reg_7432[8:6] <= 3'b000;
    tmp_64_cast_cast_reg_7437[14:6] <= 9'b000000000;
    tmp41_cast_reg_7498[16] <= 1'b0;
    tmp5_0_1_cast_reg_7509[16] <= 1'b0;
    tmp5_0_2_cast_reg_7520[16] <= 1'b0;
    tmp7_cast_reg_7532[16:15] <= 2'b00;
    tmp_71_cast_reg_7543[16] <= 1'b0;
    tmp_111_0_0_cast_reg_7554[0] <= 1'b1;
    tmp_111_0_0_cast_reg_7554[16] <= 1'b0;
    tmp_111_0_0_3_reg_7562[1] <= 1'b1;
    tmp_111_0_0_3_cast_reg_7567[1] <= 1'b1;
    tmp_111_0_0_3_cast_reg_7567[16] <= 1'b0;
    tmp_111_1_0_s_reg_7853[1:0] <= 2'b11;
    tmp_111_1_0_cast_reg_7858[1:0] <= 2'b11;
    tmp_111_1_0_cast_reg_7858[16] <= 1'b0;
end

endmodule //depthwise_conv2d_fix_2
