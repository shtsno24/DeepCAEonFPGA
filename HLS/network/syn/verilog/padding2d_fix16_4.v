// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module padding2d_fix16_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        output_width,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_state17 = 27'd65536;
parameter    ap_ST_fsm_state18 = 27'd131072;
parameter    ap_ST_fsm_state19 = 27'd262144;
parameter    ap_ST_fsm_state20 = 27'd524288;
parameter    ap_ST_fsm_state21 = 27'd1048576;
parameter    ap_ST_fsm_state22 = 27'd2097152;
parameter    ap_ST_fsm_state23 = 27'd4194304;
parameter    ap_ST_fsm_state24 = 27'd8388608;
parameter    ap_ST_fsm_state25 = 27'd16777216;
parameter    ap_ST_fsm_state26 = 27'd33554432;
parameter    ap_ST_fsm_state27 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_0_address0;
output   input_0_ce0;
input  [15:0] input_0_q0;
input  [15:0] output_width;
output  [9:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_0_address0;
reg input_0_ce0;
reg[9:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[15:0] output_r_d0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [20:0] tmp_1_cast_fu_488_p1;
reg   [20:0] tmp_1_cast_reg_1464;
wire   [4:0] width_1_fu_498_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_16_fu_509_p2;
reg   [0:0] tmp_16_reg_1479;
wire    ap_CS_fsm_state3;
wire   [20:0] tmp_17_fu_1449_p2;
reg   [20:0] tmp_17_reg_1483;
wire   [10:0] tmp5_fu_553_p2;
reg   [10:0] tmp5_reg_1497;
wire    ap_CS_fsm_state4;
wire   [20:0] tmp_43_cast_fu_559_p1;
reg   [20:0] tmp_43_cast_reg_1509;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_19_fu_563_p2;
reg   [0:0] tmp_19_reg_1514;
wire   [4:0] tmp_1_fu_602_p1;
reg   [4:0] tmp_1_reg_1523;
wire    ap_CS_fsm_state6;
wire   [4:0] width_3_cast_fu_612_p2;
reg   [4:0] width_3_cast_reg_1529;
wire   [20:0] tmp_43_0_1_cast_fu_618_p1;
reg   [20:0] tmp_43_0_1_cast_reg_1534;
wire   [0:0] tmp_44_0_1_fu_622_p2;
reg   [0:0] tmp_44_0_1_reg_1539;
wire   [4:0] width_3_0_1_cast_fu_661_p2;
reg   [4:0] width_3_0_1_cast_reg_1548;
wire    ap_CS_fsm_state7;
wire   [20:0] tmp_43_0_2_cast_fu_666_p1;
reg   [20:0] tmp_43_0_2_cast_reg_1553;
wire   [0:0] tmp_44_0_2_fu_670_p2;
reg   [0:0] tmp_44_0_2_reg_1558;
wire   [0:0] tmp_44_0_3_fu_698_p2;
reg   [0:0] tmp_44_0_3_reg_1567;
wire   [5:0] width_3_0_2_fu_713_p2;
reg   [5:0] width_3_0_2_reg_1571;
wire    ap_CS_fsm_state8;
wire   [20:0] tmp_43_0_3_cast_fu_719_p1;
reg   [20:0] tmp_43_0_3_cast_reg_1576;
wire   [5:0] width_3_0_3_fu_749_p2;
reg   [5:0] width_3_0_3_reg_1586;
wire    ap_CS_fsm_state9;
wire   [20:0] tmp_43_0_4_cast_fu_755_p1;
reg   [20:0] tmp_43_0_4_cast_reg_1591;
wire   [0:0] tmp_44_0_4_fu_759_p2;
reg   [0:0] tmp_44_0_4_reg_1596;
wire   [5:0] width_3_0_4_fu_791_p2;
reg   [5:0] width_3_0_4_reg_1605;
wire    ap_CS_fsm_state10;
wire   [20:0] tmp_43_0_5_cast_fu_797_p1;
reg   [20:0] tmp_43_0_5_cast_reg_1610;
wire   [0:0] tmp_44_0_5_fu_801_p2;
reg   [0:0] tmp_44_0_5_reg_1615;
wire   [5:0] width_3_0_5_fu_833_p2;
reg   [5:0] width_3_0_5_reg_1624;
wire    ap_CS_fsm_state11;
wire   [20:0] tmp_43_0_6_cast_fu_839_p1;
reg   [20:0] tmp_43_0_6_cast_reg_1629;
wire   [0:0] tmp_44_0_6_fu_843_p2;
reg   [0:0] tmp_44_0_6_reg_1634;
wire   [20:0] tmp_43_0_7_cast_fu_881_p1;
reg   [20:0] tmp_43_0_7_cast_reg_1643;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_44_0_7_fu_885_p2;
wire   [5:0] width_3_0_7_fu_908_p2;
reg   [5:0] width_3_0_7_reg_1656;
wire   [2:0] phitmp_fu_947_p2;
wire    ap_CS_fsm_state14;
wire   [0:0] exitcond3_fu_931_p2;
wire   [20:0] tmp_33_1_fu_1454_p2;
reg   [20:0] tmp_33_1_reg_1672;
wire   [0:0] tmp_29_1_fu_959_p2;
wire   [10:0] tmp5_1_fu_997_p2;
reg   [10:0] tmp5_1_reg_1686;
wire    ap_CS_fsm_state15;
wire   [20:0] tmp_43_1_cast_fu_1003_p1;
reg   [20:0] tmp_43_1_cast_reg_1698;
wire    ap_CS_fsm_state16;
wire   [0:0] tmp_44_1_fu_1007_p2;
reg   [0:0] tmp_44_1_reg_1703;
wire   [4:0] tmp_2_fu_1046_p1;
reg   [4:0] tmp_2_reg_1712;
wire    ap_CS_fsm_state17;
wire   [4:0] width_3_1_cast_fu_1056_p2;
reg   [4:0] width_3_1_cast_reg_1718;
wire   [20:0] tmp_43_1_1_cast_fu_1062_p1;
reg   [20:0] tmp_43_1_1_cast_reg_1723;
wire   [0:0] tmp_44_1_1_fu_1066_p2;
reg   [0:0] tmp_44_1_1_reg_1728;
wire   [4:0] width_3_1_1_cast_fu_1105_p2;
reg   [4:0] width_3_1_1_cast_reg_1737;
wire    ap_CS_fsm_state18;
wire   [20:0] tmp_43_1_2_cast_fu_1110_p1;
reg   [20:0] tmp_43_1_2_cast_reg_1742;
wire   [0:0] tmp_44_1_2_fu_1114_p2;
reg   [0:0] tmp_44_1_2_reg_1747;
wire   [0:0] tmp_44_1_3_fu_1142_p2;
reg   [0:0] tmp_44_1_3_reg_1756;
wire   [5:0] width_3_1_2_fu_1157_p2;
reg   [5:0] width_3_1_2_reg_1760;
wire    ap_CS_fsm_state19;
wire   [20:0] tmp_43_1_3_cast_fu_1163_p1;
reg   [20:0] tmp_43_1_3_cast_reg_1765;
wire   [5:0] width_3_1_3_fu_1193_p2;
reg   [5:0] width_3_1_3_reg_1775;
wire    ap_CS_fsm_state20;
wire   [20:0] tmp_43_1_4_cast_fu_1199_p1;
reg   [20:0] tmp_43_1_4_cast_reg_1780;
wire   [0:0] tmp_44_1_4_fu_1203_p2;
reg   [0:0] tmp_44_1_4_reg_1785;
wire   [5:0] width_3_1_4_fu_1235_p2;
reg   [5:0] width_3_1_4_reg_1794;
wire    ap_CS_fsm_state21;
wire   [20:0] tmp_43_1_5_cast_fu_1241_p1;
reg   [20:0] tmp_43_1_5_cast_reg_1799;
wire   [0:0] tmp_44_1_5_fu_1245_p2;
reg   [0:0] tmp_44_1_5_reg_1804;
wire   [5:0] width_3_1_5_fu_1277_p2;
reg   [5:0] width_3_1_5_reg_1813;
wire    ap_CS_fsm_state22;
wire   [20:0] tmp_43_1_6_cast_fu_1283_p1;
reg   [20:0] tmp_43_1_6_cast_reg_1818;
wire   [0:0] tmp_44_1_6_fu_1287_p2;
reg   [0:0] tmp_44_1_6_reg_1823;
wire   [20:0] tmp_43_1_7_cast_fu_1325_p1;
reg   [20:0] tmp_43_1_7_cast_reg_1832;
wire    ap_CS_fsm_state23;
wire   [0:0] tmp_44_1_7_fu_1329_p2;
wire   [5:0] width_3_1_7_fu_1352_p2;
reg   [5:0] width_3_1_7_reg_1845;
wire   [2:0] phitmp1_fu_1391_p2;
wire    ap_CS_fsm_state25;
wire   [0:0] exitcond5_fu_1375_p2;
wire   [4:0] height_3_1_fu_1397_p2;
wire   [20:0] tmp_9_fu_1459_p2;
reg   [20:0] tmp_9_reg_1866;
wire    ap_CS_fsm_state26;
wire   [0:0] exitcond4_fu_1411_p2;
wire   [4:0] width_2_fu_1427_p2;
wire    ap_CS_fsm_state27;
wire   [2:0] phitmp2_fu_1443_p2;
wire   [0:0] exitcond_fu_1421_p2;
reg   [4:0] width_reg_396;
wire   [0:0] exitcond1_fu_492_p2;
reg   [4:0] height1_reg_407;
reg   [5:0] width3_reg_419;
wire    ap_CS_fsm_state13;
reg  signed [2:0] width4_0_in_reg_431;
reg   [5:0] width3_1_reg_442;
wire    ap_CS_fsm_state24;
reg  signed [2:0] width4_0_in_1_reg_454;
reg  signed [2:0] height_reg_465;
reg   [4:0] width6_reg_477;
wire   [63:0] tmp_s_fu_504_p1;
wire   [63:0] tmp_18_fu_519_p1;
wire   [63:0] tmp_21_fu_588_p1;
wire   [63:0] tmp_23_fu_597_p1;
wire   [63:0] tmp_50_0_1_fu_641_p1;
wire   [63:0] tmp_52_0_1_fu_650_p1;
wire   [63:0] tmp_50_0_2_fu_688_p1;
wire   [63:0] tmp_52_0_2_fu_708_p1;
wire   [63:0] tmp_50_0_3_fu_735_p1;
wire   [63:0] tmp_52_0_3_fu_744_p1;
wire   [63:0] tmp_50_0_4_fu_777_p1;
wire   [63:0] tmp_52_0_4_fu_786_p1;
wire   [63:0] tmp_50_0_5_fu_819_p1;
wire   [63:0] tmp_52_0_5_fu_828_p1;
wire   [63:0] tmp_50_0_6_fu_861_p1;
wire   [63:0] tmp_52_0_6_fu_870_p1;
wire   [63:0] tmp_50_0_7_fu_903_p1;
wire   [63:0] tmp_52_0_7_fu_918_p1;
wire   [63:0] tmp_25_fu_942_p1;
wire   [63:0] tmp_41_1_fu_969_p1;
wire   [63:0] tmp_50_1_fu_1032_p1;
wire   [63:0] tmp_52_1_fu_1041_p1;
wire   [63:0] tmp_50_1_1_fu_1085_p1;
wire   [63:0] tmp_52_1_1_fu_1094_p1;
wire   [63:0] tmp_50_1_2_fu_1132_p1;
wire   [63:0] tmp_52_1_2_fu_1152_p1;
wire   [63:0] tmp_50_1_3_fu_1179_p1;
wire   [63:0] tmp_52_1_3_fu_1188_p1;
wire   [63:0] tmp_50_1_4_fu_1221_p1;
wire   [63:0] tmp_52_1_4_fu_1230_p1;
wire   [63:0] tmp_50_1_5_fu_1263_p1;
wire   [63:0] tmp_52_1_5_fu_1272_p1;
wire   [63:0] tmp_50_1_6_fu_1305_p1;
wire   [63:0] tmp_52_1_6_fu_1314_p1;
wire   [63:0] tmp_50_1_7_fu_1347_p1;
wire   [63:0] tmp_52_1_7_fu_1362_p1;
wire   [63:0] tmp_59_1_fu_1386_p1;
wire   [63:0] tmp_15_fu_1438_p1;
wire   [4:0] tmp1_fu_523_p2;
wire   [9:0] p_shl2_fu_529_p3;
wire   [6:0] p_shl3_fu_541_p3;
wire   [10:0] p_shl2_cast_fu_537_p1;
wire   [10:0] p_shl3_cast_fu_549_p1;
wire   [5:0] tmp3_fu_569_p2;
wire   [10:0] tmp3_cast_fu_575_p1;
wire   [10:0] tmp_20_fu_579_p2;
wire  signed [31:0] tmp_49_cast_fu_584_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_22_fu_593_p2;
wire   [5:0] width_3_fu_606_p2;
wire   [10:0] tmp4_cast_fu_628_p1;
wire   [10:0] tmp_49_0_1_fu_632_p2;
wire  signed [31:0] tmp_49_0_1_cast_fu_637_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_0_1_fu_646_p2;
wire   [5:0] width_3_0_1_fu_655_p2;
wire   [10:0] tmp6_cast_fu_676_p1;
wire   [10:0] tmp_49_0_2_fu_679_p2;
wire  signed [31:0] tmp_49_0_2_cast_fu_684_p1;
wire   [4:0] width_3_0_2_cast_fu_693_p2;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_0_2_fu_704_p2;
wire   [10:0] tmp7_cast_fu_723_p1;
wire   [10:0] tmp_49_0_3_fu_726_p2;
wire  signed [31:0] tmp_49_0_3_cast_fu_731_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_0_3_fu_740_p2;
wire   [10:0] tmp8_cast_fu_765_p1;
wire   [10:0] tmp_49_0_4_fu_768_p2;
wire  signed [31:0] tmp_49_0_4_cast_fu_773_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_0_4_fu_782_p2;
wire   [10:0] tmp9_cast_fu_807_p1;
wire   [10:0] tmp_49_0_5_fu_810_p2;
wire  signed [31:0] tmp_49_0_5_cast_fu_815_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_0_5_fu_824_p2;
wire   [10:0] tmp10_cast_fu_849_p1;
wire   [10:0] tmp_49_0_6_fu_852_p2;
wire  signed [31:0] tmp_49_0_6_cast_fu_857_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_0_6_fu_866_p2;
wire   [5:0] width_3_0_6_fu_875_p2;
wire   [10:0] tmp11_cast_fu_891_p1;
wire   [10:0] tmp_49_0_7_fu_894_p2;
wire  signed [31:0] tmp_49_0_7_cast_fu_899_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_0_7_fu_914_p2;
wire  signed [4:0] width4_0_in_cast_fu_923_p1;
wire   [20:0] tmp_24_cast_fu_927_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_24_fu_937_p2;
wire   [4:0] height_3_fu_953_p2;
wire   [9:0] p_shl4_fu_973_p3;
wire   [6:0] p_shl5_fu_985_p3;
wire   [10:0] p_shl4_cast_fu_981_p1;
wire   [10:0] p_shl5_cast_fu_993_p1;
wire   [5:0] tmp2_fu_1013_p2;
wire   [10:0] tmp12_cast_fu_1019_p1;
wire   [10:0] tmp_49_1_fu_1023_p2;
wire  signed [31:0] tmp_49_1_cast_fu_1028_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_1_fu_1037_p2;
wire   [5:0] width_3_1_fu_1050_p2;
wire   [10:0] tmp13_cast_fu_1072_p1;
wire   [10:0] tmp_49_1_1_fu_1076_p2;
wire  signed [31:0] tmp_49_1_1_cast_fu_1081_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_1_1_fu_1090_p2;
wire   [5:0] width_3_1_1_fu_1099_p2;
wire   [10:0] tmp14_cast_fu_1120_p1;
wire   [10:0] tmp_49_1_2_fu_1123_p2;
wire  signed [31:0] tmp_49_1_2_cast_fu_1128_p1;
wire   [4:0] width_3_1_2_cast_fu_1137_p2;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_1_2_fu_1148_p2;
wire   [10:0] tmp15_cast_fu_1167_p1;
wire   [10:0] tmp_49_1_3_fu_1170_p2;
wire  signed [31:0] tmp_49_1_3_cast_fu_1175_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_1_3_fu_1184_p2;
wire   [10:0] tmp16_cast_fu_1209_p1;
wire   [10:0] tmp_49_1_4_fu_1212_p2;
wire  signed [31:0] tmp_49_1_4_cast_fu_1217_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_1_4_fu_1226_p2;
wire   [10:0] tmp17_cast_fu_1251_p1;
wire   [10:0] tmp_49_1_5_fu_1254_p2;
wire  signed [31:0] tmp_49_1_5_cast_fu_1259_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_1_5_fu_1268_p2;
wire   [10:0] tmp18_cast_fu_1293_p1;
wire   [10:0] tmp_49_1_6_fu_1296_p2;
wire  signed [31:0] tmp_49_1_6_cast_fu_1301_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_1_6_fu_1310_p2;
wire   [5:0] width_3_1_6_fu_1319_p2;
wire   [10:0] tmp19_cast_fu_1335_p1;
wire   [10:0] tmp_49_1_7_fu_1338_p2;
wire  signed [31:0] tmp_49_1_7_cast_fu_1343_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_51_1_7_fu_1358_p2;
wire  signed [4:0] width4_0_in_1_cast_fu_1367_p1;
wire   [20:0] tmp_56_1_cast_fu_1371_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp_58_1_fu_1381_p2;
wire  signed [4:0] height_cast_fu_1403_p1;
wire   [20:0] tmp_10_cast_fu_1417_p1;
(* use_dsp48 = "no" *) wire   [20:0] tmp4_fu_1433_p2;
wire   [4:0] tmp_17_fu_1449_p0;
wire   [15:0] tmp_17_fu_1449_p1;
wire   [4:0] tmp_33_1_fu_1454_p0;
wire   [15:0] tmp_33_1_fu_1454_p1;
wire   [4:0] tmp_9_fu_1459_p0;
wire   [15:0] tmp_9_fu_1459_p1;
reg   [26:0] ap_NS_fsm;
wire   [20:0] tmp_17_fu_1449_p00;
wire   [20:0] tmp_33_1_fu_1454_p00;
wire   [20:0] tmp_9_fu_1459_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
end

network_mul_mul_5ns_16ns_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
network_mul_mul_5ns_16ns_21_1_1_U1(
    .din0(tmp_17_fu_1449_p0),
    .din1(tmp_17_fu_1449_p1),
    .dout(tmp_17_fu_1449_p2)
);

network_mul_mul_5ns_16ns_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
network_mul_mul_5ns_16ns_21_1_1_U2(
    .din0(tmp_33_1_fu_1454_p0),
    .din1(tmp_33_1_fu_1454_p1),
    .dout(tmp_33_1_fu_1454_p2)
);

network_mul_mul_5ns_16ns_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 21 ))
network_mul_mul_5ns_16ns_21_1_1_U3(
    .din0(tmp_9_fu_1459_p0),
    .din1(tmp_9_fu_1459_p1),
    .dout(tmp_9_fu_1459_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_492_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        height1_reg_407 <= 5'd1;
    end else if (((exitcond5_fu_1375_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        height1_reg_407 <= height_3_1_fu_1397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1421_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        height_reg_465 <= phitmp2_fu_1443_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) & ((tmp_16_reg_1479 == 1'd0) | ((exitcond3_fu_931_p2 == 1'd1) & (tmp_29_1_fu_959_p2 == 1'd0))))) begin
        height_reg_465 <= 3'd5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        width3_1_reg_442 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        width3_1_reg_442 <= width_3_1_7_reg_1845;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        width3_reg_419 <= 6'd1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        width3_reg_419 <= width_3_0_7_reg_1656;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & ((tmp_44_1_reg_1703 == 1'd0) | ((tmp_44_1_1_reg_1728 == 1'd0) | ((tmp_44_1_2_reg_1747 == 1'd0) | ((tmp_44_1_3_reg_1756 == 1'd0) | ((tmp_44_1_4_reg_1785 == 1'd0) | ((tmp_44_1_5_reg_1804 == 1'd0) | ((tmp_44_1_7_fu_1329_p2 == 1'd0) | (tmp_44_1_6_reg_1823 == 1'd0)))))))))) begin
        width4_0_in_1_reg_454 <= 3'd5;
    end else if (((exitcond5_fu_1375_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        width4_0_in_1_reg_454 <= phitmp1_fu_1391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & ((tmp_19_reg_1514 == 1'd0) | ((tmp_44_0_1_reg_1539 == 1'd0) | ((tmp_44_0_2_reg_1558 == 1'd0) | ((tmp_44_0_3_reg_1567 == 1'd0) | ((tmp_44_0_4_reg_1596 == 1'd0) | ((tmp_44_0_5_reg_1615 == 1'd0) | ((tmp_44_0_7_fu_885_p2 == 1'd0) | (tmp_44_0_6_reg_1634 == 1'd0)))))))))) begin
        width4_0_in_reg_431 <= 3'd5;
    end else if (((tmp_16_reg_1479 == 1'd1) & (exitcond3_fu_931_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        width4_0_in_reg_431 <= phitmp_fu_947_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        width6_reg_477 <= 5'd0;
    end else if (((exitcond_fu_1421_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        width6_reg_477 <= width_2_fu_1427_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        width_reg_396 <= 5'd0;
    end else if (((exitcond1_fu_492_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        width_reg_396 <= width_1_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp5_1_reg_1686[10 : 2] <= tmp5_1_fu_997_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp5_reg_1497[10 : 2] <= tmp5_fu_553_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_16_reg_1479 <= tmp_16_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_16_fu_509_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_17_reg_1483 <= tmp_17_fu_1449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_19_reg_1514 <= tmp_19_fu_563_p2;
        tmp_43_cast_reg_1509[5 : 0] <= tmp_43_cast_fu_559_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_1_cast_reg_1464[15 : 0] <= tmp_1_cast_fu_488_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_1_reg_1523 <= tmp_1_fu_602_p1;
        tmp_43_0_1_cast_reg_1534[5 : 0] <= tmp_43_0_1_cast_fu_618_p1[5 : 0];
        tmp_44_0_1_reg_1539 <= tmp_44_0_1_fu_622_p2;
        width_3_cast_reg_1529 <= width_3_cast_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_2_reg_1712 <= tmp_2_fu_1046_p1;
        tmp_43_1_1_cast_reg_1723[5 : 0] <= tmp_43_1_1_cast_fu_1062_p1[5 : 0];
        tmp_44_1_1_reg_1728 <= tmp_44_1_1_fu_1066_p2;
        width_3_1_cast_reg_1718 <= width_3_1_cast_fu_1056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_29_1_fu_959_p2 == 1'd1) & (exitcond3_fu_931_p2 == 1'd1) & (tmp_16_reg_1479 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        tmp_33_1_reg_1672 <= tmp_33_1_fu_1454_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_43_0_2_cast_reg_1553[5 : 0] <= tmp_43_0_2_cast_fu_666_p1[5 : 0];
        tmp_44_0_2_reg_1558 <= tmp_44_0_2_fu_670_p2;
        width_3_0_1_cast_reg_1548 <= width_3_0_1_cast_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_43_0_3_cast_reg_1576[5 : 0] <= tmp_43_0_3_cast_fu_719_p1[5 : 0];
        width_3_0_2_reg_1571 <= width_3_0_2_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_43_0_4_cast_reg_1591[5 : 0] <= tmp_43_0_4_cast_fu_755_p1[5 : 0];
        tmp_44_0_4_reg_1596 <= tmp_44_0_4_fu_759_p2;
        width_3_0_3_reg_1586 <= width_3_0_3_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_43_0_5_cast_reg_1610[5 : 0] <= tmp_43_0_5_cast_fu_797_p1[5 : 0];
        tmp_44_0_5_reg_1615 <= tmp_44_0_5_fu_801_p2;
        width_3_0_4_reg_1605 <= width_3_0_4_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_43_0_6_cast_reg_1629[5 : 0] <= tmp_43_0_6_cast_fu_839_p1[5 : 0];
        tmp_44_0_6_reg_1634 <= tmp_44_0_6_fu_843_p2;
        width_3_0_5_reg_1624 <= width_3_0_5_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_19_reg_1514 == 1'd1) & (tmp_44_0_6_reg_1634 == 1'd1) & (tmp_44_0_5_reg_1615 == 1'd1) & (tmp_44_0_4_reg_1596 == 1'd1) & (tmp_44_0_3_reg_1567 == 1'd1) & (tmp_44_0_2_reg_1558 == 1'd1) & (tmp_44_0_1_reg_1539 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        tmp_43_0_7_cast_reg_1643[5 : 0] <= tmp_43_0_7_cast_fu_881_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_43_1_2_cast_reg_1742[5 : 0] <= tmp_43_1_2_cast_fu_1110_p1[5 : 0];
        tmp_44_1_2_reg_1747 <= tmp_44_1_2_fu_1114_p2;
        width_3_1_1_cast_reg_1737 <= width_3_1_1_cast_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_43_1_3_cast_reg_1765[5 : 0] <= tmp_43_1_3_cast_fu_1163_p1[5 : 0];
        width_3_1_2_reg_1760 <= width_3_1_2_fu_1157_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        tmp_43_1_4_cast_reg_1780[5 : 0] <= tmp_43_1_4_cast_fu_1199_p1[5 : 0];
        tmp_44_1_4_reg_1785 <= tmp_44_1_4_fu_1203_p2;
        width_3_1_3_reg_1775 <= width_3_1_3_fu_1193_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tmp_43_1_5_cast_reg_1799[5 : 0] <= tmp_43_1_5_cast_fu_1241_p1[5 : 0];
        tmp_44_1_5_reg_1804 <= tmp_44_1_5_fu_1245_p2;
        width_3_1_4_reg_1794 <= width_3_1_4_fu_1235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp_43_1_6_cast_reg_1818[5 : 0] <= tmp_43_1_6_cast_fu_1283_p1[5 : 0];
        tmp_44_1_6_reg_1823 <= tmp_44_1_6_fu_1287_p2;
        width_3_1_5_reg_1813 <= width_3_1_5_fu_1277_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_44_1_6_reg_1823 == 1'd1) & (tmp_44_1_5_reg_1804 == 1'd1) & (tmp_44_1_4_reg_1785 == 1'd1) & (tmp_44_1_3_reg_1756 == 1'd1) & (tmp_44_1_2_reg_1747 == 1'd1) & (tmp_44_1_1_reg_1728 == 1'd1) & (tmp_44_1_reg_1703 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_43_1_7_cast_reg_1832[5 : 0] <= tmp_43_1_7_cast_fu_1325_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_43_1_cast_reg_1698[5 : 0] <= tmp_43_1_cast_fu_1003_p1[5 : 0];
        tmp_44_1_reg_1703 <= tmp_44_1_fu_1007_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_44_0_2_fu_670_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_44_0_3_reg_1567 <= tmp_44_0_3_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_44_1_2_fu_1114_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        tmp_44_1_3_reg_1756 <= tmp_44_1_3_fu_1142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        tmp_9_reg_1866 <= tmp_9_fu_1459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_19_reg_1514 == 1'd1) & (tmp_44_0_7_fu_885_p2 == 1'd1) & (tmp_44_0_6_reg_1634 == 1'd1) & (tmp_44_0_5_reg_1615 == 1'd1) & (tmp_44_0_4_reg_1596 == 1'd1) & (tmp_44_0_3_reg_1567 == 1'd1) & (tmp_44_0_2_reg_1558 == 1'd1) & (tmp_44_0_1_reg_1539 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        width_3_0_7_reg_1656 <= width_3_0_7_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_44_1_7_fu_1329_p2 == 1'd1) & (tmp_44_1_6_reg_1823 == 1'd1) & (tmp_44_1_5_reg_1804 == 1'd1) & (tmp_44_1_4_reg_1785 == 1'd1) & (tmp_44_1_3_reg_1756 == 1'd1) & (tmp_44_1_2_reg_1747 == 1'd1) & (tmp_44_1_1_reg_1728 == 1'd1) & (tmp_44_1_reg_1703 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        width_3_1_7_reg_1845 <= width_3_1_7_fu_1352_p2;
    end
end

always @ (*) begin
    if ((((exitcond4_fu_1411_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond4_fu_1411_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        input_0_address0 = tmp_50_1_7_fu_1347_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        input_0_address0 = tmp_50_1_6_fu_1305_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        input_0_address0 = tmp_50_1_5_fu_1263_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        input_0_address0 = tmp_50_1_4_fu_1221_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        input_0_address0 = tmp_50_1_3_fu_1179_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_0_address0 = tmp_50_1_2_fu_1132_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        input_0_address0 = tmp_50_1_1_fu_1085_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        input_0_address0 = tmp_50_1_fu_1032_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_0_address0 = tmp_50_0_7_fu_903_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_0_address0 = tmp_50_0_6_fu_861_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_0_address0 = tmp_50_0_5_fu_819_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_0_address0 = tmp_50_0_4_fu_777_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_0_address0 = tmp_50_0_3_fu_735_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_0_address0 = tmp_50_0_2_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_0_address0 = tmp_50_0_1_fu_641_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_0_address0 = tmp_21_fu_588_p1;
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        output_r_address0 = tmp_15_fu_1438_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        output_r_address0 = tmp_59_1_fu_1386_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        output_r_address0 = tmp_52_1_7_fu_1362_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_r_address0 = tmp_52_1_6_fu_1314_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        output_r_address0 = tmp_52_1_5_fu_1272_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_r_address0 = tmp_52_1_4_fu_1230_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        output_r_address0 = tmp_52_1_3_fu_1188_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_r_address0 = tmp_52_1_2_fu_1152_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        output_r_address0 = tmp_52_1_1_fu_1094_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        output_r_address0 = tmp_52_1_fu_1041_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        output_r_address0 = tmp_41_1_fu_969_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        output_r_address0 = tmp_25_fu_942_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        output_r_address0 = tmp_52_0_7_fu_918_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_address0 = tmp_52_0_6_fu_870_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        output_r_address0 = tmp_52_0_5_fu_828_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_r_address0 = tmp_52_0_4_fu_786_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_address0 = tmp_52_0_3_fu_744_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        output_r_address0 = tmp_52_0_2_fu_708_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_address0 = tmp_52_0_1_fu_650_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_address0 = tmp_23_fu_597_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_address0 = tmp_18_fu_519_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_r_address0 = tmp_s_fu_504_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        output_r_d0 = input_0_q0;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        output_r_d0 = 16'd0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | ((exitcond1_fu_492_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((exitcond_fu_1421_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((exitcond5_fu_1375_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25)) | ((tmp_44_1_6_reg_1823 == 1'd1) & (tmp_44_1_5_reg_1804 == 1'd1) & (tmp_44_1_4_reg_1785 == 1'd1) & (tmp_44_1_3_reg_1756 == 1'd1) & (tmp_44_1_2_reg_1747 == 1'd1) & (tmp_44_1_1_reg_1728 == 1'd1) & (tmp_44_1_reg_1703 == 1'd1) & (1'b1 == ap_CS_fsm_state23)) | ((tmp_16_reg_1479 == 1'd1) & (exitcond3_fu_931_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((tmp_19_reg_1514 == 1'd1) & (tmp_44_0_6_reg_1634 == 1'd1) & (tmp_44_0_5_reg_1615 == 1'd1) & (tmp_44_0_4_reg_1596 == 1'd1) & (tmp_44_0_3_reg_1567 == 1'd1) & (tmp_44_0_2_reg_1558 == 1'd1) & (tmp_44_0_1_reg_1539 == 1'd1) & (1'b1 == ap_CS_fsm_state12)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_492_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((tmp_16_fu_509_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_19_fu_563_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_44_0_1_fu_622_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (tmp_44_0_2_fu_670_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_44_0_3_reg_1567 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_44_0_4_fu_759_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (tmp_44_0_5_fu_801_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & ((tmp_19_reg_1514 == 1'd0) | ((tmp_44_0_1_reg_1539 == 1'd0) | ((tmp_44_0_2_reg_1558 == 1'd0) | ((tmp_44_0_3_reg_1567 == 1'd0) | ((tmp_44_0_4_reg_1596 == 1'd0) | ((tmp_44_0_5_reg_1615 == 1'd0) | ((tmp_44_0_7_fu_885_p2 == 1'd0) | (tmp_44_0_6_reg_1634 == 1'd0)))))))))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & ((tmp_16_reg_1479 == 1'd0) | ((exitcond3_fu_931_p2 == 1'd1) & (tmp_29_1_fu_959_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else if (((tmp_29_1_fu_959_p2 == 1'd1) & (exitcond3_fu_931_p2 == 1'd1) & (tmp_16_reg_1479 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((tmp_44_1_fu_1007_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((tmp_44_1_1_fu_1066_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((tmp_44_1_2_fu_1114_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((tmp_44_1_3_reg_1756 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((tmp_44_1_4_fu_1203_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((tmp_44_1_5_fu_1245_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & ((tmp_44_1_reg_1703 == 1'd0) | ((tmp_44_1_1_reg_1728 == 1'd0) | ((tmp_44_1_2_reg_1747 == 1'd0) | ((tmp_44_1_3_reg_1756 == 1'd0) | ((tmp_44_1_4_reg_1785 == 1'd0) | ((tmp_44_1_5_reg_1804 == 1'd0) | ((tmp_44_1_7_fu_1329_p2 == 1'd0) | (tmp_44_1_6_reg_1823 == 1'd0)))))))))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state25 : begin
            if (((exitcond5_fu_1375_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((exitcond4_fu_1411_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((exitcond_fu_1421_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond1_fu_492_p2 = ((width_reg_396 == 5'd30) ? 1'b1 : 1'b0);

assign exitcond3_fu_931_p2 = ((width4_0_in_reg_431 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond4_fu_1411_p2 = ((height_reg_465 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond5_fu_1375_p2 = ((width4_0_in_1_reg_454 == 3'd6) ? 1'b1 : 1'b0);

assign exitcond_fu_1421_p2 = ((width6_reg_477 == 5'd30) ? 1'b1 : 1'b0);

assign height_3_1_fu_1397_p2 = (height1_reg_407 + 5'd2);

assign height_3_fu_953_p2 = (height1_reg_407 + 5'd1);

assign height_cast_fu_1403_p1 = height_reg_465;

assign p_shl2_cast_fu_537_p1 = p_shl2_fu_529_p3;

assign p_shl2_fu_529_p3 = {{tmp1_fu_523_p2}, {5'd0}};

assign p_shl3_cast_fu_549_p1 = p_shl3_fu_541_p3;

assign p_shl3_fu_541_p3 = {{tmp1_fu_523_p2}, {2'd0}};

assign p_shl4_cast_fu_981_p1 = p_shl4_fu_973_p3;

assign p_shl4_fu_973_p3 = {{height1_reg_407}, {5'd0}};

assign p_shl5_cast_fu_993_p1 = p_shl5_fu_985_p3;

assign p_shl5_fu_985_p3 = {{height1_reg_407}, {2'd0}};

assign phitmp1_fu_1391_p2 = ($signed(width4_0_in_1_reg_454) + $signed(3'd1));

assign phitmp2_fu_1443_p2 = ($signed(height_reg_465) + $signed(3'd1));

assign phitmp_fu_947_p2 = ($signed(width4_0_in_reg_431) + $signed(3'd1));

assign tmp10_cast_fu_849_p1 = width_3_0_4_reg_1605;

assign tmp11_cast_fu_891_p1 = width_3_0_5_reg_1624;

assign tmp12_cast_fu_1019_p1 = tmp2_fu_1013_p2;

assign tmp13_cast_fu_1072_p1 = tmp_2_fu_1046_p1;

assign tmp14_cast_fu_1120_p1 = width_3_1_cast_reg_1718;

assign tmp15_cast_fu_1167_p1 = width_3_1_1_cast_reg_1737;

assign tmp16_cast_fu_1209_p1 = width_3_1_2_reg_1760;

assign tmp17_cast_fu_1251_p1 = width_3_1_3_reg_1775;

assign tmp18_cast_fu_1293_p1 = width_3_1_4_reg_1794;

assign tmp19_cast_fu_1335_p1 = width_3_1_5_reg_1813;

assign tmp1_fu_523_p2 = ($signed(height1_reg_407) + $signed(5'd31));

assign tmp2_fu_1013_p2 = ($signed(6'd63) + $signed(width3_1_reg_442));

assign tmp3_cast_fu_575_p1 = tmp3_fu_569_p2;

assign tmp3_fu_569_p2 = ($signed(6'd63) + $signed(width3_reg_419));

assign tmp4_cast_fu_628_p1 = tmp_1_fu_602_p1;

assign tmp4_fu_1433_p2 = (tmp_9_reg_1866 + tmp_10_cast_fu_1417_p1);

assign tmp5_1_fu_997_p2 = (p_shl4_cast_fu_981_p1 - p_shl5_cast_fu_993_p1);

assign tmp5_fu_553_p2 = (p_shl2_cast_fu_537_p1 - p_shl3_cast_fu_549_p1);

assign tmp6_cast_fu_676_p1 = width_3_cast_reg_1529;

assign tmp7_cast_fu_723_p1 = width_3_0_1_cast_reg_1548;

assign tmp8_cast_fu_765_p1 = width_3_0_2_reg_1571;

assign tmp9_cast_fu_807_p1 = width_3_0_3_reg_1586;

assign tmp_10_cast_fu_1417_p1 = width6_reg_477;

assign tmp_15_fu_1438_p1 = tmp4_fu_1433_p2;

assign tmp_16_fu_509_p2 = ((height1_reg_407 < 5'd29) ? 1'b1 : 1'b0);

assign tmp_17_fu_1449_p0 = tmp_17_fu_1449_p00;

assign tmp_17_fu_1449_p00 = height1_reg_407;

assign tmp_17_fu_1449_p1 = tmp_1_cast_reg_1464;

assign tmp_18_fu_519_p1 = tmp_17_reg_1483;

assign tmp_19_fu_563_p2 = ((width3_reg_419 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_1_cast_fu_488_p1 = output_width;

assign tmp_1_fu_602_p1 = width3_reg_419[4:0];

assign tmp_20_fu_579_p2 = (tmp5_reg_1497 + tmp3_cast_fu_575_p1);

assign tmp_21_fu_588_p1 = $unsigned(tmp_49_cast_fu_584_p1);

assign tmp_22_fu_593_p2 = (tmp_43_cast_reg_1509 + tmp_17_reg_1483);

assign tmp_23_fu_597_p1 = tmp_22_fu_593_p2;

assign tmp_24_cast_fu_927_p1 = $unsigned(width4_0_in_cast_fu_923_p1);

assign tmp_24_fu_937_p2 = (tmp_17_reg_1483 + tmp_24_cast_fu_927_p1);

assign tmp_25_fu_942_p1 = tmp_24_fu_937_p2;

assign tmp_29_1_fu_959_p2 = ((height_3_fu_953_p2 < 5'd29) ? 1'b1 : 1'b0);

assign tmp_2_fu_1046_p1 = width3_1_reg_442[4:0];

assign tmp_33_1_fu_1454_p0 = tmp_33_1_fu_1454_p00;

assign tmp_33_1_fu_1454_p00 = height_3_fu_953_p2;

assign tmp_33_1_fu_1454_p1 = tmp_1_cast_reg_1464;

assign tmp_41_1_fu_969_p1 = tmp_33_1_reg_1672;

assign tmp_43_0_1_cast_fu_618_p1 = width_3_fu_606_p2;

assign tmp_43_0_2_cast_fu_666_p1 = width_3_0_1_fu_655_p2;

assign tmp_43_0_3_cast_fu_719_p1 = width_3_0_2_fu_713_p2;

assign tmp_43_0_4_cast_fu_755_p1 = width_3_0_3_fu_749_p2;

assign tmp_43_0_5_cast_fu_797_p1 = width_3_0_4_fu_791_p2;

assign tmp_43_0_6_cast_fu_839_p1 = width_3_0_5_fu_833_p2;

assign tmp_43_0_7_cast_fu_881_p1 = width_3_0_6_fu_875_p2;

assign tmp_43_1_1_cast_fu_1062_p1 = width_3_1_fu_1050_p2;

assign tmp_43_1_2_cast_fu_1110_p1 = width_3_1_1_fu_1099_p2;

assign tmp_43_1_3_cast_fu_1163_p1 = width_3_1_2_fu_1157_p2;

assign tmp_43_1_4_cast_fu_1199_p1 = width_3_1_3_fu_1193_p2;

assign tmp_43_1_5_cast_fu_1241_p1 = width_3_1_4_fu_1235_p2;

assign tmp_43_1_6_cast_fu_1283_p1 = width_3_1_5_fu_1277_p2;

assign tmp_43_1_7_cast_fu_1325_p1 = width_3_1_6_fu_1319_p2;

assign tmp_43_1_cast_fu_1003_p1 = width3_1_reg_442;

assign tmp_43_cast_fu_559_p1 = width3_reg_419;

assign tmp_44_0_1_fu_622_p2 = ((width_3_cast_fu_612_p2 < 5'd29) ? 1'b1 : 1'b0);

assign tmp_44_0_2_fu_670_p2 = ((width_3_0_1_cast_fu_661_p2 < 5'd29) ? 1'b1 : 1'b0);

assign tmp_44_0_3_fu_698_p2 = ((width_3_0_2_cast_fu_693_p2 < 5'd29) ? 1'b1 : 1'b0);

assign tmp_44_0_4_fu_759_p2 = ((width_3_0_3_fu_749_p2 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_44_0_5_fu_801_p2 = ((width_3_0_4_fu_791_p2 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_44_0_6_fu_843_p2 = ((width_3_0_5_fu_833_p2 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_44_0_7_fu_885_p2 = ((width_3_0_6_fu_875_p2 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_44_1_1_fu_1066_p2 = ((width_3_1_cast_fu_1056_p2 < 5'd29) ? 1'b1 : 1'b0);

assign tmp_44_1_2_fu_1114_p2 = ((width_3_1_1_cast_fu_1105_p2 < 5'd29) ? 1'b1 : 1'b0);

assign tmp_44_1_3_fu_1142_p2 = ((width_3_1_2_cast_fu_1137_p2 < 5'd29) ? 1'b1 : 1'b0);

assign tmp_44_1_4_fu_1203_p2 = ((width_3_1_3_fu_1193_p2 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_44_1_5_fu_1245_p2 = ((width_3_1_4_fu_1235_p2 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_44_1_6_fu_1287_p2 = ((width_3_1_5_fu_1277_p2 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_44_1_7_fu_1329_p2 = ((width_3_1_6_fu_1319_p2 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_44_1_fu_1007_p2 = ((width3_1_reg_442 < 6'd29) ? 1'b1 : 1'b0);

assign tmp_49_0_1_cast_fu_637_p1 = $signed(tmp_49_0_1_fu_632_p2);

assign tmp_49_0_1_fu_632_p2 = (tmp5_reg_1497 + tmp4_cast_fu_628_p1);

assign tmp_49_0_2_cast_fu_684_p1 = $signed(tmp_49_0_2_fu_679_p2);

assign tmp_49_0_2_fu_679_p2 = (tmp5_reg_1497 + tmp6_cast_fu_676_p1);

assign tmp_49_0_3_cast_fu_731_p1 = $signed(tmp_49_0_3_fu_726_p2);

assign tmp_49_0_3_fu_726_p2 = (tmp7_cast_fu_723_p1 + tmp5_reg_1497);

assign tmp_49_0_4_cast_fu_773_p1 = $signed(tmp_49_0_4_fu_768_p2);

assign tmp_49_0_4_fu_768_p2 = (tmp8_cast_fu_765_p1 + tmp5_reg_1497);

assign tmp_49_0_5_cast_fu_815_p1 = $signed(tmp_49_0_5_fu_810_p2);

assign tmp_49_0_5_fu_810_p2 = (tmp9_cast_fu_807_p1 + tmp5_reg_1497);

assign tmp_49_0_6_cast_fu_857_p1 = $signed(tmp_49_0_6_fu_852_p2);

assign tmp_49_0_6_fu_852_p2 = (tmp10_cast_fu_849_p1 + tmp5_reg_1497);

assign tmp_49_0_7_cast_fu_899_p1 = $signed(tmp_49_0_7_fu_894_p2);

assign tmp_49_0_7_fu_894_p2 = (tmp11_cast_fu_891_p1 + tmp5_reg_1497);

assign tmp_49_1_1_cast_fu_1081_p1 = $signed(tmp_49_1_1_fu_1076_p2);

assign tmp_49_1_1_fu_1076_p2 = (tmp5_1_reg_1686 + tmp13_cast_fu_1072_p1);

assign tmp_49_1_2_cast_fu_1128_p1 = $signed(tmp_49_1_2_fu_1123_p2);

assign tmp_49_1_2_fu_1123_p2 = (tmp5_1_reg_1686 + tmp14_cast_fu_1120_p1);

assign tmp_49_1_3_cast_fu_1175_p1 = $signed(tmp_49_1_3_fu_1170_p2);

assign tmp_49_1_3_fu_1170_p2 = (tmp15_cast_fu_1167_p1 + tmp5_1_reg_1686);

assign tmp_49_1_4_cast_fu_1217_p1 = $signed(tmp_49_1_4_fu_1212_p2);

assign tmp_49_1_4_fu_1212_p2 = (tmp16_cast_fu_1209_p1 + tmp5_1_reg_1686);

assign tmp_49_1_5_cast_fu_1259_p1 = $signed(tmp_49_1_5_fu_1254_p2);

assign tmp_49_1_5_fu_1254_p2 = (tmp17_cast_fu_1251_p1 + tmp5_1_reg_1686);

assign tmp_49_1_6_cast_fu_1301_p1 = $signed(tmp_49_1_6_fu_1296_p2);

assign tmp_49_1_6_fu_1296_p2 = (tmp18_cast_fu_1293_p1 + tmp5_1_reg_1686);

assign tmp_49_1_7_cast_fu_1343_p1 = $signed(tmp_49_1_7_fu_1338_p2);

assign tmp_49_1_7_fu_1338_p2 = (tmp19_cast_fu_1335_p1 + tmp5_1_reg_1686);

assign tmp_49_1_cast_fu_1028_p1 = $signed(tmp_49_1_fu_1023_p2);

assign tmp_49_1_fu_1023_p2 = (tmp5_1_reg_1686 + tmp12_cast_fu_1019_p1);

assign tmp_49_cast_fu_584_p1 = $signed(tmp_20_fu_579_p2);

assign tmp_50_0_1_fu_641_p1 = $unsigned(tmp_49_0_1_cast_fu_637_p1);

assign tmp_50_0_2_fu_688_p1 = $unsigned(tmp_49_0_2_cast_fu_684_p1);

assign tmp_50_0_3_fu_735_p1 = $unsigned(tmp_49_0_3_cast_fu_731_p1);

assign tmp_50_0_4_fu_777_p1 = $unsigned(tmp_49_0_4_cast_fu_773_p1);

assign tmp_50_0_5_fu_819_p1 = $unsigned(tmp_49_0_5_cast_fu_815_p1);

assign tmp_50_0_6_fu_861_p1 = $unsigned(tmp_49_0_6_cast_fu_857_p1);

assign tmp_50_0_7_fu_903_p1 = $unsigned(tmp_49_0_7_cast_fu_899_p1);

assign tmp_50_1_1_fu_1085_p1 = $unsigned(tmp_49_1_1_cast_fu_1081_p1);

assign tmp_50_1_2_fu_1132_p1 = $unsigned(tmp_49_1_2_cast_fu_1128_p1);

assign tmp_50_1_3_fu_1179_p1 = $unsigned(tmp_49_1_3_cast_fu_1175_p1);

assign tmp_50_1_4_fu_1221_p1 = $unsigned(tmp_49_1_4_cast_fu_1217_p1);

assign tmp_50_1_5_fu_1263_p1 = $unsigned(tmp_49_1_5_cast_fu_1259_p1);

assign tmp_50_1_6_fu_1305_p1 = $unsigned(tmp_49_1_6_cast_fu_1301_p1);

assign tmp_50_1_7_fu_1347_p1 = $unsigned(tmp_49_1_7_cast_fu_1343_p1);

assign tmp_50_1_fu_1032_p1 = $unsigned(tmp_49_1_cast_fu_1028_p1);

assign tmp_51_0_1_fu_646_p2 = (tmp_43_0_1_cast_reg_1534 + tmp_17_reg_1483);

assign tmp_51_0_2_fu_704_p2 = (tmp_43_0_2_cast_reg_1553 + tmp_17_reg_1483);

assign tmp_51_0_3_fu_740_p2 = (tmp_17_reg_1483 + tmp_43_0_3_cast_reg_1576);

assign tmp_51_0_4_fu_782_p2 = (tmp_17_reg_1483 + tmp_43_0_4_cast_reg_1591);

assign tmp_51_0_5_fu_824_p2 = (tmp_17_reg_1483 + tmp_43_0_5_cast_reg_1610);

assign tmp_51_0_6_fu_866_p2 = (tmp_17_reg_1483 + tmp_43_0_6_cast_reg_1629);

assign tmp_51_0_7_fu_914_p2 = (tmp_17_reg_1483 + tmp_43_0_7_cast_reg_1643);

assign tmp_51_1_1_fu_1090_p2 = (tmp_43_1_1_cast_reg_1723 + tmp_33_1_reg_1672);

assign tmp_51_1_2_fu_1148_p2 = (tmp_43_1_2_cast_reg_1742 + tmp_33_1_reg_1672);

assign tmp_51_1_3_fu_1184_p2 = (tmp_33_1_reg_1672 + tmp_43_1_3_cast_reg_1765);

assign tmp_51_1_4_fu_1226_p2 = (tmp_33_1_reg_1672 + tmp_43_1_4_cast_reg_1780);

assign tmp_51_1_5_fu_1268_p2 = (tmp_33_1_reg_1672 + tmp_43_1_5_cast_reg_1799);

assign tmp_51_1_6_fu_1310_p2 = (tmp_33_1_reg_1672 + tmp_43_1_6_cast_reg_1818);

assign tmp_51_1_7_fu_1358_p2 = (tmp_33_1_reg_1672 + tmp_43_1_7_cast_reg_1832);

assign tmp_51_1_fu_1037_p2 = (tmp_43_1_cast_reg_1698 + tmp_33_1_reg_1672);

assign tmp_52_0_1_fu_650_p1 = tmp_51_0_1_fu_646_p2;

assign tmp_52_0_2_fu_708_p1 = tmp_51_0_2_fu_704_p2;

assign tmp_52_0_3_fu_744_p1 = tmp_51_0_3_fu_740_p2;

assign tmp_52_0_4_fu_786_p1 = tmp_51_0_4_fu_782_p2;

assign tmp_52_0_5_fu_828_p1 = tmp_51_0_5_fu_824_p2;

assign tmp_52_0_6_fu_870_p1 = tmp_51_0_6_fu_866_p2;

assign tmp_52_0_7_fu_918_p1 = tmp_51_0_7_fu_914_p2;

assign tmp_52_1_1_fu_1094_p1 = tmp_51_1_1_fu_1090_p2;

assign tmp_52_1_2_fu_1152_p1 = tmp_51_1_2_fu_1148_p2;

assign tmp_52_1_3_fu_1188_p1 = tmp_51_1_3_fu_1184_p2;

assign tmp_52_1_4_fu_1230_p1 = tmp_51_1_4_fu_1226_p2;

assign tmp_52_1_5_fu_1272_p1 = tmp_51_1_5_fu_1268_p2;

assign tmp_52_1_6_fu_1314_p1 = tmp_51_1_6_fu_1310_p2;

assign tmp_52_1_7_fu_1362_p1 = tmp_51_1_7_fu_1358_p2;

assign tmp_52_1_fu_1041_p1 = tmp_51_1_fu_1037_p2;

assign tmp_56_1_cast_fu_1371_p1 = $unsigned(width4_0_in_1_cast_fu_1367_p1);

assign tmp_58_1_fu_1381_p2 = (tmp_33_1_reg_1672 + tmp_56_1_cast_fu_1371_p1);

assign tmp_59_1_fu_1386_p1 = tmp_58_1_fu_1381_p2;

assign tmp_9_fu_1459_p0 = tmp_9_fu_1459_p00;

assign tmp_9_fu_1459_p00 = $unsigned(height_cast_fu_1403_p1);

assign tmp_9_fu_1459_p1 = tmp_1_cast_reg_1464;

assign tmp_s_fu_504_p1 = width_reg_396;

assign width4_0_in_1_cast_fu_1367_p1 = width4_0_in_1_reg_454;

assign width4_0_in_cast_fu_923_p1 = width4_0_in_reg_431;

assign width_1_fu_498_p2 = (width_reg_396 + 5'd1);

assign width_2_fu_1427_p2 = (width6_reg_477 + 5'd1);

assign width_3_0_1_cast_fu_661_p2 = (tmp_1_reg_1523 + 5'd2);

assign width_3_0_1_fu_655_p2 = (width3_reg_419 + 6'd2);

assign width_3_0_2_cast_fu_693_p2 = (tmp_1_reg_1523 + 5'd3);

assign width_3_0_2_fu_713_p2 = (width3_reg_419 + 6'd3);

assign width_3_0_3_fu_749_p2 = (width3_reg_419 + 6'd4);

assign width_3_0_4_fu_791_p2 = (width3_reg_419 + 6'd5);

assign width_3_0_5_fu_833_p2 = (width3_reg_419 + 6'd6);

assign width_3_0_6_fu_875_p2 = (width3_reg_419 + 6'd7);

assign width_3_0_7_fu_908_p2 = (width3_reg_419 + 6'd8);

assign width_3_1_1_cast_fu_1105_p2 = (tmp_2_reg_1712 + 5'd2);

assign width_3_1_1_fu_1099_p2 = (width3_1_reg_442 + 6'd2);

assign width_3_1_2_cast_fu_1137_p2 = (tmp_2_reg_1712 + 5'd3);

assign width_3_1_2_fu_1157_p2 = (width3_1_reg_442 + 6'd3);

assign width_3_1_3_fu_1193_p2 = (width3_1_reg_442 + 6'd4);

assign width_3_1_4_fu_1235_p2 = (width3_1_reg_442 + 6'd5);

assign width_3_1_5_fu_1277_p2 = (width3_1_reg_442 + 6'd6);

assign width_3_1_6_fu_1319_p2 = (width3_1_reg_442 + 6'd7);

assign width_3_1_7_fu_1352_p2 = (width3_1_reg_442 + 6'd8);

assign width_3_1_cast_fu_1056_p2 = (5'd1 + tmp_2_fu_1046_p1);

assign width_3_1_fu_1050_p2 = (6'd1 + width3_1_reg_442);

assign width_3_cast_fu_612_p2 = (5'd1 + tmp_1_fu_602_p1);

assign width_3_fu_606_p2 = (6'd1 + width3_reg_419);

always @ (posedge ap_clk) begin
    tmp_1_cast_reg_1464[20:16] <= 5'b00000;
    tmp5_reg_1497[1:0] <= 2'b00;
    tmp_43_cast_reg_1509[20:6] <= 15'b000000000000000;
    tmp_43_0_1_cast_reg_1534[20:6] <= 15'b000000000000000;
    tmp_43_0_2_cast_reg_1553[20:6] <= 15'b000000000000000;
    tmp_43_0_3_cast_reg_1576[20:6] <= 15'b000000000000000;
    tmp_43_0_4_cast_reg_1591[20:6] <= 15'b000000000000000;
    tmp_43_0_5_cast_reg_1610[20:6] <= 15'b000000000000000;
    tmp_43_0_6_cast_reg_1629[20:6] <= 15'b000000000000000;
    tmp_43_0_7_cast_reg_1643[20:6] <= 15'b000000000000000;
    tmp5_1_reg_1686[1:0] <= 2'b00;
    tmp_43_1_cast_reg_1698[20:6] <= 15'b000000000000000;
    tmp_43_1_1_cast_reg_1723[20:6] <= 15'b000000000000000;
    tmp_43_1_2_cast_reg_1742[20:6] <= 15'b000000000000000;
    tmp_43_1_3_cast_reg_1765[20:6] <= 15'b000000000000000;
    tmp_43_1_4_cast_reg_1780[20:6] <= 15'b000000000000000;
    tmp_43_1_5_cast_reg_1799[20:6] <= 15'b000000000000000;
    tmp_43_1_6_cast_reg_1818[20:6] <= 15'b000000000000000;
    tmp_43_1_7_cast_reg_1832[20:6] <= 15'b000000000000000;
end

endmodule //padding2d_fix16_4
