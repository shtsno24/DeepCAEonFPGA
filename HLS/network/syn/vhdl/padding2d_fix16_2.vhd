-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity padding2d_fix16_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_depth : IN STD_LOGIC_VECTOR (15 downto 0);
    input_height : IN STD_LOGIC_VECTOR (15 downto 0);
    input_width : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of padding2d_fix16_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv17_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000011";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_291_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_fu_291_p2 : signal is "no";
    signal tmp_reg_554 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_528_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_reg_561 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_12_fu_297_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_fu_534_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_reg_578 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_302_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_reg_583 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_fu_310_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_45_reg_589 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_46_fu_316_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_reg_594 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_321_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_47_reg_600 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_332_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_reg_605 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_343_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_610 : STD_LOGIC_VECTOR (15 downto 0);
    signal depth_1_fu_354_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal depth_1_reg_618 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_1_fu_369_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_51_fu_380_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_392_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_count_3_fu_397_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of i_count_3_fu_397_p2 : signal is "no";
    signal i_count_3_reg_641 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_407_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp_55_fu_407_p2 : signal is "no";
    signal tmp_55_reg_646 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_1_fu_417_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_1_reg_655 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_56_fu_423_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_56_reg_660 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond2_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_count_8_fu_438_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond3_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_444_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_reg_673 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_449_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_reg_678 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_465_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_reg_691 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv_next2_fu_471_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv_next9_fu_476_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_9_fu_486_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i_2_fu_501_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal o_count_7_fu_512_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next1_fu_518_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv_next_fu_523_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv_reg_110 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv2_reg_120 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_reg_130 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_count_reg_142 : STD_LOGIC_VECTOR (15 downto 0);
    signal depth_reg_154 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_1_reg_165 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond1_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_175 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_6_reg_186 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv8_reg_197 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_2_reg_207 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_count_1_reg_218 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_reg_229 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_3_reg_240 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_4_reg_250 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_count_2_reg_261 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_5_reg_271 : STD_LOGIC_VECTOR (15 downto 0);
    signal i2_reg_280 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_50_fu_375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_fu_433_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_460_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_291_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_297_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_302_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_cast_fu_307_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_cast_fu_307_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_46_fu_316_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_327_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp3_fu_327_p2 : signal is "no";
    signal tmp4_fu_338_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp4_fu_338_p2 : signal is "no";
    signal tmp_48_cast_fu_360_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp1_fu_386_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_fu_402_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond2_fu_412_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_444_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_cast_fu_492_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_42_fu_528_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component network_mul_mul_16s_16s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    network_mul_mul_16s_16s_16_1_1_U63 : component network_mul_mul_16s_16s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => input_height,
        din1 => tmp_42_fu_528_p1,
        dout => tmp_42_fu_528_p2);

    network_mul_mul_16s_16s_16_1_1_U64 : component network_mul_mul_16s_16s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => input_width,
        din1 => input_height,
        dout => tmp_41_fu_534_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    depth_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                depth_reg_154 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_58_fu_496_p2 = ap_const_lv1_0))) then 
                depth_reg_154 <= depth_1_reg_618;
            end if; 
        end if;
    end process;

    height_reg_229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_49_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                height_reg_229 <= ap_const_lv16_0;
            elsif (((exitcond_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                height_reg_229 <= height_1_reg_655;
            end if; 
        end if;
    end process;

    i2_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_58_fu_496_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i2_reg_280 <= i_2_fu_501_p2;
            elsif (((exitcond2_fu_412_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i2_reg_280 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    i_count_1_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_49_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_count_1_reg_218 <= i_count_reg_142;
            elsif (((exitcond_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i_count_1_reg_218 <= tmp_s_reg_673;
            end if; 
        end if;
    end process;

    i_count_2_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_count_2_reg_261 <= tmp_65_reg_691;
            elsif (((exitcond3_fu_427_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_count_2_reg_261 <= i_count_1_reg_218;
            end if; 
        end if;
    end process;

    i_count_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_count_reg_142 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_58_fu_496_p2 = ap_const_lv1_0))) then 
                i_count_reg_142 <= i_count_3_reg_641;
            end if; 
        end if;
    end process;

    i_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond1_fu_349_p2 = ap_const_lv1_0))) then 
                i_reg_175 <= ap_const_lv16_0;
            elsif (((tmp_49_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_reg_175 <= i_1_fu_369_p2;
            end if; 
        end if;
    end process;

    indvars_iv2_reg_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvars_iv2_reg_120 <= tmp_43_fu_302_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_58_fu_496_p2 = ap_const_lv1_0))) then 
                indvars_iv2_reg_120 <= indvars_iv_next1_fu_518_p2;
            end if; 
        end if;
    end process;

    indvars_iv8_reg_197_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_49_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvars_iv8_reg_197 <= tmp_53_fu_392_p2;
            elsif (((exitcond_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                indvars_iv8_reg_197 <= indvars_iv_next9_fu_476_p2;
            end if; 
        end if;
    end process;

    indvars_iv_reg_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvars_iv_reg_110 <= tmp_46_fu_316_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_58_fu_496_p2 = ap_const_lv1_0))) then 
                indvars_iv_reg_110 <= indvars_iv_next_fu_523_p2;
            end if; 
        end if;
    end process;

    o_count_1_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond1_fu_349_p2 = ap_const_lv1_0))) then 
                o_count_1_reg_165 <= o_count_reg_130;
            elsif (((tmp_49_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                o_count_1_reg_165 <= tmp_51_fu_380_p2;
            end if; 
        end if;
    end process;

    o_count_2_reg_207_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_49_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                o_count_2_reg_207 <= indvars_iv2_reg_120;
            elsif (((exitcond_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                o_count_2_reg_207 <= tmp_61_reg_678;
            end if; 
        end if;
    end process;

    o_count_3_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond2_fu_412_p2 = ap_const_lv1_0))) then 
                o_count_3_reg_240 <= o_count_2_reg_207;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_fu_427_p2 = ap_const_lv1_0))) then 
                o_count_3_reg_240 <= o_count_8_fu_438_p2;
            end if; 
        end if;
    end process;

    o_count_4_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                o_count_4_reg_250 <= o_count_9_fu_486_p2;
            elsif (((exitcond3_fu_427_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                o_count_4_reg_250 <= o_count_6_reg_186;
            end if; 
        end if;
    end process;

    o_count_5_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_58_fu_496_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                o_count_5_reg_271 <= o_count_7_fu_512_p2;
            elsif (((exitcond2_fu_412_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                o_count_5_reg_271 <= tmp_55_reg_646;
            end if; 
        end if;
    end process;

    o_count_6_reg_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_49_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                o_count_6_reg_186 <= indvars_iv_reg_110;
            elsif (((exitcond_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                o_count_6_reg_186 <= indvars_iv_next2_fu_471_p2;
            end if; 
        end if;
    end process;

    o_count_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                o_count_reg_130 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_58_fu_496_p2 = ap_const_lv1_0))) then 
                o_count_reg_130 <= tmp_56_reg_660;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                depth_1_reg_618 <= depth_1_fu_354_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                height_1_reg_655 <= height_1_fu_417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_49_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                i_count_3_reg_641 <= i_count_3_fu_397_p2;
                tmp_55_reg_646 <= tmp_55_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    tmp_12_reg_573(15 downto 1) <= tmp_12_fu_297_p2(15 downto 1);
                tmp_15_reg_605 <= tmp_15_fu_332_p2;
                tmp_16_reg_610 <= tmp_16_fu_343_p2;
                tmp_41_reg_578 <= tmp_41_fu_534_p2;
                tmp_43_reg_583 <= tmp_43_fu_302_p2;
                tmp_45_reg_589 <= tmp_45_fu_310_p2;
                tmp_46_reg_594 <= tmp_46_fu_316_p2;
                tmp_47_reg_600 <= tmp_47_fu_321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_42_reg_561 <= tmp_42_fu_528_p2;
                tmp_reg_554 <= tmp_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_412_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                tmp_56_reg_660 <= tmp_56_fu_423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3_fu_427_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_61_reg_678 <= tmp_61_fu_449_p2;
                tmp_s_reg_673 <= tmp_s_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond_fu_454_p2 = ap_const_lv1_0))) then
                tmp_65_reg_691 <= tmp_65_fu_465_p2;
            end if;
        end if;
    end process;
    tmp_12_reg_573(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, tmp_49_fu_364_p2, ap_CS_fsm_state5, exitcond2_fu_412_p2, ap_CS_fsm_state6, exitcond3_fu_427_p2, ap_CS_fsm_state7, exitcond_fu_454_p2, ap_CS_fsm_state9, tmp_58_fu_496_p2, exitcond1_fu_349_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((exitcond1_fu_349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((tmp_49_fu_364_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((exitcond2_fu_412_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((exitcond3_fu_427_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((exitcond_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_58_fu_496_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, exitcond1_fu_349_p2)
    begin
        if ((((exitcond1_fu_349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, exitcond1_fu_349_p2)
    begin
        if (((exitcond1_fu_349_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    depth_1_fu_354_p2 <= std_logic_vector(unsigned(depth_reg_154) + unsigned(ap_const_lv16_1));
    exitcond1_fu_349_p2 <= "1" when (depth_reg_154 = input_depth) else "0";
    exitcond2_fu_412_p1 <= input_height;
    exitcond2_fu_412_p2 <= "1" when (height_reg_229 = exitcond2_fu_412_p1) else "0";
    exitcond3_fu_427_p2 <= "1" when (o_count_3_reg_240 = o_count_6_reg_186) else "0";
    exitcond_fu_454_p2 <= "1" when (o_count_4_reg_250 = indvars_iv8_reg_197) else "0";
    height_1_fu_417_p2 <= std_logic_vector(unsigned(height_reg_229) + unsigned(ap_const_lv16_1));
    i_1_fu_369_p2 <= std_logic_vector(unsigned(i_reg_175) + unsigned(ap_const_lv16_1));
    i_2_fu_501_p2 <= std_logic_vector(unsigned(i2_reg_280) + unsigned(ap_const_lv16_1));
    i_count_3_fu_397_p2 <= std_logic_vector(signed(tmp_41_reg_578) + signed(i_count_reg_142));
    indvars_iv_next1_fu_518_p2 <= std_logic_vector(unsigned(indvars_iv2_reg_120) + unsigned(tmp_15_reg_605));
    indvars_iv_next2_fu_471_p2 <= std_logic_vector(signed(tmp_reg_554) + signed(o_count_6_reg_186));
    indvars_iv_next9_fu_476_p2 <= std_logic_vector(signed(tmp_reg_554) + signed(indvars_iv8_reg_197));
    indvars_iv_next_fu_523_p2 <= std_logic_vector(unsigned(indvars_iv_reg_110) + unsigned(tmp_16_reg_610));
    input_r_address0 <= tmp_63_fu_460_p1(9 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o_count_7_fu_512_p2 <= std_logic_vector(unsigned(o_count_5_reg_271) + unsigned(ap_const_lv16_1));
    o_count_8_fu_438_p2 <= std_logic_vector(unsigned(o_count_3_reg_240) + unsigned(ap_const_lv16_1));
    o_count_9_fu_486_p2 <= std_logic_vector(unsigned(o_count_4_reg_250) + unsigned(ap_const_lv16_1));

    output_r_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9, tmp_50_fu_375_p1, tmp_62_fu_433_p1, tmp_64_fu_481_p1, tmp_59_fu_507_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_address0 <= tmp_59_fu_507_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_address0 <= tmp_64_fu_481_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            output_r_address0 <= tmp_62_fu_433_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            output_r_address0 <= tmp_50_fu_375_p1(10 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(input_r_q0, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_d0 <= input_r_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            output_r_d0 <= ap_const_lv16_0;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(ap_CS_fsm_state4, tmp_49_fu_364_p2, ap_CS_fsm_state6, exitcond3_fu_427_p2, ap_CS_fsm_state8, ap_CS_fsm_state9, tmp_58_fu_496_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((tmp_49_fu_364_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_58_fu_496_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond3_fu_427_p2 = ap_const_lv1_0)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_386_p2 <= std_logic_vector(unsigned(o_count_reg_130) + unsigned(ap_const_lv16_3));
    tmp2_fu_402_p2 <= std_logic_vector(unsigned(tmp_43_reg_583) + unsigned(o_count_reg_130));
    tmp3_fu_327_p2 <= std_logic_vector(unsigned(tmp_43_fu_302_p2) + unsigned(tmp_42_reg_561));
    tmp4_fu_338_p2 <= std_logic_vector(unsigned(ap_const_lv16_4) + unsigned(tmp_42_reg_561));
    tmp_12_fu_297_p0 <= input_width;
    tmp_12_fu_297_p2 <= std_logic_vector(shift_left(unsigned(tmp_12_fu_297_p0),to_integer(unsigned('0' & ap_const_lv16_1(16-1 downto 0)))));
    tmp_15_fu_332_p2 <= std_logic_vector(unsigned(tmp3_fu_327_p2) + unsigned(tmp_46_fu_316_p2));
    tmp_16_fu_343_p2 <= std_logic_vector(unsigned(tmp4_fu_338_p2) + unsigned(tmp_12_fu_297_p2));
    tmp_42_fu_528_p1 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(tmp_fu_291_p1));
    tmp_43_fu_302_p1 <= input_width;
    tmp_43_fu_302_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(tmp_43_fu_302_p1));
    tmp_44_cast_fu_307_p0 <= input_width;
    tmp_44_cast_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_cast_fu_307_p0),17));
    tmp_45_fu_310_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_44_cast_fu_307_p1));
    tmp_46_fu_316_p1 <= input_width;
    tmp_46_fu_316_p2 <= std_logic_vector(unsigned(ap_const_lv16_3) + unsigned(tmp_46_fu_316_p1));
    tmp_47_fu_321_p2 <= std_logic_vector(unsigned(ap_const_lv17_3) + unsigned(tmp_44_cast_fu_307_p1));
    tmp_48_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_175),17));
    tmp_49_fu_364_p2 <= "1" when (unsigned(tmp_48_cast_fu_360_p1) < unsigned(tmp_45_reg_589)) else "0";
    tmp_50_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_1_reg_165),64));
    tmp_51_fu_380_p2 <= std_logic_vector(unsigned(o_count_1_reg_165) + unsigned(ap_const_lv16_1));
    tmp_53_fu_392_p2 <= std_logic_vector(unsigned(tmp1_fu_386_p2) + unsigned(tmp_12_reg_573));
    tmp_55_fu_407_p2 <= std_logic_vector(unsigned(tmp2_fu_402_p2) + unsigned(tmp_42_reg_561));
    tmp_56_fu_423_p2 <= std_logic_vector(unsigned(tmp_55_reg_646) + unsigned(tmp_46_reg_594));
    tmp_57_cast_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_reg_280),17));
    tmp_58_fu_496_p2 <= "1" when (unsigned(tmp_57_cast_fu_492_p1) < unsigned(tmp_47_reg_600)) else "0";
    tmp_59_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_5_reg_271),64));
    tmp_61_fu_449_p2 <= std_logic_vector(signed(tmp_reg_554) + signed(o_count_2_reg_207));
    tmp_62_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_3_reg_240),64));
    tmp_63_fu_460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_count_2_reg_261),64));
    tmp_64_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_4_reg_250),64));
    tmp_65_fu_465_p2 <= std_logic_vector(unsigned(i_count_2_reg_261) + unsigned(ap_const_lv16_1));
    tmp_fu_291_p1 <= input_width;
    tmp_fu_291_p2 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(tmp_fu_291_p1));
    tmp_s_fu_444_p1 <= input_width;
    tmp_s_fu_444_p2 <= std_logic_vector(unsigned(i_count_1_reg_218) + unsigned(tmp_s_fu_444_p1));
end behav;
