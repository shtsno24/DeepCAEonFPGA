-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity padding2d_fix16 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of padding2d_fix16 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_3D : STD_LOGIC_VECTOR (9 downto 0) := "0000111101";
    constant ap_const_lv10_3B : STD_LOGIC_VECTOR (9 downto 0) := "0000111011";
    constant ap_const_lv10_1F : STD_LOGIC_VECTOR (9 downto 0) := "0000011111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_167 : STD_LOGIC_VECTOR (8 downto 0) := "101100111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_1E : STD_LOGIC_VECTOR (9 downto 0) := "0000011110";
    constant ap_const_lv9_184 : STD_LOGIC_VECTOR (8 downto 0) := "110000100";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_17_fu_216_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal height_1_fu_233_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal height_1_reg_340 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_18_fu_239_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_18_reg_345 : STD_LOGIC_VECTOR (9 downto 0);
    signal exitcond7_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_256_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_reg_358 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_fu_262_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_reg_363 : STD_LOGIC_VECTOR (9 downto 0);
    signal o_count_8_fu_273_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal o_count_9_fu_290_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond9_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next5_fu_296_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal indvars_iv_next8_fu_302_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal o_count_7_fu_323_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond3_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_count_1_reg_98 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond2_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv7_reg_109 : STD_LOGIC_VECTOR (9 downto 0);
    signal o_count_6_reg_121 : STD_LOGIC_VECTOR (9 downto 0);
    signal o_count_2_reg_133 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_count_1_reg_145 : STD_LOGIC_VECTOR (9 downto 0);
    signal height_reg_157 : STD_LOGIC_VECTOR (4 downto 0);
    signal o_count_3_reg_168 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_count_2_reg_179 : STD_LOGIC_VECTOR (9 downto 0);
    signal o_count_4_reg_189 : STD_LOGIC_VECTOR (9 downto 0);
    signal o_count_5_reg_199 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_251_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_268_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_285_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal o_count_5_cast5_fu_308_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    height_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                height_reg_157 <= ap_const_lv5_0;
            elsif (((exitcond9_fu_279_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                height_reg_157 <= height_1_reg_340;
            end if; 
        end if;
    end process;

    i_count_1_reg_145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_count_1_reg_145 <= ap_const_lv10_0;
            elsif (((exitcond9_fu_279_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_count_1_reg_145 <= tmp_18_reg_345;
            end if; 
        end if;
    end process;

    i_count_2_reg_179_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_count_2_reg_179 <= tmp_23_reg_358;
            elsif (((exitcond7_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_count_2_reg_179 <= i_count_1_reg_145;
            end if; 
        end if;
    end process;

    indvars_iv7_reg_109_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvars_iv7_reg_109 <= ap_const_lv10_3D;
            elsif (((exitcond9_fu_279_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                indvars_iv7_reg_109 <= indvars_iv_next8_fu_302_p2;
            end if; 
        end if;
    end process;

    o_count_1_reg_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                o_count_1_reg_98 <= ap_const_lv5_0;
            elsif (((exitcond2_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                o_count_1_reg_98 <= tmp_17_fu_216_p2;
            end if; 
        end if;
    end process;

    o_count_2_reg_133_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                o_count_2_reg_133 <= ap_const_lv10_1F;
            elsif (((exitcond9_fu_279_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                o_count_2_reg_133 <= tmp_20_reg_363;
            end if; 
        end if;
    end process;

    o_count_3_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                o_count_3_reg_168 <= o_count_8_fu_273_p2;
            elsif (((exitcond7_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                o_count_3_reg_168 <= o_count_2_reg_133;
            end if; 
        end if;
    end process;

    o_count_4_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond9_fu_279_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                o_count_4_reg_189 <= o_count_9_fu_290_p2;
            elsif (((exitcond_fu_245_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                o_count_4_reg_189 <= o_count_6_reg_121;
            end if; 
        end if;
    end process;

    o_count_5_reg_199_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_fu_227_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                o_count_5_reg_199 <= ap_const_lv9_167;
            elsif (((exitcond3_fu_312_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                o_count_5_reg_199 <= o_count_7_fu_323_p2;
            end if; 
        end if;
    end process;

    o_count_6_reg_121_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                o_count_6_reg_121 <= ap_const_lv10_3B;
            elsif (((exitcond9_fu_279_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                o_count_6_reg_121 <= indvars_iv_next5_fu_296_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                height_1_reg_340 <= height_1_fu_233_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_18_reg_345 <= tmp_18_fu_239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_245_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_20_reg_363 <= tmp_20_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_245_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_23_reg_358 <= tmp_23_fu_256_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, exitcond7_fu_227_p2, ap_CS_fsm_state4, exitcond_fu_245_p2, ap_CS_fsm_state6, exitcond9_fu_279_p2, ap_CS_fsm_state7, exitcond3_fu_312_p2, exitcond2_fu_210_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond2_fu_210_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((exitcond7_fu_227_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((exitcond_fu_245_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((exitcond9_fu_279_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((exitcond3_fu_312_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, exitcond3_fu_312_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((exitcond3_fu_312_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, exitcond3_fu_312_p2)
    begin
        if (((exitcond3_fu_312_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond2_fu_210_p2 <= "1" when (o_count_1_reg_98 = ap_const_lv5_1F) else "0";
    exitcond3_fu_312_p2 <= "1" when (o_count_5_reg_199 = ap_const_lv9_184) else "0";
    exitcond7_fu_227_p2 <= "1" when (height_reg_157 = ap_const_lv5_1C) else "0";
    exitcond9_fu_279_p2 <= "1" when (o_count_4_reg_189 = indvars_iv7_reg_109) else "0";
    exitcond_fu_245_p2 <= "1" when (o_count_3_reg_168 = o_count_6_reg_121) else "0";
    height_1_fu_233_p2 <= std_logic_vector(unsigned(height_reg_157) + unsigned(ap_const_lv5_1));
    indvars_iv_next5_fu_296_p2 <= std_logic_vector(unsigned(o_count_6_reg_121) + unsigned(ap_const_lv10_1E));
    indvars_iv_next8_fu_302_p2 <= std_logic_vector(unsigned(indvars_iv7_reg_109) + unsigned(ap_const_lv10_1E));
    input_r_address0 <= tmp_21_fu_251_p1(10 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        o_count_5_cast5_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(o_count_5_reg_199),10));

    o_count_7_fu_323_p2 <= std_logic_vector(signed(o_count_5_reg_199) + signed(ap_const_lv9_1));
    o_count_8_fu_273_p2 <= std_logic_vector(unsigned(o_count_3_reg_168) + unsigned(ap_const_lv10_1));
    o_count_9_fu_290_p2 <= std_logic_vector(unsigned(o_count_4_reg_189) + unsigned(ap_const_lv10_1));

    output_r_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, tmp_s_fu_222_p1, tmp_22_fu_268_p1, tmp_24_fu_285_p1, tmp_19_fu_318_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            output_r_address0 <= tmp_19_fu_318_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            output_r_address0 <= tmp_24_fu_285_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_r_address0 <= tmp_22_fu_268_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_r_address0 <= tmp_s_fu_222_p1(10 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(input_r_q0, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_r_d0 <= input_r_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            output_r_d0 <= ap_const_lv16_0;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state6, exitcond9_fu_279_p2, ap_CS_fsm_state7, exitcond3_fu_312_p2, exitcond2_fu_210_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((exitcond9_fu_279_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((exitcond2_fu_210_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((exitcond3_fu_312_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_17_fu_216_p2 <= std_logic_vector(unsigned(o_count_1_reg_98) + unsigned(ap_const_lv5_1));
    tmp_18_fu_239_p2 <= std_logic_vector(unsigned(i_count_1_reg_145) + unsigned(ap_const_lv10_1C));
    tmp_19_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_5_cast5_fu_308_p1),64));
    tmp_20_fu_262_p2 <= std_logic_vector(unsigned(o_count_2_reg_133) + unsigned(ap_const_lv10_1E));
    tmp_21_fu_251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_count_2_reg_179),64));
    tmp_22_fu_268_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_3_reg_168),64));
    tmp_23_fu_256_p2 <= std_logic_vector(unsigned(i_count_2_reg_179) + unsigned(ap_const_lv10_1));
    tmp_24_fu_285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_4_reg_189),64));
    tmp_s_fu_222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_1_reg_98),64));
end behav;
