// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv2d_fix_1_HH_
#define _pointwise_conv2d_fix_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mul_mul_16s_14s_30_1_1.h"

namespace ap_rtl {

struct pointwise_conv2d_fix_1 : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > input_depth;
    sc_in< sc_lv<16> > input_height;
    sc_in< sc_lv<16> > input_width;
    sc_in< sc_lv<16> > output_depth;
    sc_out< sc_lv<10> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;
    sc_out< sc_lv<14> > SeparableConv2D_4_m_s_address0;
    sc_out< sc_logic > SeparableConv2D_4_m_s_ce0;
    sc_in< sc_lv<16> > SeparableConv2D_4_m_s_q0;


    // Module declarations
    pointwise_conv2d_fix_1(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv2d_fix_1);

    ~pointwise_conv2d_fix_1();

    sc_trace_file* mVcdFile;

    network_mul_mul_16s_14s_30_1_1<1,1,16,14,30>* network_mul_mul_16s_14s_30_1_1_U141;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > tmp_s_fu_169_p1;
    sc_signal< sc_lv<32> > tmp_s_reg_358;
    sc_signal< sc_lv<32> > tmp_15_fu_173_p1;
    sc_signal< sc_lv<32> > tmp_15_reg_364;
    sc_signal< sc_lv<32> > next_mul2_fu_177_p2;
    sc_signal< sc_lv<32> > next_mul2_reg_370;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<16> > out_d_2_fu_187_p2;
    sc_signal< sc_lv<16> > out_d_2_reg_378;
    sc_signal< sc_lv<16> > out_h_2_fu_198_p2;
    sc_signal< sc_lv<16> > out_h_2_reg_386;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_23_fu_204_p1;
    sc_signal< sc_lv<32> > tmp_23_reg_391;
    sc_signal< sc_lv<1> > exitcond2_fu_193_p2;
    sc_signal< sc_lv<32> > tmp_fu_208_p2;
    sc_signal< sc_lv<32> > tmp_reg_396;
    sc_signal< sc_lv<32> > tmp1_fu_214_p2;
    sc_signal< sc_lv<32> > tmp1_reg_401;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<16> > out_w_2_fu_223_p2;
    sc_signal< sc_lv<16> > out_w_2_reg_409;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > tmp_24_fu_229_p1;
    sc_signal< sc_lv<32> > tmp_24_reg_414;
    sc_signal< sc_lv<1> > exitcond1_fu_218_p2;
    sc_signal< sc_lv<10> > output_addr_reg_419;
    sc_signal< sc_lv<16> > in_d_1_fu_248_p2;
    sc_signal< sc_lv<16> > in_d_1_reg_427;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > next_mul_fu_254_p2;
    sc_signal< sc_lv<32> > next_mul_reg_432;
    sc_signal< sc_lv<1> > exitcond_fu_243_p2;
    sc_signal< sc_lv<32> > tmp2_fu_259_p2;
    sc_signal< sc_lv<32> > tmp2_reg_437;
    sc_signal< sc_lv<32> > tmp3_fu_264_p2;
    sc_signal< sc_lv<32> > tmp3_reg_442;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<16> > SeparableConv2D_4_m_2_reg_452;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > tmp_35_reg_457;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > tmp_36_fu_289_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<16> > out_d_reg_89;
    sc_signal< sc_lv<32> > phi_mul1_reg_100;
    sc_signal< sc_lv<16> > out_h_reg_112;
    sc_signal< sc_lv<1> > exitcond3_fu_182_p2;
    sc_signal< sc_lv<16> > out_w_reg_123;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<16> > output_load_1_reg_134;
    sc_signal< sc_lv<16> > in_d_reg_147;
    sc_signal< sc_lv<32> > phi_mul_reg_158;
    sc_signal< sc_lv<64> > tmp_26_fu_238_p1;
    sc_signal< sc_lv<64> > tmp_32_fu_272_p1;
    sc_signal< sc_lv<16> > p_tmp_cast_fu_326_p1;
    sc_signal< sc_lv<16> > tmp1_fu_214_p1;
    sc_signal< sc_lv<32> > tmp_25_fu_233_p2;
    sc_signal< sc_lv<16> > tmp3_fu_264_p1;
    sc_signal< sc_lv<32> > tmp_31_fu_268_p2;
    sc_signal< sc_lv<30> > tmp_33_fu_331_p2;
    sc_signal< sc_lv<15> > tmp_7_fu_294_p1;
    sc_signal< sc_lv<16> > tmp_27_fu_298_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_310_p3;
    sc_signal< sc_lv<15> > tmp_27_cast_fu_304_p2;
    sc_signal< sc_lv<15> > p_tmp_s_fu_318_p3;
    sc_signal< sc_lv<14> > tmp_33_fu_331_p1;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<16> ap_const_lv16_E3EB;
    static const sc_lv<15> ap_const_lv15_63EB;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<30> ap_const_lv30_3FFFE7C7;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_SeparableConv2D_4_m_s_address0();
    void thread_SeparableConv2D_4_m_s_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_218_p2();
    void thread_exitcond2_fu_193_p2();
    void thread_exitcond3_fu_182_p2();
    void thread_exitcond_fu_243_p2();
    void thread_in_d_1_fu_248_p2();
    void thread_next_mul2_fu_177_p2();
    void thread_next_mul_fu_254_p2();
    void thread_out_d_2_fu_187_p2();
    void thread_out_h_2_fu_198_p2();
    void thread_out_w_2_fu_223_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_tmp_cast_fu_326_p1();
    void thread_p_tmp_s_fu_318_p3();
    void thread_tmp1_fu_214_p1();
    void thread_tmp1_fu_214_p2();
    void thread_tmp2_fu_259_p2();
    void thread_tmp3_fu_264_p1();
    void thread_tmp3_fu_264_p2();
    void thread_tmp_15_fu_173_p1();
    void thread_tmp_23_fu_204_p1();
    void thread_tmp_24_fu_229_p1();
    void thread_tmp_25_fu_233_p2();
    void thread_tmp_26_fu_238_p1();
    void thread_tmp_27_cast_fu_304_p2();
    void thread_tmp_27_fu_298_p2();
    void thread_tmp_31_fu_268_p2();
    void thread_tmp_32_fu_272_p1();
    void thread_tmp_33_fu_331_p1();
    void thread_tmp_36_fu_289_p2();
    void thread_tmp_7_fu_294_p1();
    void thread_tmp_8_fu_310_p3();
    void thread_tmp_fu_208_p2();
    void thread_tmp_s_fu_169_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
