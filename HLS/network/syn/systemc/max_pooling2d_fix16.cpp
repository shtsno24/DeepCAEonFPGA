// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_pooling2d_fix16.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_pooling2d_fix16::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_pooling2d_fix16::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state1 = "1";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state2 = "10";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state3 = "100";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state4 = "1000";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state5 = "10000";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state6 = "100000";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> max_pooling2d_fix16::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_1 = "1";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_2 = "10";
const sc_lv<1> max_pooling2d_fix16::ap_const_lv1_0 = "0";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_3 = "11";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_4 = "100";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_5 = "101";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_6 = "110";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_7 = "111";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_8 = "1000";
const sc_lv<5> max_pooling2d_fix16::ap_const_lv5_0 = "00000";
const sc_lv<1> max_pooling2d_fix16::ap_const_lv1_1 = "1";
const sc_lv<9> max_pooling2d_fix16::ap_const_lv9_0 = "000000000";
const sc_lv<8> max_pooling2d_fix16::ap_const_lv8_0 = "00000000";
const sc_lv<4> max_pooling2d_fix16::ap_const_lv4_0 = "0000";
const sc_lv<2> max_pooling2d_fix16::ap_const_lv2_0 = "00";
const sc_lv<32> max_pooling2d_fix16::ap_const_lv32_9 = "1001";
const sc_lv<5> max_pooling2d_fix16::ap_const_lv5_1 = "1";
const sc_lv<4> max_pooling2d_fix16::ap_const_lv4_1 = "1";
const sc_lv<2> max_pooling2d_fix16::ap_const_lv2_2 = "10";
const sc_lv<2> max_pooling2d_fix16::ap_const_lv2_1 = "1";
const bool max_pooling2d_fix16::ap_const_boolean_1 = true;

max_pooling2d_fix16::max_pooling2d_fix16(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_255_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond5_fu_255_p2 );

    SC_METHOD(thread_buffer_5_fu_446_p3);
    sensitive << ( tmp_62_reg_599 );
    sensitive << ( buffer_fu_70 );
    sensitive << ( or_cond6_fu_440_p2 );

    SC_METHOD(thread_exitcond2_fu_347_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( in_h_reg_187 );

    SC_METHOD(thread_exitcond3_fu_316_p1);
    sensitive << ( output_width );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_exitcond3_fu_316_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( out_w_cast_fu_312_p1 );
    sensitive << ( exitcond3_fu_316_p1 );

    SC_METHOD(thread_exitcond4_fu_270_p1);
    sensitive << ( output_height );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_exitcond4_fu_270_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( out_h_cast_fu_266_p1 );
    sensitive << ( exitcond4_fu_270_p1 );

    SC_METHOD(thread_exitcond5_fu_255_p2);
    sensitive << ( output_depth );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_d_cast_fu_251_p1 );

    SC_METHOD(thread_exitcond_fu_395_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( in_w_reg_198 );

    SC_METHOD(thread_in_h_1_fu_353_p2);
    sensitive << ( in_h_reg_187 );

    SC_METHOD(thread_in_w_1_fu_401_p2);
    sensitive << ( in_w_reg_198 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_57_fu_421_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_input_width_cast_fu_221_p1);
    sensitive << ( input_width );

    SC_METHOD(thread_next_mul3_fu_241_p2);
    sensitive << ( tmp_70_cast_reg_489 );
    sensitive << ( phi_mul2_reg_153 );

    SC_METHOD(thread_next_mul_fu_246_p2);
    sensitive << ( tmp_cast_reg_479 );
    sensitive << ( phi_mul_reg_141 );

    SC_METHOD(thread_or_cond6_fu_440_p2);
    sensitive << ( tmp_60_fu_435_p2 );
    sensitive << ( tmp_59_fu_429_p2 );

    SC_METHOD(thread_out_d_3_fu_260_p2);
    sensitive << ( out_d_reg_130 );

    SC_METHOD(thread_out_d_cast_fu_251_p1);
    sensitive << ( out_d_reg_130 );

    SC_METHOD(thread_out_h_3_fu_275_p2);
    sensitive << ( out_h_reg_165 );

    SC_METHOD(thread_out_h_cast_fu_266_p1);
    sensitive << ( out_h_reg_165 );

    SC_METHOD(thread_out_w_3_fu_321_p2);
    sensitive << ( out_w_reg_176 );

    SC_METHOD(thread_out_w_cast_fu_312_p1);
    sensitive << ( out_w_reg_176 );

    SC_METHOD(thread_output_height_cast2_fu_217_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( output_height );

    SC_METHOD(thread_output_height_cast2_fu_217_p1);
    sensitive << ( output_height_cast2_fu_217_p0 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_54_fu_378_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( buffer_fu_70 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_347_p2 );

    SC_METHOD(thread_output_width_cast3_fu_213_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( output_width );

    SC_METHOD(thread_output_width_cast3_fu_213_p1);
    sensitive << ( output_width_cast3_fu_213_p0 );

    SC_METHOD(thread_tmp1_fu_386_p0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp1_fu_386_p00 );

    SC_METHOD(thread_tmp1_fu_386_p00);
    sensitive << ( tmp_reg_566 );

    SC_METHOD(thread_tmp1_fu_386_p1);
    sensitive << ( tmp_69_cast_reg_484 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp1_fu_386_p2);
    sensitive << ( tmp1_fu_386_p0 );
    sensitive << ( tmp1_fu_386_p1 );

    SC_METHOD(thread_tmp2_fu_297_p2);
    sensitive << ( phi_mul2_reg_153 );
    sensitive << ( tmp_75_cast1_fu_281_p1 );

    SC_METHOD(thread_tmp3_fu_307_p0);
    sensitive << ( tmp_71_cast_reg_494 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp3_fu_307_p1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp3_fu_307_p10 );

    SC_METHOD(thread_tmp3_fu_307_p10);
    sensitive << ( tmp2_fu_297_p2 );

    SC_METHOD(thread_tmp3_fu_307_p2);
    sensitive << ( tmp3_fu_307_p0 );
    sensitive << ( tmp3_fu_307_p1 );

    SC_METHOD(thread_tmp4_fu_363_p2);
    sensitive << ( phi_mul_reg_141 );
    sensitive << ( tmp_82_cast_fu_359_p1 );

    SC_METHOD(thread_tmp5_fu_411_p2);
    sensitive << ( tmp1_reg_571 );
    sensitive << ( tmp_83_cast_fu_407_p1 );

    SC_METHOD(thread_tmp_51_fu_331_p3);
    sensitive << ( out_w_reg_176 );

    SC_METHOD(thread_tmp_52_fu_343_p1);
    sensitive << ( in_h_reg_187 );

    SC_METHOD(thread_tmp_53_fu_374_p2);
    sensitive << ( tmp3_reg_530 );
    sensitive << ( tmp_78_cast1_reg_543 );

    SC_METHOD(thread_tmp_54_fu_378_p1);
    sensitive << ( tmp_53_fu_374_p2 );

    SC_METHOD(thread_tmp_55_fu_391_p1);
    sensitive << ( in_w_reg_198 );

    SC_METHOD(thread_tmp_56_fu_416_p2);
    sensitive << ( tmp_79_cast_reg_548 );
    sensitive << ( tmp5_fu_411_p2 );

    SC_METHOD(thread_tmp_57_fu_421_p1);
    sensitive << ( tmp_56_reg_589 );

    SC_METHOD(thread_tmp_58_fu_425_p2);
    sensitive << ( tmp_52_reg_553 );
    sensitive << ( tmp_55_reg_576 );

    SC_METHOD(thread_tmp_59_fu_429_p2);
    sensitive << ( tmp_58_fu_425_p2 );

    SC_METHOD(thread_tmp_60_fu_435_p2);
    sensitive << ( tmp_62_reg_599 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( buffer_fu_70 );

    SC_METHOD(thread_tmp_69_cast_fu_229_p1);
    sensitive << ( input_width_cast_fu_221_p1 );

    SC_METHOD(thread_tmp_70_cast_fu_233_p1);
    sensitive << ( output_height_cast2_fu_217_p1 );

    SC_METHOD(thread_tmp_71_cast_fu_237_p1);
    sensitive << ( output_width_cast3_fu_213_p1 );

    SC_METHOD(thread_tmp_75_cast1_fu_281_p1);
    sensitive << ( out_h_reg_165 );

    SC_METHOD(thread_tmp_76_cast_fu_293_p1);
    sensitive << ( tmp_s_fu_285_p3 );

    SC_METHOD(thread_tmp_78_cast1_fu_327_p1);
    sensitive << ( out_w_reg_176 );

    SC_METHOD(thread_tmp_79_cast_fu_339_p1);
    sensitive << ( tmp_51_fu_331_p3 );

    SC_METHOD(thread_tmp_82_cast_fu_359_p1);
    sensitive << ( in_h_reg_187 );

    SC_METHOD(thread_tmp_83_cast_fu_407_p1);
    sensitive << ( in_w_reg_198 );

    SC_METHOD(thread_tmp_cast_fu_225_p1);
    sensitive << ( input_height );

    SC_METHOD(thread_tmp_fu_369_p2);
    sensitive << ( tmp_76_cast_reg_525 );
    sensitive << ( tmp4_fu_363_p2 );

    SC_METHOD(thread_tmp_s_fu_285_p3);
    sensitive << ( out_h_reg_165 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond4_fu_270_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_316_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_347_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_395_p2 );
    sensitive << ( exitcond5_fu_255_p2 );

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_pooling2d_fix16_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_height, "(port)input_height");
    sc_trace(mVcdFile, input_width, "(port)input_width");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_depth, "(port)output_depth");
    sc_trace(mVcdFile, output_height, "(port)output_height");
    sc_trace(mVcdFile, output_width, "(port)output_width");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_cast_fu_225_p1, "tmp_cast_fu_225_p1");
    sc_trace(mVcdFile, tmp_cast_reg_479, "tmp_cast_reg_479");
    sc_trace(mVcdFile, tmp_69_cast_fu_229_p1, "tmp_69_cast_fu_229_p1");
    sc_trace(mVcdFile, tmp_69_cast_reg_484, "tmp_69_cast_reg_484");
    sc_trace(mVcdFile, tmp_70_cast_fu_233_p1, "tmp_70_cast_fu_233_p1");
    sc_trace(mVcdFile, tmp_70_cast_reg_489, "tmp_70_cast_reg_489");
    sc_trace(mVcdFile, tmp_71_cast_fu_237_p1, "tmp_71_cast_fu_237_p1");
    sc_trace(mVcdFile, tmp_71_cast_reg_494, "tmp_71_cast_reg_494");
    sc_trace(mVcdFile, next_mul3_fu_241_p2, "next_mul3_fu_241_p2");
    sc_trace(mVcdFile, next_mul3_reg_499, "next_mul3_reg_499");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_246_p2, "next_mul_fu_246_p2");
    sc_trace(mVcdFile, next_mul_reg_504, "next_mul_reg_504");
    sc_trace(mVcdFile, out_d_3_fu_260_p2, "out_d_3_fu_260_p2");
    sc_trace(mVcdFile, out_d_3_reg_512, "out_d_3_reg_512");
    sc_trace(mVcdFile, out_h_3_fu_275_p2, "out_h_3_fu_275_p2");
    sc_trace(mVcdFile, out_h_3_reg_520, "out_h_3_reg_520");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_76_cast_fu_293_p1, "tmp_76_cast_fu_293_p1");
    sc_trace(mVcdFile, tmp_76_cast_reg_525, "tmp_76_cast_reg_525");
    sc_trace(mVcdFile, exitcond4_fu_270_p2, "exitcond4_fu_270_p2");
    sc_trace(mVcdFile, tmp3_fu_307_p2, "tmp3_fu_307_p2");
    sc_trace(mVcdFile, tmp3_reg_530, "tmp3_reg_530");
    sc_trace(mVcdFile, out_w_3_fu_321_p2, "out_w_3_fu_321_p2");
    sc_trace(mVcdFile, out_w_3_reg_538, "out_w_3_reg_538");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_78_cast1_fu_327_p1, "tmp_78_cast1_fu_327_p1");
    sc_trace(mVcdFile, tmp_78_cast1_reg_543, "tmp_78_cast1_reg_543");
    sc_trace(mVcdFile, exitcond3_fu_316_p2, "exitcond3_fu_316_p2");
    sc_trace(mVcdFile, tmp_79_cast_fu_339_p1, "tmp_79_cast_fu_339_p1");
    sc_trace(mVcdFile, tmp_79_cast_reg_548, "tmp_79_cast_reg_548");
    sc_trace(mVcdFile, tmp_52_fu_343_p1, "tmp_52_fu_343_p1");
    sc_trace(mVcdFile, tmp_52_reg_553, "tmp_52_reg_553");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, in_h_1_fu_353_p2, "in_h_1_fu_353_p2");
    sc_trace(mVcdFile, in_h_1_reg_561, "in_h_1_reg_561");
    sc_trace(mVcdFile, tmp_fu_369_p2, "tmp_fu_369_p2");
    sc_trace(mVcdFile, tmp_reg_566, "tmp_reg_566");
    sc_trace(mVcdFile, exitcond2_fu_347_p2, "exitcond2_fu_347_p2");
    sc_trace(mVcdFile, tmp1_fu_386_p2, "tmp1_fu_386_p2");
    sc_trace(mVcdFile, tmp1_reg_571, "tmp1_reg_571");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_55_fu_391_p1, "tmp_55_fu_391_p1");
    sc_trace(mVcdFile, tmp_55_reg_576, "tmp_55_reg_576");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, in_w_1_fu_401_p2, "in_w_1_fu_401_p2");
    sc_trace(mVcdFile, in_w_1_reg_584, "in_w_1_reg_584");
    sc_trace(mVcdFile, tmp_56_fu_416_p2, "tmp_56_fu_416_p2");
    sc_trace(mVcdFile, tmp_56_reg_589, "tmp_56_reg_589");
    sc_trace(mVcdFile, exitcond_fu_395_p2, "exitcond_fu_395_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_62_reg_599, "tmp_62_reg_599");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, out_d_reg_130, "out_d_reg_130");
    sc_trace(mVcdFile, phi_mul_reg_141, "phi_mul_reg_141");
    sc_trace(mVcdFile, phi_mul2_reg_153, "phi_mul2_reg_153");
    sc_trace(mVcdFile, out_h_reg_165, "out_h_reg_165");
    sc_trace(mVcdFile, exitcond5_fu_255_p2, "exitcond5_fu_255_p2");
    sc_trace(mVcdFile, out_w_reg_176, "out_w_reg_176");
    sc_trace(mVcdFile, in_h_reg_187, "in_h_reg_187");
    sc_trace(mVcdFile, in_w_reg_198, "in_w_reg_198");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_54_fu_378_p1, "tmp_54_fu_378_p1");
    sc_trace(mVcdFile, tmp_57_fu_421_p1, "tmp_57_fu_421_p1");
    sc_trace(mVcdFile, buffer_fu_70, "buffer_fu_70");
    sc_trace(mVcdFile, buffer_5_fu_446_p3, "buffer_5_fu_446_p3");
    sc_trace(mVcdFile, output_width_cast3_fu_213_p0, "output_width_cast3_fu_213_p0");
    sc_trace(mVcdFile, output_height_cast2_fu_217_p0, "output_height_cast2_fu_217_p0");
    sc_trace(mVcdFile, input_width_cast_fu_221_p1, "input_width_cast_fu_221_p1");
    sc_trace(mVcdFile, output_height_cast2_fu_217_p1, "output_height_cast2_fu_217_p1");
    sc_trace(mVcdFile, output_width_cast3_fu_213_p1, "output_width_cast3_fu_213_p1");
    sc_trace(mVcdFile, out_d_cast_fu_251_p1, "out_d_cast_fu_251_p1");
    sc_trace(mVcdFile, out_h_cast_fu_266_p1, "out_h_cast_fu_266_p1");
    sc_trace(mVcdFile, exitcond4_fu_270_p1, "exitcond4_fu_270_p1");
    sc_trace(mVcdFile, tmp_s_fu_285_p3, "tmp_s_fu_285_p3");
    sc_trace(mVcdFile, tmp_75_cast1_fu_281_p1, "tmp_75_cast1_fu_281_p1");
    sc_trace(mVcdFile, tmp2_fu_297_p2, "tmp2_fu_297_p2");
    sc_trace(mVcdFile, tmp3_fu_307_p0, "tmp3_fu_307_p0");
    sc_trace(mVcdFile, tmp3_fu_307_p1, "tmp3_fu_307_p1");
    sc_trace(mVcdFile, out_w_cast_fu_312_p1, "out_w_cast_fu_312_p1");
    sc_trace(mVcdFile, exitcond3_fu_316_p1, "exitcond3_fu_316_p1");
    sc_trace(mVcdFile, tmp_51_fu_331_p3, "tmp_51_fu_331_p3");
    sc_trace(mVcdFile, tmp_82_cast_fu_359_p1, "tmp_82_cast_fu_359_p1");
    sc_trace(mVcdFile, tmp4_fu_363_p2, "tmp4_fu_363_p2");
    sc_trace(mVcdFile, tmp_53_fu_374_p2, "tmp_53_fu_374_p2");
    sc_trace(mVcdFile, tmp1_fu_386_p0, "tmp1_fu_386_p0");
    sc_trace(mVcdFile, tmp1_fu_386_p1, "tmp1_fu_386_p1");
    sc_trace(mVcdFile, tmp_83_cast_fu_407_p1, "tmp_83_cast_fu_407_p1");
    sc_trace(mVcdFile, tmp5_fu_411_p2, "tmp5_fu_411_p2");
    sc_trace(mVcdFile, tmp_58_fu_425_p2, "tmp_58_fu_425_p2");
    sc_trace(mVcdFile, tmp_60_fu_435_p2, "tmp_60_fu_435_p2");
    sc_trace(mVcdFile, tmp_59_fu_429_p2, "tmp_59_fu_429_p2");
    sc_trace(mVcdFile, or_cond6_fu_440_p2, "or_cond6_fu_440_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp1_fu_386_p00, "tmp1_fu_386_p00");
    sc_trace(mVcdFile, tmp3_fu_307_p10, "tmp3_fu_307_p10");
#endif

    }
}

max_pooling2d_fix16::~max_pooling2d_fix16() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void max_pooling2d_fix16::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_395_p2.read(), ap_const_lv1_1))) {
        in_h_reg_187 = in_h_1_reg_561.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_316_p2.read()))) {
        in_h_reg_187 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_w_reg_198 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        in_w_reg_198 = in_w_1_reg_584.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_270_p2.read(), ap_const_lv1_1))) {
        out_d_reg_130 = out_d_3_reg_512.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_d_reg_130 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_255_p2.read()))) {
        out_h_reg_165 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_316_p2.read(), ap_const_lv1_1))) {
        out_h_reg_165 = out_h_3_reg_520.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_270_p2.read(), ap_const_lv1_0))) {
        out_w_reg_176 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond2_fu_347_p2.read(), ap_const_lv1_1))) {
        out_w_reg_176 = out_w_3_reg_538.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_270_p2.read(), ap_const_lv1_1))) {
        phi_mul2_reg_153 = next_mul3_reg_499.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul2_reg_153 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_270_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_141 = next_mul_reg_504.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_141 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        buffer_fu_70 = buffer_5_fu_446_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        in_h_1_reg_561 = in_h_1_fu_353_p2.read();
        tmp_52_reg_553 = tmp_52_fu_343_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in_w_1_reg_584 = in_w_1_fu_401_p2.read();
        tmp_55_reg_576 = tmp_55_fu_391_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul3_reg_499 = next_mul3_fu_241_p2.read();
        next_mul_reg_504 = next_mul_fu_246_p2.read();
        out_d_3_reg_512 = out_d_3_fu_260_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_h_3_reg_520 = out_h_3_fu_275_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_w_3_reg_538 = out_w_3_fu_321_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp1_reg_571 = tmp1_fu_386_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond4_fu_270_p2.read(), ap_const_lv1_0))) {
        tmp3_reg_530 = tmp3_fu_307_p2.read();
        tmp_76_cast_reg_525 = tmp_76_cast_fu_293_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_395_p2.read()))) {
        tmp_56_reg_589 = tmp_56_fu_416_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_62_reg_599 = input_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_69_cast_reg_484 = tmp_69_cast_fu_229_p1.read();
        tmp_70_cast_reg_489 = tmp_70_cast_fu_233_p1.read();
        tmp_71_cast_reg_494 = tmp_71_cast_fu_237_p1.read();
        tmp_cast_reg_479 = tmp_cast_fu_225_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_316_p2.read()))) {
        tmp_78_cast1_reg_543 = tmp_78_cast1_fu_327_p1.read();
        tmp_79_cast_reg_548 = tmp_79_cast_fu_339_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_347_p2.read()))) {
        tmp_reg_566 = tmp_fu_369_p2.read();
    }
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void max_pooling2d_fix16::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void max_pooling2d_fix16::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_255_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max_pooling2d_fix16::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_pooling2d_fix16::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_255_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max_pooling2d_fix16::thread_buffer_5_fu_446_p3() {
    buffer_5_fu_446_p3 = (!or_cond6_fu_440_p2.read()[0].is_01())? sc_lv<16>(): ((or_cond6_fu_440_p2.read()[0].to_bool())? tmp_62_reg_599.read(): buffer_fu_70.read());
}

void max_pooling2d_fix16::thread_exitcond2_fu_347_p2() {
    exitcond2_fu_347_p2 = (!in_h_reg_187.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(in_h_reg_187.read() == ap_const_lv2_2);
}

void max_pooling2d_fix16::thread_exitcond3_fu_316_p1() {
    exitcond3_fu_316_p1 = output_width.read();
}

void max_pooling2d_fix16::thread_exitcond3_fu_316_p2() {
    exitcond3_fu_316_p2 = (!out_w_cast_fu_312_p1.read().is_01() || !exitcond3_fu_316_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(out_w_cast_fu_312_p1.read() == exitcond3_fu_316_p1.read());
}

void max_pooling2d_fix16::thread_exitcond4_fu_270_p1() {
    exitcond4_fu_270_p1 = output_height.read();
}

void max_pooling2d_fix16::thread_exitcond4_fu_270_p2() {
    exitcond4_fu_270_p2 = (!out_h_cast_fu_266_p1.read().is_01() || !exitcond4_fu_270_p1.read().is_01())? sc_lv<1>(): sc_lv<1>(out_h_cast_fu_266_p1.read() == exitcond4_fu_270_p1.read());
}

void max_pooling2d_fix16::thread_exitcond5_fu_255_p2() {
    exitcond5_fu_255_p2 = (!out_d_cast_fu_251_p1.read().is_01() || !output_depth.read().is_01())? sc_lv<1>(): sc_lv<1>(out_d_cast_fu_251_p1.read() == output_depth.read());
}

void max_pooling2d_fix16::thread_exitcond_fu_395_p2() {
    exitcond_fu_395_p2 = (!in_w_reg_198.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(in_w_reg_198.read() == ap_const_lv2_2);
}

void max_pooling2d_fix16::thread_in_h_1_fu_353_p2() {
    in_h_1_fu_353_p2 = (!ap_const_lv2_1.is_01() || !in_h_reg_187.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(in_h_reg_187.read()));
}

void max_pooling2d_fix16::thread_in_w_1_fu_401_p2() {
    in_w_1_fu_401_p2 = (!ap_const_lv2_1.is_01() || !in_w_reg_198.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(in_w_reg_198.read()));
}

void max_pooling2d_fix16::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<14>) (tmp_57_fu_421_p1.read());
}

void max_pooling2d_fix16::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void max_pooling2d_fix16::thread_input_width_cast_fu_221_p1() {
    input_width_cast_fu_221_p1 = esl_sext<7,6>(input_width.read());
}

void max_pooling2d_fix16::thread_next_mul3_fu_241_p2() {
    next_mul3_fu_241_p2 = (!phi_mul2_reg_153.read().is_01() || !tmp_70_cast_reg_489.read().is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul2_reg_153.read()) + sc_biguint<8>(tmp_70_cast_reg_489.read()));
}

void max_pooling2d_fix16::thread_next_mul_fu_246_p2() {
    next_mul_fu_246_p2 = (!phi_mul_reg_141.read().is_01() || !tmp_cast_reg_479.read().is_01())? sc_lv<9>(): (sc_biguint<9>(phi_mul_reg_141.read()) + sc_biguint<9>(tmp_cast_reg_479.read()));
}

void max_pooling2d_fix16::thread_or_cond6_fu_440_p2() {
    or_cond6_fu_440_p2 = (tmp_60_fu_435_p2.read() | tmp_59_fu_429_p2.read());
}

void max_pooling2d_fix16::thread_out_d_3_fu_260_p2() {
    out_d_3_fu_260_p2 = (!out_d_reg_130.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_d_reg_130.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void max_pooling2d_fix16::thread_out_d_cast_fu_251_p1() {
    out_d_cast_fu_251_p1 = esl_zext<6,5>(out_d_reg_130.read());
}

void max_pooling2d_fix16::thread_out_h_3_fu_275_p2() {
    out_h_3_fu_275_p2 = (!out_h_reg_165.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(out_h_reg_165.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pooling2d_fix16::thread_out_h_cast_fu_266_p1() {
    out_h_cast_fu_266_p1 = esl_zext<5,4>(out_h_reg_165.read());
}

void max_pooling2d_fix16::thread_out_w_3_fu_321_p2() {
    out_w_3_fu_321_p2 = (!out_w_reg_176.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(out_w_reg_176.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pooling2d_fix16::thread_out_w_cast_fu_312_p1() {
    out_w_cast_fu_312_p1 = esl_zext<5,4>(out_w_reg_176.read());
}

void max_pooling2d_fix16::thread_output_height_cast2_fu_217_p0() {
    output_height_cast2_fu_217_p0 = output_height.read();
}

void max_pooling2d_fix16::thread_output_height_cast2_fu_217_p1() {
    output_height_cast2_fu_217_p1 = esl_sext<6,5>(output_height_cast2_fu_217_p0.read());
}

void max_pooling2d_fix16::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<14>) (tmp_54_fu_378_p1.read());
}

void max_pooling2d_fix16::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void max_pooling2d_fix16::thread_output_r_d0() {
    output_r_d0 = buffer_fu_70.read();
}

void max_pooling2d_fix16::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_347_p2.read(), ap_const_lv1_1))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void max_pooling2d_fix16::thread_output_width_cast3_fu_213_p0() {
    output_width_cast3_fu_213_p0 = output_width.read();
}

void max_pooling2d_fix16::thread_output_width_cast3_fu_213_p1() {
    output_width_cast3_fu_213_p1 = esl_sext<6,5>(output_width_cast3_fu_213_p0.read());
}

void max_pooling2d_fix16::thread_tmp1_fu_386_p0() {
    tmp1_fu_386_p0 =  (sc_lv<9>) (tmp1_fu_386_p00.read());
}

void max_pooling2d_fix16::thread_tmp1_fu_386_p00() {
    tmp1_fu_386_p00 = esl_zext<14,9>(tmp_reg_566.read());
}

void max_pooling2d_fix16::thread_tmp1_fu_386_p1() {
    tmp1_fu_386_p1 =  (sc_lv<7>) (tmp_69_cast_reg_484.read());
}

void max_pooling2d_fix16::thread_tmp1_fu_386_p2() {
    tmp1_fu_386_p2 = (!tmp1_fu_386_p0.read().is_01() || !tmp1_fu_386_p1.read().is_01())? sc_lv<14>(): sc_biguint<9>(tmp1_fu_386_p0.read()) * sc_biguint<7>(tmp1_fu_386_p1.read());
}

void max_pooling2d_fix16::thread_tmp2_fu_297_p2() {
    tmp2_fu_297_p2 = (!tmp_75_cast1_fu_281_p1.read().is_01() || !phi_mul2_reg_153.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_75_cast1_fu_281_p1.read()) + sc_biguint<8>(phi_mul2_reg_153.read()));
}

void max_pooling2d_fix16::thread_tmp3_fu_307_p0() {
    tmp3_fu_307_p0 =  (sc_lv<6>) (tmp_71_cast_reg_494.read());
}

void max_pooling2d_fix16::thread_tmp3_fu_307_p1() {
    tmp3_fu_307_p1 =  (sc_lv<8>) (tmp3_fu_307_p10.read());
}

void max_pooling2d_fix16::thread_tmp3_fu_307_p10() {
    tmp3_fu_307_p10 = esl_zext<12,8>(tmp2_fu_297_p2.read());
}

void max_pooling2d_fix16::thread_tmp3_fu_307_p2() {
    tmp3_fu_307_p2 = (!tmp3_fu_307_p0.read().is_01() || !tmp3_fu_307_p1.read().is_01())? sc_lv<12>(): sc_biguint<6>(tmp3_fu_307_p0.read()) * sc_biguint<8>(tmp3_fu_307_p1.read());
}

void max_pooling2d_fix16::thread_tmp4_fu_363_p2() {
    tmp4_fu_363_p2 = (!phi_mul_reg_141.read().is_01() || !tmp_82_cast_fu_359_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(phi_mul_reg_141.read()) + sc_biguint<9>(tmp_82_cast_fu_359_p1.read()));
}

void max_pooling2d_fix16::thread_tmp5_fu_411_p2() {
    tmp5_fu_411_p2 = (!tmp1_reg_571.read().is_01() || !tmp_83_cast_fu_407_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp1_reg_571.read()) + sc_biguint<14>(tmp_83_cast_fu_407_p1.read()));
}

void max_pooling2d_fix16::thread_tmp_51_fu_331_p3() {
    tmp_51_fu_331_p3 = esl_concat<4,1>(out_w_reg_176.read(), ap_const_lv1_0);
}

void max_pooling2d_fix16::thread_tmp_52_fu_343_p1() {
    tmp_52_fu_343_p1 = in_h_reg_187.read().range(1-1, 0);
}

void max_pooling2d_fix16::thread_tmp_53_fu_374_p2() {
    tmp_53_fu_374_p2 = (!tmp3_reg_530.read().is_01() || !tmp_78_cast1_reg_543.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp3_reg_530.read()) + sc_biguint<12>(tmp_78_cast1_reg_543.read()));
}

void max_pooling2d_fix16::thread_tmp_54_fu_378_p1() {
    tmp_54_fu_378_p1 = esl_zext<64,12>(tmp_53_fu_374_p2.read());
}

void max_pooling2d_fix16::thread_tmp_55_fu_391_p1() {
    tmp_55_fu_391_p1 = in_w_reg_198.read().range(1-1, 0);
}

void max_pooling2d_fix16::thread_tmp_56_fu_416_p2() {
    tmp_56_fu_416_p2 = (!tmp5_fu_411_p2.read().is_01() || !tmp_79_cast_reg_548.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp5_fu_411_p2.read()) + sc_biguint<14>(tmp_79_cast_reg_548.read()));
}

void max_pooling2d_fix16::thread_tmp_57_fu_421_p1() {
    tmp_57_fu_421_p1 = esl_zext<64,14>(tmp_56_reg_589.read());
}

void max_pooling2d_fix16::thread_tmp_58_fu_425_p2() {
    tmp_58_fu_425_p2 = (tmp_55_reg_576.read() | tmp_52_reg_553.read());
}

void max_pooling2d_fix16::thread_tmp_59_fu_429_p2() {
    tmp_59_fu_429_p2 = (tmp_58_fu_425_p2.read() ^ ap_const_lv1_1);
}

void max_pooling2d_fix16::thread_tmp_60_fu_435_p2() {
    tmp_60_fu_435_p2 = (!buffer_fu_70.read().is_01() || !tmp_62_reg_599.read().is_01())? sc_lv<1>(): (sc_bigint<16>(buffer_fu_70.read()) < sc_bigint<16>(tmp_62_reg_599.read()));
}

void max_pooling2d_fix16::thread_tmp_69_cast_fu_229_p1() {
    tmp_69_cast_fu_229_p1 = esl_zext<14,7>(input_width_cast_fu_221_p1.read());
}

void max_pooling2d_fix16::thread_tmp_70_cast_fu_233_p1() {
    tmp_70_cast_fu_233_p1 = esl_zext<8,6>(output_height_cast2_fu_217_p1.read());
}

void max_pooling2d_fix16::thread_tmp_71_cast_fu_237_p1() {
    tmp_71_cast_fu_237_p1 = esl_zext<12,6>(output_width_cast3_fu_213_p1.read());
}

void max_pooling2d_fix16::thread_tmp_75_cast1_fu_281_p1() {
    tmp_75_cast1_fu_281_p1 = esl_zext<8,4>(out_h_reg_165.read());
}

void max_pooling2d_fix16::thread_tmp_76_cast_fu_293_p1() {
    tmp_76_cast_fu_293_p1 = esl_zext<9,5>(tmp_s_fu_285_p3.read());
}

void max_pooling2d_fix16::thread_tmp_78_cast1_fu_327_p1() {
    tmp_78_cast1_fu_327_p1 = esl_zext<12,4>(out_w_reg_176.read());
}

void max_pooling2d_fix16::thread_tmp_79_cast_fu_339_p1() {
    tmp_79_cast_fu_339_p1 = esl_zext<14,5>(tmp_51_fu_331_p3.read());
}

void max_pooling2d_fix16::thread_tmp_82_cast_fu_359_p1() {
    tmp_82_cast_fu_359_p1 = esl_zext<9,2>(in_h_reg_187.read());
}

void max_pooling2d_fix16::thread_tmp_83_cast_fu_407_p1() {
    tmp_83_cast_fu_407_p1 = esl_zext<14,2>(in_w_reg_198.read());
}

void max_pooling2d_fix16::thread_tmp_cast_fu_225_p1() {
    tmp_cast_fu_225_p1 = esl_zext<9,7>(input_height.read());
}

void max_pooling2d_fix16::thread_tmp_fu_369_p2() {
    tmp_fu_369_p2 = (!tmp4_fu_363_p2.read().is_01() || !tmp_76_cast_reg_525.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp4_fu_363_p2.read()) + sc_biguint<9>(tmp_76_cast_reg_525.read()));
}

void max_pooling2d_fix16::thread_tmp_s_fu_285_p3() {
    tmp_s_fu_285_p3 = esl_concat<4,1>(out_h_reg_165.read(), ap_const_lv1_0);
}

void max_pooling2d_fix16::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_255_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond4_fu_270_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond3_fu_316_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond2_fu_347_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond_fu_395_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXX";
            break;
    }
}

}

