// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv2d_fix_4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv2d_fix_4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv2d_fix_4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> pointwise_conv2d_fix_4::ap_ST_fsm_state1 = "1";
const sc_lv<8> pointwise_conv2d_fix_4::ap_ST_fsm_state2 = "10";
const sc_lv<8> pointwise_conv2d_fix_4::ap_ST_fsm_state3 = "100";
const sc_lv<8> pointwise_conv2d_fix_4::ap_ST_fsm_state4 = "1000";
const sc_lv<8> pointwise_conv2d_fix_4::ap_ST_fsm_state5 = "10000";
const sc_lv<8> pointwise_conv2d_fix_4::ap_ST_fsm_state6 = "100000";
const sc_lv<8> pointwise_conv2d_fix_4::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> pointwise_conv2d_fix_4::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_1 = "1";
const sc_lv<1> pointwise_conv2d_fix_4::ap_const_lv1_0 = "0";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_2 = "10";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_3 = "11";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_4 = "100";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_5 = "101";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_6 = "110";
const sc_lv<5> pointwise_conv2d_fix_4::ap_const_lv5_0 = "00000";
const sc_lv<1> pointwise_conv2d_fix_4::ap_const_lv1_1 = "1";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_7 = "111";
const sc_lv<16> pointwise_conv2d_fix_4::ap_const_lv16_0 = "0000000000000000";
const sc_lv<14> pointwise_conv2d_fix_4::ap_const_lv14_0 = "00000000000000";
const sc_lv<5> pointwise_conv2d_fix_4::ap_const_lv5_1C = "11100";
const sc_lv<5> pointwise_conv2d_fix_4::ap_const_lv5_1 = "1";
const sc_lv<2> pointwise_conv2d_fix_4::ap_const_lv2_0 = "00";
const sc_lv<5> pointwise_conv2d_fix_4::ap_const_lv5_10 = "10000";
const sc_lv<14> pointwise_conv2d_fix_4::ap_const_lv14_310 = "1100010000";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_E = "1110";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_1D = "11101";
const sc_lv<16> pointwise_conv2d_fix_4::ap_const_lv16_D60D = "1101011000001101";
const sc_lv<15> pointwise_conv2d_fix_4::ap_const_lv15_560D = "101011000001101";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_F = "1111";
const sc_lv<15> pointwise_conv2d_fix_4::ap_const_lv15_0 = "000000000000000";
const bool pointwise_conv2d_fix_4::ap_const_boolean_1 = true;

pointwise_conv2d_fix_4::pointwise_conv2d_fix_4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    SeparableConv2D_4_w_s_U = new pointwise_conv2d_fix_4_SeparableConv2D_4_w_s("SeparableConv2D_4_w_s_U");
    SeparableConv2D_4_w_s_U->clk(ap_clk);
    SeparableConv2D_4_w_s_U->reset(ap_rst);
    SeparableConv2D_4_w_s_U->address0(SeparableConv2D_4_w_s_address0);
    SeparableConv2D_4_w_s_U->ce0(SeparableConv2D_4_w_s_ce0);
    SeparableConv2D_4_w_s_U->q0(SeparableConv2D_4_w_s_q0);
    network_mul_mul_15s_16s_30_1_1_U65 = new network_mul_mul_15s_16s_30_1_1<1,1,15,16,30>("network_mul_mul_15s_16s_30_1_1_U65");
    network_mul_mul_15s_16s_30_1_1_U65->din0(SeparableConv2D_4_w_3_reg_405);
    network_mul_mul_15s_16s_30_1_1_U65->din1(input_load_reg_400);
    network_mul_mul_15s_16s_30_1_1_U65->dout(tmp_10_fu_334_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SeparableConv2D_4_w_s_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_9_fu_272_p1 );

    SC_METHOD(thread_SeparableConv2D_4_w_s_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_147_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_147_p2 );

    SC_METHOD(thread_exitcond1_fu_193_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( out_w_reg_101 );

    SC_METHOD(thread_exitcond2_fu_147_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_h_reg_90 );

    SC_METHOD(thread_exitcond_fu_227_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( in_d_reg_125 );

    SC_METHOD(thread_in_d_1_fu_233_p2);
    sensitive << ( in_d_reg_125 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_8_fu_267_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_next_mul_fu_243_p2);
    sensitive << ( phi_mul_reg_136 );

    SC_METHOD(thread_out_h_2_fu_153_p2);
    sensitive << ( out_h_reg_90 );

    SC_METHOD(thread_out_w_2_fu_199_p2);
    sensitive << ( out_w_reg_101 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_372 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( output_load_1_reg_112 );
    sensitive << ( p_tmp_cast_fu_329_p1 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_p_shl1_cast_fu_179_p1);
    sensitive << ( p_shl1_fu_171_p3 );

    SC_METHOD(thread_p_shl1_fu_171_p3);
    sensitive << ( out_h_reg_90 );

    SC_METHOD(thread_p_shl_cast_fu_167_p1);
    sensitive << ( p_shl_fu_159_p3 );

    SC_METHOD(thread_p_shl_fu_159_p3);
    sensitive << ( out_h_reg_90 );

    SC_METHOD(thread_p_tmp_cast_fu_329_p1);
    sensitive << ( p_tmp_s_fu_321_p3 );

    SC_METHOD(thread_p_tmp_s_fu_321_p3);
    sensitive << ( tmp_5_fu_313_p3 );
    sensitive << ( tmp_27_cast_fu_307_p2 );

    SC_METHOD(thread_tmp1_cast_fu_254_p1);
    sensitive << ( tmp1_fu_249_p2 );

    SC_METHOD(thread_tmp1_fu_249_p2);
    sensitive << ( tmp_23_cast4_reg_367 );
    sensitive << ( phi_mul_reg_136 );

    SC_METHOD(thread_tmp_1_fu_183_p2);
    sensitive << ( p_shl_cast_fu_167_p1 );
    sensitive << ( p_shl1_cast_fu_179_p1 );

    SC_METHOD(thread_tmp_22_cast_fu_189_p1);
    sensitive << ( tmp_1_fu_183_p2 );

    SC_METHOD(thread_tmp_23_cast4_fu_205_p1);
    sensitive << ( out_w_reg_101 );

    SC_METHOD(thread_tmp_23_cast_fu_209_p1);
    sensitive << ( out_w_reg_101 );

    SC_METHOD(thread_tmp_25_cast_fu_218_p1);
    sensitive << ( tmp_fu_213_p2 );

    SC_METHOD(thread_tmp_27_cast_fu_307_p2);
    sensitive << ( tmp_3_fu_297_p1 );

    SC_METHOD(thread_tmp_2_fu_222_p1);
    sensitive << ( tmp_25_cast_fu_218_p1 );

    SC_METHOD(thread_tmp_32_cast_fu_263_p1);
    sensitive << ( tmp_7_fu_258_p2 );

    SC_METHOD(thread_tmp_3_fu_297_p1);
    sensitive << ( output_load_1_reg_112 );

    SC_METHOD(thread_tmp_4_fu_301_p2);
    sensitive << ( output_load_1_reg_112 );

    SC_METHOD(thread_tmp_5_fu_313_p3);
    sensitive << ( tmp_4_fu_301_p2 );

    SC_METHOD(thread_tmp_6_fu_239_p1);
    sensitive << ( in_d_reg_125 );

    SC_METHOD(thread_tmp_7_fu_258_p2);
    sensitive << ( tmp_22_cast_reg_354 );
    sensitive << ( tmp1_cast_fu_254_p1 );

    SC_METHOD(thread_tmp_8_fu_267_p1);
    sensitive << ( tmp_32_cast_fu_263_p1 );

    SC_METHOD(thread_tmp_9_fu_272_p1);
    sensitive << ( tmp_6_fu_239_p1 );

    SC_METHOD(thread_tmp_fu_213_p2);
    sensitive << ( tmp_1_reg_349 );
    sensitive << ( tmp_23_cast_fu_209_p1 );

    SC_METHOD(thread_tmp_s_fu_292_p2);
    sensitive << ( tmp_11_reg_410 );
    sensitive << ( output_load_1_reg_112 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_147_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond1_fu_193_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond_fu_227_p2 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv2d_fix_4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, SeparableConv2D_4_w_s_address0, "SeparableConv2D_4_w_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_4_w_s_ce0, "SeparableConv2D_4_w_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_4_w_s_q0, "SeparableConv2D_4_w_s_q0");
    sc_trace(mVcdFile, out_h_2_fu_153_p2, "out_h_2_fu_153_p2");
    sc_trace(mVcdFile, out_h_2_reg_344, "out_h_2_reg_344");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_183_p2, "tmp_1_fu_183_p2");
    sc_trace(mVcdFile, tmp_1_reg_349, "tmp_1_reg_349");
    sc_trace(mVcdFile, exitcond2_fu_147_p2, "exitcond2_fu_147_p2");
    sc_trace(mVcdFile, tmp_22_cast_fu_189_p1, "tmp_22_cast_fu_189_p1");
    sc_trace(mVcdFile, tmp_22_cast_reg_354, "tmp_22_cast_reg_354");
    sc_trace(mVcdFile, out_w_2_fu_199_p2, "out_w_2_fu_199_p2");
    sc_trace(mVcdFile, out_w_2_reg_362, "out_w_2_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_23_cast4_fu_205_p1, "tmp_23_cast4_fu_205_p1");
    sc_trace(mVcdFile, tmp_23_cast4_reg_367, "tmp_23_cast4_reg_367");
    sc_trace(mVcdFile, exitcond1_fu_193_p2, "exitcond1_fu_193_p2");
    sc_trace(mVcdFile, output_addr_reg_372, "output_addr_reg_372");
    sc_trace(mVcdFile, in_d_1_fu_233_p2, "in_d_1_fu_233_p2");
    sc_trace(mVcdFile, in_d_1_reg_380, "in_d_1_reg_380");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, next_mul_fu_243_p2, "next_mul_fu_243_p2");
    sc_trace(mVcdFile, next_mul_reg_385, "next_mul_reg_385");
    sc_trace(mVcdFile, exitcond_fu_227_p2, "exitcond_fu_227_p2");
    sc_trace(mVcdFile, input_load_reg_400, "input_load_reg_400");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, SeparableConv2D_4_w_3_reg_405, "SeparableConv2D_4_w_3_reg_405");
    sc_trace(mVcdFile, tmp_11_reg_410, "tmp_11_reg_410");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_s_fu_292_p2, "tmp_s_fu_292_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, out_h_reg_90, "out_h_reg_90");
    sc_trace(mVcdFile, out_w_reg_101, "out_w_reg_101");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, output_load_1_reg_112, "output_load_1_reg_112");
    sc_trace(mVcdFile, in_d_reg_125, "in_d_reg_125");
    sc_trace(mVcdFile, phi_mul_reg_136, "phi_mul_reg_136");
    sc_trace(mVcdFile, tmp_2_fu_222_p1, "tmp_2_fu_222_p1");
    sc_trace(mVcdFile, tmp_8_fu_267_p1, "tmp_8_fu_267_p1");
    sc_trace(mVcdFile, tmp_9_fu_272_p1, "tmp_9_fu_272_p1");
    sc_trace(mVcdFile, p_tmp_cast_fu_329_p1, "p_tmp_cast_fu_329_p1");
    sc_trace(mVcdFile, p_shl_fu_159_p3, "p_shl_fu_159_p3");
    sc_trace(mVcdFile, p_shl1_fu_171_p3, "p_shl1_fu_171_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_167_p1, "p_shl_cast_fu_167_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_179_p1, "p_shl1_cast_fu_179_p1");
    sc_trace(mVcdFile, tmp_23_cast_fu_209_p1, "tmp_23_cast_fu_209_p1");
    sc_trace(mVcdFile, tmp_fu_213_p2, "tmp_fu_213_p2");
    sc_trace(mVcdFile, tmp_25_cast_fu_218_p1, "tmp_25_cast_fu_218_p1");
    sc_trace(mVcdFile, tmp1_fu_249_p2, "tmp1_fu_249_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_254_p1, "tmp1_cast_fu_254_p1");
    sc_trace(mVcdFile, tmp_7_fu_258_p2, "tmp_7_fu_258_p2");
    sc_trace(mVcdFile, tmp_32_cast_fu_263_p1, "tmp_32_cast_fu_263_p1");
    sc_trace(mVcdFile, tmp_6_fu_239_p1, "tmp_6_fu_239_p1");
    sc_trace(mVcdFile, tmp_10_fu_334_p2, "tmp_10_fu_334_p2");
    sc_trace(mVcdFile, tmp_3_fu_297_p1, "tmp_3_fu_297_p1");
    sc_trace(mVcdFile, tmp_4_fu_301_p2, "tmp_4_fu_301_p2");
    sc_trace(mVcdFile, tmp_5_fu_313_p3, "tmp_5_fu_313_p3");
    sc_trace(mVcdFile, tmp_27_cast_fu_307_p2, "tmp_27_cast_fu_307_p2");
    sc_trace(mVcdFile, p_tmp_s_fu_321_p3, "p_tmp_s_fu_321_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pointwise_conv2d_fix_4::~pointwise_conv2d_fix_4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete SeparableConv2D_4_w_s_U;
    delete network_mul_mul_15s_16s_30_1_1_U65;
}

void pointwise_conv2d_fix_4::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in_d_reg_125 = in_d_1_reg_380.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_193_p2.read()))) {
        in_d_reg_125 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_193_p2.read(), ap_const_lv1_1))) {
        out_h_reg_90 = out_h_2_reg_344.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_h_reg_90 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_147_p2.read(), ap_const_lv1_0))) {
        out_w_reg_101 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_w_reg_101 = out_w_2_reg_362.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_load_1_reg_112 = tmp_s_fu_292_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_193_p2.read()))) {
        output_load_1_reg_112 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        phi_mul_reg_136 = next_mul_reg_385.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_193_p2.read()))) {
        phi_mul_reg_136 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SeparableConv2D_4_w_3_reg_405 = SeparableConv2D_4_w_s_q0.read();
        input_load_reg_400 = input_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in_d_1_reg_380 = in_d_1_fu_233_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_227_p2.read()))) {
        next_mul_reg_385 = next_mul_fu_243_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        out_h_2_reg_344 = out_h_2_fu_153_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_w_2_reg_362 = out_w_2_fu_199_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_193_p2.read()))) {
        output_addr_reg_372 =  (sc_lv<14>) (tmp_2_fu_222_p1.read());
        tmp_23_cast4_reg_367 = tmp_23_cast4_fu_205_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_11_reg_410 = tmp_10_fu_334_p2.read().range(29, 14);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond2_fu_147_p2.read(), ap_const_lv1_0))) {
        tmp_1_reg_349 = tmp_1_fu_183_p2.read();
        tmp_22_cast_reg_354 = tmp_22_cast_fu_189_p1.read();
    }
}

void pointwise_conv2d_fix_4::thread_SeparableConv2D_4_w_s_address0() {
    SeparableConv2D_4_w_s_address0 =  (sc_lv<4>) (tmp_9_fu_272_p1.read());
}

void pointwise_conv2d_fix_4::thread_SeparableConv2D_4_w_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        SeparableConv2D_4_w_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_4_w_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void pointwise_conv2d_fix_4::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond2_fu_147_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_147_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_exitcond1_fu_193_p2() {
    exitcond1_fu_193_p2 = (!out_w_reg_101.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_w_reg_101.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix_4::thread_exitcond2_fu_147_p2() {
    exitcond2_fu_147_p2 = (!out_h_reg_90.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_h_reg_90.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix_4::thread_exitcond_fu_227_p2() {
    exitcond_fu_227_p2 = (!in_d_reg_125.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(in_d_reg_125.read() == ap_const_lv5_10);
}

void pointwise_conv2d_fix_4::thread_in_d_1_fu_233_p2() {
    in_d_1_fu_233_p2 = (!in_d_reg_125.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(in_d_reg_125.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix_4::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<14>) (tmp_8_fu_267_p1.read());
}

void pointwise_conv2d_fix_4::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_next_mul_fu_243_p2() {
    next_mul_fu_243_p2 = (!ap_const_lv14_310.is_01() || !phi_mul_reg_136.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ap_const_lv14_310) + sc_biguint<14>(phi_mul_reg_136.read()));
}

void pointwise_conv2d_fix_4::thread_out_h_2_fu_153_p2() {
    out_h_2_fu_153_p2 = (!out_h_reg_90.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_h_reg_90.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix_4::thread_out_w_2_fu_199_p2() {
    out_w_2_fu_199_p2 = (!out_w_reg_101.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_w_reg_101.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix_4::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_372.read();
}

void pointwise_conv2d_fix_4::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_r_d0 = p_tmp_cast_fu_329_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_d0 = output_load_1_reg_112.read();
    } else {
        output_r_d0 = "XXXXXXXXXXXXXXXX";
    }
}

void pointwise_conv2d_fix_4::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_p_shl1_cast_fu_179_p1() {
    p_shl1_cast_fu_179_p1 = esl_zext<11,7>(p_shl1_fu_171_p3.read());
}

void pointwise_conv2d_fix_4::thread_p_shl1_fu_171_p3() {
    p_shl1_fu_171_p3 = esl_concat<5,2>(out_h_reg_90.read(), ap_const_lv2_0);
}

void pointwise_conv2d_fix_4::thread_p_shl_cast_fu_167_p1() {
    p_shl_cast_fu_167_p1 = esl_zext<11,10>(p_shl_fu_159_p3.read());
}

void pointwise_conv2d_fix_4::thread_p_shl_fu_159_p3() {
    p_shl_fu_159_p3 = esl_concat<5,5>(out_h_reg_90.read(), ap_const_lv5_0);
}

void pointwise_conv2d_fix_4::thread_p_tmp_cast_fu_329_p1() {
    p_tmp_cast_fu_329_p1 = esl_zext<16,15>(p_tmp_s_fu_321_p3.read());
}

void pointwise_conv2d_fix_4::thread_p_tmp_s_fu_321_p3() {
    p_tmp_s_fu_321_p3 = (!tmp_5_fu_313_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_5_fu_313_p3.read()[0].to_bool())? ap_const_lv15_0: tmp_27_cast_fu_307_p2.read());
}

void pointwise_conv2d_fix_4::thread_tmp1_cast_fu_254_p1() {
    tmp1_cast_fu_254_p1 = esl_zext<15,14>(tmp1_fu_249_p2.read());
}

void pointwise_conv2d_fix_4::thread_tmp1_fu_249_p2() {
    tmp1_fu_249_p2 = (!tmp_23_cast4_reg_367.read().is_01() || !phi_mul_reg_136.read().is_01())? sc_lv<14>(): (sc_biguint<14>(tmp_23_cast4_reg_367.read()) + sc_biguint<14>(phi_mul_reg_136.read()));
}

void pointwise_conv2d_fix_4::thread_tmp_1_fu_183_p2() {
    tmp_1_fu_183_p2 = (!p_shl_cast_fu_167_p1.read().is_01() || !p_shl1_cast_fu_179_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl_cast_fu_167_p1.read()) - sc_biguint<11>(p_shl1_cast_fu_179_p1.read()));
}

void pointwise_conv2d_fix_4::thread_tmp_22_cast_fu_189_p1() {
    tmp_22_cast_fu_189_p1 = esl_sext<15,11>(tmp_1_fu_183_p2.read());
}

void pointwise_conv2d_fix_4::thread_tmp_23_cast4_fu_205_p1() {
    tmp_23_cast4_fu_205_p1 = esl_zext<14,5>(out_w_reg_101.read());
}

void pointwise_conv2d_fix_4::thread_tmp_23_cast_fu_209_p1() {
    tmp_23_cast_fu_209_p1 = esl_zext<11,5>(out_w_reg_101.read());
}

void pointwise_conv2d_fix_4::thread_tmp_25_cast_fu_218_p1() {
    tmp_25_cast_fu_218_p1 = esl_sext<32,11>(tmp_fu_213_p2.read());
}

void pointwise_conv2d_fix_4::thread_tmp_27_cast_fu_307_p2() {
    tmp_27_cast_fu_307_p2 = (!ap_const_lv15_560D.is_01() || !tmp_3_fu_297_p1.read().is_01())? sc_lv<15>(): (sc_bigint<15>(ap_const_lv15_560D) + sc_biguint<15>(tmp_3_fu_297_p1.read()));
}

void pointwise_conv2d_fix_4::thread_tmp_2_fu_222_p1() {
    tmp_2_fu_222_p1 = esl_zext<64,32>(tmp_25_cast_fu_218_p1.read());
}

void pointwise_conv2d_fix_4::thread_tmp_32_cast_fu_263_p1() {
    tmp_32_cast_fu_263_p1 = esl_sext<32,15>(tmp_7_fu_258_p2.read());
}

void pointwise_conv2d_fix_4::thread_tmp_3_fu_297_p1() {
    tmp_3_fu_297_p1 = output_load_1_reg_112.read().range(15-1, 0);
}

void pointwise_conv2d_fix_4::thread_tmp_4_fu_301_p2() {
    tmp_4_fu_301_p2 = (!ap_const_lv16_D60D.is_01() || !output_load_1_reg_112.read().is_01())? sc_lv<16>(): (sc_bigint<16>(ap_const_lv16_D60D) + sc_biguint<16>(output_load_1_reg_112.read()));
}

void pointwise_conv2d_fix_4::thread_tmp_5_fu_313_p3() {
    tmp_5_fu_313_p3 = tmp_4_fu_301_p2.read().range(15, 15);
}

void pointwise_conv2d_fix_4::thread_tmp_6_fu_239_p1() {
    tmp_6_fu_239_p1 = in_d_reg_125.read().range(4-1, 0);
}

void pointwise_conv2d_fix_4::thread_tmp_7_fu_258_p2() {
    tmp_7_fu_258_p2 = (!tmp_22_cast_reg_354.read().is_01() || !tmp1_cast_fu_254_p1.read().is_01())? sc_lv<15>(): (sc_bigint<15>(tmp_22_cast_reg_354.read()) + sc_biguint<15>(tmp1_cast_fu_254_p1.read()));
}

void pointwise_conv2d_fix_4::thread_tmp_8_fu_267_p1() {
    tmp_8_fu_267_p1 = esl_zext<64,32>(tmp_32_cast_fu_263_p1.read());
}

void pointwise_conv2d_fix_4::thread_tmp_9_fu_272_p1() {
    tmp_9_fu_272_p1 = esl_zext<64,4>(tmp_6_fu_239_p1.read());
}

void pointwise_conv2d_fix_4::thread_tmp_fu_213_p2() {
    tmp_fu_213_p2 = (!tmp_1_reg_349.read().is_01() || !tmp_23_cast_fu_209_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tmp_1_reg_349.read()) + sc_biguint<11>(tmp_23_cast_fu_209_p1.read()));
}

void pointwise_conv2d_fix_4::thread_tmp_s_fu_292_p2() {
    tmp_s_fu_292_p2 = (!tmp_11_reg_410.read().is_01() || !output_load_1_reg_112.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_11_reg_410.read()) + sc_biguint<16>(output_load_1_reg_112.read()));
}

void pointwise_conv2d_fix_4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond2_fu_147_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond1_fu_193_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond_fu_227_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

