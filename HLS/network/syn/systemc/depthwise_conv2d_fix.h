// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _depthwise_conv2d_fix_HH_
#define _depthwise_conv2d_fix_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mul_mul_15s_16s_30_1_1.h"
#include "depthwise_conv2d_fix_SeparableConv2D_0_w_1.h"

namespace ap_rtl {

struct depthwise_conv2d_fix : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;
    sc_in< sc_lv<16> > output_r_q0;


    // Module declarations
    depthwise_conv2d_fix(sc_module_name name);
    SC_HAS_PROCESS(depthwise_conv2d_fix);

    ~depthwise_conv2d_fix();

    sc_trace_file* mVcdFile;

    depthwise_conv2d_fix_SeparableConv2D_0_w_1* SeparableConv2D_0_w_1_U;
    network_mul_mul_15s_16s_30_1_1<1,1,15,16,30>* network_mul_mul_15s_16s_30_1_1_U6;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > SeparableConv2D_0_w_1_address0;
    sc_signal< sc_logic > SeparableConv2D_0_w_1_ce0;
    sc_signal< sc_lv<15> > SeparableConv2D_0_w_1_q0;
    sc_signal< sc_lv<5> > out_h_4_fu_138_p2;
    sc_signal< sc_lv<5> > out_h_4_reg_359;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > tmp1_fu_168_p2;
    sc_signal< sc_lv<11> > tmp1_reg_364;
    sc_signal< sc_lv<1> > exitcond3_fu_132_p2;
    sc_signal< sc_lv<5> > out_w_4_fu_180_p2;
    sc_signal< sc_lv<5> > out_w_4_reg_372;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > output_addr_reg_377;
    sc_signal< sc_lv<1> > exitcond2_fu_174_p2;
    sc_signal< sc_lv<2> > k_h_1_fu_210_p2;
    sc_signal< sc_lv<2> > k_h_1_reg_385;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > tmp_79_fu_232_p2;
    sc_signal< sc_lv<5> > tmp_79_reg_390;
    sc_signal< sc_lv<1> > exitcond1_fu_204_p2;
    sc_signal< sc_lv<11> > tmp3_fu_268_p2;
    sc_signal< sc_lv<11> > tmp3_reg_395;
    sc_signal< sc_lv<2> > k_w_1_fu_280_p2;
    sc_signal< sc_lv<2> > k_w_1_reg_403;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_274_p2;
    sc_signal< sc_lv<16> > input_load_reg_418;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<15> > SeparableConv2D_0_w_5_reg_423;
    sc_signal< sc_lv<16> > tmp_86_reg_428;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > out_h_reg_86;
    sc_signal< sc_lv<5> > out_w_reg_98;
    sc_signal< sc_lv<2> > k_h_reg_110;
    sc_signal< sc_lv<2> > k_w_reg_121;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_78_fu_199_p1;
    sc_signal< sc_lv<64> > tmp_81_fu_309_p1;
    sc_signal< sc_lv<64> > tmp_83_fu_323_p1;
    sc_signal< sc_lv<16> > tmp_87_fu_343_p2;
    sc_signal< sc_lv<10> > p_shl8_fu_144_p3;
    sc_signal< sc_lv<7> > p_shl9_fu_156_p3;
    sc_signal< sc_lv<11> > p_shl8_cast_fu_152_p1;
    sc_signal< sc_lv<11> > p_shl9_cast_fu_164_p1;
    sc_signal< sc_lv<11> > tmp_102_cast_fu_186_p1;
    sc_signal< sc_lv<11> > tmp_s_fu_190_p2;
    sc_signal< sc_lv<32> > tmp_103_cast_fu_195_p1;
    sc_signal< sc_lv<4> > p_shl5_fu_220_p3;
    sc_signal< sc_lv<5> > p_shl5_cast_fu_228_p1;
    sc_signal< sc_lv<5> > tmp_105_cast1_fu_216_p1;
    sc_signal< sc_lv<5> > tmp2_fu_238_p2;
    sc_signal< sc_lv<10> > p_shl1_fu_244_p3;
    sc_signal< sc_lv<6> > p_shl2_fu_256_p3;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_252_p1;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_264_p1;
    sc_signal< sc_lv<5> > tmp_108_cast_fu_286_p1;
    sc_signal< sc_lv<5> > tmp5_fu_290_p2;
    sc_signal< sc_lv<11> > tmp5_cast_fu_296_p1;
    sc_signal< sc_lv<11> > tmp_80_fu_300_p2;
    sc_signal< sc_lv<32> > tmp_110_cast_fu_305_p1;
    sc_signal< sc_lv<5> > tmp_82_fu_314_p2;
    sc_signal< sc_lv<32> > tmp_113_cast_fu_319_p1;
    sc_signal< sc_lv<30> > tmp_84_fu_349_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_SeparableConv2D_0_w_1_address0();
    void thread_SeparableConv2D_0_w_1_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_204_p2();
    void thread_exitcond2_fu_174_p2();
    void thread_exitcond3_fu_132_p2();
    void thread_exitcond_fu_274_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_k_h_1_fu_210_p2();
    void thread_k_w_1_fu_280_p2();
    void thread_out_h_4_fu_138_p2();
    void thread_out_w_4_fu_180_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_252_p1();
    void thread_p_shl1_fu_244_p3();
    void thread_p_shl2_cast_fu_264_p1();
    void thread_p_shl2_fu_256_p3();
    void thread_p_shl5_cast_fu_228_p1();
    void thread_p_shl5_fu_220_p3();
    void thread_p_shl8_cast_fu_152_p1();
    void thread_p_shl8_fu_144_p3();
    void thread_p_shl9_cast_fu_164_p1();
    void thread_p_shl9_fu_156_p3();
    void thread_tmp1_fu_168_p2();
    void thread_tmp2_fu_238_p2();
    void thread_tmp3_fu_268_p2();
    void thread_tmp5_cast_fu_296_p1();
    void thread_tmp5_fu_290_p2();
    void thread_tmp_102_cast_fu_186_p1();
    void thread_tmp_103_cast_fu_195_p1();
    void thread_tmp_105_cast1_fu_216_p1();
    void thread_tmp_108_cast_fu_286_p1();
    void thread_tmp_110_cast_fu_305_p1();
    void thread_tmp_113_cast_fu_319_p1();
    void thread_tmp_78_fu_199_p1();
    void thread_tmp_79_fu_232_p2();
    void thread_tmp_80_fu_300_p2();
    void thread_tmp_81_fu_309_p1();
    void thread_tmp_82_fu_314_p2();
    void thread_tmp_83_fu_323_p1();
    void thread_tmp_87_fu_343_p2();
    void thread_tmp_s_fu_190_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
