// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _up_sampling2d_fix16_HH_
#define _up_sampling2d_fix16_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct up_sampling2d_fix16 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<5> > input_height;
    sc_in< sc_lv<5> > input_width;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<6> > output_depth;
    sc_in< sc_lv<6> > output_height;
    sc_in< sc_lv<6> > output_width;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    up_sampling2d_fix16(sc_module_name name);
    SC_HAS_PROCESS(up_sampling2d_fix16);

    ~up_sampling2d_fix16();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > tmp_1_cast_fu_157_p1;
    sc_signal< sc_lv<8> > tmp_1_cast_reg_325;
    sc_signal< sc_lv<9> > tmp_3_cast_fu_161_p1;
    sc_signal< sc_lv<9> > tmp_3_cast_reg_330;
    sc_signal< sc_lv<14> > tmp_4_cast_fu_165_p1;
    sc_signal< sc_lv<14> > tmp_4_cast_reg_335;
    sc_signal< sc_lv<12> > tmp_2_fu_169_p1;
    sc_signal< sc_lv<12> > tmp_2_reg_340;
    sc_signal< sc_lv<9> > next_mul3_fu_173_p2;
    sc_signal< sc_lv<9> > next_mul3_reg_345;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > next_mul_fu_178_p2;
    sc_signal< sc_lv<8> > next_mul_reg_350;
    sc_signal< sc_lv<5> > out_d_1_fu_192_p2;
    sc_signal< sc_lv<5> > out_d_1_reg_358;
    sc_signal< sc_lv<5> > out_h_1_fu_207_p2;
    sc_signal< sc_lv<5> > out_h_1_reg_366;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_fu_231_p2;
    sc_signal< sc_lv<8> > tmp_reg_371;
    sc_signal< sc_lv<1> > exitcond2_fu_202_p2;
    sc_signal< sc_lv<9> > tmp2_fu_237_p2;
    sc_signal< sc_lv<9> > tmp2_reg_376;
    sc_signal< sc_lv<12> > tmp1_cast_fu_246_p2;
    sc_signal< sc_lv<12> > tmp1_cast_reg_381;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<14> > tmp3_fu_254_p2;
    sc_signal< sc_lv<14> > tmp3_reg_386;
    sc_signal< sc_lv<5> > out_w_1_fu_268_p2;
    sc_signal< sc_lv<5> > out_w_1_reg_394;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<12> > tmp_s_fu_288_p2;
    sc_signal< sc_lv<12> > tmp_s_reg_399;
    sc_signal< sc_lv<1> > exitcond_fu_263_p2;
    sc_signal< sc_lv<14> > tmp_4_fu_297_p2;
    sc_signal< sc_lv<14> > tmp_4_reg_404;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > input_load_reg_414;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > out_d_reg_100;
    sc_signal< sc_lv<8> > phi_mul_reg_111;
    sc_signal< sc_lv<9> > phi_mul2_reg_123;
    sc_signal< sc_lv<5> > out_h_reg_135;
    sc_signal< sc_lv<1> > exitcond3_fu_187_p2;
    sc_signal< sc_lv<5> > out_w_reg_146;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_3_fu_302_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_306_p1;
    sc_signal< sc_lv<6> > out_d_cast_fu_183_p1;
    sc_signal< sc_lv<6> > out_h_cast_fu_198_p1;
    sc_signal< sc_lv<4> > div_fu_213_p4;
    sc_signal< sc_lv<8> > tmp_9_cast_fu_223_p1;
    sc_signal< sc_lv<9> > tmp_cast_fu_227_p1;
    sc_signal< sc_lv<8> > tmp1_cast_fu_246_p0;
    sc_signal< sc_lv<5> > tmp1_cast_fu_246_p1;
    sc_signal< sc_lv<9> > tmp3_fu_254_p0;
    sc_signal< sc_lv<6> > tmp3_fu_254_p1;
    sc_signal< sc_lv<6> > out_w_cast_fu_259_p1;
    sc_signal< sc_lv<4> > div1_fu_274_p4;
    sc_signal< sc_lv<12> > tmp_8_cast_fu_284_p1;
    sc_signal< sc_lv<14> > tmp_12_cast_fu_293_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_lv<12> > tmp1_cast_fu_246_p00;
    sc_signal< sc_lv<14> > tmp3_fu_254_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_div1_fu_274_p4();
    void thread_div_fu_213_p4();
    void thread_exitcond2_fu_202_p2();
    void thread_exitcond3_fu_187_p2();
    void thread_exitcond_fu_263_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_next_mul3_fu_173_p2();
    void thread_next_mul_fu_178_p2();
    void thread_out_d_1_fu_192_p2();
    void thread_out_d_cast_fu_183_p1();
    void thread_out_h_1_fu_207_p2();
    void thread_out_h_cast_fu_198_p1();
    void thread_out_w_1_fu_268_p2();
    void thread_out_w_cast_fu_259_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_tmp1_cast_fu_246_p0();
    void thread_tmp1_cast_fu_246_p00();
    void thread_tmp1_cast_fu_246_p1();
    void thread_tmp1_cast_fu_246_p2();
    void thread_tmp2_fu_237_p2();
    void thread_tmp3_fu_254_p0();
    void thread_tmp3_fu_254_p00();
    void thread_tmp3_fu_254_p1();
    void thread_tmp3_fu_254_p2();
    void thread_tmp_12_cast_fu_293_p1();
    void thread_tmp_1_cast_fu_157_p1();
    void thread_tmp_2_fu_169_p1();
    void thread_tmp_3_cast_fu_161_p1();
    void thread_tmp_3_fu_302_p1();
    void thread_tmp_4_cast_fu_165_p1();
    void thread_tmp_4_fu_297_p2();
    void thread_tmp_5_fu_306_p1();
    void thread_tmp_8_cast_fu_284_p1();
    void thread_tmp_9_cast_fu_223_p1();
    void thread_tmp_cast_fu_227_p1();
    void thread_tmp_fu_231_p2();
    void thread_tmp_s_fu_288_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
