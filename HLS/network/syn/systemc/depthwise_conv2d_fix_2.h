// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _depthwise_conv2d_fix_2_HH_
#define _depthwise_conv2d_fix_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mul_mul_16s_14s_30_1_1.h"
#include "depthwise_conv2d_fix_2_SeparableConv2D_1_w_s.h"

namespace ap_rtl {

struct depthwise_conv2d_fix_2 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > input_height;
    sc_in< sc_lv<16> > input_width;
    sc_in< sc_lv<16> > output_depth;
    sc_in< sc_lv<16> > output_height;
    sc_in< sc_lv<16> > output_width;
    sc_out< sc_lv<12> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;
    sc_in< sc_lv<16> > output_r_q0;
    sc_out< sc_lv<12> > Padding2D_1_array_address0;
    sc_out< sc_logic > Padding2D_1_array_ce0;
    sc_in< sc_lv<16> > Padding2D_1_array_q0;


    // Module declarations
    depthwise_conv2d_fix_2(sc_module_name name);
    SC_HAS_PROCESS(depthwise_conv2d_fix_2);

    ~depthwise_conv2d_fix_2();

    sc_trace_file* mVcdFile;

    depthwise_conv2d_fix_2_SeparableConv2D_1_w_s* SeparableConv2D_1_w_s_U;
    network_mul_mul_16s_14s_30_1_1<1,1,16,14,30>* network_mul_mul_16s_14s_30_1_1_U42;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > SeparableConv2D_1_w_s_address0;
    sc_signal< sc_logic > SeparableConv2D_1_w_s_ce0;
    sc_signal< sc_lv<14> > SeparableConv2D_1_w_s_q0;
    sc_signal< sc_lv<32> > tmp_s_fu_198_p1;
    sc_signal< sc_lv<32> > tmp_s_reg_476;
    sc_signal< sc_lv<32> > tmp_131_fu_202_p1;
    sc_signal< sc_lv<32> > tmp_131_reg_481;
    sc_signal< sc_lv<32> > tmp_132_fu_206_p1;
    sc_signal< sc_lv<32> > tmp_132_reg_486;
    sc_signal< sc_lv<32> > tmp_133_fu_210_p1;
    sc_signal< sc_lv<32> > tmp_133_reg_491;
    sc_signal< sc_lv<32> > next_mul3_fu_214_p2;
    sc_signal< sc_lv<32> > next_mul3_reg_496;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > next_mul_fu_219_p2;
    sc_signal< sc_lv<32> > next_mul_reg_501;
    sc_signal< sc_lv<16> > out_d_4_fu_229_p2;
    sc_signal< sc_lv<16> > out_d_4_reg_509;
    sc_signal< sc_lv<17> > tmp_134_cast3_fu_235_p1;
    sc_signal< sc_lv<17> > tmp_134_cast3_reg_514;
    sc_signal< sc_lv<1> > exitcond4_fu_224_p2;
    sc_signal< sc_lv<21> > p_shl_cast_fu_247_p1;
    sc_signal< sc_lv<21> > p_shl_cast_reg_519;
    sc_signal< sc_lv<16> > out_h_4_fu_256_p2;
    sc_signal< sc_lv<16> > out_h_4_reg_527;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_fu_266_p2;
    sc_signal< sc_lv<32> > tmp_reg_532;
    sc_signal< sc_lv<1> > exitcond3_fu_251_p2;
    sc_signal< sc_lv<17> > tmp_139_cast_fu_272_p1;
    sc_signal< sc_lv<17> > tmp_139_cast_reg_537;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp1_fu_276_p2;
    sc_signal< sc_lv<32> > tmp1_reg_542;
    sc_signal< sc_lv<16> > out_w_4_fu_285_p2;
    sc_signal< sc_lv<16> > out_w_4_reg_550;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<17> > tmp_140_cast_fu_295_p1;
    sc_signal< sc_lv<17> > tmp_140_cast_reg_555;
    sc_signal< sc_lv<1> > exitcond2_fu_280_p2;
    sc_signal< sc_lv<12> > output_addr11_reg_560;
    sc_signal< sc_lv<2> > k_h_1_fu_315_p2;
    sc_signal< sc_lv<2> > k_h_1_reg_568;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > tmp2_fu_360_p2;
    sc_signal< sc_lv<32> > tmp2_reg_573;
    sc_signal< sc_lv<1> > exitcond1_fu_309_p2;
    sc_signal< sc_lv<21> > tmp6_fu_366_p2;
    sc_signal< sc_lv<21> > tmp6_reg_578;
    sc_signal< sc_lv<32> > tmp3_fu_371_p2;
    sc_signal< sc_lv<32> > tmp3_reg_583;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > k_w_1_fu_381_p2;
    sc_signal< sc_lv<2> > k_w_1_reg_591;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > exitcond_fu_375_p2;
    sc_signal< sc_lv<16> > Padding2D_1_array_lo_reg_606;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<14> > SeparableConv2D_1_w_2_reg_611;
    sc_signal< sc_lv<16> > tmp_155_reg_616;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<16> > out_d_reg_118;
    sc_signal< sc_lv<32> > phi_mul_reg_129;
    sc_signal< sc_lv<32> > phi_mul2_reg_141;
    sc_signal< sc_lv<16> > out_h_reg_153;
    sc_signal< sc_lv<16> > out_w_reg_165;
    sc_signal< sc_lv<2> > k_h_reg_176;
    sc_signal< sc_lv<2> > k_w_reg_187;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > tmp_142_fu_304_p1;
    sc_signal< sc_lv<64> > tmp_150_fu_405_p1;
    sc_signal< sc_lv<64> > tmp_153_fu_428_p1;
    sc_signal< sc_lv<16> > tmp_156_fu_448_p2;
    sc_signal< sc_lv<19> > p_shl_fu_239_p3;
    sc_signal< sc_lv<32> > tmp_139_fu_262_p1;
    sc_signal< sc_lv<16> > tmp1_fu_276_p1;
    sc_signal< sc_lv<32> > tmp_140_fu_291_p1;
    sc_signal< sc_lv<32> > tmp_141_fu_299_p2;
    sc_signal< sc_lv<4> > p_shl3_fu_329_p3;
    sc_signal< sc_lv<5> > p_shl3_cast_fu_337_p1;
    sc_signal< sc_lv<5> > tmp_144_cast9_fu_325_p1;
    sc_signal< sc_lv<5> > tmp_145_fu_341_p2;
    sc_signal< sc_lv<17> > tmp_144_cast2_fu_321_p1;
    sc_signal< sc_lv<17> > tmp4_fu_351_p2;
    sc_signal< sc_lv<32> > tmp4_cast_fu_356_p1;
    sc_signal< sc_lv<21> > tmp_145_cast_fu_347_p1;
    sc_signal< sc_lv<16> > tmp3_fu_371_p0;
    sc_signal< sc_lv<17> > tmp_146_cast_fu_387_p1;
    sc_signal< sc_lv<17> > tmp5_fu_391_p2;
    sc_signal< sc_lv<32> > tmp5_cast_fu_396_p1;
    sc_signal< sc_lv<32> > tmp_149_fu_400_p2;
    sc_signal< sc_lv<17> > tmp7_fu_410_p2;
    sc_signal< sc_lv<21> > tmp7_cast_fu_415_p1;
    sc_signal< sc_lv<21> > tmp_152_fu_419_p2;
    sc_signal< sc_lv<32> > tmp_153_cast_fu_424_p1;
    sc_signal< sc_lv<30> > tmp_154_fu_454_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Padding2D_1_array_address0();
    void thread_Padding2D_1_array_ce0();
    void thread_SeparableConv2D_1_w_s_address0();
    void thread_SeparableConv2D_1_w_s_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_309_p2();
    void thread_exitcond2_fu_280_p2();
    void thread_exitcond3_fu_251_p2();
    void thread_exitcond4_fu_224_p2();
    void thread_exitcond_fu_375_p2();
    void thread_k_h_1_fu_315_p2();
    void thread_k_w_1_fu_381_p2();
    void thread_next_mul3_fu_214_p2();
    void thread_next_mul_fu_219_p2();
    void thread_out_d_4_fu_229_p2();
    void thread_out_h_4_fu_256_p2();
    void thread_out_w_4_fu_285_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl3_cast_fu_337_p1();
    void thread_p_shl3_fu_329_p3();
    void thread_p_shl_cast_fu_247_p1();
    void thread_p_shl_fu_239_p3();
    void thread_tmp1_fu_276_p1();
    void thread_tmp1_fu_276_p2();
    void thread_tmp2_fu_360_p2();
    void thread_tmp3_fu_371_p0();
    void thread_tmp3_fu_371_p2();
    void thread_tmp4_cast_fu_356_p1();
    void thread_tmp4_fu_351_p2();
    void thread_tmp5_cast_fu_396_p1();
    void thread_tmp5_fu_391_p2();
    void thread_tmp6_fu_366_p2();
    void thread_tmp7_cast_fu_415_p1();
    void thread_tmp7_fu_410_p2();
    void thread_tmp_131_fu_202_p1();
    void thread_tmp_132_fu_206_p1();
    void thread_tmp_133_fu_210_p1();
    void thread_tmp_134_cast3_fu_235_p1();
    void thread_tmp_139_cast_fu_272_p1();
    void thread_tmp_139_fu_262_p1();
    void thread_tmp_140_cast_fu_295_p1();
    void thread_tmp_140_fu_291_p1();
    void thread_tmp_141_fu_299_p2();
    void thread_tmp_142_fu_304_p1();
    void thread_tmp_144_cast2_fu_321_p1();
    void thread_tmp_144_cast9_fu_325_p1();
    void thread_tmp_145_cast_fu_347_p1();
    void thread_tmp_145_fu_341_p2();
    void thread_tmp_146_cast_fu_387_p1();
    void thread_tmp_149_fu_400_p2();
    void thread_tmp_150_fu_405_p1();
    void thread_tmp_152_fu_419_p2();
    void thread_tmp_153_cast_fu_424_p1();
    void thread_tmp_153_fu_428_p1();
    void thread_tmp_156_fu_448_p2();
    void thread_tmp_fu_266_p2();
    void thread_tmp_s_fu_198_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
