// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv2d_fix_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv2d_fix_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv2d_fix_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state1 = "1";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state2 = "10";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state3 = "100";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state4 = "1000";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state5 = "10000";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state6 = "100000";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> pointwise_conv2d_fix_1::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_1 = "1";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_2 = "10";
const sc_lv<1> pointwise_conv2d_fix_1::ap_const_lv1_0 = "0";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_3 = "11";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_4 = "100";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_5 = "101";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_6 = "110";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_7 = "111";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_8 = "1000";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_9 = "1001";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_A = "1010";
const sc_lv<16> pointwise_conv2d_fix_1::ap_const_lv16_0 = "0000000000000000";
const sc_lv<1> pointwise_conv2d_fix_1::ap_const_lv1_1 = "1";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_B = "1011";
const sc_lv<16> pointwise_conv2d_fix_1::ap_const_lv16_1 = "1";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_E = "1110";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_1D = "11101";
const sc_lv<16> pointwise_conv2d_fix_1::ap_const_lv16_E3EB = "1110001111101011";
const sc_lv<15> pointwise_conv2d_fix_1::ap_const_lv15_63EB = "110001111101011";
const sc_lv<32> pointwise_conv2d_fix_1::ap_const_lv32_F = "1111";
const sc_lv<15> pointwise_conv2d_fix_1::ap_const_lv15_0 = "000000000000000";
const sc_lv<30> pointwise_conv2d_fix_1::ap_const_lv30_3FFFE7C7 = "111111111111111110011111000111";
const bool pointwise_conv2d_fix_1::ap_const_boolean_1 = true;

pointwise_conv2d_fix_1::pointwise_conv2d_fix_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    network_mul_mul_16s_14s_30_1_1_U141 = new network_mul_mul_16s_14s_30_1_1<1,1,16,14,30>("network_mul_mul_16s_14s_30_1_1_U141");
    network_mul_mul_16s_14s_30_1_1_U141->din0(SeparableConv2D_4_m_2_reg_452);
    network_mul_mul_16s_14s_30_1_1_U141->din1(tmp_33_fu_331_p1);
    network_mul_mul_16s_14s_30_1_1_U141->dout(tmp_33_fu_331_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SeparableConv2D_4_m_s_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_32_fu_272_p1 );

    SC_METHOD(thread_SeparableConv2D_4_m_s_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_182_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_182_p2 );

    SC_METHOD(thread_exitcond1_fu_218_p2);
    sensitive << ( input_width );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( out_w_reg_123 );

    SC_METHOD(thread_exitcond2_fu_193_p2);
    sensitive << ( input_height );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( out_h_reg_112 );

    SC_METHOD(thread_exitcond3_fu_182_p2);
    sensitive << ( output_depth );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_d_reg_89 );

    SC_METHOD(thread_exitcond_fu_243_p2);
    sensitive << ( input_depth );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( in_d_reg_147 );

    SC_METHOD(thread_in_d_1_fu_248_p2);
    sensitive << ( in_d_reg_147 );

    SC_METHOD(thread_next_mul2_fu_177_p2);
    sensitive << ( tmp_s_reg_358 );
    sensitive << ( phi_mul1_reg_100 );

    SC_METHOD(thread_next_mul_fu_254_p2);
    sensitive << ( tmp_s_reg_358 );
    sensitive << ( phi_mul_reg_158 );

    SC_METHOD(thread_out_d_2_fu_187_p2);
    sensitive << ( out_d_reg_89 );

    SC_METHOD(thread_out_h_2_fu_198_p2);
    sensitive << ( out_h_reg_112 );

    SC_METHOD(thread_out_w_2_fu_223_p2);
    sensitive << ( out_w_reg_123 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_419 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( output_load_1_reg_134 );
    sensitive << ( p_tmp_cast_fu_326_p1 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_p_tmp_cast_fu_326_p1);
    sensitive << ( p_tmp_s_fu_318_p3 );

    SC_METHOD(thread_p_tmp_s_fu_318_p3);
    sensitive << ( tmp_8_fu_310_p3 );
    sensitive << ( tmp_27_cast_fu_304_p2 );

    SC_METHOD(thread_tmp1_fu_214_p1);
    sensitive << ( tmp_15_reg_364 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp1_fu_214_p2);
    sensitive << ( tmp_reg_396 );
    sensitive << ( tmp1_fu_214_p1 );

    SC_METHOD(thread_tmp2_fu_259_p2);
    sensitive << ( tmp_23_reg_391 );
    sensitive << ( phi_mul_reg_158 );

    SC_METHOD(thread_tmp3_fu_264_p1);
    sensitive << ( tmp_15_reg_364 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_tmp3_fu_264_p2);
    sensitive << ( tmp2_reg_437 );
    sensitive << ( tmp3_fu_264_p1 );

    SC_METHOD(thread_tmp_15_fu_173_p1);
    sensitive << ( input_width );

    SC_METHOD(thread_tmp_23_fu_204_p1);
    sensitive << ( out_h_reg_112 );

    SC_METHOD(thread_tmp_24_fu_229_p1);
    sensitive << ( out_w_reg_123 );

    SC_METHOD(thread_tmp_25_fu_233_p2);
    sensitive << ( tmp1_reg_401 );
    sensitive << ( tmp_24_fu_229_p1 );

    SC_METHOD(thread_tmp_26_fu_238_p1);
    sensitive << ( tmp_25_fu_233_p2 );

    SC_METHOD(thread_tmp_27_cast_fu_304_p2);
    sensitive << ( tmp_7_fu_294_p1 );

    SC_METHOD(thread_tmp_27_fu_298_p2);
    sensitive << ( output_load_1_reg_134 );

    SC_METHOD(thread_tmp_31_fu_268_p2);
    sensitive << ( tmp_24_reg_414 );
    sensitive << ( tmp3_reg_442 );

    SC_METHOD(thread_tmp_32_fu_272_p1);
    sensitive << ( tmp_31_fu_268_p2 );

    SC_METHOD(thread_tmp_33_fu_331_p1);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_tmp_36_fu_289_p2);
    sensitive << ( tmp_35_reg_457 );
    sensitive << ( output_load_1_reg_134 );

    SC_METHOD(thread_tmp_7_fu_294_p1);
    sensitive << ( output_load_1_reg_134 );

    SC_METHOD(thread_tmp_8_fu_310_p3);
    sensitive << ( tmp_27_fu_298_p2 );

    SC_METHOD(thread_tmp_fu_208_p2);
    sensitive << ( tmp_23_fu_204_p1 );
    sensitive << ( phi_mul1_reg_100 );

    SC_METHOD(thread_tmp_s_fu_169_p1);
    sensitive << ( input_height );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_193_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_218_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_243_p2 );
    sensitive << ( exitcond3_fu_182_p2 );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv2d_fix_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_depth, "(port)input_depth");
    sc_trace(mVcdFile, input_height, "(port)input_height");
    sc_trace(mVcdFile, input_width, "(port)input_width");
    sc_trace(mVcdFile, output_depth, "(port)output_depth");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, SeparableConv2D_4_m_s_address0, "(port)SeparableConv2D_4_m_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_4_m_s_ce0, "(port)SeparableConv2D_4_m_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_4_m_s_q0, "(port)SeparableConv2D_4_m_s_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_s_fu_169_p1, "tmp_s_fu_169_p1");
    sc_trace(mVcdFile, tmp_s_reg_358, "tmp_s_reg_358");
    sc_trace(mVcdFile, tmp_15_fu_173_p1, "tmp_15_fu_173_p1");
    sc_trace(mVcdFile, tmp_15_reg_364, "tmp_15_reg_364");
    sc_trace(mVcdFile, next_mul2_fu_177_p2, "next_mul2_fu_177_p2");
    sc_trace(mVcdFile, next_mul2_reg_370, "next_mul2_reg_370");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, out_d_2_fu_187_p2, "out_d_2_fu_187_p2");
    sc_trace(mVcdFile, out_d_2_reg_378, "out_d_2_reg_378");
    sc_trace(mVcdFile, out_h_2_fu_198_p2, "out_h_2_fu_198_p2");
    sc_trace(mVcdFile, out_h_2_reg_386, "out_h_2_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_23_fu_204_p1, "tmp_23_fu_204_p1");
    sc_trace(mVcdFile, tmp_23_reg_391, "tmp_23_reg_391");
    sc_trace(mVcdFile, exitcond2_fu_193_p2, "exitcond2_fu_193_p2");
    sc_trace(mVcdFile, tmp_fu_208_p2, "tmp_fu_208_p2");
    sc_trace(mVcdFile, tmp_reg_396, "tmp_reg_396");
    sc_trace(mVcdFile, tmp1_fu_214_p2, "tmp1_fu_214_p2");
    sc_trace(mVcdFile, tmp1_reg_401, "tmp1_reg_401");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, out_w_2_fu_223_p2, "out_w_2_fu_223_p2");
    sc_trace(mVcdFile, out_w_2_reg_409, "out_w_2_reg_409");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_24_fu_229_p1, "tmp_24_fu_229_p1");
    sc_trace(mVcdFile, tmp_24_reg_414, "tmp_24_reg_414");
    sc_trace(mVcdFile, exitcond1_fu_218_p2, "exitcond1_fu_218_p2");
    sc_trace(mVcdFile, output_addr_reg_419, "output_addr_reg_419");
    sc_trace(mVcdFile, in_d_1_fu_248_p2, "in_d_1_fu_248_p2");
    sc_trace(mVcdFile, in_d_1_reg_427, "in_d_1_reg_427");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, next_mul_fu_254_p2, "next_mul_fu_254_p2");
    sc_trace(mVcdFile, next_mul_reg_432, "next_mul_reg_432");
    sc_trace(mVcdFile, exitcond_fu_243_p2, "exitcond_fu_243_p2");
    sc_trace(mVcdFile, tmp2_fu_259_p2, "tmp2_fu_259_p2");
    sc_trace(mVcdFile, tmp2_reg_437, "tmp2_reg_437");
    sc_trace(mVcdFile, tmp3_fu_264_p2, "tmp3_fu_264_p2");
    sc_trace(mVcdFile, tmp3_reg_442, "tmp3_reg_442");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, SeparableConv2D_4_m_2_reg_452, "SeparableConv2D_4_m_2_reg_452");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_35_reg_457, "tmp_35_reg_457");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_36_fu_289_p2, "tmp_36_fu_289_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, out_d_reg_89, "out_d_reg_89");
    sc_trace(mVcdFile, phi_mul1_reg_100, "phi_mul1_reg_100");
    sc_trace(mVcdFile, out_h_reg_112, "out_h_reg_112");
    sc_trace(mVcdFile, exitcond3_fu_182_p2, "exitcond3_fu_182_p2");
    sc_trace(mVcdFile, out_w_reg_123, "out_w_reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, output_load_1_reg_134, "output_load_1_reg_134");
    sc_trace(mVcdFile, in_d_reg_147, "in_d_reg_147");
    sc_trace(mVcdFile, phi_mul_reg_158, "phi_mul_reg_158");
    sc_trace(mVcdFile, tmp_26_fu_238_p1, "tmp_26_fu_238_p1");
    sc_trace(mVcdFile, tmp_32_fu_272_p1, "tmp_32_fu_272_p1");
    sc_trace(mVcdFile, p_tmp_cast_fu_326_p1, "p_tmp_cast_fu_326_p1");
    sc_trace(mVcdFile, tmp1_fu_214_p1, "tmp1_fu_214_p1");
    sc_trace(mVcdFile, tmp_25_fu_233_p2, "tmp_25_fu_233_p2");
    sc_trace(mVcdFile, tmp3_fu_264_p1, "tmp3_fu_264_p1");
    sc_trace(mVcdFile, tmp_31_fu_268_p2, "tmp_31_fu_268_p2");
    sc_trace(mVcdFile, tmp_33_fu_331_p2, "tmp_33_fu_331_p2");
    sc_trace(mVcdFile, tmp_7_fu_294_p1, "tmp_7_fu_294_p1");
    sc_trace(mVcdFile, tmp_27_fu_298_p2, "tmp_27_fu_298_p2");
    sc_trace(mVcdFile, tmp_8_fu_310_p3, "tmp_8_fu_310_p3");
    sc_trace(mVcdFile, tmp_27_cast_fu_304_p2, "tmp_27_cast_fu_304_p2");
    sc_trace(mVcdFile, p_tmp_s_fu_318_p3, "p_tmp_s_fu_318_p3");
    sc_trace(mVcdFile, tmp_33_fu_331_p1, "tmp_33_fu_331_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pointwise_conv2d_fix_1::~pointwise_conv2d_fix_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete network_mul_mul_16s_14s_30_1_1_U141;
}

void pointwise_conv2d_fix_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        in_d_reg_147 = in_d_1_reg_427.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_218_p2.read()))) {
        in_d_reg_147 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_193_p2.read(), ap_const_lv1_1))) {
        out_d_reg_89 = out_d_2_reg_378.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_d_reg_89 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_182_p2.read()))) {
        out_h_reg_112 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_1))) {
        out_h_reg_112 = out_h_2_reg_386.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_w_reg_123 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        out_w_reg_123 = out_w_2_reg_409.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_load_1_reg_134 = tmp_36_fu_289_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_218_p2.read()))) {
        output_load_1_reg_134 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_193_p2.read(), ap_const_lv1_1))) {
        phi_mul1_reg_100 = next_mul2_reg_370.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul1_reg_100 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        phi_mul_reg_158 = next_mul_reg_432.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_218_p2.read()))) {
        phi_mul_reg_158 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        SeparableConv2D_4_m_2_reg_452 = SeparableConv2D_4_m_s_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        in_d_1_reg_427 = in_d_1_fu_248_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul2_reg_370 = next_mul2_fu_177_p2.read();
        out_d_2_reg_378 = out_d_2_fu_187_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_243_p2.read()))) {
        next_mul_reg_432 = next_mul_fu_254_p2.read();
        tmp2_reg_437 = tmp2_fu_259_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_h_2_reg_386 = out_h_2_fu_198_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_w_2_reg_409 = out_w_2_fu_223_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_218_p2.read()))) {
        output_addr_reg_419 =  (sc_lv<10>) (tmp_26_fu_238_p1.read());
        tmp_24_reg_414 = tmp_24_fu_229_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp1_reg_401 = tmp1_fu_214_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp3_reg_442 = tmp3_fu_264_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_15_reg_364 = tmp_15_fu_173_p1.read();
        tmp_s_reg_358 = tmp_s_fu_169_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_193_p2.read(), ap_const_lv1_0))) {
        tmp_23_reg_391 = tmp_23_fu_204_p1.read();
        tmp_reg_396 = tmp_fu_208_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_35_reg_457 = tmp_33_fu_331_p2.read().range(29, 14);
    }
}

void pointwise_conv2d_fix_1::thread_SeparableConv2D_4_m_s_address0() {
    SeparableConv2D_4_m_s_address0 =  (sc_lv<14>) (tmp_32_fu_272_p1.read());
}

void pointwise_conv2d_fix_1::thread_SeparableConv2D_4_m_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SeparableConv2D_4_m_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_4_m_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void pointwise_conv2d_fix_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void pointwise_conv2d_fix_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_182_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_182_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_1::thread_exitcond1_fu_218_p2() {
    exitcond1_fu_218_p2 = (!out_w_reg_123.read().is_01() || !input_width.read().is_01())? sc_lv<1>(): sc_lv<1>(out_w_reg_123.read() == input_width.read());
}

void pointwise_conv2d_fix_1::thread_exitcond2_fu_193_p2() {
    exitcond2_fu_193_p2 = (!out_h_reg_112.read().is_01() || !input_height.read().is_01())? sc_lv<1>(): sc_lv<1>(out_h_reg_112.read() == input_height.read());
}

void pointwise_conv2d_fix_1::thread_exitcond3_fu_182_p2() {
    exitcond3_fu_182_p2 = (!out_d_reg_89.read().is_01() || !output_depth.read().is_01())? sc_lv<1>(): sc_lv<1>(out_d_reg_89.read() == output_depth.read());
}

void pointwise_conv2d_fix_1::thread_exitcond_fu_243_p2() {
    exitcond_fu_243_p2 = (!in_d_reg_147.read().is_01() || !input_depth.read().is_01())? sc_lv<1>(): sc_lv<1>(in_d_reg_147.read() == input_depth.read());
}

void pointwise_conv2d_fix_1::thread_in_d_1_fu_248_p2() {
    in_d_1_fu_248_p2 = (!in_d_reg_147.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(in_d_reg_147.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pointwise_conv2d_fix_1::thread_next_mul2_fu_177_p2() {
    next_mul2_fu_177_p2 = (!phi_mul1_reg_100.read().is_01() || !tmp_s_reg_358.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul1_reg_100.read()) + sc_biguint<32>(tmp_s_reg_358.read()));
}

void pointwise_conv2d_fix_1::thread_next_mul_fu_254_p2() {
    next_mul_fu_254_p2 = (!phi_mul_reg_158.read().is_01() || !tmp_s_reg_358.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul_reg_158.read()) + sc_biguint<32>(tmp_s_reg_358.read()));
}

void pointwise_conv2d_fix_1::thread_out_d_2_fu_187_p2() {
    out_d_2_fu_187_p2 = (!out_d_reg_89.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_d_reg_89.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pointwise_conv2d_fix_1::thread_out_h_2_fu_198_p2() {
    out_h_2_fu_198_p2 = (!out_h_reg_112.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_h_reg_112.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pointwise_conv2d_fix_1::thread_out_w_2_fu_223_p2() {
    out_w_2_fu_223_p2 = (!out_w_reg_123.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_w_reg_123.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pointwise_conv2d_fix_1::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_419.read();
}

void pointwise_conv2d_fix_1::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_1::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_r_d0 = p_tmp_cast_fu_326_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        output_r_d0 = output_load_1_reg_134.read();
    } else {
        output_r_d0 = "XXXXXXXXXXXXXXXX";
    }
}

void pointwise_conv2d_fix_1::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_1::thread_p_tmp_cast_fu_326_p1() {
    p_tmp_cast_fu_326_p1 = esl_zext<16,15>(p_tmp_s_fu_318_p3.read());
}

void pointwise_conv2d_fix_1::thread_p_tmp_s_fu_318_p3() {
    p_tmp_s_fu_318_p3 = (!tmp_8_fu_310_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_8_fu_310_p3.read()[0].to_bool())? ap_const_lv15_0: tmp_27_cast_fu_304_p2.read());
}

void pointwise_conv2d_fix_1::thread_tmp1_fu_214_p1() {
    tmp1_fu_214_p1 =  (sc_lv<16>) (tmp_15_reg_364.read());
}

void pointwise_conv2d_fix_1::thread_tmp1_fu_214_p2() {
    tmp1_fu_214_p2 = (!tmp_reg_396.read().is_01() || !tmp1_fu_214_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_reg_396.read()) * sc_biguint<16>(tmp1_fu_214_p1.read());
}

void pointwise_conv2d_fix_1::thread_tmp2_fu_259_p2() {
    tmp2_fu_259_p2 = (!phi_mul_reg_158.read().is_01() || !tmp_23_reg_391.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul_reg_158.read()) + sc_biguint<32>(tmp_23_reg_391.read()));
}

void pointwise_conv2d_fix_1::thread_tmp3_fu_264_p1() {
    tmp3_fu_264_p1 =  (sc_lv<16>) (tmp_15_reg_364.read());
}

void pointwise_conv2d_fix_1::thread_tmp3_fu_264_p2() {
    tmp3_fu_264_p2 = (!tmp2_reg_437.read().is_01() || !tmp3_fu_264_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp2_reg_437.read()) * sc_biguint<16>(tmp3_fu_264_p1.read());
}

void pointwise_conv2d_fix_1::thread_tmp_15_fu_173_p1() {
    tmp_15_fu_173_p1 = esl_zext<32,16>(input_width.read());
}

void pointwise_conv2d_fix_1::thread_tmp_23_fu_204_p1() {
    tmp_23_fu_204_p1 = esl_zext<32,16>(out_h_reg_112.read());
}

void pointwise_conv2d_fix_1::thread_tmp_24_fu_229_p1() {
    tmp_24_fu_229_p1 = esl_zext<32,16>(out_w_reg_123.read());
}

void pointwise_conv2d_fix_1::thread_tmp_25_fu_233_p2() {
    tmp_25_fu_233_p2 = (!tmp1_reg_401.read().is_01() || !tmp_24_fu_229_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp1_reg_401.read()) + sc_biguint<32>(tmp_24_fu_229_p1.read()));
}

void pointwise_conv2d_fix_1::thread_tmp_26_fu_238_p1() {
    tmp_26_fu_238_p1 = esl_sext<64,32>(tmp_25_fu_233_p2.read());
}

void pointwise_conv2d_fix_1::thread_tmp_27_cast_fu_304_p2() {
    tmp_27_cast_fu_304_p2 = (!ap_const_lv15_63EB.is_01() || !tmp_7_fu_294_p1.read().is_01())? sc_lv<15>(): (sc_bigint<15>(ap_const_lv15_63EB) + sc_biguint<15>(tmp_7_fu_294_p1.read()));
}

void pointwise_conv2d_fix_1::thread_tmp_27_fu_298_p2() {
    tmp_27_fu_298_p2 = (!ap_const_lv16_E3EB.is_01() || !output_load_1_reg_134.read().is_01())? sc_lv<16>(): (sc_bigint<16>(ap_const_lv16_E3EB) + sc_biguint<16>(output_load_1_reg_134.read()));
}

void pointwise_conv2d_fix_1::thread_tmp_31_fu_268_p2() {
    tmp_31_fu_268_p2 = (!tmp3_reg_442.read().is_01() || !tmp_24_reg_414.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp3_reg_442.read()) + sc_biguint<32>(tmp_24_reg_414.read()));
}

void pointwise_conv2d_fix_1::thread_tmp_32_fu_272_p1() {
    tmp_32_fu_272_p1 = esl_sext<64,32>(tmp_31_fu_268_p2.read());
}

void pointwise_conv2d_fix_1::thread_tmp_33_fu_331_p1() {
    tmp_33_fu_331_p1 =  (sc_lv<14>) (ap_const_lv30_3FFFE7C7);
}

void pointwise_conv2d_fix_1::thread_tmp_36_fu_289_p2() {
    tmp_36_fu_289_p2 = (!output_load_1_reg_134.read().is_01() || !tmp_35_reg_457.read().is_01())? sc_lv<16>(): (sc_biguint<16>(output_load_1_reg_134.read()) + sc_biguint<16>(tmp_35_reg_457.read()));
}

void pointwise_conv2d_fix_1::thread_tmp_7_fu_294_p1() {
    tmp_7_fu_294_p1 = output_load_1_reg_134.read().range(15-1, 0);
}

void pointwise_conv2d_fix_1::thread_tmp_8_fu_310_p3() {
    tmp_8_fu_310_p3 = tmp_27_fu_298_p2.read().range(15, 15);
}

void pointwise_conv2d_fix_1::thread_tmp_fu_208_p2() {
    tmp_fu_208_p2 = (!phi_mul1_reg_100.read().is_01() || !tmp_23_fu_204_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul1_reg_100.read()) + sc_biguint<32>(tmp_23_fu_204_p1.read()));
}

void pointwise_conv2d_fix_1::thread_tmp_s_fu_169_p1() {
    tmp_s_fu_169_p1 = esl_zext<32,16>(input_height.read());
}

void pointwise_conv2d_fix_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_182_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_193_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond1_fu_218_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_fu_243_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}

