// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling2d_fix16_HH_
#define _max_pooling2d_fix16_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_ama_addmuladd_9ns_5ns_7ns_5ns_14_1_1.h"

namespace ap_rtl {

struct max_pooling2d_fix16 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<7> > input_height;
    sc_in< sc_lv<6> > input_width;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<6> > output_depth;
    sc_in< sc_lv<5> > output_height;
    sc_in< sc_lv<5> > output_width;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;
    sc_in< sc_lv<16> > output_r_q0;


    // Module declarations
    max_pooling2d_fix16(sc_module_name name);
    SC_HAS_PROCESS(max_pooling2d_fix16);

    ~max_pooling2d_fix16();

    sc_trace_file* mVcdFile;

    network_ama_addmuladd_9ns_5ns_7ns_5ns_14_1_1<1,1,9,5,7,5,14>* network_ama_addmuladd_9ns_5ns_7ns_5ns_14_1_1_U17;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > tmp_cast_fu_211_p1;
    sc_signal< sc_lv<9> > tmp_cast_reg_442;
    sc_signal< sc_lv<14> > tmp_73_cast_fu_215_p1;
    sc_signal< sc_lv<14> > tmp_73_cast_reg_447;
    sc_signal< sc_lv<8> > tmp_74_cast_fu_219_p1;
    sc_signal< sc_lv<8> > tmp_74_cast_reg_452;
    sc_signal< sc_lv<12> > tmp_75_cast_fu_223_p1;
    sc_signal< sc_lv<12> > tmp_75_cast_reg_457;
    sc_signal< sc_lv<8> > next_mul3_fu_227_p2;
    sc_signal< sc_lv<8> > next_mul3_reg_462;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > next_mul_fu_232_p2;
    sc_signal< sc_lv<9> > next_mul_reg_467;
    sc_signal< sc_lv<5> > out_d_3_fu_246_p2;
    sc_signal< sc_lv<5> > out_d_3_reg_475;
    sc_signal< sc_lv<4> > out_h_3_fu_261_p2;
    sc_signal< sc_lv<4> > out_h_3_reg_483;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > tmp_80_cast_fu_279_p1;
    sc_signal< sc_lv<9> > tmp_80_cast_reg_488;
    sc_signal< sc_lv<1> > exitcond3_fu_256_p2;
    sc_signal< sc_lv<12> > tmp1_fu_293_p2;
    sc_signal< sc_lv<12> > tmp1_reg_493;
    sc_signal< sc_lv<4> > out_w_3_fu_307_p2;
    sc_signal< sc_lv<4> > out_w_3_reg_501;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<14> > tmp_83_cast_fu_325_p1;
    sc_signal< sc_lv<14> > tmp_83_cast_reg_506;
    sc_signal< sc_lv<1> > exitcond2_fu_302_p2;
    sc_signal< sc_lv<14> > output_addr_reg_511;
    sc_signal< sc_lv<1> > tmp_28_fu_339_p1;
    sc_signal< sc_lv<1> > tmp_28_reg_516;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > in_h_1_fu_349_p2;
    sc_signal< sc_lv<2> > in_h_1_reg_524;
    sc_signal< sc_lv<14> > grp_fu_420_p4;
    sc_signal< sc_lv<14> > tmp_52_reg_529;
    sc_signal< sc_lv<1> > exitcond1_fu_343_p2;
    sc_signal< sc_lv<2> > in_w_1_fu_375_p2;
    sc_signal< sc_lv<2> > in_w_1_reg_538;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > tmp_53_fu_381_p2;
    sc_signal< sc_lv<1> > tmp_53_reg_543;
    sc_signal< sc_lv<1> > exitcond_fu_369_p2;
    sc_signal< sc_lv<5> > out_d_reg_120;
    sc_signal< sc_lv<9> > phi_mul_reg_131;
    sc_signal< sc_lv<8> > phi_mul2_reg_143;
    sc_signal< sc_lv<4> > out_h_reg_155;
    sc_signal< sc_lv<1> > exitcond4_fu_241_p2;
    sc_signal< sc_lv<4> > out_w_reg_166;
    sc_signal< sc_lv<2> > in_h_reg_177;
    sc_signal< sc_lv<2> > in_w_reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_51_fu_334_p1;
    sc_signal< sc_lv<64> > tmp_58_fu_395_p1;
    sc_signal< sc_lv<64> > tmp_55_fu_409_p1;
    sc_signal< sc_lv<1> > tmp_56_fu_414_p2;
    sc_signal< sc_lv<5> > output_width_cast3_fu_199_p0;
    sc_signal< sc_lv<5> > output_height_cast2_fu_203_p0;
    sc_signal< sc_lv<7> > input_width_cast_fu_207_p1;
    sc_signal< sc_lv<6> > output_height_cast2_fu_203_p1;
    sc_signal< sc_lv<6> > output_width_cast3_fu_199_p1;
    sc_signal< sc_lv<6> > out_d_cast_fu_237_p1;
    sc_signal< sc_lv<5> > out_h_cast_fu_252_p1;
    sc_signal< sc_lv<5> > exitcond3_fu_256_p1;
    sc_signal< sc_lv<5> > tmp_s_fu_271_p3;
    sc_signal< sc_lv<8> > tmp_79_cast1_fu_267_p1;
    sc_signal< sc_lv<8> > tmp_fu_283_p2;
    sc_signal< sc_lv<6> > tmp1_fu_293_p0;
    sc_signal< sc_lv<8> > tmp1_fu_293_p1;
    sc_signal< sc_lv<5> > out_w_cast_fu_298_p1;
    sc_signal< sc_lv<5> > exitcond2_fu_302_p1;
    sc_signal< sc_lv<5> > tmp_49_fu_317_p3;
    sc_signal< sc_lv<12> > tmp_82_cast9_fu_313_p1;
    sc_signal< sc_lv<12> > tmp_50_fu_329_p2;
    sc_signal< sc_lv<9> > tmp_86_cast_fu_355_p1;
    sc_signal< sc_lv<1> > tmp_29_fu_365_p1;
    sc_signal< sc_lv<14> > tmp_90_cast_fu_386_p1;
    sc_signal< sc_lv<14> > tmp_57_fu_390_p2;
    sc_signal< sc_lv<14> > tmp_93_cast_fu_400_p1;
    sc_signal< sc_lv<14> > tmp_54_fu_404_p2;
    sc_signal< sc_lv<9> > grp_fu_420_p0;
    sc_signal< sc_lv<5> > grp_fu_420_p1;
    sc_signal< sc_lv<7> > grp_fu_420_p2;
    sc_signal< sc_lv<5> > grp_fu_420_p3;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<12> > tmp1_fu_293_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_343_p2();
    void thread_exitcond2_fu_302_p1();
    void thread_exitcond2_fu_302_p2();
    void thread_exitcond3_fu_256_p1();
    void thread_exitcond3_fu_256_p2();
    void thread_exitcond4_fu_241_p2();
    void thread_exitcond_fu_369_p2();
    void thread_grp_fu_420_p0();
    void thread_grp_fu_420_p1();
    void thread_grp_fu_420_p2();
    void thread_grp_fu_420_p3();
    void thread_in_h_1_fu_349_p2();
    void thread_in_w_1_fu_375_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_input_width_cast_fu_207_p1();
    void thread_next_mul3_fu_227_p2();
    void thread_next_mul_fu_232_p2();
    void thread_out_d_3_fu_246_p2();
    void thread_out_d_cast_fu_237_p1();
    void thread_out_h_3_fu_261_p2();
    void thread_out_h_cast_fu_252_p1();
    void thread_out_w_3_fu_307_p2();
    void thread_out_w_cast_fu_298_p1();
    void thread_output_height_cast2_fu_203_p0();
    void thread_output_height_cast2_fu_203_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_output_width_cast3_fu_199_p0();
    void thread_output_width_cast3_fu_199_p1();
    void thread_tmp1_fu_293_p0();
    void thread_tmp1_fu_293_p1();
    void thread_tmp1_fu_293_p10();
    void thread_tmp1_fu_293_p2();
    void thread_tmp_28_fu_339_p1();
    void thread_tmp_29_fu_365_p1();
    void thread_tmp_49_fu_317_p3();
    void thread_tmp_50_fu_329_p2();
    void thread_tmp_51_fu_334_p1();
    void thread_tmp_53_fu_381_p2();
    void thread_tmp_54_fu_404_p2();
    void thread_tmp_55_fu_409_p1();
    void thread_tmp_56_fu_414_p2();
    void thread_tmp_57_fu_390_p2();
    void thread_tmp_58_fu_395_p1();
    void thread_tmp_73_cast_fu_215_p1();
    void thread_tmp_74_cast_fu_219_p1();
    void thread_tmp_75_cast_fu_223_p1();
    void thread_tmp_79_cast1_fu_267_p1();
    void thread_tmp_80_cast_fu_279_p1();
    void thread_tmp_82_cast9_fu_313_p1();
    void thread_tmp_83_cast_fu_325_p1();
    void thread_tmp_86_cast_fu_355_p1();
    void thread_tmp_90_cast_fu_386_p1();
    void thread_tmp_93_cast_fu_400_p1();
    void thread_tmp_cast_fu_211_p1();
    void thread_tmp_fu_283_p2();
    void thread_tmp_s_fu_271_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
