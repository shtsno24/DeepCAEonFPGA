// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling2d_fix16_HH_
#define _max_pooling2d_fix16_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pooling2d_fix16 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<7> > input_height;
    sc_in< sc_lv<6> > input_width;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<6> > output_depth;
    sc_in< sc_lv<5> > output_height;
    sc_in< sc_lv<5> > output_width;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    max_pooling2d_fix16(sc_module_name name);
    SC_HAS_PROCESS(max_pooling2d_fix16);

    ~max_pooling2d_fix16();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > tmp_cast_fu_247_p1;
    sc_signal< sc_lv<9> > tmp_cast_reg_540;
    sc_signal< sc_lv<14> > tmp_73_cast1_fu_251_p1;
    sc_signal< sc_lv<14> > tmp_73_cast1_reg_545;
    sc_signal< sc_lv<8> > tmp_74_cast_fu_255_p1;
    sc_signal< sc_lv<8> > tmp_74_cast_reg_551;
    sc_signal< sc_lv<12> > tmp_75_cast_fu_259_p1;
    sc_signal< sc_lv<12> > tmp_75_cast_reg_556;
    sc_signal< sc_lv<8> > next_mul3_fu_263_p2;
    sc_signal< sc_lv<8> > next_mul3_reg_561;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > next_mul_fu_268_p2;
    sc_signal< sc_lv<9> > next_mul_reg_566;
    sc_signal< sc_lv<5> > out_d_3_fu_282_p2;
    sc_signal< sc_lv<5> > out_d_3_reg_574;
    sc_signal< sc_lv<4> > out_h_3_fu_297_p2;
    sc_signal< sc_lv<4> > out_h_3_reg_582;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<14> > tmp4_fu_329_p2;
    sc_signal< sc_lv<14> > tmp4_reg_587;
    sc_signal< sc_lv<1> > exitcond3_fu_292_p2;
    sc_signal< sc_lv<14> > tmp1_1_fu_344_p2;
    sc_signal< sc_lv<14> > tmp1_1_reg_592;
    sc_signal< sc_lv<12> > tmp3_fu_359_p2;
    sc_signal< sc_lv<12> > tmp3_reg_597;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > out_w_3_fu_376_p2;
    sc_signal< sc_lv<4> > out_w_3_reg_610;
    sc_signal< sc_lv<12> > tmp_81_cast9_fu_382_p1;
    sc_signal< sc_lv<12> > tmp_81_cast9_reg_615;
    sc_signal< sc_lv<1> > exitcond2_fu_371_p2;
    sc_signal< sc_lv<5> > tmp_54_fu_386_p3;
    sc_signal< sc_lv<5> > tmp_54_reg_620;
    sc_signal< sc_lv<2> > in_w_1_fu_400_p2;
    sc_signal< sc_lv<2> > in_w_1_reg_629;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_55_fu_406_p2;
    sc_signal< sc_lv<1> > tmp_55_reg_634;
    sc_signal< sc_lv<1> > exitcond_fu_394_p2;
    sc_signal< sc_lv<16> > buffer_6_fu_449_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > in_w_1_1_fu_462_p2;
    sc_signal< sc_lv<2> > in_w_1_1_reg_652;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond_1_fu_456_p2;
    sc_signal< sc_lv<16> > buffer_6_1_fu_511_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > out_d_reg_134;
    sc_signal< sc_lv<9> > phi_mul_reg_145;
    sc_signal< sc_lv<8> > phi_mul2_reg_157;
    sc_signal< sc_lv<4> > out_h_reg_169;
    sc_signal< sc_lv<1> > exitcond4_fu_277_p2;
    sc_signal< sc_lv<4> > out_w_reg_180;
    sc_signal< sc_lv<16> > buffer_4_reg_191;
    sc_signal< sc_lv<2> > in_w_reg_201;
    sc_signal< sc_lv<16> > buffer_4_1_reg_212;
    sc_signal< sc_lv<2> > in_w_s_reg_224;
    sc_signal< sc_lv<64> > tmp_57_fu_430_p1;
    sc_signal< sc_lv<64> > tmp_95_1_fu_486_p1;
    sc_signal< sc_lv<64> > tmp_60_fu_495_p1;
    sc_signal< sc_lv<16> > buffer_fu_66;
    sc_signal< sc_lv<5> > output_width_cast3_fu_235_p0;
    sc_signal< sc_lv<5> > output_height_cast2_fu_239_p0;
    sc_signal< sc_lv<7> > input_width_cast_fu_243_p1;
    sc_signal< sc_lv<6> > output_height_cast2_fu_239_p1;
    sc_signal< sc_lv<6> > output_width_cast3_fu_235_p1;
    sc_signal< sc_lv<6> > out_d_cast_fu_273_p1;
    sc_signal< sc_lv<5> > out_h_cast_fu_288_p1;
    sc_signal< sc_lv<5> > exitcond3_fu_292_p1;
    sc_signal< sc_lv<5> > tmp_s_fu_307_p3;
    sc_signal< sc_lv<9> > tmp_80_cast_fu_315_p1;
    sc_signal< sc_lv<9> > tmp1_fu_319_p2;
    sc_signal< sc_lv<7> > tmp4_fu_329_p0;
    sc_signal< sc_lv<9> > tmp4_fu_329_p1;
    sc_signal< sc_lv<9> > tmp_1_fu_334_p2;
    sc_signal< sc_lv<7> > tmp1_1_fu_344_p0;
    sc_signal< sc_lv<9> > tmp1_1_fu_344_p1;
    sc_signal< sc_lv<8> > tmp_79_cast1_fu_303_p1;
    sc_signal< sc_lv<8> > tmp2_fu_349_p2;
    sc_signal< sc_lv<6> > tmp3_fu_359_p0;
    sc_signal< sc_lv<8> > tmp3_fu_359_p1;
    sc_signal< sc_lv<5> > out_w_cast_fu_367_p1;
    sc_signal< sc_lv<5> > exitcond2_fu_371_p1;
    sc_signal< sc_lv<5> > tmp_87_cast_fu_412_p1;
    sc_signal< sc_lv<5> > tmp5_fu_416_p2;
    sc_signal< sc_lv<14> > tmp5_cast_fu_421_p1;
    sc_signal< sc_lv<14> > tmp_56_fu_425_p2;
    sc_signal< sc_lv<1> > tmp_58_fu_435_p2;
    sc_signal< sc_lv<16> > input_load_buffer_4_fu_441_p3;
    sc_signal< sc_lv<5> > tmp_93_1_cast_fu_468_p1;
    sc_signal< sc_lv<5> > tmp6_fu_472_p2;
    sc_signal< sc_lv<14> > tmp6_cast_fu_477_p1;
    sc_signal< sc_lv<14> > tmp_94_1_fu_481_p2;
    sc_signal< sc_lv<12> > tmp_59_fu_491_p2;
    sc_signal< sc_lv<1> > tmp_99_1_fu_505_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_lv<14> > tmp1_1_fu_344_p10;
    sc_signal< sc_lv<12> > tmp3_fu_359_p10;
    sc_signal< sc_lv<14> > tmp4_fu_329_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_6_1_fu_511_p3();
    void thread_buffer_6_fu_449_p3();
    void thread_exitcond2_fu_371_p1();
    void thread_exitcond2_fu_371_p2();
    void thread_exitcond3_fu_292_p1();
    void thread_exitcond3_fu_292_p2();
    void thread_exitcond4_fu_277_p2();
    void thread_exitcond_1_fu_456_p2();
    void thread_exitcond_fu_394_p2();
    void thread_in_w_1_1_fu_462_p2();
    void thread_in_w_1_fu_400_p2();
    void thread_input_load_buffer_4_fu_441_p3();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_input_width_cast_fu_243_p1();
    void thread_next_mul3_fu_263_p2();
    void thread_next_mul_fu_268_p2();
    void thread_out_d_3_fu_282_p2();
    void thread_out_d_cast_fu_273_p1();
    void thread_out_h_3_fu_297_p2();
    void thread_out_h_cast_fu_288_p1();
    void thread_out_w_3_fu_376_p2();
    void thread_out_w_cast_fu_367_p1();
    void thread_output_height_cast2_fu_239_p0();
    void thread_output_height_cast2_fu_239_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_output_width_cast3_fu_235_p0();
    void thread_output_width_cast3_fu_235_p1();
    void thread_tmp1_1_fu_344_p0();
    void thread_tmp1_1_fu_344_p1();
    void thread_tmp1_1_fu_344_p10();
    void thread_tmp1_1_fu_344_p2();
    void thread_tmp1_fu_319_p2();
    void thread_tmp2_fu_349_p2();
    void thread_tmp3_fu_359_p0();
    void thread_tmp3_fu_359_p1();
    void thread_tmp3_fu_359_p10();
    void thread_tmp3_fu_359_p2();
    void thread_tmp4_fu_329_p0();
    void thread_tmp4_fu_329_p1();
    void thread_tmp4_fu_329_p10();
    void thread_tmp4_fu_329_p2();
    void thread_tmp5_cast_fu_421_p1();
    void thread_tmp5_fu_416_p2();
    void thread_tmp6_cast_fu_477_p1();
    void thread_tmp6_fu_472_p2();
    void thread_tmp_1_fu_334_p2();
    void thread_tmp_54_fu_386_p3();
    void thread_tmp_55_fu_406_p2();
    void thread_tmp_56_fu_425_p2();
    void thread_tmp_57_fu_430_p1();
    void thread_tmp_58_fu_435_p2();
    void thread_tmp_59_fu_491_p2();
    void thread_tmp_60_fu_495_p1();
    void thread_tmp_73_cast1_fu_251_p1();
    void thread_tmp_74_cast_fu_255_p1();
    void thread_tmp_75_cast_fu_259_p1();
    void thread_tmp_79_cast1_fu_303_p1();
    void thread_tmp_80_cast_fu_315_p1();
    void thread_tmp_81_cast9_fu_382_p1();
    void thread_tmp_87_cast_fu_412_p1();
    void thread_tmp_93_1_cast_fu_468_p1();
    void thread_tmp_94_1_fu_481_p2();
    void thread_tmp_95_1_fu_486_p1();
    void thread_tmp_99_1_fu_505_p2();
    void thread_tmp_cast_fu_247_p1();
    void thread_tmp_s_fu_307_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
