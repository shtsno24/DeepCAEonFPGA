// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling2d_fix16_HH_
#define _max_pooling2d_fix16_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pooling2d_fix16 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > input_height;
    sc_in< sc_lv<16> > input_width;
    sc_out< sc_lv<11> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<11> > input_r_address1;
    sc_out< sc_logic > input_r_ce1;
    sc_in< sc_lv<16> > input_r_q1;
    sc_in< sc_lv<16> > output_depth;
    sc_in< sc_lv<16> > output_height;
    sc_in< sc_lv<16> > output_width;
    sc_out< sc_lv<9> > MaxPooling2D_1_array_address0;
    sc_out< sc_logic > MaxPooling2D_1_array_ce0;
    sc_out< sc_logic > MaxPooling2D_1_array_we0;
    sc_out< sc_lv<16> > MaxPooling2D_1_array_d0;
    sc_in< sc_lv<16> > MaxPooling2D_1_array_q0;


    // Module declarations
    max_pooling2d_fix16(sc_module_name name);
    SC_HAS_PROCESS(max_pooling2d_fix16);

    ~max_pooling2d_fix16();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > reg_171;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > tmp_s_fu_176_p1;
    sc_signal< sc_lv<32> > tmp_s_reg_379;
    sc_signal< sc_lv<32> > tmp_81_fu_180_p1;
    sc_signal< sc_lv<32> > tmp_81_reg_384;
    sc_signal< sc_lv<32> > tmp_82_fu_184_p1;
    sc_signal< sc_lv<32> > tmp_82_reg_390;
    sc_signal< sc_lv<32> > tmp_83_fu_188_p1;
    sc_signal< sc_lv<32> > tmp_83_reg_395;
    sc_signal< sc_lv<32> > next_mul3_fu_192_p2;
    sc_signal< sc_lv<32> > next_mul3_reg_400;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > next_mul_fu_197_p2;
    sc_signal< sc_lv<32> > next_mul_reg_405;
    sc_signal< sc_lv<16> > out_d_2_fu_207_p2;
    sc_signal< sc_lv<16> > out_d_2_reg_413;
    sc_signal< sc_lv<16> > out_h_2_fu_218_p2;
    sc_signal< sc_lv<16> > out_h_2_reg_421;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_fu_240_p2;
    sc_signal< sc_lv<32> > tmp_reg_426;
    sc_signal< sc_lv<1> > exitcond3_fu_213_p2;
    sc_signal< sc_lv<32> > tmp4_fu_246_p2;
    sc_signal< sc_lv<32> > tmp4_reg_431;
    sc_signal< sc_lv<32> > tmp4_1_fu_252_p2;
    sc_signal< sc_lv<32> > tmp4_1_reg_436;
    sc_signal< sc_lv<32> > tmp3_fu_258_p2;
    sc_signal< sc_lv<32> > tmp3_reg_441;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp5_fu_262_p2;
    sc_signal< sc_lv<32> > tmp5_reg_446;
    sc_signal< sc_lv<32> > tmp5_1_fu_266_p2;
    sc_signal< sc_lv<32> > tmp5_1_reg_451;
    sc_signal< sc_lv<16> > out_w_2_fu_275_p2;
    sc_signal< sc_lv<16> > out_w_2_reg_459;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > tmp_90_cast_fu_293_p1;
    sc_signal< sc_lv<32> > tmp_90_cast_reg_464;
    sc_signal< sc_lv<1> > exitcond2_fu_270_p2;
    sc_signal< sc_lv<9> > MaxPooling2D_1_array_1_reg_469;
    sc_signal< sc_lv<1> > tmp_104_0_1_fu_328_p2;
    sc_signal< sc_lv<1> > tmp_104_0_1_reg_484;
    sc_signal< sc_lv<32> > tmp_95_1_fu_334_p2;
    sc_signal< sc_lv<32> > tmp_95_1_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > out_d_reg_114;
    sc_signal< sc_lv<32> > phi_mul_reg_125;
    sc_signal< sc_lv<32> > phi_mul2_reg_137;
    sc_signal< sc_lv<16> > out_h_reg_149;
    sc_signal< sc_lv<1> > exitcond4_fu_202_p2;
    sc_signal< sc_lv<16> > out_w_reg_160;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > tmp_89_fu_302_p1;
    sc_signal< sc_lv<64> > tmp_91_fu_312_p1;
    sc_signal< sc_lv<64> > tmp_103_0_1_fu_323_p1;
    sc_signal< sc_lv<64> > tmp_103_1_fu_338_p1;
    sc_signal< sc_lv<64> > tmp_103_1_1_fu_353_p1;
    sc_signal< sc_lv<1> > tmp_104_1_fu_342_p2;
    sc_signal< sc_lv<1> > tmp_104_1_1_fu_358_p2;
    sc_signal< sc_lv<17> > tmp_85_fu_228_p3;
    sc_signal< sc_lv<32> > tmp_84_fu_224_p1;
    sc_signal< sc_lv<32> > tmp_88_cast_fu_236_p1;
    sc_signal< sc_lv<16> > tmp3_fu_258_p0;
    sc_signal< sc_lv<16> > tmp5_fu_262_p0;
    sc_signal< sc_lv<16> > tmp5_1_fu_266_p0;
    sc_signal< sc_lv<17> > tmp_87_fu_285_p3;
    sc_signal< sc_lv<32> > tmp_86_fu_281_p1;
    sc_signal< sc_lv<32> > tmp_88_fu_297_p2;
    sc_signal< sc_lv<32> > tmp_90_fu_307_p2;
    sc_signal< sc_lv<32> > tmp_102_0_1_fu_317_p2;
    sc_signal< sc_lv<32> > tmp_102_1_1_fu_348_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<16> ap_const_lv16_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_MaxPooling2D_1_array_address0();
    void thread_MaxPooling2D_1_array_ce0();
    void thread_MaxPooling2D_1_array_d0();
    void thread_MaxPooling2D_1_array_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond2_fu_270_p2();
    void thread_exitcond3_fu_213_p2();
    void thread_exitcond4_fu_202_p2();
    void thread_input_r_address0();
    void thread_input_r_address1();
    void thread_input_r_ce0();
    void thread_input_r_ce1();
    void thread_next_mul3_fu_192_p2();
    void thread_next_mul_fu_197_p2();
    void thread_out_d_2_fu_207_p2();
    void thread_out_h_2_fu_218_p2();
    void thread_out_w_2_fu_275_p2();
    void thread_tmp3_fu_258_p0();
    void thread_tmp3_fu_258_p2();
    void thread_tmp4_1_fu_252_p2();
    void thread_tmp4_fu_246_p2();
    void thread_tmp5_1_fu_266_p0();
    void thread_tmp5_1_fu_266_p2();
    void thread_tmp5_fu_262_p0();
    void thread_tmp5_fu_262_p2();
    void thread_tmp_102_0_1_fu_317_p2();
    void thread_tmp_102_1_1_fu_348_p2();
    void thread_tmp_103_0_1_fu_323_p1();
    void thread_tmp_103_1_1_fu_353_p1();
    void thread_tmp_103_1_fu_338_p1();
    void thread_tmp_104_0_1_fu_328_p2();
    void thread_tmp_104_1_1_fu_358_p2();
    void thread_tmp_104_1_fu_342_p2();
    void thread_tmp_81_fu_180_p1();
    void thread_tmp_82_fu_184_p1();
    void thread_tmp_83_fu_188_p1();
    void thread_tmp_84_fu_224_p1();
    void thread_tmp_85_fu_228_p3();
    void thread_tmp_86_fu_281_p1();
    void thread_tmp_87_fu_285_p3();
    void thread_tmp_88_cast_fu_236_p1();
    void thread_tmp_88_fu_297_p2();
    void thread_tmp_89_fu_302_p1();
    void thread_tmp_90_cast_fu_293_p1();
    void thread_tmp_90_fu_307_p2();
    void thread_tmp_91_fu_312_p1();
    void thread_tmp_95_1_fu_334_p2();
    void thread_tmp_fu_240_p2();
    void thread_tmp_s_fu_176_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
