// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling2d_fix16_HH_
#define _max_pooling2d_fix16_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pooling2d_fix16 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<7> > input_height;
    sc_in< sc_lv<6> > input_width;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<6> > output_depth;
    sc_in< sc_lv<5> > output_height;
    sc_in< sc_lv<5> > output_width;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    max_pooling2d_fix16(sc_module_name name);
    SC_HAS_PROCESS(max_pooling2d_fix16);

    ~max_pooling2d_fix16();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > tmp_cast_fu_213_p1;
    sc_signal< sc_lv<9> > tmp_cast_reg_467;
    sc_signal< sc_lv<14> > tmp_71_cast_fu_217_p1;
    sc_signal< sc_lv<14> > tmp_71_cast_reg_472;
    sc_signal< sc_lv<8> > tmp_72_cast_fu_221_p1;
    sc_signal< sc_lv<8> > tmp_72_cast_reg_477;
    sc_signal< sc_lv<12> > tmp_73_cast_fu_225_p1;
    sc_signal< sc_lv<12> > tmp_73_cast_reg_482;
    sc_signal< sc_lv<8> > next_mul3_fu_229_p2;
    sc_signal< sc_lv<8> > next_mul3_reg_487;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > next_mul_fu_234_p2;
    sc_signal< sc_lv<9> > next_mul_reg_492;
    sc_signal< sc_lv<5> > out_d_3_fu_248_p2;
    sc_signal< sc_lv<5> > out_d_3_reg_500;
    sc_signal< sc_lv<4> > out_h_3_fu_263_p2;
    sc_signal< sc_lv<4> > out_h_3_reg_508;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > tmp_78_cast_fu_281_p1;
    sc_signal< sc_lv<9> > tmp_78_cast_reg_513;
    sc_signal< sc_lv<1> > exitcond3_fu_258_p2;
    sc_signal< sc_lv<12> > tmp3_fu_295_p2;
    sc_signal< sc_lv<12> > tmp3_reg_518;
    sc_signal< sc_lv<4> > out_w_3_fu_309_p2;
    sc_signal< sc_lv<4> > out_w_3_reg_526;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > tmp_80_cast1_fu_315_p1;
    sc_signal< sc_lv<12> > tmp_80_cast1_reg_531;
    sc_signal< sc_lv<1> > exitcond2_fu_304_p2;
    sc_signal< sc_lv<5> > tmp_53_fu_319_p3;
    sc_signal< sc_lv<5> > tmp_53_reg_536;
    sc_signal< sc_lv<1> > tmp_52_fu_327_p1;
    sc_signal< sc_lv<1> > tmp_52_reg_541;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > in_h_1_fu_337_p2;
    sc_signal< sc_lv<2> > in_h_1_reg_549;
    sc_signal< sc_lv<14> > tmp1_fu_362_p2;
    sc_signal< sc_lv<14> > tmp1_reg_554;
    sc_signal< sc_lv<1> > exitcond1_fu_331_p2;
    sc_signal< sc_lv<1> > tmp_56_fu_376_p1;
    sc_signal< sc_lv<1> > tmp_56_reg_559;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > in_w_1_fu_386_p2;
    sc_signal< sc_lv<2> > in_w_1_reg_567;
    sc_signal< sc_lv<1> > exitcond_fu_380_p2;
    sc_signal< sc_lv<5> > out_d_reg_118;
    sc_signal< sc_lv<9> > phi_mul_reg_129;
    sc_signal< sc_lv<8> > phi_mul2_reg_141;
    sc_signal< sc_lv<4> > out_h_reg_153;
    sc_signal< sc_lv<1> > exitcond4_fu_243_p2;
    sc_signal< sc_lv<4> > out_w_reg_164;
    sc_signal< sc_lv<2> > in_h_reg_175;
    sc_signal< sc_lv<2> > in_w_reg_186;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_55_fu_371_p1;
    sc_signal< sc_lv<64> > tmp_59_fu_410_p1;
    sc_signal< sc_lv<16> > buffer_fu_58;
    sc_signal< sc_lv<16> > buffer_6_fu_433_p3;
    sc_signal< sc_lv<5> > output_width_cast3_fu_201_p0;
    sc_signal< sc_lv<5> > output_height_cast2_fu_205_p0;
    sc_signal< sc_lv<7> > input_width_cast_fu_209_p1;
    sc_signal< sc_lv<6> > output_height_cast2_fu_205_p1;
    sc_signal< sc_lv<6> > output_width_cast3_fu_201_p1;
    sc_signal< sc_lv<6> > out_d_cast_fu_239_p1;
    sc_signal< sc_lv<5> > out_h_cast_fu_254_p1;
    sc_signal< sc_lv<5> > exitcond3_fu_258_p1;
    sc_signal< sc_lv<5> > tmp_s_fu_273_p3;
    sc_signal< sc_lv<8> > tmp_77_cast1_fu_269_p1;
    sc_signal< sc_lv<8> > tmp2_fu_285_p2;
    sc_signal< sc_lv<6> > tmp3_fu_295_p0;
    sc_signal< sc_lv<8> > tmp3_fu_295_p1;
    sc_signal< sc_lv<5> > out_w_cast_fu_300_p1;
    sc_signal< sc_lv<5> > exitcond2_fu_304_p1;
    sc_signal< sc_lv<9> > tmp_84_cast_fu_343_p1;
    sc_signal< sc_lv<9> > tmp4_fu_347_p2;
    sc_signal< sc_lv<9> > tmp_fu_353_p2;
    sc_signal< sc_lv<9> > tmp1_fu_362_p0;
    sc_signal< sc_lv<7> > tmp1_fu_362_p1;
    sc_signal< sc_lv<12> > tmp_54_fu_367_p2;
    sc_signal< sc_lv<5> > tmp_88_cast_fu_392_p1;
    sc_signal< sc_lv<5> > tmp5_fu_396_p2;
    sc_signal< sc_lv<14> > tmp5_cast_fu_401_p1;
    sc_signal< sc_lv<14> > tmp_58_fu_405_p2;
    sc_signal< sc_lv<1> > tmp_60_fu_419_p2;
    sc_signal< sc_lv<1> > tmp_57_fu_415_p2;
    sc_signal< sc_lv<16> > buffer_5_buffer_4_fu_425_p3;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<14> > tmp1_fu_362_p00;
    sc_signal< sc_lv<12> > tmp3_fu_295_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_5_buffer_4_fu_425_p3();
    void thread_buffer_6_fu_433_p3();
    void thread_exitcond1_fu_331_p2();
    void thread_exitcond2_fu_304_p1();
    void thread_exitcond2_fu_304_p2();
    void thread_exitcond3_fu_258_p1();
    void thread_exitcond3_fu_258_p2();
    void thread_exitcond4_fu_243_p2();
    void thread_exitcond_fu_380_p2();
    void thread_in_h_1_fu_337_p2();
    void thread_in_w_1_fu_386_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_input_width_cast_fu_209_p1();
    void thread_next_mul3_fu_229_p2();
    void thread_next_mul_fu_234_p2();
    void thread_out_d_3_fu_248_p2();
    void thread_out_d_cast_fu_239_p1();
    void thread_out_h_3_fu_263_p2();
    void thread_out_h_cast_fu_254_p1();
    void thread_out_w_3_fu_309_p2();
    void thread_out_w_cast_fu_300_p1();
    void thread_output_height_cast2_fu_205_p0();
    void thread_output_height_cast2_fu_205_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_output_width_cast3_fu_201_p0();
    void thread_output_width_cast3_fu_201_p1();
    void thread_tmp1_fu_362_p0();
    void thread_tmp1_fu_362_p00();
    void thread_tmp1_fu_362_p1();
    void thread_tmp1_fu_362_p2();
    void thread_tmp2_fu_285_p2();
    void thread_tmp3_fu_295_p0();
    void thread_tmp3_fu_295_p1();
    void thread_tmp3_fu_295_p10();
    void thread_tmp3_fu_295_p2();
    void thread_tmp4_fu_347_p2();
    void thread_tmp5_cast_fu_401_p1();
    void thread_tmp5_fu_396_p2();
    void thread_tmp_52_fu_327_p1();
    void thread_tmp_53_fu_319_p3();
    void thread_tmp_54_fu_367_p2();
    void thread_tmp_55_fu_371_p1();
    void thread_tmp_56_fu_376_p1();
    void thread_tmp_57_fu_415_p2();
    void thread_tmp_58_fu_405_p2();
    void thread_tmp_59_fu_410_p1();
    void thread_tmp_60_fu_419_p2();
    void thread_tmp_71_cast_fu_217_p1();
    void thread_tmp_72_cast_fu_221_p1();
    void thread_tmp_73_cast_fu_225_p1();
    void thread_tmp_77_cast1_fu_269_p1();
    void thread_tmp_78_cast_fu_281_p1();
    void thread_tmp_80_cast1_fu_315_p1();
    void thread_tmp_84_cast_fu_343_p1();
    void thread_tmp_88_cast_fu_392_p1();
    void thread_tmp_cast_fu_213_p1();
    void thread_tmp_fu_353_p2();
    void thread_tmp_s_fu_273_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
