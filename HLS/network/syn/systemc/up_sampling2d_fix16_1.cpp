// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "up_sampling2d_fix16_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic up_sampling2d_fix16_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic up_sampling2d_fix16_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> up_sampling2d_fix16_1::ap_ST_fsm_state1 = "1";
const sc_lv<6> up_sampling2d_fix16_1::ap_ST_fsm_state2 = "10";
const sc_lv<6> up_sampling2d_fix16_1::ap_ST_fsm_state3 = "100";
const sc_lv<6> up_sampling2d_fix16_1::ap_ST_fsm_state4 = "1000";
const sc_lv<6> up_sampling2d_fix16_1::ap_ST_fsm_state5 = "10000";
const sc_lv<6> up_sampling2d_fix16_1::ap_ST_fsm_state6 = "100000";
const sc_lv<32> up_sampling2d_fix16_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> up_sampling2d_fix16_1::ap_const_lv32_1 = "1";
const sc_lv<32> up_sampling2d_fix16_1::ap_const_lv32_2 = "10";
const sc_lv<1> up_sampling2d_fix16_1::ap_const_lv1_0 = "0";
const sc_lv<32> up_sampling2d_fix16_1::ap_const_lv32_3 = "11";
const sc_lv<32> up_sampling2d_fix16_1::ap_const_lv32_4 = "100";
const sc_lv<16> up_sampling2d_fix16_1::ap_const_lv16_0 = "0000000000000000";
const sc_lv<1> up_sampling2d_fix16_1::ap_const_lv1_1 = "1";
const sc_lv<32> up_sampling2d_fix16_1::ap_const_lv32_5 = "101";
const sc_lv<16> up_sampling2d_fix16_1::ap_const_lv16_1 = "1";
const sc_lv<32> up_sampling2d_fix16_1::ap_const_lv32_F = "1111";
const bool up_sampling2d_fix16_1::ap_const_boolean_1 = true;

up_sampling2d_fix16_1::up_sampling2d_fix16_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SeparableConv2D_2_ar_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_6_fu_260_p1 );

    SC_METHOD(thread_SeparableConv2D_2_ar_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_UpSampling2D_0_array_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_11_fu_274_p1 );

    SC_METHOD(thread_UpSampling2D_0_array_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_UpSampling2D_0_array_d0);
    sensitive << ( SeparableConv2D_2_ar_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_UpSampling2D_0_array_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_170_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_170_p2 );

    SC_METHOD(thread_div1_fu_241_p4);
    sensitive << ( out_w_reg_133 );

    SC_METHOD(thread_div_fu_192_p4);
    sensitive << ( out_h_reg_122 );

    SC_METHOD(thread_exitcond2_fu_181_p2);
    sensitive << ( output_height );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( out_h_reg_122 );

    SC_METHOD(thread_exitcond3_fu_170_p2);
    sensitive << ( output_depth );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_d_reg_87 );

    SC_METHOD(thread_exitcond_fu_230_p2);
    sensitive << ( output_width );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( out_w_reg_133 );

    SC_METHOD(thread_next_mul3_fu_160_p2);
    sensitive << ( tmp_3_reg_303 );
    sensitive << ( phi_mul2_reg_110 );

    SC_METHOD(thread_next_mul_fu_165_p2);
    sensitive << ( tmp_1_reg_293 );
    sensitive << ( phi_mul_reg_98 );

    SC_METHOD(thread_out_d_1_fu_175_p2);
    sensitive << ( out_d_reg_87 );

    SC_METHOD(thread_out_h_1_fu_186_p2);
    sensitive << ( out_h_reg_122 );

    SC_METHOD(thread_out_w_1_fu_235_p2);
    sensitive << ( out_w_reg_133 );

    SC_METHOD(thread_tmp1_fu_222_p0);
    sensitive << ( tmp_2_reg_298 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp1_fu_222_p2);
    sensitive << ( tmp_reg_339 );
    sensitive << ( tmp1_fu_222_p0 );

    SC_METHOD(thread_tmp2_fu_216_p2);
    sensitive << ( phi_mul2_reg_110 );
    sensitive << ( tmp_s_fu_206_p1 );

    SC_METHOD(thread_tmp3_fu_226_p0);
    sensitive << ( tmp_4_reg_308 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp3_fu_226_p2);
    sensitive << ( tmp2_reg_344 );
    sensitive << ( tmp3_fu_226_p0 );

    SC_METHOD(thread_tmp_10_fu_269_p2);
    sensitive << ( tmp3_reg_354 );
    sensitive << ( tmp_7_fu_265_p1 );

    SC_METHOD(thread_tmp_11_fu_274_p1);
    sensitive << ( tmp_10_reg_372 );

    SC_METHOD(thread_tmp_1_fu_144_p1);
    sensitive << ( input_height );

    SC_METHOD(thread_tmp_2_fu_148_p1);
    sensitive << ( input_width );

    SC_METHOD(thread_tmp_3_fu_152_p1);
    sensitive << ( output_height );

    SC_METHOD(thread_tmp_4_fu_156_p1);
    sensitive << ( output_width );

    SC_METHOD(thread_tmp_5_fu_255_p2);
    sensitive << ( tmp1_reg_349 );
    sensitive << ( tmp_8_fu_251_p1 );

    SC_METHOD(thread_tmp_6_fu_260_p1);
    sensitive << ( tmp_5_fu_255_p2 );

    SC_METHOD(thread_tmp_7_fu_265_p1);
    sensitive << ( out_w_reg_133 );

    SC_METHOD(thread_tmp_8_fu_251_p1);
    sensitive << ( div1_fu_241_p4 );

    SC_METHOD(thread_tmp_9_fu_202_p1);
    sensitive << ( div_fu_192_p4 );

    SC_METHOD(thread_tmp_fu_210_p2);
    sensitive << ( phi_mul_reg_98 );
    sensitive << ( tmp_9_fu_202_p1 );

    SC_METHOD(thread_tmp_s_fu_206_p1);
    sensitive << ( out_h_reg_122 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_181_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond_fu_230_p2 );
    sensitive << ( exitcond3_fu_170_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "up_sampling2d_fix16_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_height, "(port)input_height");
    sc_trace(mVcdFile, input_width, "(port)input_width");
    sc_trace(mVcdFile, output_depth, "(port)output_depth");
    sc_trace(mVcdFile, output_height, "(port)output_height");
    sc_trace(mVcdFile, output_width, "(port)output_width");
    sc_trace(mVcdFile, SeparableConv2D_2_ar_address0, "(port)SeparableConv2D_2_ar_address0");
    sc_trace(mVcdFile, SeparableConv2D_2_ar_ce0, "(port)SeparableConv2D_2_ar_ce0");
    sc_trace(mVcdFile, SeparableConv2D_2_ar_q0, "(port)SeparableConv2D_2_ar_q0");
    sc_trace(mVcdFile, UpSampling2D_0_array_address0, "(port)UpSampling2D_0_array_address0");
    sc_trace(mVcdFile, UpSampling2D_0_array_ce0, "(port)UpSampling2D_0_array_ce0");
    sc_trace(mVcdFile, UpSampling2D_0_array_we0, "(port)UpSampling2D_0_array_we0");
    sc_trace(mVcdFile, UpSampling2D_0_array_d0, "(port)UpSampling2D_0_array_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_1_fu_144_p1, "tmp_1_fu_144_p1");
    sc_trace(mVcdFile, tmp_1_reg_293, "tmp_1_reg_293");
    sc_trace(mVcdFile, tmp_2_fu_148_p1, "tmp_2_fu_148_p1");
    sc_trace(mVcdFile, tmp_2_reg_298, "tmp_2_reg_298");
    sc_trace(mVcdFile, tmp_3_fu_152_p1, "tmp_3_fu_152_p1");
    sc_trace(mVcdFile, tmp_3_reg_303, "tmp_3_reg_303");
    sc_trace(mVcdFile, tmp_4_fu_156_p1, "tmp_4_fu_156_p1");
    sc_trace(mVcdFile, tmp_4_reg_308, "tmp_4_reg_308");
    sc_trace(mVcdFile, next_mul3_fu_160_p2, "next_mul3_fu_160_p2");
    sc_trace(mVcdFile, next_mul3_reg_313, "next_mul3_reg_313");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_165_p2, "next_mul_fu_165_p2");
    sc_trace(mVcdFile, next_mul_reg_318, "next_mul_reg_318");
    sc_trace(mVcdFile, out_d_1_fu_175_p2, "out_d_1_fu_175_p2");
    sc_trace(mVcdFile, out_d_1_reg_326, "out_d_1_reg_326");
    sc_trace(mVcdFile, out_h_1_fu_186_p2, "out_h_1_fu_186_p2");
    sc_trace(mVcdFile, out_h_1_reg_334, "out_h_1_reg_334");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_fu_210_p2, "tmp_fu_210_p2");
    sc_trace(mVcdFile, tmp_reg_339, "tmp_reg_339");
    sc_trace(mVcdFile, exitcond2_fu_181_p2, "exitcond2_fu_181_p2");
    sc_trace(mVcdFile, tmp2_fu_216_p2, "tmp2_fu_216_p2");
    sc_trace(mVcdFile, tmp2_reg_344, "tmp2_reg_344");
    sc_trace(mVcdFile, tmp1_fu_222_p2, "tmp1_fu_222_p2");
    sc_trace(mVcdFile, tmp1_reg_349, "tmp1_reg_349");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp3_fu_226_p2, "tmp3_fu_226_p2");
    sc_trace(mVcdFile, tmp3_reg_354, "tmp3_reg_354");
    sc_trace(mVcdFile, out_w_1_fu_235_p2, "out_w_1_fu_235_p2");
    sc_trace(mVcdFile, out_w_1_reg_362, "out_w_1_reg_362");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond_fu_230_p2, "exitcond_fu_230_p2");
    sc_trace(mVcdFile, tmp_10_fu_269_p2, "tmp_10_fu_269_p2");
    sc_trace(mVcdFile, tmp_10_reg_372, "tmp_10_reg_372");
    sc_trace(mVcdFile, out_d_reg_87, "out_d_reg_87");
    sc_trace(mVcdFile, phi_mul_reg_98, "phi_mul_reg_98");
    sc_trace(mVcdFile, phi_mul2_reg_110, "phi_mul2_reg_110");
    sc_trace(mVcdFile, out_h_reg_122, "out_h_reg_122");
    sc_trace(mVcdFile, exitcond3_fu_170_p2, "exitcond3_fu_170_p2");
    sc_trace(mVcdFile, out_w_reg_133, "out_w_reg_133");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_6_fu_260_p1, "tmp_6_fu_260_p1");
    sc_trace(mVcdFile, tmp_11_fu_274_p1, "tmp_11_fu_274_p1");
    sc_trace(mVcdFile, div_fu_192_p4, "div_fu_192_p4");
    sc_trace(mVcdFile, tmp_9_fu_202_p1, "tmp_9_fu_202_p1");
    sc_trace(mVcdFile, tmp_s_fu_206_p1, "tmp_s_fu_206_p1");
    sc_trace(mVcdFile, tmp1_fu_222_p0, "tmp1_fu_222_p0");
    sc_trace(mVcdFile, tmp3_fu_226_p0, "tmp3_fu_226_p0");
    sc_trace(mVcdFile, div1_fu_241_p4, "div1_fu_241_p4");
    sc_trace(mVcdFile, tmp_8_fu_251_p1, "tmp_8_fu_251_p1");
    sc_trace(mVcdFile, tmp_5_fu_255_p2, "tmp_5_fu_255_p2");
    sc_trace(mVcdFile, tmp_7_fu_265_p1, "tmp_7_fu_265_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

up_sampling2d_fix16_1::~up_sampling2d_fix16_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void up_sampling2d_fix16_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_181_p2.read(), ap_const_lv1_1))) {
        out_d_reg_87 = out_d_1_reg_326.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_d_reg_87 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_170_p2.read()))) {
        out_h_reg_122 = ap_const_lv16_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_230_p2.read(), ap_const_lv1_1))) {
        out_h_reg_122 = out_h_1_reg_334.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_w_reg_133 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_w_reg_133 = out_w_1_reg_362.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_181_p2.read(), ap_const_lv1_1))) {
        phi_mul2_reg_110 = next_mul3_reg_313.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul2_reg_110 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_181_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_98 = next_mul_reg_318.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_98 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul3_reg_313 = next_mul3_fu_160_p2.read();
        next_mul_reg_318 = next_mul_fu_165_p2.read();
        out_d_1_reg_326 = out_d_1_fu_175_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_h_1_reg_334 = out_h_1_fu_186_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_w_1_reg_362 = out_w_1_fu_235_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp1_reg_349 = tmp1_fu_222_p2.read();
        tmp3_reg_354 = tmp3_fu_226_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_181_p2.read(), ap_const_lv1_0))) {
        tmp2_reg_344 = tmp2_fu_216_p2.read();
        tmp_reg_339 = tmp_fu_210_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_230_p2.read()))) {
        tmp_10_reg_372 = tmp_10_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_1_reg_293 = tmp_1_fu_144_p1.read();
        tmp_2_reg_298 = tmp_2_fu_148_p1.read();
        tmp_3_reg_303 = tmp_3_fu_152_p1.read();
        tmp_4_reg_308 = tmp_4_fu_156_p1.read();
    }
}

void up_sampling2d_fix16_1::thread_SeparableConv2D_2_ar_address0() {
    SeparableConv2D_2_ar_address0 =  (sc_lv<9>) (tmp_6_fu_260_p1.read());
}

void up_sampling2d_fix16_1::thread_SeparableConv2D_2_ar_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SeparableConv2D_2_ar_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_2_ar_ce0 = ap_const_logic_0;
    }
}

void up_sampling2d_fix16_1::thread_UpSampling2D_0_array_address0() {
    UpSampling2D_0_array_address0 =  (sc_lv<11>) (tmp_11_fu_274_p1.read());
}

void up_sampling2d_fix16_1::thread_UpSampling2D_0_array_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        UpSampling2D_0_array_ce0 = ap_const_logic_1;
    } else {
        UpSampling2D_0_array_ce0 = ap_const_logic_0;
    }
}

void up_sampling2d_fix16_1::thread_UpSampling2D_0_array_d0() {
    UpSampling2D_0_array_d0 = SeparableConv2D_2_ar_q0.read();
}

void up_sampling2d_fix16_1::thread_UpSampling2D_0_array_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        UpSampling2D_0_array_we0 = ap_const_logic_1;
    } else {
        UpSampling2D_0_array_we0 = ap_const_logic_0;
    }
}

void up_sampling2d_fix16_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void up_sampling2d_fix16_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void up_sampling2d_fix16_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void up_sampling2d_fix16_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void up_sampling2d_fix16_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void up_sampling2d_fix16_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void up_sampling2d_fix16_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_170_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void up_sampling2d_fix16_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void up_sampling2d_fix16_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_170_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void up_sampling2d_fix16_1::thread_div1_fu_241_p4() {
    div1_fu_241_p4 = out_w_reg_133.read().range(15, 1);
}

void up_sampling2d_fix16_1::thread_div_fu_192_p4() {
    div_fu_192_p4 = out_h_reg_122.read().range(15, 1);
}

void up_sampling2d_fix16_1::thread_exitcond2_fu_181_p2() {
    exitcond2_fu_181_p2 = (!out_h_reg_122.read().is_01() || !output_height.read().is_01())? sc_lv<1>(): sc_lv<1>(out_h_reg_122.read() == output_height.read());
}

void up_sampling2d_fix16_1::thread_exitcond3_fu_170_p2() {
    exitcond3_fu_170_p2 = (!out_d_reg_87.read().is_01() || !output_depth.read().is_01())? sc_lv<1>(): sc_lv<1>(out_d_reg_87.read() == output_depth.read());
}

void up_sampling2d_fix16_1::thread_exitcond_fu_230_p2() {
    exitcond_fu_230_p2 = (!out_w_reg_133.read().is_01() || !output_width.read().is_01())? sc_lv<1>(): sc_lv<1>(out_w_reg_133.read() == output_width.read());
}

void up_sampling2d_fix16_1::thread_next_mul3_fu_160_p2() {
    next_mul3_fu_160_p2 = (!phi_mul2_reg_110.read().is_01() || !tmp_3_reg_303.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul2_reg_110.read()) + sc_biguint<32>(tmp_3_reg_303.read()));
}

void up_sampling2d_fix16_1::thread_next_mul_fu_165_p2() {
    next_mul_fu_165_p2 = (!phi_mul_reg_98.read().is_01() || !tmp_1_reg_293.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul_reg_98.read()) + sc_biguint<32>(tmp_1_reg_293.read()));
}

void up_sampling2d_fix16_1::thread_out_d_1_fu_175_p2() {
    out_d_1_fu_175_p2 = (!out_d_reg_87.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_d_reg_87.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void up_sampling2d_fix16_1::thread_out_h_1_fu_186_p2() {
    out_h_1_fu_186_p2 = (!out_h_reg_122.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_h_reg_122.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void up_sampling2d_fix16_1::thread_out_w_1_fu_235_p2() {
    out_w_1_fu_235_p2 = (!out_w_reg_133.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_w_reg_133.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void up_sampling2d_fix16_1::thread_tmp1_fu_222_p0() {
    tmp1_fu_222_p0 =  (sc_lv<16>) (tmp_2_reg_298.read());
}

void up_sampling2d_fix16_1::thread_tmp1_fu_222_p2() {
    tmp1_fu_222_p2 = (!tmp1_fu_222_p0.read().is_01() || !tmp_reg_339.read().is_01())? sc_lv<32>(): sc_biguint<16>(tmp1_fu_222_p0.read()) * sc_bigint<32>(tmp_reg_339.read());
}

void up_sampling2d_fix16_1::thread_tmp2_fu_216_p2() {
    tmp2_fu_216_p2 = (!tmp_s_fu_206_p1.read().is_01() || !phi_mul2_reg_110.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_s_fu_206_p1.read()) + sc_biguint<32>(phi_mul2_reg_110.read()));
}

void up_sampling2d_fix16_1::thread_tmp3_fu_226_p0() {
    tmp3_fu_226_p0 =  (sc_lv<16>) (tmp_4_reg_308.read());
}

void up_sampling2d_fix16_1::thread_tmp3_fu_226_p2() {
    tmp3_fu_226_p2 = (!tmp3_fu_226_p0.read().is_01() || !tmp2_reg_344.read().is_01())? sc_lv<32>(): sc_biguint<16>(tmp3_fu_226_p0.read()) * sc_bigint<32>(tmp2_reg_344.read());
}

void up_sampling2d_fix16_1::thread_tmp_10_fu_269_p2() {
    tmp_10_fu_269_p2 = (!tmp_7_fu_265_p1.read().is_01() || !tmp3_reg_354.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_7_fu_265_p1.read()) + sc_biguint<32>(tmp3_reg_354.read()));
}

void up_sampling2d_fix16_1::thread_tmp_11_fu_274_p1() {
    tmp_11_fu_274_p1 = esl_sext<64,32>(tmp_10_reg_372.read());
}

void up_sampling2d_fix16_1::thread_tmp_1_fu_144_p1() {
    tmp_1_fu_144_p1 = esl_zext<32,16>(input_height.read());
}

void up_sampling2d_fix16_1::thread_tmp_2_fu_148_p1() {
    tmp_2_fu_148_p1 = esl_zext<32,16>(input_width.read());
}

void up_sampling2d_fix16_1::thread_tmp_3_fu_152_p1() {
    tmp_3_fu_152_p1 = esl_zext<32,16>(output_height.read());
}

void up_sampling2d_fix16_1::thread_tmp_4_fu_156_p1() {
    tmp_4_fu_156_p1 = esl_zext<32,16>(output_width.read());
}

void up_sampling2d_fix16_1::thread_tmp_5_fu_255_p2() {
    tmp_5_fu_255_p2 = (!tmp_8_fu_251_p1.read().is_01() || !tmp1_reg_349.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_8_fu_251_p1.read()) + sc_biguint<32>(tmp1_reg_349.read()));
}

void up_sampling2d_fix16_1::thread_tmp_6_fu_260_p1() {
    tmp_6_fu_260_p1 = esl_sext<64,32>(tmp_5_fu_255_p2.read());
}

void up_sampling2d_fix16_1::thread_tmp_7_fu_265_p1() {
    tmp_7_fu_265_p1 = esl_zext<32,16>(out_w_reg_133.read());
}

void up_sampling2d_fix16_1::thread_tmp_8_fu_251_p1() {
    tmp_8_fu_251_p1 = esl_zext<32,15>(div1_fu_241_p4.read());
}

void up_sampling2d_fix16_1::thread_tmp_9_fu_202_p1() {
    tmp_9_fu_202_p1 = esl_zext<32,15>(div_fu_192_p4.read());
}

void up_sampling2d_fix16_1::thread_tmp_fu_210_p2() {
    tmp_fu_210_p2 = (!tmp_9_fu_202_p1.read().is_01() || !phi_mul_reg_98.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_9_fu_202_p1.read()) + sc_biguint<32>(phi_mul_reg_98.read()));
}

void up_sampling2d_fix16_1::thread_tmp_s_fu_206_p1() {
    tmp_s_fu_206_p1 = esl_zext<32,16>(out_h_reg_122.read());
}

void up_sampling2d_fix16_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_170_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_181_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond_fu_230_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

