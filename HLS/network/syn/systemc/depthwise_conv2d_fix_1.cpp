// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "depthwise_conv2d_fix_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic depthwise_conv2d_fix_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic depthwise_conv2d_fix_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state1 = "1";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state2 = "10";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state3 = "100";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state4 = "1000";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state5 = "10000";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state6 = "100000";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> depthwise_conv2d_fix_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_1 = "1";
const sc_lv<1> depthwise_conv2d_fix_1::ap_const_lv1_0 = "0";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_2 = "10";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_3 = "11";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_4 = "100";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_5 = "101";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_6 = "110";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_7 = "111";
const sc_lv<4> depthwise_conv2d_fix_1::ap_const_lv4_0 = "0000";
const sc_lv<1> depthwise_conv2d_fix_1::ap_const_lv1_1 = "1";
const sc_lv<7> depthwise_conv2d_fix_1::ap_const_lv7_0 = "0000000";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_9 = "1001";
const sc_lv<2> depthwise_conv2d_fix_1::ap_const_lv2_0 = "00";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_8 = "1000";
const sc_lv<16> depthwise_conv2d_fix_1::ap_const_lv16_0 = "0000000000000000";
const sc_lv<4> depthwise_conv2d_fix_1::ap_const_lv4_8 = "1000";
const sc_lv<4> depthwise_conv2d_fix_1::ap_const_lv4_1 = "1";
const sc_lv<3> depthwise_conv2d_fix_1::ap_const_lv3_0 = "000";
const sc_lv<2> depthwise_conv2d_fix_1::ap_const_lv2_3 = "11";
const sc_lv<2> depthwise_conv2d_fix_1::ap_const_lv2_1 = "1";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_E = "1110";
const sc_lv<32> depthwise_conv2d_fix_1::ap_const_lv32_1D = "11101";
const bool depthwise_conv2d_fix_1::ap_const_boolean_1 = true;

depthwise_conv2d_fix_1::depthwise_conv2d_fix_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    network_mul_mul_16s_16s_30_1_1_U41 = new network_mul_mul_16s_16s_30_1_1<1,1,16,16,30>("network_mul_mul_16s_16s_30_1_1_U41");
    network_mul_mul_16s_16s_30_1_1_U41->din0(kernel_0_load_reg_632);
    network_mul_mul_16s_16s_30_1_1_U41->din1(input_load_reg_627);
    network_mul_mul_16s_16s_30_1_1_U41->dout(tmp_83_fu_500_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_244_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_244_p2 );

    SC_METHOD(thread_bias_address0);
    sensitive << ( bias_addr_reg_560 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_exitcond1_fu_340_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( k_h_reg_196 );

    SC_METHOD(thread_exitcond2_fu_315_p2);
    sensitive << ( output_width );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( out_w_cast_fu_311_p1 );

    SC_METHOD(thread_exitcond3_fu_281_p2);
    sensitive << ( output_height );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( out_h_cast_fu_277_p1 );

    SC_METHOD(thread_exitcond4_fu_244_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_d_reg_136 );

    SC_METHOD(thread_exitcond_fu_412_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k_w_reg_207 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_80_fu_443_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_k_h_1_fu_346_p2);
    sensitive << ( k_h_reg_196 );

    SC_METHOD(thread_k_w_1_fu_418_p2);
    sensitive << ( k_w_reg_207 );

    SC_METHOD(thread_kernel_0_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_82_fu_467_p1 );

    SC_METHOD(thread_kernel_0_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_next_mul3_fu_234_p2);
    sensitive << ( tmp_101_cast_reg_527 );
    sensitive << ( phi_mul2_reg_160 );

    SC_METHOD(thread_next_mul_fu_239_p2);
    sensitive << ( tmp_cast_reg_517 );
    sensitive << ( phi_mul_reg_148 );

    SC_METHOD(thread_out_d_4_fu_250_p2);
    sensitive << ( out_d_reg_136 );

    SC_METHOD(thread_out_h_4_fu_286_p2);
    sensitive << ( out_h_reg_172 );

    SC_METHOD(thread_out_h_cast_fu_277_p1);
    sensitive << ( out_h_reg_172 );

    SC_METHOD(thread_out_w_4_fu_320_p2);
    sensitive << ( out_w_reg_184 );

    SC_METHOD(thread_out_w_cast_fu_311_p1);
    sensitive << ( out_w_reg_184 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( output_addr_reg_586 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_76_fu_335_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_85_fu_487_p2 );
    sensitive << ( tmp_77_fu_493_p2 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_315_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_p_shl5_cast_fu_368_p1);
    sensitive << ( p_shl5_fu_360_p3 );

    SC_METHOD(thread_p_shl5_fu_360_p3);
    sensitive << ( k_h_reg_196 );

    SC_METHOD(thread_p_shl_cast_fu_268_p1);
    sensitive << ( p_shl_fu_260_p3 );

    SC_METHOD(thread_p_shl_fu_260_p3);
    sensitive << ( tmp_30_fu_256_p1 );

    SC_METHOD(thread_tmp1_fu_306_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp1_fu_306_p00 );

    SC_METHOD(thread_tmp1_fu_306_p00);
    sensitive << ( tmp_fu_296_p2 );

    SC_METHOD(thread_tmp1_fu_306_p1);
    sensitive << ( tmp_100_cast_reg_522 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp1_fu_306_p2);
    sensitive << ( tmp1_fu_306_p0 );
    sensitive << ( tmp1_fu_306_p1 );

    SC_METHOD(thread_tmp2_fu_392_p2);
    sensitive << ( phi_mul2_reg_160 );
    sensitive << ( tmp4_cast_fu_388_p1 );

    SC_METHOD(thread_tmp3_fu_402_p0);
    sensitive << ( tmp_102_cast_reg_532 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp3_fu_402_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp3_fu_402_p10 );

    SC_METHOD(thread_tmp3_fu_402_p10);
    sensitive << ( tmp2_fu_392_p2 );

    SC_METHOD(thread_tmp3_fu_402_p2);
    sensitive << ( tmp3_fu_402_p0 );
    sensitive << ( tmp3_fu_402_p1 );

    SC_METHOD(thread_tmp4_cast_fu_388_p1);
    sensitive << ( tmp4_fu_382_p2 );

    SC_METHOD(thread_tmp4_fu_382_p2);
    sensitive << ( out_h_reg_172 );
    sensitive << ( tmp_113_cast_fu_356_p1 );

    SC_METHOD(thread_tmp5_cast_fu_434_p1);
    sensitive << ( tmp5_fu_428_p2 );

    SC_METHOD(thread_tmp5_fu_428_p2);
    sensitive << ( out_w_reg_184 );
    sensitive << ( tmp_115_cast_fu_424_p1 );

    SC_METHOD(thread_tmp6_fu_407_p2);
    sensitive << ( p_shl_cast_reg_555 );
    sensitive << ( tmp_114_cast_fu_378_p1 );

    SC_METHOD(thread_tmp7_cast_fu_454_p1);
    sensitive << ( tmp7_fu_448_p2 );

    SC_METHOD(thread_tmp7_fu_448_p2);
    sensitive << ( out_d_reg_136 );
    sensitive << ( tmp_115_cast_fu_424_p1 );

    SC_METHOD(thread_tmp_100_cast_fu_222_p1);
    sensitive << ( output_width );

    SC_METHOD(thread_tmp_101_cast_fu_226_p1);
    sensitive << ( input_height );

    SC_METHOD(thread_tmp_102_cast_fu_230_p1);
    sensitive << ( input_width );

    SC_METHOD(thread_tmp_108_cast_fu_292_p1);
    sensitive << ( out_h_reg_172 );

    SC_METHOD(thread_tmp_109_cast_fu_326_p1);
    sensitive << ( out_w_reg_184 );

    SC_METHOD(thread_tmp_113_cast9_fu_352_p1);
    sensitive << ( k_h_reg_196 );

    SC_METHOD(thread_tmp_113_cast_fu_356_p1);
    sensitive << ( k_h_reg_196 );

    SC_METHOD(thread_tmp_114_cast_fu_378_p1);
    sensitive << ( tmp_78_fu_372_p2 );

    SC_METHOD(thread_tmp_115_cast_fu_424_p1);
    sensitive << ( k_w_reg_207 );

    SC_METHOD(thread_tmp_122_cast_fu_463_p1);
    sensitive << ( tmp_81_fu_458_p2 );

    SC_METHOD(thread_tmp_30_fu_256_p1);
    sensitive << ( out_d_reg_136 );

    SC_METHOD(thread_tmp_75_fu_330_p2);
    sensitive << ( tmp1_reg_573 );
    sensitive << ( tmp_109_cast_fu_326_p1 );

    SC_METHOD(thread_tmp_76_fu_335_p1);
    sensitive << ( tmp_75_fu_330_p2 );

    SC_METHOD(thread_tmp_77_fu_493_p2);
    sensitive << ( output_r_q0 );
    sensitive << ( bias_q0 );

    SC_METHOD(thread_tmp_78_fu_372_p2);
    sensitive << ( p_shl5_cast_fu_368_p1 );
    sensitive << ( tmp_113_cast9_fu_352_p1 );

    SC_METHOD(thread_tmp_79_fu_438_p2);
    sensitive << ( tmp3_reg_599 );
    sensitive << ( tmp5_cast_fu_434_p1 );

    SC_METHOD(thread_tmp_80_fu_443_p1);
    sensitive << ( tmp_79_fu_438_p2 );

    SC_METHOD(thread_tmp_81_fu_458_p2);
    sensitive << ( tmp6_reg_604 );
    sensitive << ( tmp7_cast_fu_454_p1 );

    SC_METHOD(thread_tmp_82_fu_467_p1);
    sensitive << ( tmp_122_cast_fu_463_p1 );

    SC_METHOD(thread_tmp_85_fu_487_p2);
    sensitive << ( output_r_q0 );
    sensitive << ( tmp_84_reg_637 );

    SC_METHOD(thread_tmp_cast_fu_218_p1);
    sensitive << ( output_height );

    SC_METHOD(thread_tmp_fu_296_p2);
    sensitive << ( phi_mul_reg_148 );
    sensitive << ( tmp_108_cast_fu_292_p1 );

    SC_METHOD(thread_tmp_s_fu_272_p1);
    sensitive << ( out_d_reg_136 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond4_fu_244_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_281_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_315_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_340_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond_fu_412_p2 );

    ap_CS_fsm = "0000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "depthwise_conv2d_fix_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_height, "(port)input_height");
    sc_trace(mVcdFile, input_width, "(port)input_width");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_height, "(port)output_height");
    sc_trace(mVcdFile, output_width, "(port)output_width");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
    sc_trace(mVcdFile, bias_address0, "(port)bias_address0");
    sc_trace(mVcdFile, bias_ce0, "(port)bias_ce0");
    sc_trace(mVcdFile, bias_q0, "(port)bias_q0");
    sc_trace(mVcdFile, kernel_0_address0, "(port)kernel_0_address0");
    sc_trace(mVcdFile, kernel_0_ce0, "(port)kernel_0_ce0");
    sc_trace(mVcdFile, kernel_0_q0, "(port)kernel_0_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_cast_fu_218_p1, "tmp_cast_fu_218_p1");
    sc_trace(mVcdFile, tmp_cast_reg_517, "tmp_cast_reg_517");
    sc_trace(mVcdFile, tmp_100_cast_fu_222_p1, "tmp_100_cast_fu_222_p1");
    sc_trace(mVcdFile, tmp_100_cast_reg_522, "tmp_100_cast_reg_522");
    sc_trace(mVcdFile, tmp_101_cast_fu_226_p1, "tmp_101_cast_fu_226_p1");
    sc_trace(mVcdFile, tmp_101_cast_reg_527, "tmp_101_cast_reg_527");
    sc_trace(mVcdFile, tmp_102_cast_fu_230_p1, "tmp_102_cast_fu_230_p1");
    sc_trace(mVcdFile, tmp_102_cast_reg_532, "tmp_102_cast_reg_532");
    sc_trace(mVcdFile, next_mul3_fu_234_p2, "next_mul3_fu_234_p2");
    sc_trace(mVcdFile, next_mul3_reg_537, "next_mul3_reg_537");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_239_p2, "next_mul_fu_239_p2");
    sc_trace(mVcdFile, next_mul_reg_542, "next_mul_reg_542");
    sc_trace(mVcdFile, out_d_4_fu_250_p2, "out_d_4_fu_250_p2");
    sc_trace(mVcdFile, out_d_4_reg_550, "out_d_4_reg_550");
    sc_trace(mVcdFile, p_shl_cast_fu_268_p1, "p_shl_cast_fu_268_p1");
    sc_trace(mVcdFile, p_shl_cast_reg_555, "p_shl_cast_reg_555");
    sc_trace(mVcdFile, exitcond4_fu_244_p2, "exitcond4_fu_244_p2");
    sc_trace(mVcdFile, bias_addr_reg_560, "bias_addr_reg_560");
    sc_trace(mVcdFile, out_h_4_fu_286_p2, "out_h_4_fu_286_p2");
    sc_trace(mVcdFile, out_h_4_reg_568, "out_h_4_reg_568");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp1_fu_306_p2, "tmp1_fu_306_p2");
    sc_trace(mVcdFile, tmp1_reg_573, "tmp1_reg_573");
    sc_trace(mVcdFile, exitcond3_fu_281_p2, "exitcond3_fu_281_p2");
    sc_trace(mVcdFile, out_w_4_fu_320_p2, "out_w_4_fu_320_p2");
    sc_trace(mVcdFile, out_w_4_reg_581, "out_w_4_reg_581");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, output_addr_reg_586, "output_addr_reg_586");
    sc_trace(mVcdFile, exitcond2_fu_315_p2, "exitcond2_fu_315_p2");
    sc_trace(mVcdFile, k_h_1_fu_346_p2, "k_h_1_fu_346_p2");
    sc_trace(mVcdFile, k_h_1_reg_594, "k_h_1_reg_594");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp3_fu_402_p2, "tmp3_fu_402_p2");
    sc_trace(mVcdFile, tmp3_reg_599, "tmp3_reg_599");
    sc_trace(mVcdFile, exitcond1_fu_340_p2, "exitcond1_fu_340_p2");
    sc_trace(mVcdFile, tmp6_fu_407_p2, "tmp6_fu_407_p2");
    sc_trace(mVcdFile, tmp6_reg_604, "tmp6_reg_604");
    sc_trace(mVcdFile, k_w_1_fu_418_p2, "k_w_1_fu_418_p2");
    sc_trace(mVcdFile, k_w_1_reg_612, "k_w_1_reg_612");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, exitcond_fu_412_p2, "exitcond_fu_412_p2");
    sc_trace(mVcdFile, input_load_reg_627, "input_load_reg_627");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, kernel_0_load_reg_632, "kernel_0_load_reg_632");
    sc_trace(mVcdFile, tmp_84_reg_637, "tmp_84_reg_637");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, out_d_reg_136, "out_d_reg_136");
    sc_trace(mVcdFile, phi_mul_reg_148, "phi_mul_reg_148");
    sc_trace(mVcdFile, phi_mul2_reg_160, "phi_mul2_reg_160");
    sc_trace(mVcdFile, out_h_reg_172, "out_h_reg_172");
    sc_trace(mVcdFile, out_w_reg_184, "out_w_reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, k_h_reg_196, "k_h_reg_196");
    sc_trace(mVcdFile, k_w_reg_207, "k_w_reg_207");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_s_fu_272_p1, "tmp_s_fu_272_p1");
    sc_trace(mVcdFile, tmp_76_fu_335_p1, "tmp_76_fu_335_p1");
    sc_trace(mVcdFile, tmp_80_fu_443_p1, "tmp_80_fu_443_p1");
    sc_trace(mVcdFile, tmp_82_fu_467_p1, "tmp_82_fu_467_p1");
    sc_trace(mVcdFile, tmp_85_fu_487_p2, "tmp_85_fu_487_p2");
    sc_trace(mVcdFile, tmp_77_fu_493_p2, "tmp_77_fu_493_p2");
    sc_trace(mVcdFile, tmp_30_fu_256_p1, "tmp_30_fu_256_p1");
    sc_trace(mVcdFile, p_shl_fu_260_p3, "p_shl_fu_260_p3");
    sc_trace(mVcdFile, out_h_cast_fu_277_p1, "out_h_cast_fu_277_p1");
    sc_trace(mVcdFile, tmp_108_cast_fu_292_p1, "tmp_108_cast_fu_292_p1");
    sc_trace(mVcdFile, tmp_fu_296_p2, "tmp_fu_296_p2");
    sc_trace(mVcdFile, tmp1_fu_306_p0, "tmp1_fu_306_p0");
    sc_trace(mVcdFile, tmp1_fu_306_p1, "tmp1_fu_306_p1");
    sc_trace(mVcdFile, out_w_cast_fu_311_p1, "out_w_cast_fu_311_p1");
    sc_trace(mVcdFile, tmp_109_cast_fu_326_p1, "tmp_109_cast_fu_326_p1");
    sc_trace(mVcdFile, tmp_75_fu_330_p2, "tmp_75_fu_330_p2");
    sc_trace(mVcdFile, p_shl5_fu_360_p3, "p_shl5_fu_360_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_368_p1, "p_shl5_cast_fu_368_p1");
    sc_trace(mVcdFile, tmp_113_cast9_fu_352_p1, "tmp_113_cast9_fu_352_p1");
    sc_trace(mVcdFile, tmp_78_fu_372_p2, "tmp_78_fu_372_p2");
    sc_trace(mVcdFile, tmp_113_cast_fu_356_p1, "tmp_113_cast_fu_356_p1");
    sc_trace(mVcdFile, tmp4_fu_382_p2, "tmp4_fu_382_p2");
    sc_trace(mVcdFile, tmp4_cast_fu_388_p1, "tmp4_cast_fu_388_p1");
    sc_trace(mVcdFile, tmp2_fu_392_p2, "tmp2_fu_392_p2");
    sc_trace(mVcdFile, tmp3_fu_402_p0, "tmp3_fu_402_p0");
    sc_trace(mVcdFile, tmp3_fu_402_p1, "tmp3_fu_402_p1");
    sc_trace(mVcdFile, tmp_114_cast_fu_378_p1, "tmp_114_cast_fu_378_p1");
    sc_trace(mVcdFile, tmp_115_cast_fu_424_p1, "tmp_115_cast_fu_424_p1");
    sc_trace(mVcdFile, tmp5_fu_428_p2, "tmp5_fu_428_p2");
    sc_trace(mVcdFile, tmp5_cast_fu_434_p1, "tmp5_cast_fu_434_p1");
    sc_trace(mVcdFile, tmp_79_fu_438_p2, "tmp_79_fu_438_p2");
    sc_trace(mVcdFile, tmp7_fu_448_p2, "tmp7_fu_448_p2");
    sc_trace(mVcdFile, tmp7_cast_fu_454_p1, "tmp7_cast_fu_454_p1");
    sc_trace(mVcdFile, tmp_81_fu_458_p2, "tmp_81_fu_458_p2");
    sc_trace(mVcdFile, tmp_122_cast_fu_463_p1, "tmp_122_cast_fu_463_p1");
    sc_trace(mVcdFile, tmp_83_fu_500_p2, "tmp_83_fu_500_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp1_fu_306_p00, "tmp1_fu_306_p00");
    sc_trace(mVcdFile, tmp3_fu_402_p10, "tmp3_fu_402_p10");
#endif

    }
}

depthwise_conv2d_fix_1::~depthwise_conv2d_fix_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete network_mul_mul_16s_16s_30_1_1_U41;
}

void depthwise_conv2d_fix_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_412_p2.read(), ap_const_lv1_1))) {
        k_h_reg_196 = k_h_1_reg_594.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_315_p2.read()))) {
        k_h_reg_196 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_340_p2.read()))) {
        k_w_reg_207 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        k_w_reg_207 = k_w_1_reg_612.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_281_p2.read(), ap_const_lv1_1))) {
        out_d_reg_136 = out_d_4_reg_550.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_d_reg_136 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_315_p2.read(), ap_const_lv1_1))) {
        out_h_reg_172 = out_h_4_reg_568.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond4_fu_244_p2.read(), ap_const_lv1_0))) {
        out_h_reg_172 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_281_p2.read()))) {
        out_w_reg_184 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        out_w_reg_184 = out_w_4_reg_581.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_281_p2.read(), ap_const_lv1_1))) {
        phi_mul2_reg_160 = next_mul3_reg_537.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul2_reg_160 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_281_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_148 = next_mul_reg_542.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_148 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_244_p2.read(), ap_const_lv1_0))) {
        bias_addr_reg_560 =  (sc_lv<3>) (tmp_s_fu_272_p1.read());
        p_shl_cast_reg_555 = p_shl_cast_fu_268_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        input_load_reg_627 = input_r_q0.read();
        kernel_0_load_reg_632 = kernel_0_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        k_h_1_reg_594 = k_h_1_fu_346_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k_w_1_reg_612 = k_w_1_fu_418_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul3_reg_537 = next_mul3_fu_234_p2.read();
        next_mul_reg_542 = next_mul_fu_239_p2.read();
        out_d_4_reg_550 = out_d_4_fu_250_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_h_4_reg_568 = out_h_4_fu_286_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_w_4_reg_581 = out_w_4_fu_320_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_315_p2.read()))) {
        output_addr_reg_586 =  (sc_lv<14>) (tmp_76_fu_335_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_281_p2.read()))) {
        tmp1_reg_573 = tmp1_fu_306_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_340_p2.read()))) {
        tmp3_reg_599 = tmp3_fu_402_p2.read();
        tmp6_reg_604 = tmp6_fu_407_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_100_cast_reg_522 = tmp_100_cast_fu_222_p1.read();
        tmp_101_cast_reg_527 = tmp_101_cast_fu_226_p1.read();
        tmp_102_cast_reg_532 = tmp_102_cast_fu_230_p1.read();
        tmp_cast_reg_517 = tmp_cast_fu_218_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp_84_reg_637 = tmp_83_fu_500_p2.read().range(29, 14);
    }
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void depthwise_conv2d_fix_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void depthwise_conv2d_fix_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond4_fu_244_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void depthwise_conv2d_fix_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void depthwise_conv2d_fix_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond4_fu_244_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void depthwise_conv2d_fix_1::thread_bias_address0() {
    bias_address0 = bias_addr_reg_560.read();
}

void depthwise_conv2d_fix_1::thread_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        bias_ce0 = ap_const_logic_1;
    } else {
        bias_ce0 = ap_const_logic_0;
    }
}

void depthwise_conv2d_fix_1::thread_exitcond1_fu_340_p2() {
    exitcond1_fu_340_p2 = (!k_h_reg_196.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(k_h_reg_196.read() == ap_const_lv2_3);
}

void depthwise_conv2d_fix_1::thread_exitcond2_fu_315_p2() {
    exitcond2_fu_315_p2 = (!out_w_cast_fu_311_p1.read().is_01() || !output_width.read().is_01())? sc_lv<1>(): sc_lv<1>(out_w_cast_fu_311_p1.read() == output_width.read());
}

void depthwise_conv2d_fix_1::thread_exitcond3_fu_281_p2() {
    exitcond3_fu_281_p2 = (!out_h_cast_fu_277_p1.read().is_01() || !output_height.read().is_01())? sc_lv<1>(): sc_lv<1>(out_h_cast_fu_277_p1.read() == output_height.read());
}

void depthwise_conv2d_fix_1::thread_exitcond4_fu_244_p2() {
    exitcond4_fu_244_p2 = (!out_d_reg_136.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(out_d_reg_136.read() == ap_const_lv4_8);
}

void depthwise_conv2d_fix_1::thread_exitcond_fu_412_p2() {
    exitcond_fu_412_p2 = (!k_w_reg_207.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(k_w_reg_207.read() == ap_const_lv2_3);
}

void depthwise_conv2d_fix_1::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<14>) (tmp_80_fu_443_p1.read());
}

void depthwise_conv2d_fix_1::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void depthwise_conv2d_fix_1::thread_k_h_1_fu_346_p2() {
    k_h_1_fu_346_p2 = (!k_h_reg_196.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_h_reg_196.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void depthwise_conv2d_fix_1::thread_k_w_1_fu_418_p2() {
    k_w_1_fu_418_p2 = (!k_w_reg_207.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(k_w_reg_207.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void depthwise_conv2d_fix_1::thread_kernel_0_address0() {
    kernel_0_address0 =  (sc_lv<7>) (tmp_82_fu_467_p1.read());
}

void depthwise_conv2d_fix_1::thread_kernel_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        kernel_0_ce0 = ap_const_logic_1;
    } else {
        kernel_0_ce0 = ap_const_logic_0;
    }
}

void depthwise_conv2d_fix_1::thread_next_mul3_fu_234_p2() {
    next_mul3_fu_234_p2 = (!phi_mul2_reg_160.read().is_01() || !tmp_101_cast_reg_527.read().is_01())? sc_lv<7>(): (sc_biguint<7>(phi_mul2_reg_160.read()) + sc_biguint<7>(tmp_101_cast_reg_527.read()));
}

void depthwise_conv2d_fix_1::thread_next_mul_fu_239_p2() {
    next_mul_fu_239_p2 = (!phi_mul_reg_148.read().is_01() || !tmp_cast_reg_517.read().is_01())? sc_lv<7>(): (sc_biguint<7>(phi_mul_reg_148.read()) + sc_biguint<7>(tmp_cast_reg_517.read()));
}

void depthwise_conv2d_fix_1::thread_out_d_4_fu_250_p2() {
    out_d_4_fu_250_p2 = (!out_d_reg_136.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(out_d_reg_136.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void depthwise_conv2d_fix_1::thread_out_h_4_fu_286_p2() {
    out_h_4_fu_286_p2 = (!out_h_reg_172.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(out_h_reg_172.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void depthwise_conv2d_fix_1::thread_out_h_cast_fu_277_p1() {
    out_h_cast_fu_277_p1 = esl_zext<5,4>(out_h_reg_172.read());
}

void depthwise_conv2d_fix_1::thread_out_w_4_fu_320_p2() {
    out_w_4_fu_320_p2 = (!out_w_reg_184.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(out_w_reg_184.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void depthwise_conv2d_fix_1::thread_out_w_cast_fu_311_p1() {
    out_w_cast_fu_311_p1 = esl_zext<5,4>(out_w_reg_184.read());
}

void depthwise_conv2d_fix_1::thread_output_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_r_address0 = output_addr_reg_586.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_address0 =  (sc_lv<14>) (tmp_76_fu_335_p1.read());
    } else {
        output_r_address0 = "XXXXXXXXXXXXXX";
    }
}

void depthwise_conv2d_fix_1::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void depthwise_conv2d_fix_1::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        output_r_d0 = tmp_77_fu_493_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_d0 = tmp_85_fu_487_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_d0 = ap_const_lv16_0;
    } else {
        output_r_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void depthwise_conv2d_fix_1::thread_output_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_315_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void depthwise_conv2d_fix_1::thread_p_shl5_cast_fu_368_p1() {
    p_shl5_cast_fu_368_p1 = esl_zext<5,4>(p_shl5_fu_360_p3.read());
}

void depthwise_conv2d_fix_1::thread_p_shl5_fu_360_p3() {
    p_shl5_fu_360_p3 = esl_concat<2,2>(k_h_reg_196.read(), ap_const_lv2_0);
}

void depthwise_conv2d_fix_1::thread_p_shl_cast_fu_268_p1() {
    p_shl_cast_fu_268_p1 = esl_zext<8,6>(p_shl_fu_260_p3.read());
}

void depthwise_conv2d_fix_1::thread_p_shl_fu_260_p3() {
    p_shl_fu_260_p3 = esl_concat<3,3>(tmp_30_fu_256_p1.read(), ap_const_lv3_0);
}

void depthwise_conv2d_fix_1::thread_tmp1_fu_306_p0() {
    tmp1_fu_306_p0 =  (sc_lv<7>) (tmp1_fu_306_p00.read());
}

void depthwise_conv2d_fix_1::thread_tmp1_fu_306_p00() {
    tmp1_fu_306_p00 = esl_zext<11,7>(tmp_fu_296_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp1_fu_306_p1() {
    tmp1_fu_306_p1 =  (sc_lv<5>) (tmp_100_cast_reg_522.read());
}

void depthwise_conv2d_fix_1::thread_tmp1_fu_306_p2() {
    tmp1_fu_306_p2 = (!tmp1_fu_306_p0.read().is_01() || !tmp1_fu_306_p1.read().is_01())? sc_lv<11>(): sc_biguint<7>(tmp1_fu_306_p0.read()) * sc_biguint<5>(tmp1_fu_306_p1.read());
}

void depthwise_conv2d_fix_1::thread_tmp2_fu_392_p2() {
    tmp2_fu_392_p2 = (!phi_mul2_reg_160.read().is_01() || !tmp4_cast_fu_388_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(phi_mul2_reg_160.read()) + sc_biguint<7>(tmp4_cast_fu_388_p1.read()));
}

void depthwise_conv2d_fix_1::thread_tmp3_fu_402_p0() {
    tmp3_fu_402_p0 =  (sc_lv<6>) (tmp_102_cast_reg_532.read());
}

void depthwise_conv2d_fix_1::thread_tmp3_fu_402_p1() {
    tmp3_fu_402_p1 =  (sc_lv<7>) (tmp3_fu_402_p10.read());
}

void depthwise_conv2d_fix_1::thread_tmp3_fu_402_p10() {
    tmp3_fu_402_p10 = esl_zext<11,7>(tmp2_fu_392_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp3_fu_402_p2() {
    tmp3_fu_402_p2 = (!tmp3_fu_402_p0.read().is_01() || !tmp3_fu_402_p1.read().is_01())? sc_lv<11>(): sc_biguint<6>(tmp3_fu_402_p0.read()) * sc_biguint<7>(tmp3_fu_402_p1.read());
}

void depthwise_conv2d_fix_1::thread_tmp4_cast_fu_388_p1() {
    tmp4_cast_fu_388_p1 = esl_zext<7,4>(tmp4_fu_382_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp4_fu_382_p2() {
    tmp4_fu_382_p2 = (!tmp_113_cast_fu_356_p1.read().is_01() || !out_h_reg_172.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_113_cast_fu_356_p1.read()) + sc_biguint<4>(out_h_reg_172.read()));
}

void depthwise_conv2d_fix_1::thread_tmp5_cast_fu_434_p1() {
    tmp5_cast_fu_434_p1 = esl_zext<11,4>(tmp5_fu_428_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp5_fu_428_p2() {
    tmp5_fu_428_p2 = (!tmp_115_cast_fu_424_p1.read().is_01() || !out_w_reg_184.read().is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_115_cast_fu_424_p1.read()) + sc_biguint<4>(out_w_reg_184.read()));
}

void depthwise_conv2d_fix_1::thread_tmp6_fu_407_p2() {
    tmp6_fu_407_p2 = (!tmp_114_cast_fu_378_p1.read().is_01() || !p_shl_cast_reg_555.read().is_01())? sc_lv<8>(): (sc_bigint<8>(tmp_114_cast_fu_378_p1.read()) + sc_biguint<8>(p_shl_cast_reg_555.read()));
}

void depthwise_conv2d_fix_1::thread_tmp7_cast_fu_454_p1() {
    tmp7_cast_fu_454_p1 = esl_zext<8,4>(tmp7_fu_448_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp7_fu_448_p2() {
    tmp7_fu_448_p2 = (!out_d_reg_136.read().is_01() || !tmp_115_cast_fu_424_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(out_d_reg_136.read()) + sc_biguint<4>(tmp_115_cast_fu_424_p1.read()));
}

void depthwise_conv2d_fix_1::thread_tmp_100_cast_fu_222_p1() {
    tmp_100_cast_fu_222_p1 = esl_zext<11,5>(output_width.read());
}

void depthwise_conv2d_fix_1::thread_tmp_101_cast_fu_226_p1() {
    tmp_101_cast_fu_226_p1 = esl_zext<7,6>(input_height.read());
}

void depthwise_conv2d_fix_1::thread_tmp_102_cast_fu_230_p1() {
    tmp_102_cast_fu_230_p1 = esl_zext<11,6>(input_width.read());
}

void depthwise_conv2d_fix_1::thread_tmp_108_cast_fu_292_p1() {
    tmp_108_cast_fu_292_p1 = esl_zext<7,4>(out_h_reg_172.read());
}

void depthwise_conv2d_fix_1::thread_tmp_109_cast_fu_326_p1() {
    tmp_109_cast_fu_326_p1 = esl_zext<11,4>(out_w_reg_184.read());
}

void depthwise_conv2d_fix_1::thread_tmp_113_cast9_fu_352_p1() {
    tmp_113_cast9_fu_352_p1 = esl_zext<5,2>(k_h_reg_196.read());
}

void depthwise_conv2d_fix_1::thread_tmp_113_cast_fu_356_p1() {
    tmp_113_cast_fu_356_p1 = esl_zext<4,2>(k_h_reg_196.read());
}

void depthwise_conv2d_fix_1::thread_tmp_114_cast_fu_378_p1() {
    tmp_114_cast_fu_378_p1 = esl_sext<8,5>(tmp_78_fu_372_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp_115_cast_fu_424_p1() {
    tmp_115_cast_fu_424_p1 = esl_zext<4,2>(k_w_reg_207.read());
}

void depthwise_conv2d_fix_1::thread_tmp_122_cast_fu_463_p1() {
    tmp_122_cast_fu_463_p1 = esl_sext<32,8>(tmp_81_fu_458_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp_30_fu_256_p1() {
    tmp_30_fu_256_p1 = out_d_reg_136.read().range(3-1, 0);
}

void depthwise_conv2d_fix_1::thread_tmp_75_fu_330_p2() {
    tmp_75_fu_330_p2 = (!tmp1_reg_573.read().is_01() || !tmp_109_cast_fu_326_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp1_reg_573.read()) + sc_biguint<11>(tmp_109_cast_fu_326_p1.read()));
}

void depthwise_conv2d_fix_1::thread_tmp_76_fu_335_p1() {
    tmp_76_fu_335_p1 = esl_zext<64,11>(tmp_75_fu_330_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp_77_fu_493_p2() {
    tmp_77_fu_493_p2 = (!output_r_q0.read().is_01() || !bias_q0.read().is_01())? sc_lv<16>(): (sc_biguint<16>(output_r_q0.read()) + sc_biguint<16>(bias_q0.read()));
}

void depthwise_conv2d_fix_1::thread_tmp_78_fu_372_p2() {
    tmp_78_fu_372_p2 = (!p_shl5_cast_fu_368_p1.read().is_01() || !tmp_113_cast9_fu_352_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl5_cast_fu_368_p1.read()) - sc_biguint<5>(tmp_113_cast9_fu_352_p1.read()));
}

void depthwise_conv2d_fix_1::thread_tmp_79_fu_438_p2() {
    tmp_79_fu_438_p2 = (!tmp5_cast_fu_434_p1.read().is_01() || !tmp3_reg_599.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp5_cast_fu_434_p1.read()) + sc_biguint<11>(tmp3_reg_599.read()));
}

void depthwise_conv2d_fix_1::thread_tmp_80_fu_443_p1() {
    tmp_80_fu_443_p1 = esl_zext<64,11>(tmp_79_fu_438_p2.read());
}

void depthwise_conv2d_fix_1::thread_tmp_81_fu_458_p2() {
    tmp_81_fu_458_p2 = (!tmp7_cast_fu_454_p1.read().is_01() || !tmp6_reg_604.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp7_cast_fu_454_p1.read()) + sc_biguint<8>(tmp6_reg_604.read()));
}

void depthwise_conv2d_fix_1::thread_tmp_82_fu_467_p1() {
    tmp_82_fu_467_p1 = esl_zext<64,32>(tmp_122_cast_fu_463_p1.read());
}

void depthwise_conv2d_fix_1::thread_tmp_85_fu_487_p2() {
    tmp_85_fu_487_p2 = (!output_r_q0.read().is_01() || !tmp_84_reg_637.read().is_01())? sc_lv<16>(): (sc_biguint<16>(output_r_q0.read()) + sc_biguint<16>(tmp_84_reg_637.read()));
}

void depthwise_conv2d_fix_1::thread_tmp_cast_fu_218_p1() {
    tmp_cast_fu_218_p1 = esl_zext<7,5>(output_height.read());
}

void depthwise_conv2d_fix_1::thread_tmp_fu_296_p2() {
    tmp_fu_296_p2 = (!phi_mul_reg_148.read().is_01() || !tmp_108_cast_fu_292_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(phi_mul_reg_148.read()) + sc_biguint<7>(tmp_108_cast_fu_292_p1.read()));
}

void depthwise_conv2d_fix_1::thread_tmp_s_fu_272_p1() {
    tmp_s_fu_272_p1 = esl_zext<64,4>(out_d_reg_136.read());
}

void depthwise_conv2d_fix_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond4_fu_244_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_281_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_315_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_340_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond_fu_412_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

