// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _padding2d_fix16_3_HH_
#define _padding2d_fix16_3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mul_mul_16ns_16ns_32_1_1.h"

namespace ap_rtl {

struct padding2d_fix16_3 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > input_depth;
    sc_in< sc_lv<16> > input_height;
    sc_in< sc_lv<16> > input_width;
    sc_out< sc_lv<12> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<16> > output_height;
    sc_in< sc_lv<16> > output_width;
    sc_out< sc_lv<12> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    padding2d_fix16_3(sc_module_name name);
    SC_HAS_PROCESS(padding2d_fix16_3);

    ~padding2d_fix16_3();

    sc_trace_file* mVcdFile;

    network_mul_mul_16ns_16ns_32_1_1<1,1,16,16,32>* network_mul_mul_16ns_16ns_32_1_1_U34;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > tmp_s_fu_226_p1;
    sc_signal< sc_lv<32> > tmp_s_reg_532;
    sc_signal< sc_lv<17> > tmp_15_fu_234_p2;
    sc_signal< sc_lv<17> > tmp_15_reg_537;
    sc_signal< sc_lv<32> > tmp_16_fu_240_p1;
    sc_signal< sc_lv<32> > tmp_16_reg_544;
    sc_signal< sc_lv<32> > tmp_17_fu_244_p1;
    sc_signal< sc_lv<32> > tmp_17_reg_549;
    sc_signal< sc_lv<32> > tmp_18_fu_248_p1;
    sc_signal< sc_lv<32> > tmp_18_reg_556;
    sc_signal< sc_lv<17> > tmp_19_fu_256_p2;
    sc_signal< sc_lv<17> > tmp_19_reg_561;
    sc_signal< sc_lv<17> > tmp_20_fu_262_p2;
    sc_signal< sc_lv<17> > tmp_20_reg_566;
    sc_signal< sc_lv<17> > tmp_21_fu_268_p2;
    sc_signal< sc_lv<17> > tmp_21_reg_571;
    sc_signal< sc_lv<32> > next_mul3_fu_274_p2;
    sc_signal< sc_lv<32> > next_mul3_reg_576;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > next_mul_fu_279_p2;
    sc_signal< sc_lv<32> > next_mul_reg_581;
    sc_signal< sc_lv<16> > depth_1_fu_289_p2;
    sc_signal< sc_lv<16> > depth_1_reg_589;
    sc_signal< sc_lv<32> > tmp_24_fu_295_p2;
    sc_signal< sc_lv<32> > tmp_24_reg_594;
    sc_signal< sc_lv<1> > exitcond2_fu_284_p2;
    sc_signal< sc_lv<16> > width_1_fu_313_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > tmp_31_fu_342_p2;
    sc_signal< sc_lv<32> > tmp_31_reg_611;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_29_fu_337_p2;
    sc_signal< sc_lv<32> > tmp_fu_358_p2;
    sc_signal< sc_lv<32> > tmp_reg_616;
    sc_signal< sc_lv<32> > tmp_32_fu_364_p2;
    sc_signal< sc_lv<32> > tmp_32_reg_621;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > tmp3_fu_368_p2;
    sc_signal< sc_lv<32> > tmp3_reg_628;
    sc_signal< sc_lv<32> > tmp_34_fu_376_p1;
    sc_signal< sc_lv<32> > tmp_34_reg_633;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > tmp_35_fu_384_p2;
    sc_signal< sc_lv<16> > width_3_fu_409_p2;
    sc_signal< sc_lv<16> > width_3_reg_646;
    sc_signal< sc_lv<16> > width_5_fu_424_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<16> > height_2_fu_453_p2;
    sc_signal< sc_lv<1> > tmp_44_fu_438_p2;
    sc_signal< sc_lv<16> > height_fu_459_p2;
    sc_signal< sc_lv<16> > height_reg_664;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > tmp_42_fu_512_p2;
    sc_signal< sc_lv<32> > tmp_42_reg_672;
    sc_signal< sc_lv<1> > tmp_37_fu_473_p2;
    sc_signal< sc_lv<16> > width_4_fu_491_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<16> > depth_reg_128;
    sc_signal< sc_lv<32> > phi_mul_reg_139;
    sc_signal< sc_lv<32> > phi_mul2_reg_151;
    sc_signal< sc_lv<16> > width_reg_163;
    sc_signal< sc_lv<1> > tmp_26_fu_308_p2;
    sc_signal< sc_lv<16> > height1_reg_174;
    sc_signal< sc_lv<16> > width3_reg_186;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > width4_0_in_reg_197;
    sc_signal< sc_lv<16> > height5_0_in_reg_206;
    sc_signal< sc_lv<1> > tmp_46_fu_486_p2;
    sc_signal< sc_lv<16> > width6_reg_215;
    sc_signal< sc_lv<64> > tmp_30_fu_324_p1;
    sc_signal< sc_lv<64> > tmp_33_fu_372_p1;
    sc_signal< sc_lv<64> > tmp_39_fu_404_p1;
    sc_signal< sc_lv<64> > tmp_41_fu_419_p1;
    sc_signal< sc_lv<64> > tmp_48_fu_448_p1;
    sc_signal< sc_lv<64> > tmp_50_fu_507_p1;
    sc_signal< sc_lv<17> > tmp_cast_fu_230_p1;
    sc_signal< sc_lv<17> > tmp_18_cast_fu_252_p1;
    sc_signal< sc_lv<16> > tmp_24_fu_295_p1;
    sc_signal< sc_lv<17> > tmp_30_cast_fu_304_p1;
    sc_signal< sc_lv<32> > tmp_25_fu_300_p1;
    sc_signal< sc_lv<32> > tmp_27_fu_319_p2;
    sc_signal< sc_lv<17> > tmp_28_cast_fu_333_p1;
    sc_signal< sc_lv<32> > tmp_28_fu_329_p1;
    sc_signal< sc_lv<17> > tmp2_fu_348_p2;
    sc_signal< sc_lv<32> > tmp2_cast_fu_354_p1;
    sc_signal< sc_lv<16> > tmp_32_fu_364_p0;
    sc_signal< sc_lv<16> > tmp3_fu_368_p1;
    sc_signal< sc_lv<17> > tmp_43_cast_fu_380_p1;
    sc_signal< sc_lv<17> > tmp4_fu_389_p2;
    sc_signal< sc_lv<32> > tmp4_cast_fu_395_p1;
    sc_signal< sc_lv<32> > tmp_38_fu_399_p2;
    sc_signal< sc_lv<32> > tmp_40_fu_415_p2;
    sc_signal< sc_lv<17> > tmp_56_cast_fu_434_p1;
    sc_signal< sc_lv<32> > tmp_43_fu_430_p1;
    sc_signal< sc_lv<32> > tmp_47_fu_443_p2;
    sc_signal< sc_lv<17> > tmp_37_cast_fu_469_p1;
    sc_signal< sc_lv<17> > tmp_45_cast_fu_482_p1;
    sc_signal< sc_lv<32> > tmp_45_fu_478_p1;
    sc_signal< sc_lv<32> > tmp5_fu_497_p2;
    sc_signal< sc_lv<32> > tmp_49_fu_502_p2;
    sc_signal< sc_lv<16> > tmp_42_fu_512_p0;
    sc_signal< sc_lv<16> > tmp_42_fu_512_p1;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< sc_lv<32> > tmp_42_fu_512_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<17> ap_const_lv17_2;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<17> ap_const_lv17_1FFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_depth_1_fu_289_p2();
    void thread_exitcond2_fu_284_p2();
    void thread_height_2_fu_453_p2();
    void thread_height_fu_459_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_next_mul3_fu_274_p2();
    void thread_next_mul_fu_279_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_tmp2_cast_fu_354_p1();
    void thread_tmp2_fu_348_p2();
    void thread_tmp3_fu_368_p1();
    void thread_tmp3_fu_368_p2();
    void thread_tmp4_cast_fu_395_p1();
    void thread_tmp4_fu_389_p2();
    void thread_tmp5_fu_497_p2();
    void thread_tmp_15_fu_234_p2();
    void thread_tmp_16_fu_240_p1();
    void thread_tmp_17_fu_244_p1();
    void thread_tmp_18_cast_fu_252_p1();
    void thread_tmp_18_fu_248_p1();
    void thread_tmp_19_fu_256_p2();
    void thread_tmp_20_fu_262_p2();
    void thread_tmp_21_fu_268_p2();
    void thread_tmp_24_fu_295_p1();
    void thread_tmp_24_fu_295_p2();
    void thread_tmp_25_fu_300_p1();
    void thread_tmp_26_fu_308_p2();
    void thread_tmp_27_fu_319_p2();
    void thread_tmp_28_cast_fu_333_p1();
    void thread_tmp_28_fu_329_p1();
    void thread_tmp_29_fu_337_p2();
    void thread_tmp_30_cast_fu_304_p1();
    void thread_tmp_30_fu_324_p1();
    void thread_tmp_31_fu_342_p2();
    void thread_tmp_32_fu_364_p0();
    void thread_tmp_32_fu_364_p2();
    void thread_tmp_33_fu_372_p1();
    void thread_tmp_34_fu_376_p1();
    void thread_tmp_35_fu_384_p2();
    void thread_tmp_37_cast_fu_469_p1();
    void thread_tmp_37_fu_473_p2();
    void thread_tmp_38_fu_399_p2();
    void thread_tmp_39_fu_404_p1();
    void thread_tmp_40_fu_415_p2();
    void thread_tmp_41_fu_419_p1();
    void thread_tmp_42_fu_512_p0();
    void thread_tmp_42_fu_512_p00();
    void thread_tmp_42_fu_512_p1();
    void thread_tmp_43_cast_fu_380_p1();
    void thread_tmp_43_fu_430_p1();
    void thread_tmp_44_fu_438_p2();
    void thread_tmp_45_cast_fu_482_p1();
    void thread_tmp_45_fu_478_p1();
    void thread_tmp_46_fu_486_p2();
    void thread_tmp_47_fu_443_p2();
    void thread_tmp_48_fu_448_p1();
    void thread_tmp_49_fu_502_p2();
    void thread_tmp_50_fu_507_p1();
    void thread_tmp_56_cast_fu_434_p1();
    void thread_tmp_cast_fu_230_p1();
    void thread_tmp_fu_358_p2();
    void thread_tmp_s_fu_226_p1();
    void thread_width_1_fu_313_p2();
    void thread_width_3_fu_409_p2();
    void thread_width_4_fu_491_p2();
    void thread_width_5_fu_424_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
