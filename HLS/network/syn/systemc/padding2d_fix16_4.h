// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _padding2d_fix16_4_HH_
#define _padding2d_fix16_4_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct padding2d_fix16_4 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<16> > input_0_q0;
    sc_out< sc_lv<10> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    padding2d_fix16_4(sc_module_name name);
    SC_HAS_PROCESS(padding2d_fix16_4);

    ~padding2d_fix16_4();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > indvars_iv9_cast8_fu_293_p1;
    sc_signal< sc_lv<10> > indvars_iv9_cast8_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > indvars_iv1_cast_fu_297_p1;
    sc_signal< sc_lv<10> > indvars_iv1_cast_reg_493;
    sc_signal< sc_lv<10> > indvars_iv_cast_fu_301_p1;
    sc_signal< sc_lv<10> > indvars_iv_cast_reg_498;
    sc_signal< sc_lv<9> > o_count_cast6_fu_305_p1;
    sc_signal< sc_lv<9> > o_count_cast6_reg_503;
    sc_signal< sc_lv<10> > i_count_cast_fu_309_p1;
    sc_signal< sc_lv<10> > i_count_cast_reg_508;
    sc_signal< sc_lv<11> > indvars_iv9_cast_fu_313_p1;
    sc_signal< sc_lv<11> > indvars_iv9_cast_reg_513;
    sc_signal< sc_lv<5> > tmp_fu_317_p1;
    sc_signal< sc_lv<5> > tmp_38_fu_335_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond2_fu_325_p2;
    sc_signal< sc_lv<9> > i_count_3_fu_341_p2;
    sc_signal< sc_lv<9> > i_count_3_reg_531;
    sc_signal< sc_lv<10> > tmp_cast_fu_352_p1;
    sc_signal< sc_lv<10> > tmp_cast_reg_536;
    sc_signal< sc_lv<5> > height_1_fu_362_p2;
    sc_signal< sc_lv<5> > height_1_reg_544;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > tmp_40_fu_368_p2;
    sc_signal< sc_lv<10> > tmp_40_reg_549;
    sc_signal< sc_lv<1> > exitcond7_fu_356_p2;
    sc_signal< sc_lv<8> > tmp_39_fu_374_p2;
    sc_signal< sc_lv<8> > tmp_39_reg_554;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_380_p2;
    sc_signal< sc_lv<10> > tmp_45_fu_391_p2;
    sc_signal< sc_lv<10> > tmp_45_reg_567;
    sc_signal< sc_lv<10> > tmp_42_fu_397_p2;
    sc_signal< sc_lv<10> > tmp_42_reg_572;
    sc_signal< sc_lv<10> > o_count_8_fu_408_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<10> > o_count_9_fu_425_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > exitcond5_fu_414_p2;
    sc_signal< sc_lv<10> > indvars_iv_next5_fu_431_p2;
    sc_signal< sc_lv<10> > indvars_iv_next4_fu_437_p2;
    sc_signal< sc_lv<10> > o_count_7_fu_458_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > exitcond8_fu_447_p2;
    sc_signal< sc_lv<8> > indvars_iv_next_fu_464_p2;
    sc_signal< sc_lv<8> > indvars_iv_next1_fu_470_p2;
    sc_signal< sc_lv<7> > indvars_iv_next2_fu_476_p2;
    sc_signal< sc_lv<11> > indvars_iv_next6_fu_482_p2;
    sc_signal< sc_lv<8> > indvars_iv9_reg_108;
    sc_signal< sc_lv<11> > indvars_iv4_reg_120;
    sc_signal< sc_lv<7> > indvars_iv1_reg_132;
    sc_signal< sc_lv<8> > indvars_iv_reg_144;
    sc_signal< sc_lv<8> > o_count_reg_156;
    sc_signal< sc_lv<9> > i_count_reg_168;
    sc_signal< sc_lv<1> > ap_phi_mux_depth_phi_fu_185_p4;
    sc_signal< sc_lv<1> > depth_reg_180;
    sc_signal< sc_lv<5> > o_count_1_reg_193;
    sc_signal< sc_lv<10> > indvars_iv3_reg_202;
    sc_signal< sc_lv<10> > o_count_6_reg_212;
    sc_signal< sc_lv<10> > o_count_2_reg_222;
    sc_signal< sc_lv<10> > i_count_1_reg_232;
    sc_signal< sc_lv<5> > height_reg_242;
    sc_signal< sc_lv<10> > o_count_3_reg_253;
    sc_signal< sc_lv<10> > i_count_2_reg_264;
    sc_signal< sc_lv<10> > o_count_4_reg_274;
    sc_signal< sc_lv<10> > o_count_5_reg_284;
    sc_signal< sc_lv<64> > tmp_37_fu_330_p1;
    sc_signal< sc_lv<64> > tmp_43_fu_386_p1;
    sc_signal< sc_lv<64> > tmp_44_fu_403_p1;
    sc_signal< sc_lv<64> > tmp_46_fu_420_p1;
    sc_signal< sc_lv<64> > tmp_41_fu_453_p1;
    sc_signal< sc_lv<11> > o_count_1_cast_fu_321_p1;
    sc_signal< sc_lv<9> > tmp_s_fu_347_p2;
    sc_signal< sc_lv<11> > o_count_5_cast_cast_fu_443_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_1F;
    static const sc_lv<11> ap_const_lv11_384;
    static const sc_lv<7> ap_const_lv7_3D;
    static const sc_lv<8> ap_const_lv8_3B;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<9> ap_const_lv9_110;
    static const sc_lv<9> ap_const_lv9_167;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<10> ap_const_lv10_1C;
    static const sc_lv<8> ap_const_lv8_84;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_1E;
    static const sc_lv<7> ap_const_lv7_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_depth_phi_fu_185_p4();
    void thread_ap_ready();
    void thread_exitcond2_fu_325_p2();
    void thread_exitcond5_fu_414_p2();
    void thread_exitcond7_fu_356_p2();
    void thread_exitcond8_fu_447_p2();
    void thread_exitcond_fu_380_p2();
    void thread_height_1_fu_362_p2();
    void thread_i_count_3_fu_341_p2();
    void thread_i_count_cast_fu_309_p1();
    void thread_indvars_iv1_cast_fu_297_p1();
    void thread_indvars_iv9_cast8_fu_293_p1();
    void thread_indvars_iv9_cast_fu_313_p1();
    void thread_indvars_iv_cast_fu_301_p1();
    void thread_indvars_iv_next1_fu_470_p2();
    void thread_indvars_iv_next2_fu_476_p2();
    void thread_indvars_iv_next4_fu_437_p2();
    void thread_indvars_iv_next5_fu_431_p2();
    void thread_indvars_iv_next6_fu_482_p2();
    void thread_indvars_iv_next_fu_464_p2();
    void thread_input_0_address0();
    void thread_input_0_ce0();
    void thread_o_count_1_cast_fu_321_p1();
    void thread_o_count_5_cast_cast_fu_443_p1();
    void thread_o_count_7_fu_458_p2();
    void thread_o_count_8_fu_408_p2();
    void thread_o_count_9_fu_425_p2();
    void thread_o_count_cast6_fu_305_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_tmp_37_fu_330_p1();
    void thread_tmp_38_fu_335_p2();
    void thread_tmp_39_fu_374_p2();
    void thread_tmp_40_fu_368_p2();
    void thread_tmp_41_fu_453_p1();
    void thread_tmp_42_fu_397_p2();
    void thread_tmp_43_fu_386_p1();
    void thread_tmp_44_fu_403_p1();
    void thread_tmp_45_fu_391_p2();
    void thread_tmp_46_fu_420_p1();
    void thread_tmp_cast_fu_352_p1();
    void thread_tmp_fu_317_p1();
    void thread_tmp_s_fu_347_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
