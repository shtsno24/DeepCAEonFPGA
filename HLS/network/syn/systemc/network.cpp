// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "network.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic network::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic network::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> network::ap_ST_fsm_state1 = "1";
const sc_lv<11> network::ap_ST_fsm_state2 = "10";
const sc_lv<11> network::ap_ST_fsm_state3 = "100";
const sc_lv<11> network::ap_ST_fsm_state4 = "1000";
const sc_lv<11> network::ap_ST_fsm_state5 = "10000";
const sc_lv<11> network::ap_ST_fsm_state6 = "100000";
const sc_lv<11> network::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> network::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> network::ap_ST_fsm_pp0_stage0 = "100000000";
const sc_lv<11> network::ap_ST_fsm_state12 = "1000000000";
const sc_lv<11> network::ap_ST_fsm_state13 = "10000000000";
const sc_lv<32> network::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool network::ap_const_boolean_1 = true;
const sc_lv<1> network::ap_const_lv1_0 = "0";
const sc_lv<1> network::ap_const_lv1_1 = "1";
const sc_lv<2> network::ap_const_lv2_0 = "00";
const sc_lv<2> network::ap_const_lv2_2 = "10";
const sc_lv<2> network::ap_const_lv2_3 = "11";
const sc_lv<2> network::ap_const_lv2_1 = "1";
const sc_lv<32> network::ap_const_lv32_2 = "10";
const sc_lv<32> network::ap_const_lv32_8 = "1000";
const bool network::ap_const_boolean_0 = false;
const int network::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> network::ap_const_lv32_1 = "1";
const sc_lv<32> network::ap_const_lv32_4 = "100";
const sc_lv<32> network::ap_const_lv32_6 = "110";
const sc_lv<32> network::ap_const_lv32_7 = "111";
const sc_lv<10> network::ap_const_lv10_0 = "0000000000";
const sc_lv<48> network::ap_const_lv48_0 = "000000000000000000000000000000000000000000000000";
const sc_lv<32> network::ap_const_lv32_5 = "101";
const sc_lv<32> network::ap_const_lv32_3 = "11";
const sc_lv<10> network::ap_const_lv10_310 = "1100010000";
const sc_lv<10> network::ap_const_lv10_1 = "1";
const sc_lv<49> network::ap_const_lv49_1FFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111";
const sc_lv<48> network::ap_const_lv48_1 = "1";
const sc_lv<32> network::ap_const_lv32_A = "1010";

network::network(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Padding2D_0_array_U = new network_Padding2D_0_array("Padding2D_0_array_U");
    Padding2D_0_array_U->clk(ap_clk);
    Padding2D_0_array_U->reset(ap_rst_n_inv);
    Padding2D_0_array_U->address0(Padding2D_0_array_address0);
    Padding2D_0_array_U->ce0(Padding2D_0_array_ce0);
    Padding2D_0_array_U->we0(Padding2D_0_array_we0);
    Padding2D_0_array_U->d0(grp_padding2d_fix16_fu_244_output_r_d0);
    Padding2D_0_array_U->q0(Padding2D_0_array_q0);
    SeparableConv2D_0_m_s_U = new network_SeparableConv2D_0_m_s("SeparableConv2D_0_m_s_U");
    SeparableConv2D_0_m_s_U->clk(ap_clk);
    SeparableConv2D_0_m_s_U->reset(ap_rst_n_inv);
    SeparableConv2D_0_m_s_U->address0(SeparableConv2D_0_m_s_address0);
    SeparableConv2D_0_m_s_U->ce0(SeparableConv2D_0_m_s_ce0);
    SeparableConv2D_0_m_s_U->we0(SeparableConv2D_0_m_s_we0);
    SeparableConv2D_0_m_s_U->d0(grp_depthwise_conv2d_fix_fu_215_output_r_d0);
    SeparableConv2D_0_m_s_U->q0(SeparableConv2D_0_m_s_q0);
    network_AXILiteS_s_axi_U = new network_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("network_AXILiteS_s_axi_U");
    network_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    network_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    network_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    network_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    network_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    network_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    network_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    network_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    network_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    network_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    network_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    network_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    network_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    network_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    network_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    network_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    network_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    network_AXILiteS_s_axi_U->ACLK(ap_clk);
    network_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    network_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    network_AXILiteS_s_axi_U->ap_start(ap_start);
    network_AXILiteS_s_axi_U->interrupt(interrupt);
    network_AXILiteS_s_axi_U->ap_ready(ap_ready);
    network_AXILiteS_s_axi_U->ap_done(ap_done);
    network_AXILiteS_s_axi_U->ap_idle(ap_idle);
    input_0_array_U = new network_input_0_array("input_0_array_U");
    input_0_array_U->clk(ap_clk);
    input_0_array_U->reset(ap_rst_n_inv);
    input_0_array_U->address0(input_0_array_address0);
    input_0_array_U->ce0(input_0_array_ce0);
    input_0_array_U->we0(input_0_array_we0);
    input_0_array_U->d0(input_data_V_data_V_0_data_out);
    input_0_array_U->q0(input_0_array_q0);
    grp_depthwise_conv2d_fix_fu_215 = new depthwise_conv2d_fix("grp_depthwise_conv2d_fix_fu_215");
    grp_depthwise_conv2d_fix_fu_215->ap_clk(ap_clk);
    grp_depthwise_conv2d_fix_fu_215->ap_rst(ap_rst_n_inv);
    grp_depthwise_conv2d_fix_fu_215->ap_start(grp_depthwise_conv2d_fix_fu_215_ap_start);
    grp_depthwise_conv2d_fix_fu_215->ap_done(grp_depthwise_conv2d_fix_fu_215_ap_done);
    grp_depthwise_conv2d_fix_fu_215->ap_idle(grp_depthwise_conv2d_fix_fu_215_ap_idle);
    grp_depthwise_conv2d_fix_fu_215->ap_ready(grp_depthwise_conv2d_fix_fu_215_ap_ready);
    grp_depthwise_conv2d_fix_fu_215->input_height(Padding2D_0_height);
    grp_depthwise_conv2d_fix_fu_215->input_width(Padding2D_0_width);
    grp_depthwise_conv2d_fix_fu_215->input_r_address0(grp_depthwise_conv2d_fix_fu_215_input_r_address0);
    grp_depthwise_conv2d_fix_fu_215->input_r_ce0(grp_depthwise_conv2d_fix_fu_215_input_r_ce0);
    grp_depthwise_conv2d_fix_fu_215->input_r_q0(Padding2D_0_array_q0);
    grp_depthwise_conv2d_fix_fu_215->output_depth(Padding2D_0_depth);
    grp_depthwise_conv2d_fix_fu_215->output_height(SeparableConv2D_0_he);
    grp_depthwise_conv2d_fix_fu_215->output_width(SeparableConv2D_0_wi);
    grp_depthwise_conv2d_fix_fu_215->output_r_address0(grp_depthwise_conv2d_fix_fu_215_output_r_address0);
    grp_depthwise_conv2d_fix_fu_215->output_r_ce0(grp_depthwise_conv2d_fix_fu_215_output_r_ce0);
    grp_depthwise_conv2d_fix_fu_215->output_r_we0(grp_depthwise_conv2d_fix_fu_215_output_r_we0);
    grp_depthwise_conv2d_fix_fu_215->output_r_d0(grp_depthwise_conv2d_fix_fu_215_output_r_d0);
    grp_depthwise_conv2d_fix_fu_215->output_r_q0(SeparableConv2D_0_m_s_q0);
    grp_pointwise_conv2d_fix_fu_230 = new pointwise_conv2d_fix("grp_pointwise_conv2d_fix_fu_230");
    grp_pointwise_conv2d_fix_fu_230->ap_clk(ap_clk);
    grp_pointwise_conv2d_fix_fu_230->ap_rst(ap_rst_n_inv);
    grp_pointwise_conv2d_fix_fu_230->ap_start(grp_pointwise_conv2d_fix_fu_230_ap_start);
    grp_pointwise_conv2d_fix_fu_230->ap_done(grp_pointwise_conv2d_fix_fu_230_ap_done);
    grp_pointwise_conv2d_fix_fu_230->ap_idle(grp_pointwise_conv2d_fix_fu_230_ap_idle);
    grp_pointwise_conv2d_fix_fu_230->ap_ready(grp_pointwise_conv2d_fix_fu_230_ap_ready);
    grp_pointwise_conv2d_fix_fu_230->input_depth(Padding2D_0_depth);
    grp_pointwise_conv2d_fix_fu_230->input_height(SeparableConv2D_0_he);
    grp_pointwise_conv2d_fix_fu_230->input_width(SeparableConv2D_0_wi);
    grp_pointwise_conv2d_fix_fu_230->output_depth(SeparableConv2D_0_de);
    grp_pointwise_conv2d_fix_fu_230->SeparableConv2D_0_m_s_address0(grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_address0);
    grp_pointwise_conv2d_fix_fu_230->SeparableConv2D_0_m_s_ce0(grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_ce0);
    grp_pointwise_conv2d_fix_fu_230->SeparableConv2D_0_m_s_q0(SeparableConv2D_0_m_s_q0);
    grp_padding2d_fix16_fu_244 = new padding2d_fix16("grp_padding2d_fix16_fu_244");
    grp_padding2d_fix16_fu_244->ap_clk(ap_clk);
    grp_padding2d_fix16_fu_244->ap_rst(ap_rst_n_inv);
    grp_padding2d_fix16_fu_244->ap_start(grp_padding2d_fix16_fu_244_ap_start);
    grp_padding2d_fix16_fu_244->ap_done(grp_padding2d_fix16_fu_244_ap_done);
    grp_padding2d_fix16_fu_244->ap_idle(grp_padding2d_fix16_fu_244_ap_idle);
    grp_padding2d_fix16_fu_244->ap_ready(grp_padding2d_fix16_fu_244_ap_ready);
    grp_padding2d_fix16_fu_244->input_r_address0(grp_padding2d_fix16_fu_244_input_r_address0);
    grp_padding2d_fix16_fu_244->input_r_ce0(grp_padding2d_fix16_fu_244_input_r_ce0);
    grp_padding2d_fix16_fu_244->input_r_q0(input_0_array_q0);
    grp_padding2d_fix16_fu_244->output_r_address0(grp_padding2d_fix16_fu_244_output_r_address0);
    grp_padding2d_fix16_fu_244->output_r_ce0(grp_padding2d_fix16_fu_244_output_r_ce0);
    grp_padding2d_fix16_fu_244->output_r_we0(grp_padding2d_fix16_fu_244_output_r_we0);
    grp_padding2d_fix16_fu_244->output_r_d0(grp_padding2d_fix16_fu_244_output_r_d0);
    network_mul_mul_16ns_16ns_32_1_1_U22 = new network_mul_mul_16ns_16ns_32_1_1<1,1,16,16,32>("network_mul_mul_16ns_16ns_32_1_1_U22");
    network_mul_mul_16ns_16ns_32_1_1_U22->din0(tmp1_fu_364_p0);
    network_mul_mul_16ns_16ns_32_1_1_U22->din1(tmp1_fu_364_p1);
    network_mul_mul_16ns_16ns_32_1_1_U22->dout(tmp1_fu_364_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Padding2D_0_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_215_input_r_address0 );
    sensitive << ( grp_padding2d_fix16_fu_244_output_r_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i1_cast2_fu_344_p1 );

    SC_METHOD(thread_Padding2D_0_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_215_input_r_ce0 );
    sensitive << ( grp_padding2d_fix16_fu_244_output_r_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_Padding2D_0_array_we0);
    sensitive << ( grp_padding2d_fix16_fu_244_output_r_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_SeparableConv2D_0_m_s_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_215_output_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_address0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_SeparableConv2D_0_m_s_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_215_output_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_ce0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_SeparableConv2D_0_m_s_we0);
    sensitive << ( grp_depthwise_conv2d_fix_fu_215_output_r_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( ap_block_state11_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state10_io );
    sensitive << ( ap_block_state11_io );

    SC_METHOD(thread_ap_block_state10_io);
    sensitive << ( output_data_V_data_V_1_ack_in );
    sensitive << ( exitcond_reg_431 );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state11_io);
    sensitive << ( output_data_V_data_V_1_ack_in );
    sensitive << ( exitcond_reg_431_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state13);
    sensitive << ( output_data_V_data_V_1_ack_in );
    sensitive << ( output_data_V_keep_V_1_ack_in );
    sensitive << ( output_data_V_strb_V_1_ack_in );
    sensitive << ( output_data_V_user_V_1_ack_in );
    sensitive << ( output_data_V_last_V_1_ack_in );
    sensitive << ( output_data_V_id_V_1_ack_in );
    sensitive << ( output_data_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( input_data_V_data_V_0_vld_out );
    sensitive << ( exitcond3_fu_291_p2 );

    SC_METHOD(thread_ap_block_state3_ignore_call0);
    sensitive << ( input_data_V_data_V_0_vld_out );
    sensitive << ( exitcond3_fu_291_p2 );

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state9);
    sensitive << ( exitcond_fu_333_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( output_data_V_data_V_1_ack_in );
    sensitive << ( output_data_V_data_V_1_state );
    sensitive << ( output_data_V_keep_V_1_ack_in );
    sensitive << ( output_data_V_keep_V_1_state );
    sensitive << ( output_data_V_strb_V_1_ack_in );
    sensitive << ( output_data_V_strb_V_1_state );
    sensitive << ( output_data_V_user_V_1_ack_in );
    sensitive << ( output_data_V_user_V_1_state );
    sensitive << ( output_data_V_last_V_1_ack_in );
    sensitive << ( output_data_V_last_V_1_state );
    sensitive << ( output_data_V_id_V_1_ack_in );
    sensitive << ( output_data_V_id_V_1_state );
    sensitive << ( output_data_V_dest_V_1_ack_in );
    sensitive << ( output_data_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( output_data_V_data_V_1_ack_in );
    sensitive << ( output_data_V_data_V_1_state );
    sensitive << ( output_data_V_keep_V_1_ack_in );
    sensitive << ( output_data_V_keep_V_1_state );
    sensitive << ( output_data_V_strb_V_1_ack_in );
    sensitive << ( output_data_V_strb_V_1_state );
    sensitive << ( output_data_V_user_V_1_ack_in );
    sensitive << ( output_data_V_user_V_1_state );
    sensitive << ( output_data_V_last_V_1_ack_in );
    sensitive << ( output_data_V_last_V_1_state );
    sensitive << ( output_data_V_id_V_1_ack_in );
    sensitive << ( output_data_V_id_V_1_state );
    sensitive << ( output_data_V_dest_V_1_ack_in );
    sensitive << ( output_data_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_array_length_cast_fu_287_p1);
    sensitive << ( array_length_fu_281_p2 );

    SC_METHOD(thread_array_length_fu_281_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( array_length_fu_281_p00 );

    SC_METHOD(thread_array_length_fu_281_p00);
    sensitive << ( tmp1_reg_370 );

    SC_METHOD(thread_array_length_fu_281_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( array_length_fu_281_p10 );

    SC_METHOD(thread_array_length_fu_281_p10);
    sensitive << ( Padding2D_0_height );

    SC_METHOD(thread_array_length_fu_281_p2);
    sensitive << ( array_length_fu_281_p0 );
    sensitive << ( array_length_fu_281_p1 );

    SC_METHOD(thread_exitcond3_fu_291_p2);
    sensitive << ( input_data_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );
    sensitive << ( i_reg_193 );

    SC_METHOD(thread_exitcond_fu_333_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i1_reg_204 );
    sensitive << ( array_length_reg_375 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_fu_215_ap_start);
    sensitive << ( grp_depthwise_conv2d_fix_fu_215_ap_start_reg );

    SC_METHOD(thread_grp_padding2d_fix16_fu_244_ap_start);
    sensitive << ( grp_padding2d_fix16_fu_244_ap_start_reg );

    SC_METHOD(thread_grp_pointwise_conv2d_fix_fu_230_ap_start);
    sensitive << ( grp_pointwise_conv2d_fix_fu_230_ap_start_reg );

    SC_METHOD(thread_i1_cast2_fu_344_p1);
    sensitive << ( i1_reg_204 );

    SC_METHOD(thread_i1_cast_fu_349_p1);
    sensitive << ( i1_reg_204 );

    SC_METHOD(thread_i_1_fu_297_p2);
    sensitive << ( i_reg_193 );

    SC_METHOD(thread_i_2_fu_338_p2);
    sensitive << ( i1_reg_204 );

    SC_METHOD(thread_input_0_array_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );
    sensitive << ( grp_padding2d_fix16_fu_244_input_r_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_23_fu_308_p1 );

    SC_METHOD(thread_input_0_array_ce0);
    sensitive << ( input_data_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );
    sensitive << ( grp_padding2d_fix16_fu_244_input_r_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_input_0_array_we0);
    sensitive << ( input_data_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );

    SC_METHOD(thread_input_data_TDATA_blk_n);
    sensitive << ( input_data_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );

    SC_METHOD(thread_input_data_TREADY);
    sensitive << ( input_data_V_dest_V_0_state );

    SC_METHOD(thread_input_data_V_data_V_0_ack_in);
    sensitive << ( input_data_V_data_V_0_state );

    SC_METHOD(thread_input_data_V_data_V_0_ack_out);
    sensitive << ( input_data_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );

    SC_METHOD(thread_input_data_V_data_V_0_data_out);
    sensitive << ( input_data_V_data_V_0_payload_A );
    sensitive << ( input_data_V_data_V_0_payload_B );
    sensitive << ( input_data_V_data_V_0_sel );

    SC_METHOD(thread_input_data_V_data_V_0_load_A);
    sensitive << ( input_data_V_data_V_0_sel_wr );
    sensitive << ( input_data_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_V_data_V_0_load_B);
    sensitive << ( input_data_V_data_V_0_sel_wr );
    sensitive << ( input_data_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_V_data_V_0_sel);
    sensitive << ( input_data_V_data_V_0_sel_rd );

    SC_METHOD(thread_input_data_V_data_V_0_state_cmp_full);
    sensitive << ( input_data_V_data_V_0_state );

    SC_METHOD(thread_input_data_V_data_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_input_data_V_data_V_0_vld_out);
    sensitive << ( input_data_V_data_V_0_state );

    SC_METHOD(thread_input_data_V_dest_V_0_ack_out);
    sensitive << ( input_data_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );

    SC_METHOD(thread_input_data_V_dest_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_output_data_TDATA);
    sensitive << ( output_data_V_data_V_1_data_out );

    SC_METHOD(thread_output_data_TDATA_blk_n);
    sensitive << ( output_data_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( exitcond_reg_431 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( exitcond_reg_431_pp0_iter1_reg );

    SC_METHOD(thread_output_data_TDEST);
    sensitive << ( output_data_V_dest_V_1_data_out );

    SC_METHOD(thread_output_data_TID);
    sensitive << ( output_data_V_id_V_1_data_out );

    SC_METHOD(thread_output_data_TKEEP);
    sensitive << ( output_data_V_keep_V_1_data_out );

    SC_METHOD(thread_output_data_TLAST);
    sensitive << ( output_data_V_last_V_1_data_out );

    SC_METHOD(thread_output_data_TSTRB);
    sensitive << ( output_data_V_strb_V_1_data_out );

    SC_METHOD(thread_output_data_TUSER);
    sensitive << ( output_data_V_user_V_1_data_out );

    SC_METHOD(thread_output_data_TVALID);
    sensitive << ( output_data_V_dest_V_1_state );

    SC_METHOD(thread_output_data_V_data_V_1_ack_in);
    sensitive << ( output_data_V_data_V_1_state );

    SC_METHOD(thread_output_data_V_data_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_V_data_V_1_data_out);
    sensitive << ( output_data_V_data_V_1_payload_A );
    sensitive << ( output_data_V_data_V_1_payload_B );
    sensitive << ( output_data_V_data_V_1_sel );

    SC_METHOD(thread_output_data_V_data_V_1_load_A);
    sensitive << ( output_data_V_data_V_1_sel_wr );
    sensitive << ( output_data_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_V_data_V_1_load_B);
    sensitive << ( output_data_V_data_V_1_sel_wr );
    sensitive << ( output_data_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_V_data_V_1_sel);
    sensitive << ( output_data_V_data_V_1_sel_rd );

    SC_METHOD(thread_output_data_V_data_V_1_state_cmp_full);
    sensitive << ( output_data_V_data_V_1_state );

    SC_METHOD(thread_output_data_V_data_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_431 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_data_V_data_V_1_vld_out);
    sensitive << ( output_data_V_data_V_1_state );

    SC_METHOD(thread_output_data_V_dest_V_1_ack_in);
    sensitive << ( output_data_V_dest_V_1_state );

    SC_METHOD(thread_output_data_V_dest_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_V_dest_V_1_data_out);
    sensitive << ( output_data_V_dest_V_1_sel );

    SC_METHOD(thread_output_data_V_dest_V_1_sel);
    sensitive << ( output_data_V_dest_V_1_sel_rd );

    SC_METHOD(thread_output_data_V_dest_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_431 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_data_V_dest_V_1_vld_out);
    sensitive << ( output_data_V_dest_V_1_state );

    SC_METHOD(thread_output_data_V_id_V_1_ack_in);
    sensitive << ( output_data_V_id_V_1_state );

    SC_METHOD(thread_output_data_V_id_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_V_id_V_1_data_out);
    sensitive << ( output_data_V_id_V_1_sel );

    SC_METHOD(thread_output_data_V_id_V_1_sel);
    sensitive << ( output_data_V_id_V_1_sel_rd );

    SC_METHOD(thread_output_data_V_id_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_431 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_data_V_id_V_1_vld_out);
    sensitive << ( output_data_V_id_V_1_state );

    SC_METHOD(thread_output_data_V_keep_V_1_ack_in);
    sensitive << ( output_data_V_keep_V_1_state );

    SC_METHOD(thread_output_data_V_keep_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_V_keep_V_1_data_out);
    sensitive << ( output_data_V_keep_V_1_sel );

    SC_METHOD(thread_output_data_V_keep_V_1_sel);
    sensitive << ( output_data_V_keep_V_1_sel_rd );

    SC_METHOD(thread_output_data_V_keep_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_431 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_data_V_keep_V_1_vld_out);
    sensitive << ( output_data_V_keep_V_1_state );

    SC_METHOD(thread_output_data_V_last_V_1_ack_in);
    sensitive << ( output_data_V_last_V_1_state );

    SC_METHOD(thread_output_data_V_last_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_V_last_V_1_data_out);
    sensitive << ( output_data_V_last_V_1_payload_A );
    sensitive << ( output_data_V_last_V_1_payload_B );
    sensitive << ( output_data_V_last_V_1_sel );

    SC_METHOD(thread_output_data_V_last_V_1_load_A);
    sensitive << ( output_data_V_last_V_1_sel_wr );
    sensitive << ( output_data_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_V_last_V_1_load_B);
    sensitive << ( output_data_V_last_V_1_sel_wr );
    sensitive << ( output_data_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_V_last_V_1_sel);
    sensitive << ( output_data_V_last_V_1_sel_rd );

    SC_METHOD(thread_output_data_V_last_V_1_state_cmp_full);
    sensitive << ( output_data_V_last_V_1_state );

    SC_METHOD(thread_output_data_V_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_431 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_data_V_last_V_1_vld_out);
    sensitive << ( output_data_V_last_V_1_state );

    SC_METHOD(thread_output_data_V_strb_V_1_ack_in);
    sensitive << ( output_data_V_strb_V_1_state );

    SC_METHOD(thread_output_data_V_strb_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_V_strb_V_1_data_out);
    sensitive << ( output_data_V_strb_V_1_sel );

    SC_METHOD(thread_output_data_V_strb_V_1_sel);
    sensitive << ( output_data_V_strb_V_1_sel_rd );

    SC_METHOD(thread_output_data_V_strb_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_431 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_data_V_strb_V_1_vld_out);
    sensitive << ( output_data_V_strb_V_1_state );

    SC_METHOD(thread_output_data_V_user_V_1_ack_in);
    sensitive << ( output_data_V_user_V_1_state );

    SC_METHOD(thread_output_data_V_user_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_V_user_V_1_data_out);
    sensitive << ( output_data_V_user_V_1_payload_A );
    sensitive << ( output_data_V_user_V_1_payload_B );
    sensitive << ( output_data_V_user_V_1_sel );

    SC_METHOD(thread_output_data_V_user_V_1_load_A);
    sensitive << ( output_data_V_user_V_1_sel_wr );
    sensitive << ( output_data_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_V_user_V_1_load_B);
    sensitive << ( output_data_V_user_V_1_sel_wr );
    sensitive << ( output_data_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_V_user_V_1_sel);
    sensitive << ( output_data_V_user_V_1_sel_rd );

    SC_METHOD(thread_output_data_V_user_V_1_state_cmp_full);
    sensitive << ( output_data_V_user_V_1_state );

    SC_METHOD(thread_output_data_V_user_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_reg_431 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_output_data_V_user_V_1_vld_out);
    sensitive << ( output_data_V_user_V_1_state );

    SC_METHOD(thread_tmp1_fu_364_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp1_fu_364_p00 );

    SC_METHOD(thread_tmp1_fu_364_p00);
    sensitive << ( Padding2D_0_depth );

    SC_METHOD(thread_tmp1_fu_364_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp1_fu_364_p10 );

    SC_METHOD(thread_tmp1_fu_364_p10);
    sensitive << ( Padding2D_0_width );

    SC_METHOD(thread_tmp_22_fu_328_p2);
    sensitive << ( array_length_cast_reg_380 );

    SC_METHOD(thread_tmp_23_fu_308_p1);
    sensitive << ( i_reg_193 );

    SC_METHOD(thread_tmp_last_V_fu_359_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_22_reg_426 );
    sensitive << ( exitcond_fu_333_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i1_cast_fu_349_p1 );

    SC_METHOD(thread_tmp_user_V_fu_353_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i1_reg_204 );
    sensitive << ( exitcond_fu_333_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_data_V_data_V_0_vld_out );
    sensitive << ( output_data_V_data_V_1_ack_in );
    sensitive << ( output_data_V_data_V_1_state );
    sensitive << ( output_data_V_keep_V_1_ack_in );
    sensitive << ( output_data_V_keep_V_1_state );
    sensitive << ( output_data_V_strb_V_1_ack_in );
    sensitive << ( output_data_V_strb_V_1_state );
    sensitive << ( output_data_V_user_V_1_ack_in );
    sensitive << ( output_data_V_user_V_1_state );
    sensitive << ( output_data_V_last_V_1_ack_in );
    sensitive << ( output_data_V_last_V_1_state );
    sensitive << ( output_data_V_id_V_1_ack_in );
    sensitive << ( output_data_V_id_V_1_state );
    sensitive << ( output_data_V_dest_V_1_ack_in );
    sensitive << ( output_data_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_291_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_230_ap_done );
    sensitive << ( exitcond_fu_333_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( grp_depthwise_conv2d_fix_fu_215_ap_done );
    sensitive << ( grp_padding2d_fix16_fu_244_ap_done );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000001";
    input_data_V_data_V_0_sel_rd = SC_LOGIC_0;
    input_data_V_data_V_0_sel_wr = SC_LOGIC_0;
    input_data_V_data_V_0_state = "00";
    input_data_V_dest_V_0_state = "00";
    output_data_V_data_V_1_sel_rd = SC_LOGIC_0;
    output_data_V_data_V_1_sel_wr = SC_LOGIC_0;
    output_data_V_data_V_1_state = "00";
    output_data_V_keep_V_1_sel_rd = SC_LOGIC_0;
    output_data_V_keep_V_1_state = "00";
    output_data_V_strb_V_1_sel_rd = SC_LOGIC_0;
    output_data_V_strb_V_1_state = "00";
    output_data_V_user_V_1_sel_rd = SC_LOGIC_0;
    output_data_V_user_V_1_sel_wr = SC_LOGIC_0;
    output_data_V_user_V_1_state = "00";
    output_data_V_last_V_1_sel_rd = SC_LOGIC_0;
    output_data_V_last_V_1_sel_wr = SC_LOGIC_0;
    output_data_V_last_V_1_state = "00";
    output_data_V_id_V_1_sel_rd = SC_LOGIC_0;
    output_data_V_id_V_1_state = "00";
    output_data_V_dest_V_1_sel_rd = SC_LOGIC_0;
    output_data_V_dest_V_1_state = "00";
    Padding2D_0_depth = "0000000000000001";
    Padding2D_0_height = "0000000000011110";
    Padding2D_0_width = "0000000000011110";
    SeparableConv2D_0_de = "0000000000010000";
    SeparableConv2D_0_he = "0000000000011100";
    SeparableConv2D_0_wi = "0000000000011100";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    grp_depthwise_conv2d_fix_fu_215_ap_start_reg = SC_LOGIC_0;
    grp_pointwise_conv2d_fix_fu_230_ap_start_reg = SC_LOGIC_0;
    grp_padding2d_fix16_fu_244_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "network_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_data_TDATA, "(port)input_data_TDATA");
    sc_trace(mVcdFile, input_data_TVALID, "(port)input_data_TVALID");
    sc_trace(mVcdFile, input_data_TREADY, "(port)input_data_TREADY");
    sc_trace(mVcdFile, input_data_TKEEP, "(port)input_data_TKEEP");
    sc_trace(mVcdFile, input_data_TSTRB, "(port)input_data_TSTRB");
    sc_trace(mVcdFile, input_data_TUSER, "(port)input_data_TUSER");
    sc_trace(mVcdFile, input_data_TLAST, "(port)input_data_TLAST");
    sc_trace(mVcdFile, input_data_TID, "(port)input_data_TID");
    sc_trace(mVcdFile, input_data_TDEST, "(port)input_data_TDEST");
    sc_trace(mVcdFile, output_data_TDATA, "(port)output_data_TDATA");
    sc_trace(mVcdFile, output_data_TVALID, "(port)output_data_TVALID");
    sc_trace(mVcdFile, output_data_TREADY, "(port)output_data_TREADY");
    sc_trace(mVcdFile, output_data_TKEEP, "(port)output_data_TKEEP");
    sc_trace(mVcdFile, output_data_TSTRB, "(port)output_data_TSTRB");
    sc_trace(mVcdFile, output_data_TUSER, "(port)output_data_TUSER");
    sc_trace(mVcdFile, output_data_TLAST, "(port)output_data_TLAST");
    sc_trace(mVcdFile, output_data_TID, "(port)output_data_TID");
    sc_trace(mVcdFile, output_data_TDEST, "(port)output_data_TDEST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_data_V_data_V_0_data_out, "input_data_V_data_V_0_data_out");
    sc_trace(mVcdFile, input_data_V_data_V_0_vld_in, "input_data_V_data_V_0_vld_in");
    sc_trace(mVcdFile, input_data_V_data_V_0_vld_out, "input_data_V_data_V_0_vld_out");
    sc_trace(mVcdFile, input_data_V_data_V_0_ack_in, "input_data_V_data_V_0_ack_in");
    sc_trace(mVcdFile, input_data_V_data_V_0_ack_out, "input_data_V_data_V_0_ack_out");
    sc_trace(mVcdFile, input_data_V_data_V_0_payload_A, "input_data_V_data_V_0_payload_A");
    sc_trace(mVcdFile, input_data_V_data_V_0_payload_B, "input_data_V_data_V_0_payload_B");
    sc_trace(mVcdFile, input_data_V_data_V_0_sel_rd, "input_data_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, input_data_V_data_V_0_sel_wr, "input_data_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, input_data_V_data_V_0_sel, "input_data_V_data_V_0_sel");
    sc_trace(mVcdFile, input_data_V_data_V_0_load_A, "input_data_V_data_V_0_load_A");
    sc_trace(mVcdFile, input_data_V_data_V_0_load_B, "input_data_V_data_V_0_load_B");
    sc_trace(mVcdFile, input_data_V_data_V_0_state, "input_data_V_data_V_0_state");
    sc_trace(mVcdFile, input_data_V_data_V_0_state_cmp_full, "input_data_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_data_V_dest_V_0_vld_in, "input_data_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, input_data_V_dest_V_0_ack_out, "input_data_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, input_data_V_dest_V_0_state, "input_data_V_dest_V_0_state");
    sc_trace(mVcdFile, output_data_V_data_V_1_data_out, "output_data_V_data_V_1_data_out");
    sc_trace(mVcdFile, output_data_V_data_V_1_vld_in, "output_data_V_data_V_1_vld_in");
    sc_trace(mVcdFile, output_data_V_data_V_1_vld_out, "output_data_V_data_V_1_vld_out");
    sc_trace(mVcdFile, output_data_V_data_V_1_ack_in, "output_data_V_data_V_1_ack_in");
    sc_trace(mVcdFile, output_data_V_data_V_1_ack_out, "output_data_V_data_V_1_ack_out");
    sc_trace(mVcdFile, output_data_V_data_V_1_payload_A, "output_data_V_data_V_1_payload_A");
    sc_trace(mVcdFile, output_data_V_data_V_1_payload_B, "output_data_V_data_V_1_payload_B");
    sc_trace(mVcdFile, output_data_V_data_V_1_sel_rd, "output_data_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_V_data_V_1_sel_wr, "output_data_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_V_data_V_1_sel, "output_data_V_data_V_1_sel");
    sc_trace(mVcdFile, output_data_V_data_V_1_load_A, "output_data_V_data_V_1_load_A");
    sc_trace(mVcdFile, output_data_V_data_V_1_load_B, "output_data_V_data_V_1_load_B");
    sc_trace(mVcdFile, output_data_V_data_V_1_state, "output_data_V_data_V_1_state");
    sc_trace(mVcdFile, output_data_V_data_V_1_state_cmp_full, "output_data_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_V_keep_V_1_data_out, "output_data_V_keep_V_1_data_out");
    sc_trace(mVcdFile, output_data_V_keep_V_1_vld_in, "output_data_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, output_data_V_keep_V_1_vld_out, "output_data_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, output_data_V_keep_V_1_ack_in, "output_data_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, output_data_V_keep_V_1_ack_out, "output_data_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, output_data_V_keep_V_1_sel_rd, "output_data_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_V_keep_V_1_sel, "output_data_V_keep_V_1_sel");
    sc_trace(mVcdFile, output_data_V_keep_V_1_state, "output_data_V_keep_V_1_state");
    sc_trace(mVcdFile, output_data_V_strb_V_1_data_out, "output_data_V_strb_V_1_data_out");
    sc_trace(mVcdFile, output_data_V_strb_V_1_vld_in, "output_data_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, output_data_V_strb_V_1_vld_out, "output_data_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, output_data_V_strb_V_1_ack_in, "output_data_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, output_data_V_strb_V_1_ack_out, "output_data_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, output_data_V_strb_V_1_sel_rd, "output_data_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_V_strb_V_1_sel, "output_data_V_strb_V_1_sel");
    sc_trace(mVcdFile, output_data_V_strb_V_1_state, "output_data_V_strb_V_1_state");
    sc_trace(mVcdFile, output_data_V_user_V_1_data_out, "output_data_V_user_V_1_data_out");
    sc_trace(mVcdFile, output_data_V_user_V_1_vld_in, "output_data_V_user_V_1_vld_in");
    sc_trace(mVcdFile, output_data_V_user_V_1_vld_out, "output_data_V_user_V_1_vld_out");
    sc_trace(mVcdFile, output_data_V_user_V_1_ack_in, "output_data_V_user_V_1_ack_in");
    sc_trace(mVcdFile, output_data_V_user_V_1_ack_out, "output_data_V_user_V_1_ack_out");
    sc_trace(mVcdFile, output_data_V_user_V_1_payload_A, "output_data_V_user_V_1_payload_A");
    sc_trace(mVcdFile, output_data_V_user_V_1_payload_B, "output_data_V_user_V_1_payload_B");
    sc_trace(mVcdFile, output_data_V_user_V_1_sel_rd, "output_data_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_V_user_V_1_sel_wr, "output_data_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_V_user_V_1_sel, "output_data_V_user_V_1_sel");
    sc_trace(mVcdFile, output_data_V_user_V_1_load_A, "output_data_V_user_V_1_load_A");
    sc_trace(mVcdFile, output_data_V_user_V_1_load_B, "output_data_V_user_V_1_load_B");
    sc_trace(mVcdFile, output_data_V_user_V_1_state, "output_data_V_user_V_1_state");
    sc_trace(mVcdFile, output_data_V_user_V_1_state_cmp_full, "output_data_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_V_last_V_1_data_out, "output_data_V_last_V_1_data_out");
    sc_trace(mVcdFile, output_data_V_last_V_1_vld_in, "output_data_V_last_V_1_vld_in");
    sc_trace(mVcdFile, output_data_V_last_V_1_vld_out, "output_data_V_last_V_1_vld_out");
    sc_trace(mVcdFile, output_data_V_last_V_1_ack_in, "output_data_V_last_V_1_ack_in");
    sc_trace(mVcdFile, output_data_V_last_V_1_ack_out, "output_data_V_last_V_1_ack_out");
    sc_trace(mVcdFile, output_data_V_last_V_1_payload_A, "output_data_V_last_V_1_payload_A");
    sc_trace(mVcdFile, output_data_V_last_V_1_payload_B, "output_data_V_last_V_1_payload_B");
    sc_trace(mVcdFile, output_data_V_last_V_1_sel_rd, "output_data_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_V_last_V_1_sel_wr, "output_data_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_V_last_V_1_sel, "output_data_V_last_V_1_sel");
    sc_trace(mVcdFile, output_data_V_last_V_1_load_A, "output_data_V_last_V_1_load_A");
    sc_trace(mVcdFile, output_data_V_last_V_1_load_B, "output_data_V_last_V_1_load_B");
    sc_trace(mVcdFile, output_data_V_last_V_1_state, "output_data_V_last_V_1_state");
    sc_trace(mVcdFile, output_data_V_last_V_1_state_cmp_full, "output_data_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_V_id_V_1_data_out, "output_data_V_id_V_1_data_out");
    sc_trace(mVcdFile, output_data_V_id_V_1_vld_in, "output_data_V_id_V_1_vld_in");
    sc_trace(mVcdFile, output_data_V_id_V_1_vld_out, "output_data_V_id_V_1_vld_out");
    sc_trace(mVcdFile, output_data_V_id_V_1_ack_in, "output_data_V_id_V_1_ack_in");
    sc_trace(mVcdFile, output_data_V_id_V_1_ack_out, "output_data_V_id_V_1_ack_out");
    sc_trace(mVcdFile, output_data_V_id_V_1_sel_rd, "output_data_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_V_id_V_1_sel, "output_data_V_id_V_1_sel");
    sc_trace(mVcdFile, output_data_V_id_V_1_state, "output_data_V_id_V_1_state");
    sc_trace(mVcdFile, output_data_V_dest_V_1_data_out, "output_data_V_dest_V_1_data_out");
    sc_trace(mVcdFile, output_data_V_dest_V_1_vld_in, "output_data_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, output_data_V_dest_V_1_vld_out, "output_data_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, output_data_V_dest_V_1_ack_in, "output_data_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, output_data_V_dest_V_1_ack_out, "output_data_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, output_data_V_dest_V_1_sel_rd, "output_data_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_V_dest_V_1_sel, "output_data_V_dest_V_1_sel");
    sc_trace(mVcdFile, output_data_V_dest_V_1_state, "output_data_V_dest_V_1_state");
    sc_trace(mVcdFile, Padding2D_0_depth, "Padding2D_0_depth");
    sc_trace(mVcdFile, Padding2D_0_height, "Padding2D_0_height");
    sc_trace(mVcdFile, Padding2D_0_width, "Padding2D_0_width");
    sc_trace(mVcdFile, Padding2D_0_array_address0, "Padding2D_0_array_address0");
    sc_trace(mVcdFile, Padding2D_0_array_ce0, "Padding2D_0_array_ce0");
    sc_trace(mVcdFile, Padding2D_0_array_we0, "Padding2D_0_array_we0");
    sc_trace(mVcdFile, Padding2D_0_array_q0, "Padding2D_0_array_q0");
    sc_trace(mVcdFile, SeparableConv2D_0_de, "SeparableConv2D_0_de");
    sc_trace(mVcdFile, SeparableConv2D_0_he, "SeparableConv2D_0_he");
    sc_trace(mVcdFile, SeparableConv2D_0_wi, "SeparableConv2D_0_wi");
    sc_trace(mVcdFile, SeparableConv2D_0_m_s_address0, "SeparableConv2D_0_m_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_0_m_s_ce0, "SeparableConv2D_0_m_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_0_m_s_we0, "SeparableConv2D_0_m_s_we0");
    sc_trace(mVcdFile, SeparableConv2D_0_m_s_q0, "SeparableConv2D_0_m_s_q0");
    sc_trace(mVcdFile, input_data_TDATA_blk_n, "input_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond3_fu_291_p2, "exitcond3_fu_291_p2");
    sc_trace(mVcdFile, output_data_TDATA_blk_n, "output_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, exitcond_reg_431, "exitcond_reg_431");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, exitcond_reg_431_pp0_iter1_reg, "exitcond_reg_431_pp0_iter1_reg");
    sc_trace(mVcdFile, i1_reg_204, "i1_reg_204");
    sc_trace(mVcdFile, tmp1_fu_364_p2, "tmp1_fu_364_p2");
    sc_trace(mVcdFile, tmp1_reg_370, "tmp1_reg_370");
    sc_trace(mVcdFile, array_length_fu_281_p2, "array_length_fu_281_p2");
    sc_trace(mVcdFile, array_length_reg_375, "array_length_reg_375");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, array_length_cast_fu_287_p1, "array_length_cast_fu_287_p1");
    sc_trace(mVcdFile, array_length_cast_reg_380, "array_length_cast_reg_380");
    sc_trace(mVcdFile, i_1_fu_297_p2, "i_1_fu_297_p2");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_22_fu_328_p2, "tmp_22_fu_328_p2");
    sc_trace(mVcdFile, tmp_22_reg_426, "tmp_22_reg_426");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_230_ap_ready, "grp_pointwise_conv2d_fix_fu_230_ap_ready");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_230_ap_done, "grp_pointwise_conv2d_fix_fu_230_ap_done");
    sc_trace(mVcdFile, exitcond_fu_333_p2, "exitcond_fu_333_p2");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter0, "ap_block_state9_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_io, "ap_block_state10_io");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter2, "ap_block_state11_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state11_io, "ap_block_state11_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_2_fu_338_p2, "i_2_fu_338_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_user_V_fu_353_p2, "tmp_user_V_fu_353_p2");
    sc_trace(mVcdFile, tmp_user_V_reg_445, "tmp_user_V_reg_445");
    sc_trace(mVcdFile, tmp_last_V_fu_359_p2, "tmp_last_V_fu_359_p2");
    sc_trace(mVcdFile, tmp_last_V_reg_450, "tmp_last_V_reg_450");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state9, "ap_condition_pp0_exit_iter0_state9");
    sc_trace(mVcdFile, input_0_array_address0, "input_0_array_address0");
    sc_trace(mVcdFile, input_0_array_ce0, "input_0_array_ce0");
    sc_trace(mVcdFile, input_0_array_we0, "input_0_array_we0");
    sc_trace(mVcdFile, input_0_array_q0, "input_0_array_q0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_ap_start, "grp_depthwise_conv2d_fix_fu_215_ap_start");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_ap_done, "grp_depthwise_conv2d_fix_fu_215_ap_done");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_ap_idle, "grp_depthwise_conv2d_fix_fu_215_ap_idle");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_ap_ready, "grp_depthwise_conv2d_fix_fu_215_ap_ready");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_input_r_address0, "grp_depthwise_conv2d_fix_fu_215_input_r_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_input_r_ce0, "grp_depthwise_conv2d_fix_fu_215_input_r_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_output_r_address0, "grp_depthwise_conv2d_fix_fu_215_output_r_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_output_r_ce0, "grp_depthwise_conv2d_fix_fu_215_output_r_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_output_r_we0, "grp_depthwise_conv2d_fix_fu_215_output_r_we0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_output_r_d0, "grp_depthwise_conv2d_fix_fu_215_output_r_d0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_230_ap_start, "grp_pointwise_conv2d_fix_fu_230_ap_start");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_230_ap_idle, "grp_pointwise_conv2d_fix_fu_230_ap_idle");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_address0, "grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_ce0, "grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_ce0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_ap_start, "grp_padding2d_fix16_fu_244_ap_start");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_ap_done, "grp_padding2d_fix16_fu_244_ap_done");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_ap_idle, "grp_padding2d_fix16_fu_244_ap_idle");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_ap_ready, "grp_padding2d_fix16_fu_244_ap_ready");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_input_r_address0, "grp_padding2d_fix16_fu_244_input_r_address0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_input_r_ce0, "grp_padding2d_fix16_fu_244_input_r_ce0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_output_r_address0, "grp_padding2d_fix16_fu_244_output_r_address0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_output_r_ce0, "grp_padding2d_fix16_fu_244_output_r_ce0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_output_r_we0, "grp_padding2d_fix16_fu_244_output_r_we0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_output_r_d0, "grp_padding2d_fix16_fu_244_output_r_d0");
    sc_trace(mVcdFile, i_reg_193, "i_reg_193");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_215_ap_start_reg, "grp_depthwise_conv2d_fix_fu_215_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_230_ap_start_reg, "grp_pointwise_conv2d_fix_fu_230_ap_start_reg");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_244_ap_start_reg, "grp_padding2d_fix16_fu_244_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state3_ignore_call0, "ap_block_state3_ignore_call0");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_23_fu_308_p1, "tmp_23_fu_308_p1");
    sc_trace(mVcdFile, i1_cast2_fu_344_p1, "i1_cast2_fu_344_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, array_length_fu_281_p0, "array_length_fu_281_p0");
    sc_trace(mVcdFile, array_length_fu_281_p1, "array_length_fu_281_p1");
    sc_trace(mVcdFile, i1_cast_fu_349_p1, "i1_cast_fu_349_p1");
    sc_trace(mVcdFile, tmp1_fu_364_p0, "tmp1_fu_364_p0");
    sc_trace(mVcdFile, tmp1_fu_364_p1, "tmp1_fu_364_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_block_state13, "ap_block_state13");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, array_length_fu_281_p00, "array_length_fu_281_p00");
    sc_trace(mVcdFile, array_length_fu_281_p10, "array_length_fu_281_p10");
    sc_trace(mVcdFile, tmp1_fu_364_p00, "tmp1_fu_364_p00");
    sc_trace(mVcdFile, tmp1_fu_364_p10, "tmp1_fu_364_p10");
#endif

    }
    mHdltvinHandle.open("network.hdltvin.dat");
    mHdltvoutHandle.open("network.hdltvout.dat");
}

network::~network() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Padding2D_0_array_U;
    delete SeparableConv2D_0_m_s_U;
    delete network_AXILiteS_s_axi_U;
    delete input_0_array_U;
    delete grp_depthwise_conv2d_fix_fu_215;
    delete grp_pointwise_conv2d_fix_fu_230;
    delete grp_padding2d_fix16_fu_244;
    delete network_mul_mul_16ns_16ns_32_1_1_U22;
}

void network::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void network::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                    esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_fu_230_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state9.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state9.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                    esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_fu_230_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_depthwise_conv2d_fix_fu_215_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_depthwise_conv2d_fix_fu_215_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_depthwise_conv2d_fix_fu_215_ap_ready.read())) {
            grp_depthwise_conv2d_fix_fu_215_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_padding2d_fix16_fu_244_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read())) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_291_p2.read()))) {
            grp_padding2d_fix16_fu_244_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_padding2d_fix16_fu_244_ap_ready.read())) {
            grp_padding2d_fix16_fu_244_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pointwise_conv2d_fix_fu_230_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_pointwise_conv2d_fix_fu_230_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointwise_conv2d_fix_fu_230_ap_ready.read())) {
            grp_pointwise_conv2d_fix_fu_230_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_333_p2.read()))) {
        i1_reg_204 = i_2_fu_338_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_fu_230_ap_done.read(), ap_const_logic_1))) {
        i1_reg_204 = ap_const_lv48_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read())))) {
        i_reg_193 = i_1_fu_297_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_193 = ap_const_lv10_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_vld_out.read()))) {
            input_data_V_data_V_0_sel_rd =  (sc_logic) (~input_data_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_ack_in.read()))) {
            input_data_V_data_V_0_sel_wr =  (sc_logic) (~input_data_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(input_data_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(input_data_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            input_data_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_data_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_data_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            input_data_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(input_data_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_data_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(input_data_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_ack_out.read()))))) {
            input_data_V_data_V_0_state = ap_const_lv2_3;
        } else {
            input_data_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_data_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_data_V_dest_V_0_state.read())))) {
            input_data_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_data_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_V_dest_V_0_state.read())))) {
            input_data_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_data_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_data_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_dest_V_0_ack_out.read()))))) {
            input_data_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            input_data_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_vld_out.read()))) {
            output_data_V_data_V_1_sel_rd =  (sc_logic) (~output_data_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_ack_in.read()))) {
            output_data_V_data_V_1_sel_wr =  (sc_logic) (~output_data_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_data_V_1_state.read())))) {
            output_data_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_data_V_1_state.read())))) {
            output_data_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_ack_out.read()))))) {
            output_data_V_data_V_1_state = ap_const_lv2_3;
        } else {
            output_data_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_dest_V_1_vld_out.read()))) {
            output_data_V_dest_V_1_sel_rd =  (sc_logic) (~output_data_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_dest_V_1_state.read())))) {
            output_data_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_dest_V_1_state.read())))) {
            output_data_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_dest_V_1_ack_out.read()))))) {
            output_data_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            output_data_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_id_V_1_vld_out.read()))) {
            output_data_V_id_V_1_sel_rd =  (sc_logic) (~output_data_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_id_V_1_state.read())))) {
            output_data_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_id_V_1_state.read())))) {
            output_data_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_id_V_1_ack_out.read()))))) {
            output_data_V_id_V_1_state = ap_const_lv2_3;
        } else {
            output_data_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_keep_V_1_vld_out.read()))) {
            output_data_V_keep_V_1_sel_rd =  (sc_logic) (~output_data_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_keep_V_1_state.read())))) {
            output_data_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_keep_V_1_state.read())))) {
            output_data_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_keep_V_1_ack_out.read()))))) {
            output_data_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            output_data_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_vld_out.read()))) {
            output_data_V_last_V_1_sel_rd =  (sc_logic) (~output_data_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_ack_in.read()))) {
            output_data_V_last_V_1_sel_wr =  (sc_logic) (~output_data_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_last_V_1_state.read())))) {
            output_data_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_last_V_1_state.read())))) {
            output_data_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_ack_out.read()))))) {
            output_data_V_last_V_1_state = ap_const_lv2_3;
        } else {
            output_data_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_strb_V_1_vld_out.read()))) {
            output_data_V_strb_V_1_sel_rd =  (sc_logic) (~output_data_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_strb_V_1_state.read())))) {
            output_data_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_strb_V_1_state.read())))) {
            output_data_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_strb_V_1_ack_out.read()))))) {
            output_data_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            output_data_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_vld_out.read()))) {
            output_data_V_user_V_1_sel_rd =  (sc_logic) (~output_data_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_ack_in.read()))) {
            output_data_V_user_V_1_sel_wr =  (sc_logic) (~output_data_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_user_V_1_state.read())))) {
            output_data_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_user_V_1_state.read())))) {
            output_data_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_ack_out.read()))))) {
            output_data_V_user_V_1_state = ap_const_lv2_3;
        } else {
            output_data_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        array_length_cast_reg_380 = array_length_cast_fu_287_p1.read();
        array_length_reg_375 = array_length_fu_281_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_431 = exitcond_fu_333_p2.read();
        exitcond_reg_431_pp0_iter1_reg = exitcond_reg_431.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_load_A.read())) {
        input_data_V_data_V_0_payload_A = input_data_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_load_B.read())) {
        input_data_V_data_V_0_payload_B = input_data_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_load_A.read())) {
        output_data_V_data_V_1_payload_A = Padding2D_0_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_load_B.read())) {
        output_data_V_data_V_1_payload_B = Padding2D_0_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_load_A.read())) {
        output_data_V_last_V_1_payload_A = tmp_last_V_reg_450.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_load_B.read())) {
        output_data_V_last_V_1_payload_B = tmp_last_V_reg_450.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_load_A.read())) {
        output_data_V_user_V_1_payload_A = tmp_user_V_reg_445.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_load_B.read())) {
        output_data_V_user_V_1_payload_B = tmp_user_V_reg_445.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp1_reg_370 = tmp1_fu_364_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_fu_230_ap_done.read(), ap_const_logic_1))) {
        tmp_22_reg_426 = tmp_22_fu_328_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_333_p2.read()))) {
        tmp_last_V_reg_450 = tmp_last_V_fu_359_p2.read();
        tmp_user_V_reg_445 = tmp_user_V_fu_353_p2.read();
    }
}

void network::thread_Padding2D_0_array_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        Padding2D_0_array_address0 =  (sc_lv<10>) (i1_cast2_fu_344_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Padding2D_0_array_address0 = grp_padding2d_fix16_fu_244_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Padding2D_0_array_address0 = grp_depthwise_conv2d_fix_fu_215_input_r_address0.read();
    } else {
        Padding2D_0_array_address0 = "XXXXXXXXXX";
    }
}

void network::thread_Padding2D_0_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        Padding2D_0_array_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Padding2D_0_array_ce0 = grp_padding2d_fix16_fu_244_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Padding2D_0_array_ce0 = grp_depthwise_conv2d_fix_fu_215_input_r_ce0.read();
    } else {
        Padding2D_0_array_ce0 = ap_const_logic_0;
    }
}

void network::thread_Padding2D_0_array_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Padding2D_0_array_we0 = grp_padding2d_fix16_fu_244_output_r_we0.read();
    } else {
        Padding2D_0_array_we0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_0_m_s_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SeparableConv2D_0_m_s_address0 = grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        SeparableConv2D_0_m_s_address0 = grp_depthwise_conv2d_fix_fu_215_output_r_address0.read();
    } else {
        SeparableConv2D_0_m_s_address0 = "XXXXXXXXXX";
    }
}

void network::thread_SeparableConv2D_0_m_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        SeparableConv2D_0_m_s_ce0 = grp_pointwise_conv2d_fix_fu_230_SeparableConv2D_0_m_s_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        SeparableConv2D_0_m_s_ce0 = grp_depthwise_conv2d_fix_fu_215_output_r_ce0.read();
    } else {
        SeparableConv2D_0_m_s_ce0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_0_m_s_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        SeparableConv2D_0_m_s_we0 = grp_depthwise_conv2d_fix_fu_215_output_r_we0.read();
    } else {
        SeparableConv2D_0_m_s_we0 = ap_const_logic_0;
    }
}

void network::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[8];
}

void network::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void network::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[10];
}

void network::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void network::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void network::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void network::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void network::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void network::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void network::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void network::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void network::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void network::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state10_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read())));
}

void network::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state10_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_io.read())));
}

void network::thread_ap_block_state10_io() {
    ap_block_state10_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_in.read()));
}

void network::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void network::thread_ap_block_state11_io() {
    ap_block_state11_io = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_in.read()));
}

void network::thread_ap_block_state11_pp0_stage0_iter2() {
    ap_block_state11_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void network::thread_ap_block_state13() {
    ap_block_state13 = (esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_ack_in.read()));
}

void network::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read()));
}

void network::thread_ap_block_state3_ignore_call0() {
    ap_block_state3_ignore_call0 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read()));
}

void network::thread_ap_block_state9_pp0_stage0_iter0() {
    ap_block_state9_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void network::thread_ap_condition_pp0_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_333_p2.read())) {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state9 = ap_const_logic_0;
    }
}

void network::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_ack_in.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void network::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void network::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void network::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void network::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_ack_in.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void network::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void network::thread_array_length_cast_fu_287_p1() {
    array_length_cast_fu_287_p1 = esl_zext<49,48>(array_length_fu_281_p2.read());
}

void network::thread_array_length_fu_281_p0() {
    array_length_fu_281_p0 =  (sc_lv<32>) (array_length_fu_281_p00.read());
}

void network::thread_array_length_fu_281_p00() {
    array_length_fu_281_p00 = esl_zext<48,32>(tmp1_reg_370.read());
}

void network::thread_array_length_fu_281_p1() {
    array_length_fu_281_p1 =  (sc_lv<16>) (array_length_fu_281_p10.read());
}

void network::thread_array_length_fu_281_p10() {
    array_length_fu_281_p10 = esl_zext<48,16>(Padding2D_0_height.read());
}

void network::thread_array_length_fu_281_p2() {
    array_length_fu_281_p2 = (!array_length_fu_281_p0.read().is_01() || !array_length_fu_281_p1.read().is_01())? sc_lv<48>(): sc_biguint<32>(array_length_fu_281_p0.read()) * sc_biguint<16>(array_length_fu_281_p1.read());
}

void network::thread_exitcond3_fu_291_p2() {
    exitcond3_fu_291_p2 = (!i_reg_193.read().is_01() || !ap_const_lv10_310.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_193.read() == ap_const_lv10_310);
}

void network::thread_exitcond_fu_333_p2() {
    exitcond_fu_333_p2 = (!i1_reg_204.read().is_01() || !array_length_reg_375.read().is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_204.read() == array_length_reg_375.read());
}

void network::thread_grp_depthwise_conv2d_fix_fu_215_ap_start() {
    grp_depthwise_conv2d_fix_fu_215_ap_start = grp_depthwise_conv2d_fix_fu_215_ap_start_reg.read();
}

void network::thread_grp_padding2d_fix16_fu_244_ap_start() {
    grp_padding2d_fix16_fu_244_ap_start = grp_padding2d_fix16_fu_244_ap_start_reg.read();
}

void network::thread_grp_pointwise_conv2d_fix_fu_230_ap_start() {
    grp_pointwise_conv2d_fix_fu_230_ap_start = grp_pointwise_conv2d_fix_fu_230_ap_start_reg.read();
}

void network::thread_i1_cast2_fu_344_p1() {
    i1_cast2_fu_344_p1 = esl_zext<64,48>(i1_reg_204.read());
}

void network::thread_i1_cast_fu_349_p1() {
    i1_cast_fu_349_p1 = esl_zext<49,48>(i1_reg_204.read());
}

void network::thread_i_1_fu_297_p2() {
    i_1_fu_297_p2 = (!i_reg_193.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_193.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void network::thread_i_2_fu_338_p2() {
    i_2_fu_338_p2 = (!i1_reg_204.read().is_01() || !ap_const_lv48_1.is_01())? sc_lv<48>(): (sc_biguint<48>(i1_reg_204.read()) + sc_biguint<48>(ap_const_lv48_1));
}

void network::thread_input_0_array_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()))) {
        input_0_array_address0 =  (sc_lv<10>) (tmp_23_fu_308_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_0_array_address0 = grp_padding2d_fix16_fu_244_input_r_address0.read();
    } else {
        input_0_array_address0 = "XXXXXXXXXX";
    }
}

void network::thread_input_0_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read())))) {
        input_0_array_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_0_array_ce0 = grp_padding2d_fix16_fu_244_input_r_ce0.read();
    } else {
        input_0_array_ce0 = ap_const_logic_0;
    }
}

void network::thread_input_0_array_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read())))) {
        input_0_array_we0 = ap_const_logic_1;
    } else {
        input_0_array_we0 = ap_const_logic_0;
    }
}

void network::thread_input_data_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()))) {
        input_data_TDATA_blk_n = input_data_V_data_V_0_state.read()[0];
    } else {
        input_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void network::thread_input_data_TREADY() {
    input_data_TREADY = input_data_V_dest_V_0_state.read()[1];
}

void network::thread_input_data_V_data_V_0_ack_in() {
    input_data_V_data_V_0_ack_in = input_data_V_data_V_0_state.read()[1];
}

void network::thread_input_data_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read())))) {
        input_data_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_V_data_V_0_sel.read())) {
        input_data_V_data_V_0_data_out = input_data_V_data_V_0_payload_B.read();
    } else {
        input_data_V_data_V_0_data_out = input_data_V_data_V_0_payload_A.read();
    }
}

void network::thread_input_data_V_data_V_0_load_A() {
    input_data_V_data_V_0_load_A = (input_data_V_data_V_0_state_cmp_full.read() & ~input_data_V_data_V_0_sel_wr.read());
}

void network::thread_input_data_V_data_V_0_load_B() {
    input_data_V_data_V_0_load_B = (input_data_V_data_V_0_sel_wr.read() & input_data_V_data_V_0_state_cmp_full.read());
}

void network::thread_input_data_V_data_V_0_sel() {
    input_data_V_data_V_0_sel = input_data_V_data_V_0_sel_rd.read();
}

void network::thread_input_data_V_data_V_0_state_cmp_full() {
    input_data_V_data_V_0_state_cmp_full =  (sc_logic) ((!input_data_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_data_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void network::thread_input_data_V_data_V_0_vld_in() {
    input_data_V_data_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_input_data_V_data_V_0_vld_out() {
    input_data_V_data_V_0_vld_out = input_data_V_data_V_0_state.read()[0];
}

void network::thread_input_data_V_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read())))) {
        input_data_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_V_dest_V_0_vld_in() {
    input_data_V_dest_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_output_data_TDATA() {
    output_data_TDATA = output_data_V_data_V_1_data_out.read();
}

void network::thread_output_data_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431_pp0_iter1_reg.read())))) {
        output_data_TDATA_blk_n = output_data_V_data_V_1_state.read()[1];
    } else {
        output_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void network::thread_output_data_TDEST() {
    output_data_TDEST = output_data_V_dest_V_1_data_out.read();
}

void network::thread_output_data_TID() {
    output_data_TID = output_data_V_id_V_1_data_out.read();
}

void network::thread_output_data_TKEEP() {
    output_data_TKEEP = output_data_V_keep_V_1_data_out.read();
}

void network::thread_output_data_TLAST() {
    output_data_TLAST = output_data_V_last_V_1_data_out.read();
}

void network::thread_output_data_TSTRB() {
    output_data_TSTRB = output_data_V_strb_V_1_data_out.read();
}

void network::thread_output_data_TUSER() {
    output_data_TUSER = output_data_V_user_V_1_data_out.read();
}

void network::thread_output_data_TVALID() {
    output_data_TVALID = output_data_V_dest_V_1_state.read()[0];
}

void network::thread_output_data_V_data_V_1_ack_in() {
    output_data_V_data_V_1_ack_in = output_data_V_data_V_1_state.read()[1];
}

void network::thread_output_data_V_data_V_1_ack_out() {
    output_data_V_data_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_data_V_1_sel.read())) {
        output_data_V_data_V_1_data_out = output_data_V_data_V_1_payload_B.read();
    } else {
        output_data_V_data_V_1_data_out = output_data_V_data_V_1_payload_A.read();
    }
}

void network::thread_output_data_V_data_V_1_load_A() {
    output_data_V_data_V_1_load_A = (output_data_V_data_V_1_state_cmp_full.read() & ~output_data_V_data_V_1_sel_wr.read());
}

void network::thread_output_data_V_data_V_1_load_B() {
    output_data_V_data_V_1_load_B = (output_data_V_data_V_1_sel_wr.read() & output_data_V_data_V_1_state_cmp_full.read());
}

void network::thread_output_data_V_data_V_1_sel() {
    output_data_V_data_V_1_sel = output_data_V_data_V_1_sel_rd.read();
}

void network::thread_output_data_V_data_V_1_state_cmp_full() {
    output_data_V_data_V_1_state_cmp_full =  (sc_logic) ((!output_data_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_data_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_V_data_V_1_vld_out() {
    output_data_V_data_V_1_vld_out = output_data_V_data_V_1_state.read()[0];
}

void network::thread_output_data_V_dest_V_1_ack_in() {
    output_data_V_dest_V_1_ack_in = output_data_V_dest_V_1_state.read()[1];
}

void network::thread_output_data_V_dest_V_1_ack_out() {
    output_data_V_dest_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_V_dest_V_1_data_out() {
    output_data_V_dest_V_1_data_out = ap_const_lv1_0;
}

void network::thread_output_data_V_dest_V_1_sel() {
    output_data_V_dest_V_1_sel = output_data_V_dest_V_1_sel_rd.read();
}

void network::thread_output_data_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_data_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_V_dest_V_1_vld_out() {
    output_data_V_dest_V_1_vld_out = output_data_V_dest_V_1_state.read()[0];
}

void network::thread_output_data_V_id_V_1_ack_in() {
    output_data_V_id_V_1_ack_in = output_data_V_id_V_1_state.read()[1];
}

void network::thread_output_data_V_id_V_1_ack_out() {
    output_data_V_id_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_V_id_V_1_data_out() {
    output_data_V_id_V_1_data_out = ap_const_lv1_0;
}

void network::thread_output_data_V_id_V_1_sel() {
    output_data_V_id_V_1_sel = output_data_V_id_V_1_sel_rd.read();
}

void network::thread_output_data_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_data_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_V_id_V_1_vld_out() {
    output_data_V_id_V_1_vld_out = output_data_V_id_V_1_state.read()[0];
}

void network::thread_output_data_V_keep_V_1_ack_in() {
    output_data_V_keep_V_1_ack_in = output_data_V_keep_V_1_state.read()[1];
}

void network::thread_output_data_V_keep_V_1_ack_out() {
    output_data_V_keep_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_V_keep_V_1_data_out() {
    output_data_V_keep_V_1_data_out = ap_const_lv2_0;
}

void network::thread_output_data_V_keep_V_1_sel() {
    output_data_V_keep_V_1_sel = output_data_V_keep_V_1_sel_rd.read();
}

void network::thread_output_data_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_data_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_V_keep_V_1_vld_out() {
    output_data_V_keep_V_1_vld_out = output_data_V_keep_V_1_state.read()[0];
}

void network::thread_output_data_V_last_V_1_ack_in() {
    output_data_V_last_V_1_ack_in = output_data_V_last_V_1_state.read()[1];
}

void network::thread_output_data_V_last_V_1_ack_out() {
    output_data_V_last_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_last_V_1_sel.read())) {
        output_data_V_last_V_1_data_out = output_data_V_last_V_1_payload_B.read();
    } else {
        output_data_V_last_V_1_data_out = output_data_V_last_V_1_payload_A.read();
    }
}

void network::thread_output_data_V_last_V_1_load_A() {
    output_data_V_last_V_1_load_A = (output_data_V_last_V_1_state_cmp_full.read() & ~output_data_V_last_V_1_sel_wr.read());
}

void network::thread_output_data_V_last_V_1_load_B() {
    output_data_V_last_V_1_load_B = (output_data_V_last_V_1_sel_wr.read() & output_data_V_last_V_1_state_cmp_full.read());
}

void network::thread_output_data_V_last_V_1_sel() {
    output_data_V_last_V_1_sel = output_data_V_last_V_1_sel_rd.read();
}

void network::thread_output_data_V_last_V_1_state_cmp_full() {
    output_data_V_last_V_1_state_cmp_full =  (sc_logic) ((!output_data_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_data_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_V_last_V_1_vld_out() {
    output_data_V_last_V_1_vld_out = output_data_V_last_V_1_state.read()[0];
}

void network::thread_output_data_V_strb_V_1_ack_in() {
    output_data_V_strb_V_1_ack_in = output_data_V_strb_V_1_state.read()[1];
}

void network::thread_output_data_V_strb_V_1_ack_out() {
    output_data_V_strb_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_V_strb_V_1_data_out() {
    output_data_V_strb_V_1_data_out = ap_const_lv2_0;
}

void network::thread_output_data_V_strb_V_1_sel() {
    output_data_V_strb_V_1_sel = output_data_V_strb_V_1_sel_rd.read();
}

void network::thread_output_data_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_data_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_V_strb_V_1_vld_out() {
    output_data_V_strb_V_1_vld_out = output_data_V_strb_V_1_state.read()[0];
}

void network::thread_output_data_V_user_V_1_ack_in() {
    output_data_V_user_V_1_ack_in = output_data_V_user_V_1_state.read()[1];
}

void network::thread_output_data_V_user_V_1_ack_out() {
    output_data_V_user_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_V_user_V_1_sel.read())) {
        output_data_V_user_V_1_data_out = output_data_V_user_V_1_payload_B.read();
    } else {
        output_data_V_user_V_1_data_out = output_data_V_user_V_1_payload_A.read();
    }
}

void network::thread_output_data_V_user_V_1_load_A() {
    output_data_V_user_V_1_load_A = (output_data_V_user_V_1_state_cmp_full.read() & ~output_data_V_user_V_1_sel_wr.read());
}

void network::thread_output_data_V_user_V_1_load_B() {
    output_data_V_user_V_1_load_B = (output_data_V_user_V_1_sel_wr.read() & output_data_V_user_V_1_state_cmp_full.read());
}

void network::thread_output_data_V_user_V_1_sel() {
    output_data_V_user_V_1_sel = output_data_V_user_V_1_sel_rd.read();
}

void network::thread_output_data_V_user_V_1_state_cmp_full() {
    output_data_V_user_V_1_state_cmp_full =  (sc_logic) ((!output_data_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_431.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_data_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_V_user_V_1_vld_out() {
    output_data_V_user_V_1_vld_out = output_data_V_user_V_1_state.read()[0];
}

void network::thread_tmp1_fu_364_p0() {
    tmp1_fu_364_p0 =  (sc_lv<16>) (tmp1_fu_364_p00.read());
}

void network::thread_tmp1_fu_364_p00() {
    tmp1_fu_364_p00 = esl_zext<32,16>(Padding2D_0_depth.read());
}

void network::thread_tmp1_fu_364_p1() {
    tmp1_fu_364_p1 =  (sc_lv<16>) (tmp1_fu_364_p10.read());
}

void network::thread_tmp1_fu_364_p10() {
    tmp1_fu_364_p10 = esl_zext<32,16>(Padding2D_0_width.read());
}

void network::thread_tmp_22_fu_328_p2() {
    tmp_22_fu_328_p2 = (!array_length_cast_reg_380.read().is_01() || !ap_const_lv49_1FFFFFFFFFFFF.is_01())? sc_lv<49>(): (sc_biguint<49>(array_length_cast_reg_380.read()) + sc_bigint<49>(ap_const_lv49_1FFFFFFFFFFFF));
}

void network::thread_tmp_23_fu_308_p1() {
    tmp_23_fu_308_p1 = esl_zext<64,10>(i_reg_193.read());
}

void network::thread_tmp_last_V_fu_359_p2() {
    tmp_last_V_fu_359_p2 = (!i1_cast_fu_349_p1.read().is_01() || !tmp_22_reg_426.read().is_01())? sc_lv<1>(): sc_lv<1>(i1_cast_fu_349_p1.read() == tmp_22_reg_426.read());
}

void network::thread_tmp_user_V_fu_353_p2() {
    tmp_user_V_fu_353_p2 = (!i1_reg_204.read().is_01() || !ap_const_lv48_0.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_204.read() == ap_const_lv48_0);
}

void network::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_291_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_V_data_V_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_291_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_padding2d_fix16_fu_244_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_depthwise_conv2d_fix_fu_215_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_fu_230_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_333_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_333_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_data_V_dest_V_1_ack_in.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void network::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TDATA\" :  \"" << input_data_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TVALID\" :  \"" << input_data_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_data_TREADY\" :  \"" << input_data_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TKEEP\" :  \"" << input_data_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TSTRB\" :  \"" << input_data_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TUSER\" :  \"" << input_data_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TLAST\" :  \"" << input_data_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TID\" :  \"" << input_data_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TDEST\" :  \"" << input_data_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TDATA\" :  \"" << output_data_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TVALID\" :  \"" << output_data_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_data_TREADY\" :  \"" << output_data_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TKEEP\" :  \"" << output_data_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TSTRB\" :  \"" << output_data_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TUSER\" :  \"" << output_data_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TLAST\" :  \"" << output_data_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TID\" :  \"" << output_data_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TDEST\" :  \"" << output_data_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

