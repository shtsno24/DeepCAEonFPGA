// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv2d_fix_HH_
#define _pointwise_conv2d_fix_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mul_mul_16s_15s_30_1_1.h"
#include "pointwise_conv2d_fix_SeparableConv2D_0_b_s.h"
#include "pointwise_conv2d_fix_SeparableConv2D_0_w_s.h"

namespace ap_rtl {

struct pointwise_conv2d_fix : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    pointwise_conv2d_fix(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv2d_fix);

    ~pointwise_conv2d_fix();

    sc_trace_file* mVcdFile;

    pointwise_conv2d_fix_SeparableConv2D_0_b_s* SeparableConv2D_0_b_s_U;
    pointwise_conv2d_fix_SeparableConv2D_0_w_s* SeparableConv2D_0_w_s_U;
    network_mul_mul_16s_15s_30_1_1<1,1,16,15,30>* network_mul_mul_16s_15s_30_1_1_U11;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > SeparableConv2D_0_b_s_address0;
    sc_signal< sc_logic > SeparableConv2D_0_b_s_ce0;
    sc_signal< sc_lv<13> > SeparableConv2D_0_b_s_q0;
    sc_signal< sc_lv<4> > SeparableConv2D_0_w_s_address0;
    sc_signal< sc_logic > SeparableConv2D_0_w_s_ce0;
    sc_signal< sc_lv<15> > SeparableConv2D_0_w_s_q0;
    sc_signal< sc_lv<15> > phi_mul_cast_fu_146_p1;
    sc_signal< sc_lv<15> > phi_mul_cast_reg_340;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > next_mul_fu_150_p2;
    sc_signal< sc_lv<14> > next_mul_reg_345;
    sc_signal< sc_lv<5> > out_d_2_fu_162_p2;
    sc_signal< sc_lv<5> > out_d_2_reg_353;
    sc_signal< sc_lv<1> > exitcond3_fu_156_p2;
    sc_signal< sc_lv<16> > SeparableConv2D_0_b_3_fu_182_p1;
    sc_signal< sc_lv<16> > SeparableConv2D_0_b_3_reg_368;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<15> > tmp_3_fu_186_p1;
    sc_signal< sc_lv<15> > tmp_3_reg_373;
    sc_signal< sc_lv<30> > tmp_33_cast_fu_190_p1;
    sc_signal< sc_lv<30> > tmp_33_cast_reg_378;
    sc_signal< sc_lv<5> > out_h_2_fu_200_p2;
    sc_signal< sc_lv<5> > out_h_2_reg_386;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > tmp_7_fu_230_p2;
    sc_signal< sc_lv<11> > tmp_7_reg_391;
    sc_signal< sc_lv<1> > exitcond2_fu_194_p2;
    sc_signal< sc_lv<5> > out_w_2_fu_242_p2;
    sc_signal< sc_lv<5> > out_w_2_reg_399;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<15> > tmp_8_fu_261_p2;
    sc_signal< sc_lv<15> > tmp_8_reg_404;
    sc_signal< sc_lv<1> > exitcond1_fu_236_p2;
    sc_signal< sc_lv<16> > input_load_reg_414;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > tmp_18_reg_419;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<15> > tmp_4_reg_424;
    sc_signal< sc_lv<5> > out_d_reg_102;
    sc_signal< sc_lv<14> > phi_mul_reg_113;
    sc_signal< sc_lv<5> > out_h_reg_124;
    sc_signal< sc_lv<5> > out_w_reg_135;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_6_fu_172_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_177_p1;
    sc_signal< sc_lv<64> > tmp_13_fu_270_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_299_p1;
    sc_signal< sc_lv<4> > tmp_17_fu_168_p1;
    sc_signal< sc_lv<13> > SeparableConv2D_0_b_3_fu_182_p0;
    sc_signal< sc_lv<13> > tmp_3_fu_186_p0;
    sc_signal< sc_lv<10> > p_shl_fu_206_p3;
    sc_signal< sc_lv<7> > p_shl1_fu_218_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_214_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_226_p1;
    sc_signal< sc_lv<11> > tmp_19_cast_fu_248_p1;
    sc_signal< sc_lv<11> > tmp_fu_252_p2;
    sc_signal< sc_lv<15> > tmp_cast_fu_257_p1;
    sc_signal< sc_lv<32> > tmp_28_cast_fu_266_p1;
    sc_signal< sc_lv<30> > tmp_16_fu_333_p2;
    sc_signal< sc_lv<32> > tmp_21_cast_fu_296_p1;
    sc_signal< sc_lv<16> > tmp_10_fu_304_p2;
    sc_signal< sc_lv<1> > tmp_19_fu_312_p3;
    sc_signal< sc_lv<15> > tmp_23_cast_fu_308_p2;
    sc_signal< sc_lv<15> > p_tmp_s_fu_320_p3;
    sc_signal< sc_lv<15> > tmp_16_fu_333_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<14> ap_const_lv14_310;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<15> ap_const_lv15_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_SeparableConv2D_0_b_3_fu_182_p0();
    void thread_SeparableConv2D_0_b_3_fu_182_p1();
    void thread_SeparableConv2D_0_b_s_address0();
    void thread_SeparableConv2D_0_b_s_ce0();
    void thread_SeparableConv2D_0_w_s_address0();
    void thread_SeparableConv2D_0_w_s_ce0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_236_p2();
    void thread_exitcond2_fu_194_p2();
    void thread_exitcond3_fu_156_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_next_mul_fu_150_p2();
    void thread_out_d_2_fu_162_p2();
    void thread_out_h_2_fu_200_p2();
    void thread_out_w_2_fu_242_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_226_p1();
    void thread_p_shl1_fu_218_p3();
    void thread_p_shl_cast_fu_214_p1();
    void thread_p_shl_fu_206_p3();
    void thread_p_tmp_s_fu_320_p3();
    void thread_phi_mul_cast_fu_146_p1();
    void thread_tmp_10_fu_304_p2();
    void thread_tmp_13_fu_270_p1();
    void thread_tmp_15_fu_177_p1();
    void thread_tmp_16_fu_333_p1();
    void thread_tmp_17_fu_168_p1();
    void thread_tmp_19_cast_fu_248_p1();
    void thread_tmp_19_fu_312_p3();
    void thread_tmp_21_cast_fu_296_p1();
    void thread_tmp_23_cast_fu_308_p2();
    void thread_tmp_28_cast_fu_266_p1();
    void thread_tmp_33_cast_fu_190_p1();
    void thread_tmp_3_fu_186_p0();
    void thread_tmp_3_fu_186_p1();
    void thread_tmp_6_fu_172_p1();
    void thread_tmp_7_fu_230_p2();
    void thread_tmp_8_fu_261_p2();
    void thread_tmp_9_fu_299_p1();
    void thread_tmp_cast_fu_257_p1();
    void thread_tmp_fu_252_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
