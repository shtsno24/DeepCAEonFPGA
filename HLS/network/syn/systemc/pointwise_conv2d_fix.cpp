// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv2d_fix.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv2d_fix::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv2d_fix::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state1 = "1";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state2 = "10";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state3 = "100";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state4 = "1000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state5 = "10000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state6 = "100000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> pointwise_conv2d_fix::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_1 = "1";
const sc_lv<1> pointwise_conv2d_fix::ap_const_lv1_0 = "0";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_2 = "10";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_3 = "11";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_4 = "100";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_5 = "101";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_6 = "110";
const sc_lv<1> pointwise_conv2d_fix::ap_const_lv1_1 = "1";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_7 = "111";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_8 = "1000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_9 = "1001";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_A = "1010";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_B = "1011";
const sc_lv<16> pointwise_conv2d_fix::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_C = "1100";
const sc_lv<16> pointwise_conv2d_fix::ap_const_lv16_1 = "1";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_F = "1111";
const sc_lv<15> pointwise_conv2d_fix::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_E = "1110";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_1A = "11010";
const sc_lv<27> pointwise_conv2d_fix::ap_const_lv27_265 = "1001100101";
const bool pointwise_conv2d_fix::ap_const_boolean_1 = true;

pointwise_conv2d_fix::pointwise_conv2d_fix(sc_module_name name) : sc_module(name), mVcdFile(0) {
    SeparableConv2D_0_b_s_U = new pointwise_conv2d_fix_SeparableConv2D_0_b_s("SeparableConv2D_0_b_s_U");
    SeparableConv2D_0_b_s_U->clk(ap_clk);
    SeparableConv2D_0_b_s_U->reset(ap_rst);
    SeparableConv2D_0_b_s_U->address0(SeparableConv2D_0_b_s_address0);
    SeparableConv2D_0_b_s_U->ce0(SeparableConv2D_0_b_s_ce0);
    SeparableConv2D_0_b_s_U->q0(SeparableConv2D_0_b_s_q0);
    network_mul_mul_16s_11ns_27_1_1_U17 = new network_mul_mul_16s_11ns_27_1_1<1,1,16,11,27>("network_mul_mul_16s_11ns_27_1_1_U17");
    network_mul_mul_16s_11ns_27_1_1_U17->din0(SeparableConv2D_0_m_2_reg_497);
    network_mul_mul_16s_11ns_27_1_1_U17->din1(tmp_29_fu_356_p1);
    network_mul_mul_16s_11ns_27_1_1_U17->dout(tmp_29_fu_356_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SeparableConv2D_0_b_3_fu_209_p0);
    sensitive << ( SeparableConv2D_0_b_s_q0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_SeparableConv2D_0_b_3_fu_209_p1);
    sensitive << ( SeparableConv2D_0_b_3_fu_209_p0 );

    SC_METHOD(thread_SeparableConv2D_0_b_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_18_fu_204_p1 );

    SC_METHOD(thread_SeparableConv2D_0_b_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_SeparableConv2D_0_m_s_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_28_fu_326_p1 );

    SC_METHOD(thread_SeparableConv2D_0_m_s_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_193_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_193_p2 );

    SC_METHOD(thread_exitcond1_fu_242_p2);
    sensitive << ( input_width );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( out_w_reg_134 );

    SC_METHOD(thread_exitcond2_fu_217_p2);
    sensitive << ( input_height );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( out_h_reg_123 );

    SC_METHOD(thread_exitcond3_fu_193_p2);
    sensitive << ( output_depth );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_d_reg_100 );

    SC_METHOD(thread_exitcond_fu_267_p2);
    sensitive << ( input_depth );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( in_d_reg_158 );

    SC_METHOD(thread_in_d_1_fu_272_p2);
    sensitive << ( in_d_reg_158 );

    SC_METHOD(thread_next_mul2_fu_188_p2);
    sensitive << ( tmp_s_reg_383 );
    sensitive << ( phi_mul1_reg_111 );

    SC_METHOD(thread_next_mul_fu_278_p2);
    sensitive << ( tmp_s_reg_383 );
    sensitive << ( phi_mul_reg_169 );

    SC_METHOD(thread_out_d_2_fu_198_p2);
    sensitive << ( out_d_reg_100 );

    SC_METHOD(thread_out_h_2_fu_222_p2);
    sensitive << ( out_h_reg_123 );

    SC_METHOD(thread_out_w_2_fu_247_p2);
    sensitive << ( out_w_reg_134 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( output_addr_reg_459 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( output_load_1_reg_145 );
    sensitive << ( p_tmp_cast_fu_352_p1 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_p_tmp_cast_fu_352_p1);
    sensitive << ( p_tmp_s_reg_482 );

    SC_METHOD(thread_p_tmp_s_fu_310_p3);
    sensitive << ( tmp_10_fu_302_p3 );
    sensitive << ( tmp_23_cast_fu_297_p2 );

    SC_METHOD(thread_tmp1_fu_238_p1);
    sensitive << ( tmp_15_reg_389 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp1_fu_238_p2);
    sensitive << ( tmp_reg_436 );
    sensitive << ( tmp1_fu_238_p1 );

    SC_METHOD(thread_tmp2_fu_283_p2);
    sensitive << ( tmp_19_reg_431 );
    sensitive << ( phi_mul_reg_169 );

    SC_METHOD(thread_tmp3_fu_318_p1);
    sensitive << ( tmp_15_reg_389 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_tmp3_fu_318_p2);
    sensitive << ( tmp2_reg_477 );
    sensitive << ( tmp3_fu_318_p1 );

    SC_METHOD(thread_tmp_10_fu_302_p3);
    sensitive << ( tmp_23_fu_292_p2 );

    SC_METHOD(thread_tmp_15_fu_184_p1);
    sensitive << ( input_width );

    SC_METHOD(thread_tmp_18_fu_204_p1);
    sensitive << ( out_d_reg_100 );

    SC_METHOD(thread_tmp_19_fu_228_p1);
    sensitive << ( out_h_reg_123 );

    SC_METHOD(thread_tmp_1_fu_213_p0);
    sensitive << ( SeparableConv2D_0_b_s_q0 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_1_fu_213_p1);
    sensitive << ( tmp_1_fu_213_p0 );

    SC_METHOD(thread_tmp_20_fu_253_p1);
    sensitive << ( out_w_reg_134 );

    SC_METHOD(thread_tmp_21_fu_257_p2);
    sensitive << ( tmp1_reg_441 );
    sensitive << ( tmp_20_fu_253_p1 );

    SC_METHOD(thread_tmp_22_fu_262_p1);
    sensitive << ( tmp_21_fu_257_p2 );

    SC_METHOD(thread_tmp_23_cast_fu_297_p2);
    sensitive << ( tmp_1_reg_418 );
    sensitive << ( tmp_9_fu_288_p1 );

    SC_METHOD(thread_tmp_23_fu_292_p2);
    sensitive << ( SeparableConv2D_0_b_3_reg_413 );
    sensitive << ( output_load_1_reg_145 );

    SC_METHOD(thread_tmp_27_fu_322_p2);
    sensitive << ( tmp_20_reg_454 );
    sensitive << ( tmp3_reg_487 );

    SC_METHOD(thread_tmp_28_fu_326_p1);
    sensitive << ( tmp_27_fu_322_p2 );

    SC_METHOD(thread_tmp_29_fu_356_p1);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_tmp_30_fu_346_p2);
    sensitive << ( output_load_1_reg_145 );
    sensitive << ( tmp_5_fu_343_p1 );

    SC_METHOD(thread_tmp_5_fu_343_p1);
    sensitive << ( tmp_4_reg_502 );

    SC_METHOD(thread_tmp_9_fu_288_p1);
    sensitive << ( output_load_1_reg_145 );

    SC_METHOD(thread_tmp_fu_232_p2);
    sensitive << ( tmp_19_fu_228_p1 );
    sensitive << ( phi_mul1_reg_111 );

    SC_METHOD(thread_tmp_s_fu_180_p1);
    sensitive << ( input_height );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_193_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond2_fu_217_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond1_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond_fu_267_p2 );

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv2d_fix_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_depth, "(port)input_depth");
    sc_trace(mVcdFile, input_height, "(port)input_height");
    sc_trace(mVcdFile, input_width, "(port)input_width");
    sc_trace(mVcdFile, output_depth, "(port)output_depth");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, SeparableConv2D_0_m_s_address0, "(port)SeparableConv2D_0_m_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_0_m_s_ce0, "(port)SeparableConv2D_0_m_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_0_m_s_q0, "(port)SeparableConv2D_0_m_s_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_address0, "SeparableConv2D_0_b_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_ce0, "SeparableConv2D_0_b_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_q0, "SeparableConv2D_0_b_s_q0");
    sc_trace(mVcdFile, tmp_s_fu_180_p1, "tmp_s_fu_180_p1");
    sc_trace(mVcdFile, tmp_s_reg_383, "tmp_s_reg_383");
    sc_trace(mVcdFile, tmp_15_fu_184_p1, "tmp_15_fu_184_p1");
    sc_trace(mVcdFile, tmp_15_reg_389, "tmp_15_reg_389");
    sc_trace(mVcdFile, next_mul2_fu_188_p2, "next_mul2_fu_188_p2");
    sc_trace(mVcdFile, next_mul2_reg_395, "next_mul2_reg_395");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, out_d_2_fu_198_p2, "out_d_2_fu_198_p2");
    sc_trace(mVcdFile, out_d_2_reg_403, "out_d_2_reg_403");
    sc_trace(mVcdFile, exitcond3_fu_193_p2, "exitcond3_fu_193_p2");
    sc_trace(mVcdFile, SeparableConv2D_0_b_3_fu_209_p1, "SeparableConv2D_0_b_3_fu_209_p1");
    sc_trace(mVcdFile, SeparableConv2D_0_b_3_reg_413, "SeparableConv2D_0_b_3_reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_1_fu_213_p1, "tmp_1_fu_213_p1");
    sc_trace(mVcdFile, tmp_1_reg_418, "tmp_1_reg_418");
    sc_trace(mVcdFile, out_h_2_fu_222_p2, "out_h_2_fu_222_p2");
    sc_trace(mVcdFile, out_h_2_reg_426, "out_h_2_reg_426");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_19_fu_228_p1, "tmp_19_fu_228_p1");
    sc_trace(mVcdFile, tmp_19_reg_431, "tmp_19_reg_431");
    sc_trace(mVcdFile, exitcond2_fu_217_p2, "exitcond2_fu_217_p2");
    sc_trace(mVcdFile, tmp_fu_232_p2, "tmp_fu_232_p2");
    sc_trace(mVcdFile, tmp_reg_436, "tmp_reg_436");
    sc_trace(mVcdFile, tmp1_fu_238_p2, "tmp1_fu_238_p2");
    sc_trace(mVcdFile, tmp1_reg_441, "tmp1_reg_441");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, out_w_2_fu_247_p2, "out_w_2_fu_247_p2");
    sc_trace(mVcdFile, out_w_2_reg_449, "out_w_2_reg_449");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_20_fu_253_p1, "tmp_20_fu_253_p1");
    sc_trace(mVcdFile, tmp_20_reg_454, "tmp_20_reg_454");
    sc_trace(mVcdFile, exitcond1_fu_242_p2, "exitcond1_fu_242_p2");
    sc_trace(mVcdFile, output_addr_reg_459, "output_addr_reg_459");
    sc_trace(mVcdFile, in_d_1_fu_272_p2, "in_d_1_fu_272_p2");
    sc_trace(mVcdFile, in_d_1_reg_467, "in_d_1_reg_467");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, next_mul_fu_278_p2, "next_mul_fu_278_p2");
    sc_trace(mVcdFile, next_mul_reg_472, "next_mul_reg_472");
    sc_trace(mVcdFile, exitcond_fu_267_p2, "exitcond_fu_267_p2");
    sc_trace(mVcdFile, tmp2_fu_283_p2, "tmp2_fu_283_p2");
    sc_trace(mVcdFile, tmp2_reg_477, "tmp2_reg_477");
    sc_trace(mVcdFile, p_tmp_s_fu_310_p3, "p_tmp_s_fu_310_p3");
    sc_trace(mVcdFile, p_tmp_s_reg_482, "p_tmp_s_reg_482");
    sc_trace(mVcdFile, tmp3_fu_318_p2, "tmp3_fu_318_p2");
    sc_trace(mVcdFile, tmp3_reg_487, "tmp3_reg_487");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, SeparableConv2D_0_m_2_reg_497, "SeparableConv2D_0_m_2_reg_497");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_4_reg_502, "tmp_4_reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_30_fu_346_p2, "tmp_30_fu_346_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, out_d_reg_100, "out_d_reg_100");
    sc_trace(mVcdFile, phi_mul1_reg_111, "phi_mul1_reg_111");
    sc_trace(mVcdFile, out_h_reg_123, "out_h_reg_123");
    sc_trace(mVcdFile, out_w_reg_134, "out_w_reg_134");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, output_load_1_reg_145, "output_load_1_reg_145");
    sc_trace(mVcdFile, in_d_reg_158, "in_d_reg_158");
    sc_trace(mVcdFile, phi_mul_reg_169, "phi_mul_reg_169");
    sc_trace(mVcdFile, tmp_18_fu_204_p1, "tmp_18_fu_204_p1");
    sc_trace(mVcdFile, tmp_22_fu_262_p1, "tmp_22_fu_262_p1");
    sc_trace(mVcdFile, tmp_28_fu_326_p1, "tmp_28_fu_326_p1");
    sc_trace(mVcdFile, p_tmp_cast_fu_352_p1, "p_tmp_cast_fu_352_p1");
    sc_trace(mVcdFile, SeparableConv2D_0_b_3_fu_209_p0, "SeparableConv2D_0_b_3_fu_209_p0");
    sc_trace(mVcdFile, tmp_1_fu_213_p0, "tmp_1_fu_213_p0");
    sc_trace(mVcdFile, tmp1_fu_238_p1, "tmp1_fu_238_p1");
    sc_trace(mVcdFile, tmp_21_fu_257_p2, "tmp_21_fu_257_p2");
    sc_trace(mVcdFile, tmp_9_fu_288_p1, "tmp_9_fu_288_p1");
    sc_trace(mVcdFile, tmp_23_fu_292_p2, "tmp_23_fu_292_p2");
    sc_trace(mVcdFile, tmp_10_fu_302_p3, "tmp_10_fu_302_p3");
    sc_trace(mVcdFile, tmp_23_cast_fu_297_p2, "tmp_23_cast_fu_297_p2");
    sc_trace(mVcdFile, tmp3_fu_318_p1, "tmp3_fu_318_p1");
    sc_trace(mVcdFile, tmp_27_fu_322_p2, "tmp_27_fu_322_p2");
    sc_trace(mVcdFile, tmp_29_fu_356_p2, "tmp_29_fu_356_p2");
    sc_trace(mVcdFile, tmp_5_fu_343_p1, "tmp_5_fu_343_p1");
    sc_trace(mVcdFile, tmp_29_fu_356_p1, "tmp_29_fu_356_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pointwise_conv2d_fix::~pointwise_conv2d_fix() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete SeparableConv2D_0_b_s_U;
    delete network_mul_mul_16s_11ns_27_1_1_U17;
}

void pointwise_conv2d_fix::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        in_d_reg_158 = in_d_1_reg_467.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_242_p2.read()))) {
        in_d_reg_158 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_217_p2.read(), ap_const_lv1_1))) {
        out_d_reg_100 = out_d_2_reg_403.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_d_reg_100 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_242_p2.read(), ap_const_lv1_1))) {
        out_h_reg_123 = out_h_2_reg_426.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_h_reg_123 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_w_reg_134 = ap_const_lv16_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        out_w_reg_134 = out_w_2_reg_449.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_load_1_reg_145 = tmp_30_fu_346_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_242_p2.read()))) {
        output_load_1_reg_145 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_217_p2.read(), ap_const_lv1_1))) {
        phi_mul1_reg_111 = next_mul2_reg_395.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul1_reg_111 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        phi_mul_reg_169 = next_mul_reg_472.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_242_p2.read()))) {
        phi_mul_reg_169 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        SeparableConv2D_0_b_3_reg_413 = SeparableConv2D_0_b_3_fu_209_p1.read();
        tmp_1_reg_418 = tmp_1_fu_213_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        SeparableConv2D_0_m_2_reg_497 = SeparableConv2D_0_m_s_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in_d_1_reg_467 = in_d_1_fu_272_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul2_reg_395 = next_mul2_fu_188_p2.read();
        out_d_2_reg_403 = out_d_2_fu_198_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_267_p2.read()))) {
        next_mul_reg_472 = next_mul_fu_278_p2.read();
        tmp2_reg_477 = tmp2_fu_283_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_h_2_reg_426 = out_h_2_fu_222_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_w_2_reg_449 = out_w_2_fu_247_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_242_p2.read()))) {
        output_addr_reg_459 =  (sc_lv<14>) (tmp_22_fu_262_p1.read());
        tmp_20_reg_454 = tmp_20_fu_253_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond_fu_267_p2.read(), ap_const_lv1_1))) {
        p_tmp_s_reg_482 = p_tmp_s_fu_310_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp1_reg_441 = tmp1_fu_238_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        tmp3_reg_487 = tmp3_fu_318_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        tmp_15_reg_389 = tmp_15_fu_184_p1.read();
        tmp_s_reg_383 = tmp_s_fu_180_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_217_p2.read()))) {
        tmp_19_reg_431 = tmp_19_fu_228_p1.read();
        tmp_reg_436 = tmp_fu_232_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp_4_reg_502 = tmp_29_fu_356_p2.read().range(26, 14);
    }
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_b_3_fu_209_p0() {
    SeparableConv2D_0_b_3_fu_209_p0 = SeparableConv2D_0_b_s_q0.read();
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_b_3_fu_209_p1() {
    SeparableConv2D_0_b_3_fu_209_p1 = esl_sext<16,12>(SeparableConv2D_0_b_3_fu_209_p0.read());
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_b_s_address0() {
    SeparableConv2D_0_b_s_address0 =  (sc_lv<4>) (tmp_18_fu_204_p1.read());
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_b_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        SeparableConv2D_0_b_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_0_b_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_m_s_address0() {
    SeparableConv2D_0_m_s_address0 =  (sc_lv<10>) (tmp_28_fu_326_p1.read());
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_m_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        SeparableConv2D_0_m_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_0_m_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void pointwise_conv2d_fix::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(exitcond3_fu_193_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_193_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_exitcond1_fu_242_p2() {
    exitcond1_fu_242_p2 = (!out_w_reg_134.read().is_01() || !input_width.read().is_01())? sc_lv<1>(): sc_lv<1>(out_w_reg_134.read() == input_width.read());
}

void pointwise_conv2d_fix::thread_exitcond2_fu_217_p2() {
    exitcond2_fu_217_p2 = (!out_h_reg_123.read().is_01() || !input_height.read().is_01())? sc_lv<1>(): sc_lv<1>(out_h_reg_123.read() == input_height.read());
}

void pointwise_conv2d_fix::thread_exitcond3_fu_193_p2() {
    exitcond3_fu_193_p2 = (!out_d_reg_100.read().is_01() || !output_depth.read().is_01())? sc_lv<1>(): sc_lv<1>(out_d_reg_100.read() == output_depth.read());
}

void pointwise_conv2d_fix::thread_exitcond_fu_267_p2() {
    exitcond_fu_267_p2 = (!in_d_reg_158.read().is_01() || !input_depth.read().is_01())? sc_lv<1>(): sc_lv<1>(in_d_reg_158.read() == input_depth.read());
}

void pointwise_conv2d_fix::thread_in_d_1_fu_272_p2() {
    in_d_1_fu_272_p2 = (!in_d_reg_158.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(in_d_reg_158.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pointwise_conv2d_fix::thread_next_mul2_fu_188_p2() {
    next_mul2_fu_188_p2 = (!phi_mul1_reg_111.read().is_01() || !tmp_s_reg_383.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul1_reg_111.read()) + sc_biguint<32>(tmp_s_reg_383.read()));
}

void pointwise_conv2d_fix::thread_next_mul_fu_278_p2() {
    next_mul_fu_278_p2 = (!phi_mul_reg_169.read().is_01() || !tmp_s_reg_383.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul_reg_169.read()) + sc_biguint<32>(tmp_s_reg_383.read()));
}

void pointwise_conv2d_fix::thread_out_d_2_fu_198_p2() {
    out_d_2_fu_198_p2 = (!out_d_reg_100.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_d_reg_100.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pointwise_conv2d_fix::thread_out_h_2_fu_222_p2() {
    out_h_2_fu_222_p2 = (!out_h_reg_123.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_h_reg_123.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pointwise_conv2d_fix::thread_out_w_2_fu_247_p2() {
    out_w_2_fu_247_p2 = (!out_w_reg_134.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(out_w_reg_134.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void pointwise_conv2d_fix::thread_output_r_address0() {
    output_r_address0 = output_addr_reg_459.read();
}

void pointwise_conv2d_fix::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_output_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        output_r_d0 = p_tmp_cast_fu_352_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_r_d0 = output_load_1_reg_145.read();
    } else {
        output_r_d0 = "XXXXXXXXXXXXXXXX";
    }
}

void pointwise_conv2d_fix::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_p_tmp_cast_fu_352_p1() {
    p_tmp_cast_fu_352_p1 = esl_zext<16,15>(p_tmp_s_reg_482.read());
}

void pointwise_conv2d_fix::thread_p_tmp_s_fu_310_p3() {
    p_tmp_s_fu_310_p3 = (!tmp_10_fu_302_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_10_fu_302_p3.read()[0].to_bool())? ap_const_lv15_0: tmp_23_cast_fu_297_p2.read());
}

void pointwise_conv2d_fix::thread_tmp1_fu_238_p1() {
    tmp1_fu_238_p1 =  (sc_lv<16>) (tmp_15_reg_389.read());
}

void pointwise_conv2d_fix::thread_tmp1_fu_238_p2() {
    tmp1_fu_238_p2 = (!tmp_reg_436.read().is_01() || !tmp1_fu_238_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_reg_436.read()) * sc_biguint<16>(tmp1_fu_238_p1.read());
}

void pointwise_conv2d_fix::thread_tmp2_fu_283_p2() {
    tmp2_fu_283_p2 = (!phi_mul_reg_169.read().is_01() || !tmp_19_reg_431.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul_reg_169.read()) + sc_biguint<32>(tmp_19_reg_431.read()));
}

void pointwise_conv2d_fix::thread_tmp3_fu_318_p1() {
    tmp3_fu_318_p1 =  (sc_lv<16>) (tmp_15_reg_389.read());
}

void pointwise_conv2d_fix::thread_tmp3_fu_318_p2() {
    tmp3_fu_318_p2 = (!tmp2_reg_477.read().is_01() || !tmp3_fu_318_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp2_reg_477.read()) * sc_biguint<16>(tmp3_fu_318_p1.read());
}

void pointwise_conv2d_fix::thread_tmp_10_fu_302_p3() {
    tmp_10_fu_302_p3 = tmp_23_fu_292_p2.read().range(15, 15);
}

void pointwise_conv2d_fix::thread_tmp_15_fu_184_p1() {
    tmp_15_fu_184_p1 = esl_zext<32,16>(input_width.read());
}

void pointwise_conv2d_fix::thread_tmp_18_fu_204_p1() {
    tmp_18_fu_204_p1 = esl_zext<64,16>(out_d_reg_100.read());
}

void pointwise_conv2d_fix::thread_tmp_19_fu_228_p1() {
    tmp_19_fu_228_p1 = esl_zext<32,16>(out_h_reg_123.read());
}

void pointwise_conv2d_fix::thread_tmp_1_fu_213_p0() {
    tmp_1_fu_213_p0 = SeparableConv2D_0_b_s_q0.read();
}

void pointwise_conv2d_fix::thread_tmp_1_fu_213_p1() {
    tmp_1_fu_213_p1 = esl_sext<15,12>(tmp_1_fu_213_p0.read());
}

void pointwise_conv2d_fix::thread_tmp_20_fu_253_p1() {
    tmp_20_fu_253_p1 = esl_zext<32,16>(out_w_reg_134.read());
}

void pointwise_conv2d_fix::thread_tmp_21_fu_257_p2() {
    tmp_21_fu_257_p2 = (!tmp1_reg_441.read().is_01() || !tmp_20_fu_253_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp1_reg_441.read()) + sc_biguint<32>(tmp_20_fu_253_p1.read()));
}

void pointwise_conv2d_fix::thread_tmp_22_fu_262_p1() {
    tmp_22_fu_262_p1 = esl_sext<64,32>(tmp_21_fu_257_p2.read());
}

void pointwise_conv2d_fix::thread_tmp_23_cast_fu_297_p2() {
    tmp_23_cast_fu_297_p2 = (!tmp_9_fu_288_p1.read().is_01() || !tmp_1_reg_418.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_9_fu_288_p1.read()) + sc_bigint<15>(tmp_1_reg_418.read()));
}

void pointwise_conv2d_fix::thread_tmp_23_fu_292_p2() {
    tmp_23_fu_292_p2 = (!SeparableConv2D_0_b_3_reg_413.read().is_01() || !output_load_1_reg_145.read().is_01())? sc_lv<16>(): (sc_bigint<16>(SeparableConv2D_0_b_3_reg_413.read()) + sc_biguint<16>(output_load_1_reg_145.read()));
}

void pointwise_conv2d_fix::thread_tmp_27_fu_322_p2() {
    tmp_27_fu_322_p2 = (!tmp3_reg_487.read().is_01() || !tmp_20_reg_454.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp3_reg_487.read()) + sc_biguint<32>(tmp_20_reg_454.read()));
}

void pointwise_conv2d_fix::thread_tmp_28_fu_326_p1() {
    tmp_28_fu_326_p1 = esl_sext<64,32>(tmp_27_fu_322_p2.read());
}

void pointwise_conv2d_fix::thread_tmp_29_fu_356_p1() {
    tmp_29_fu_356_p1 =  (sc_lv<11>) (ap_const_lv27_265);
}

void pointwise_conv2d_fix::thread_tmp_30_fu_346_p2() {
    tmp_30_fu_346_p2 = (!output_load_1_reg_145.read().is_01() || !tmp_5_fu_343_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(output_load_1_reg_145.read()) + sc_bigint<16>(tmp_5_fu_343_p1.read()));
}

void pointwise_conv2d_fix::thread_tmp_5_fu_343_p1() {
    tmp_5_fu_343_p1 = esl_sext<16,13>(tmp_4_reg_502.read());
}

void pointwise_conv2d_fix::thread_tmp_9_fu_288_p1() {
    tmp_9_fu_288_p1 = output_load_1_reg_145.read().range(15-1, 0);
}

void pointwise_conv2d_fix::thread_tmp_fu_232_p2() {
    tmp_fu_232_p2 = (!phi_mul1_reg_111.read().is_01() || !tmp_19_fu_228_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(phi_mul1_reg_111.read()) + sc_biguint<32>(tmp_19_fu_228_p1.read()));
}

void pointwise_conv2d_fix::thread_tmp_s_fu_180_p1() {
    tmp_s_fu_180_p1 = esl_zext<32,16>(input_height.read());
}

void pointwise_conv2d_fix::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_193_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond2_fu_217_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(exitcond1_fu_242_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(exitcond_fu_267_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

