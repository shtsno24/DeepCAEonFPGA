// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv2d_fix.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv2d_fix::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv2d_fix::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> pointwise_conv2d_fix::ap_ST_fsm_state1 = "1";
const sc_lv<7> pointwise_conv2d_fix::ap_ST_fsm_state2 = "10";
const sc_lv<7> pointwise_conv2d_fix::ap_ST_fsm_state3 = "100";
const sc_lv<7> pointwise_conv2d_fix::ap_ST_fsm_state4 = "1000";
const sc_lv<7> pointwise_conv2d_fix::ap_ST_fsm_state5 = "10000";
const sc_lv<7> pointwise_conv2d_fix::ap_ST_fsm_state6 = "100000";
const sc_lv<7> pointwise_conv2d_fix::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_1 = "1";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_2 = "10";
const sc_lv<1> pointwise_conv2d_fix::ap_const_lv1_0 = "0";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_3 = "11";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_4 = "100";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_5 = "101";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_0 = "00000";
const sc_lv<1> pointwise_conv2d_fix::ap_const_lv1_1 = "1";
const sc_lv<14> pointwise_conv2d_fix::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_6 = "110";
const sc_lv<14> pointwise_conv2d_fix::ap_const_lv14_310 = "1100010000";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_10 = "10000";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_1 = "1";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_1C = "11100";
const sc_lv<2> pointwise_conv2d_fix::ap_const_lv2_0 = "00";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_E = "1110";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_1B = "11011";
const sc_lv<28> pointwise_conv2d_fix::ap_const_lv28_FFFF916 = "1111111111111111100100010110";
const bool pointwise_conv2d_fix::ap_const_boolean_1 = true;

pointwise_conv2d_fix::pointwise_conv2d_fix(sc_module_name name) : sc_module(name), mVcdFile(0) {
    network_mul_mul_12s_16s_28_1_1_U8 = new network_mul_mul_12s_16s_28_1_1<1,1,12,16,28>("network_mul_mul_12s_16s_28_1_1_U8");
    network_mul_mul_12s_16s_28_1_1_U8->din0(tmp_3_fu_256_p0);
    network_mul_mul_12s_16s_28_1_1_U8->din1(input_load_reg_313);
    network_mul_mul_12s_16s_28_1_1_U8->dout(tmp_3_fu_256_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_120_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond3_fu_120_p2 );

    SC_METHOD(thread_exitcond1_fu_174_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( out_w_reg_99 );

    SC_METHOD(thread_exitcond2_fu_132_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( out_h_reg_88 );

    SC_METHOD(thread_exitcond3_fu_120_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_d_reg_66 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_5_fu_208_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_next_mul_fu_114_p2);
    sensitive << ( phi_mul_reg_77 );

    SC_METHOD(thread_out_d_1_fu_126_p2);
    sensitive << ( out_d_reg_66 );

    SC_METHOD(thread_out_h_1_fu_138_p2);
    sensitive << ( out_h_reg_88 );

    SC_METHOD(thread_out_w_1_fu_180_p2);
    sensitive << ( out_w_reg_99 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_9_fu_243_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( p_tmp_cast1_fu_248_p1 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_p_shl5_cast_fu_164_p1);
    sensitive << ( p_shl5_fu_156_p3 );

    SC_METHOD(thread_p_shl5_fu_156_p3);
    sensitive << ( out_h_reg_88 );

    SC_METHOD(thread_p_shl_cast_fu_152_p1);
    sensitive << ( p_shl_fu_144_p3 );

    SC_METHOD(thread_p_shl_fu_144_p3);
    sensitive << ( out_h_reg_88 );

    SC_METHOD(thread_p_tmp_cast1_fu_248_p1);
    sensitive << ( p_tmp_s_reg_318 );

    SC_METHOD(thread_p_tmp_s_fu_232_p3);
    sensitive << ( tmp_fu_225_p3 );
    sensitive << ( tmp_6_fu_216_p4 );

    SC_METHOD(thread_phi_mul_cast_fu_110_p1);
    sensitive << ( phi_mul_reg_77 );

    SC_METHOD(thread_tmp1_cast_fu_195_p1);
    sensitive << ( tmp1_fu_190_p2 );

    SC_METHOD(thread_tmp1_fu_190_p2);
    sensitive << ( tmp_4_reg_290 );
    sensitive << ( tmp_6_cast_fu_186_p1 );

    SC_METHOD(thread_tmp_2_cast_fu_204_p1);
    sensitive << ( tmp1_fu_190_p2 );

    SC_METHOD(thread_tmp_3_fu_256_p0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_tmp_4_fu_168_p2);
    sensitive << ( p_shl_cast_fu_152_p1 );
    sensitive << ( p_shl5_cast_fu_164_p1 );

    SC_METHOD(thread_tmp_5_fu_208_p1);
    sensitive << ( tmp_2_cast_fu_204_p1 );

    SC_METHOD(thread_tmp_6_cast_fu_186_p1);
    sensitive << ( out_w_reg_99 );

    SC_METHOD(thread_tmp_6_fu_216_p4);
    sensitive << ( tmp_3_fu_256_p2 );

    SC_METHOD(thread_tmp_8_cast_fu_240_p1);
    sensitive << ( tmp_8_reg_303 );

    SC_METHOD(thread_tmp_8_fu_199_p2);
    sensitive << ( phi_mul_cast_reg_264 );
    sensitive << ( tmp1_cast_fu_195_p1 );

    SC_METHOD(thread_tmp_9_fu_243_p1);
    sensitive << ( tmp_8_cast_fu_240_p1 );

    SC_METHOD(thread_tmp_fu_225_p3);
    sensitive << ( tmp_3_fu_256_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond2_fu_132_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_174_p2 );
    sensitive << ( exitcond3_fu_120_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv2d_fix_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, phi_mul_cast_fu_110_p1, "phi_mul_cast_fu_110_p1");
    sc_trace(mVcdFile, phi_mul_cast_reg_264, "phi_mul_cast_reg_264");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_114_p2, "next_mul_fu_114_p2");
    sc_trace(mVcdFile, next_mul_reg_269, "next_mul_reg_269");
    sc_trace(mVcdFile, out_d_1_fu_126_p2, "out_d_1_fu_126_p2");
    sc_trace(mVcdFile, out_d_1_reg_277, "out_d_1_reg_277");
    sc_trace(mVcdFile, out_h_1_fu_138_p2, "out_h_1_fu_138_p2");
    sc_trace(mVcdFile, out_h_1_reg_285, "out_h_1_reg_285");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_4_fu_168_p2, "tmp_4_fu_168_p2");
    sc_trace(mVcdFile, tmp_4_reg_290, "tmp_4_reg_290");
    sc_trace(mVcdFile, exitcond2_fu_132_p2, "exitcond2_fu_132_p2");
    sc_trace(mVcdFile, out_w_1_fu_180_p2, "out_w_1_fu_180_p2");
    sc_trace(mVcdFile, out_w_1_reg_298, "out_w_1_reg_298");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_8_fu_199_p2, "tmp_8_fu_199_p2");
    sc_trace(mVcdFile, tmp_8_reg_303, "tmp_8_reg_303");
    sc_trace(mVcdFile, exitcond1_fu_174_p2, "exitcond1_fu_174_p2");
    sc_trace(mVcdFile, input_load_reg_313, "input_load_reg_313");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, p_tmp_s_fu_232_p3, "p_tmp_s_fu_232_p3");
    sc_trace(mVcdFile, p_tmp_s_reg_318, "p_tmp_s_reg_318");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, out_d_reg_66, "out_d_reg_66");
    sc_trace(mVcdFile, phi_mul_reg_77, "phi_mul_reg_77");
    sc_trace(mVcdFile, out_h_reg_88, "out_h_reg_88");
    sc_trace(mVcdFile, exitcond3_fu_120_p2, "exitcond3_fu_120_p2");
    sc_trace(mVcdFile, out_w_reg_99, "out_w_reg_99");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_5_fu_208_p1, "tmp_5_fu_208_p1");
    sc_trace(mVcdFile, tmp_9_fu_243_p1, "tmp_9_fu_243_p1");
    sc_trace(mVcdFile, p_shl_fu_144_p3, "p_shl_fu_144_p3");
    sc_trace(mVcdFile, p_shl5_fu_156_p3, "p_shl5_fu_156_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_152_p1, "p_shl_cast_fu_152_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_164_p1, "p_shl5_cast_fu_164_p1");
    sc_trace(mVcdFile, tmp_6_cast_fu_186_p1, "tmp_6_cast_fu_186_p1");
    sc_trace(mVcdFile, tmp1_fu_190_p2, "tmp1_fu_190_p2");
    sc_trace(mVcdFile, tmp1_cast_fu_195_p1, "tmp1_cast_fu_195_p1");
    sc_trace(mVcdFile, tmp_2_cast_fu_204_p1, "tmp_2_cast_fu_204_p1");
    sc_trace(mVcdFile, tmp_3_fu_256_p2, "tmp_3_fu_256_p2");
    sc_trace(mVcdFile, tmp_fu_225_p3, "tmp_fu_225_p3");
    sc_trace(mVcdFile, tmp_6_fu_216_p4, "tmp_6_fu_216_p4");
    sc_trace(mVcdFile, tmp_8_cast_fu_240_p1, "tmp_8_cast_fu_240_p1");
    sc_trace(mVcdFile, p_tmp_cast1_fu_248_p1, "p_tmp_cast1_fu_248_p1");
    sc_trace(mVcdFile, tmp_3_fu_256_p0, "tmp_3_fu_256_p0");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pointwise_conv2d_fix::~pointwise_conv2d_fix() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete network_mul_mul_12s_16s_28_1_1_U8;
}

void pointwise_conv2d_fix::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_132_p2.read(), ap_const_lv1_1))) {
        out_d_reg_66 = out_d_1_reg_277.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_d_reg_66 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_120_p2.read()))) {
        out_h_reg_88 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_174_p2.read(), ap_const_lv1_1))) {
        out_h_reg_88 = out_h_1_reg_285.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_132_p2.read(), ap_const_lv1_0))) {
        out_w_reg_99 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        out_w_reg_99 = out_w_1_reg_298.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_132_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_77 = next_mul_reg_269.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_77 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_load_reg_313 = input_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        next_mul_reg_269 = next_mul_fu_114_p2.read();
        out_d_1_reg_277 = out_d_1_fu_126_p2.read();
        phi_mul_cast_reg_264 = phi_mul_cast_fu_110_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_h_1_reg_285 = out_h_1_fu_138_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_w_1_reg_298 = out_w_1_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        p_tmp_s_reg_318 = p_tmp_s_fu_232_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_132_p2.read(), ap_const_lv1_0))) {
        tmp_4_reg_290 = tmp_4_fu_168_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_174_p2.read()))) {
        tmp_8_reg_303 = tmp_8_fu_199_p2.read();
    }
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pointwise_conv2d_fix::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_120_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_120_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_exitcond1_fu_174_p2() {
    exitcond1_fu_174_p2 = (!out_w_reg_99.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_w_reg_99.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix::thread_exitcond2_fu_132_p2() {
    exitcond2_fu_132_p2 = (!out_h_reg_88.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_h_reg_88.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix::thread_exitcond3_fu_120_p2() {
    exitcond3_fu_120_p2 = (!out_d_reg_66.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(out_d_reg_66.read() == ap_const_lv5_10);
}

void pointwise_conv2d_fix::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<14>) (tmp_5_fu_208_p1.read());
}

void pointwise_conv2d_fix::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_next_mul_fu_114_p2() {
    next_mul_fu_114_p2 = (!phi_mul_reg_77.read().is_01() || !ap_const_lv14_310.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_77.read()) + sc_biguint<14>(ap_const_lv14_310));
}

void pointwise_conv2d_fix::thread_out_d_1_fu_126_p2() {
    out_d_1_fu_126_p2 = (!out_d_reg_66.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_d_reg_66.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix::thread_out_h_1_fu_138_p2() {
    out_h_1_fu_138_p2 = (!out_h_reg_88.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_h_reg_88.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix::thread_out_w_1_fu_180_p2() {
    out_w_1_fu_180_p2 = (!out_w_reg_99.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_w_reg_99.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<14>) (tmp_9_fu_243_p1.read());
}

void pointwise_conv2d_fix::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_output_r_d0() {
    output_r_d0 = esl_zext<16,15>(p_tmp_cast1_fu_248_p1.read());
}

void pointwise_conv2d_fix::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_p_shl5_cast_fu_164_p1() {
    p_shl5_cast_fu_164_p1 = esl_zext<11,7>(p_shl5_fu_156_p3.read());
}

void pointwise_conv2d_fix::thread_p_shl5_fu_156_p3() {
    p_shl5_fu_156_p3 = esl_concat<5,2>(out_h_reg_88.read(), ap_const_lv2_0);
}

void pointwise_conv2d_fix::thread_p_shl_cast_fu_152_p1() {
    p_shl_cast_fu_152_p1 = esl_zext<11,10>(p_shl_fu_144_p3.read());
}

void pointwise_conv2d_fix::thread_p_shl_fu_144_p3() {
    p_shl_fu_144_p3 = esl_concat<5,5>(out_h_reg_88.read(), ap_const_lv5_0);
}

void pointwise_conv2d_fix::thread_p_tmp_cast1_fu_248_p1() {
    p_tmp_cast1_fu_248_p1 = esl_sext<15,14>(p_tmp_s_reg_318.read());
}

void pointwise_conv2d_fix::thread_p_tmp_s_fu_232_p3() {
    p_tmp_s_fu_232_p3 = (!tmp_fu_225_p3.read()[0].is_01())? sc_lv<14>(): ((tmp_fu_225_p3.read()[0].to_bool())? ap_const_lv14_0: tmp_6_fu_216_p4.read());
}

void pointwise_conv2d_fix::thread_phi_mul_cast_fu_110_p1() {
    phi_mul_cast_fu_110_p1 = esl_zext<15,14>(phi_mul_reg_77.read());
}

void pointwise_conv2d_fix::thread_tmp1_cast_fu_195_p1() {
    tmp1_cast_fu_195_p1 = esl_sext<15,11>(tmp1_fu_190_p2.read());
}

void pointwise_conv2d_fix::thread_tmp1_fu_190_p2() {
    tmp1_fu_190_p2 = (!tmp_4_reg_290.read().is_01() || !tmp_6_cast_fu_186_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_4_reg_290.read()) + sc_biguint<11>(tmp_6_cast_fu_186_p1.read()));
}

void pointwise_conv2d_fix::thread_tmp_2_cast_fu_204_p1() {
    tmp_2_cast_fu_204_p1 = esl_sext<32,11>(tmp1_fu_190_p2.read());
}

void pointwise_conv2d_fix::thread_tmp_3_fu_256_p0() {
    tmp_3_fu_256_p0 =  (sc_lv<12>) (ap_const_lv28_FFFF916);
}

void pointwise_conv2d_fix::thread_tmp_4_fu_168_p2() {
    tmp_4_fu_168_p2 = (!p_shl_cast_fu_152_p1.read().is_01() || !p_shl5_cast_fu_164_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl_cast_fu_152_p1.read()) - sc_biguint<11>(p_shl5_cast_fu_164_p1.read()));
}

void pointwise_conv2d_fix::thread_tmp_5_fu_208_p1() {
    tmp_5_fu_208_p1 = esl_zext<64,32>(tmp_2_cast_fu_204_p1.read());
}

void pointwise_conv2d_fix::thread_tmp_6_cast_fu_186_p1() {
    tmp_6_cast_fu_186_p1 = esl_zext<11,5>(out_w_reg_99.read());
}

void pointwise_conv2d_fix::thread_tmp_6_fu_216_p4() {
    tmp_6_fu_216_p4 = tmp_3_fu_256_p2.read().range(27, 14);
}

void pointwise_conv2d_fix::thread_tmp_8_cast_fu_240_p1() {
    tmp_8_cast_fu_240_p1 = esl_sext<32,15>(tmp_8_reg_303.read());
}

void pointwise_conv2d_fix::thread_tmp_8_fu_199_p2() {
    tmp_8_fu_199_p2 = (!tmp1_cast_fu_195_p1.read().is_01() || !phi_mul_cast_reg_264.read().is_01())? sc_lv<15>(): (sc_bigint<15>(tmp1_cast_fu_195_p1.read()) + sc_biguint<15>(phi_mul_cast_reg_264.read()));
}

void pointwise_conv2d_fix::thread_tmp_9_fu_243_p1() {
    tmp_9_fu_243_p1 = esl_zext<64,32>(tmp_8_cast_fu_240_p1.read());
}

void pointwise_conv2d_fix::thread_tmp_fu_225_p3() {
    tmp_fu_225_p3 = tmp_3_fu_256_p2.read().range(27, 27);
}

void pointwise_conv2d_fix::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_120_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond2_fu_132_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(exitcond1_fu_174_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

