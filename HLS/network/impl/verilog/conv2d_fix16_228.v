// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv2d_fix16_228 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_depth,
        input_height,
        input_width,
        output_depth,
        output_height,
        output_width,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        output_r_q0,
        Padding2D_3_array_address0,
        Padding2D_3_array_ce0,
        Padding2D_3_array_q0,
        Padding2D_3_array_address1,
        Padding2D_3_array_ce1,
        Padding2D_3_array_q1
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] input_depth;
input  [15:0] input_height;
input  [15:0] input_width;
input  [15:0] output_depth;
input  [15:0] output_height;
input  [15:0] output_width;
output  [11:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;
input  [15:0] output_r_q0;
output  [10:0] Padding2D_3_array_address0;
output   Padding2D_3_array_ce0;
input  [15:0] Padding2D_3_array_q0;
output  [10:0] Padding2D_3_array_address1;
output   Padding2D_3_array_ce1;
input  [15:0] Padding2D_3_array_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[15:0] output_r_d0;
reg[10:0] Padding2D_3_array_address0;
reg Padding2D_3_array_ce0;
reg[10:0] Padding2D_3_array_address1;
reg Padding2D_3_array_ce1;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] Conv2D_3_b_address0;
reg    Conv2D_3_b_ce0;
wire   [11:0] Conv2D_3_b_q0;
reg   [10:0] Conv2D_3_w_address0;
reg    Conv2D_3_w_ce0;
wire   [12:0] Conv2D_3_w_q0;
reg   [10:0] Conv2D_3_w_address1;
reg    Conv2D_3_w_ce1;
wire   [12:0] Conv2D_3_w_q1;
wire   [10:0] Conv2D_3_w_address2;
reg    Conv2D_3_w_ce2;
wire   [12:0] Conv2D_3_w_q2;
reg  signed [15:0] reg_370;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg  signed [12:0] reg_374;
reg  signed [15:0] reg_378;
reg  signed [12:0] reg_382;
wire   [31:0] tmp_s_fu_386_p1;
reg   [31:0] tmp_s_reg_1089;
wire   [31:0] tmp_105_fu_390_p1;
reg   [31:0] tmp_105_reg_1094;
wire   [31:0] tmp_106_fu_394_p1;
reg   [31:0] tmp_106_reg_1099;
wire   [31:0] tmp_107_fu_398_p1;
reg   [31:0] tmp_107_reg_1104;
wire   [31:0] tmp_108_fu_402_p1;
reg   [31:0] tmp_108_reg_1111;
wire   [31:0] next_mul5_fu_406_p2;
reg   [31:0] next_mul5_reg_1116;
wire    ap_CS_fsm_state2;
wire   [31:0] next_mul2_fu_411_p2;
reg   [31:0] next_mul2_reg_1121;
wire   [15:0] out_d_3_fu_421_p2;
reg   [15:0] out_d_3_reg_1129;
wire   [0:0] exitcond5_fu_416_p2;
wire  signed [15:0] Conv2D_3_b_load_cast_fu_432_p1;
reg  signed [15:0] Conv2D_3_b_load_cast_reg_1139;
wire    ap_CS_fsm_state3;
wire  signed [14:0] tmp_35_fu_436_p1;
reg  signed [14:0] tmp_35_reg_1144;
wire   [15:0] out_h_3_fu_445_p2;
reg   [15:0] out_h_3_reg_1152;
wire    ap_CS_fsm_state4;
wire   [31:0] tmp_111_fu_451_p1;
reg   [31:0] tmp_111_reg_1157;
wire   [0:0] exitcond4_fu_440_p2;
wire  signed [31:0] tmp_fu_455_p2;
reg  signed [31:0] tmp_reg_1162;
wire   [31:0] tmp3_fu_461_p2;
reg   [31:0] tmp3_reg_1167;
wire    ap_CS_fsm_state5;
wire   [15:0] out_w_3_fu_470_p2;
reg   [15:0] out_w_3_reg_1175;
wire    ap_CS_fsm_state6;
wire   [31:0] tmp_112_fu_476_p1;
reg   [31:0] tmp_112_reg_1180;
wire   [0:0] exitcond3_fu_465_p2;
reg   [11:0] output_addr11_reg_1187;
wire   [31:0] tmp_127_0_1_cast_fu_500_p1;
reg   [31:0] tmp_127_0_1_cast_reg_1192;
wire   [31:0] tmp_127_0_2_cast_fu_510_p1;
reg   [31:0] tmp_127_0_2_cast_reg_1199;
wire   [15:0] in_d_1_fu_519_p2;
reg   [15:0] in_d_1_reg_1209;
wire    ap_CS_fsm_state7;
wire   [31:0] next_mul_fu_529_p2;
reg   [31:0] next_mul_reg_1214;
wire   [0:0] exitcond2_fu_514_p2;
wire   [31:0] tmp_117_fu_534_p2;
reg   [31:0] tmp_117_reg_1219;
wire  signed [31:0] tmp4_fu_540_p2;
reg  signed [31:0] tmp4_reg_1225;
wire   [31:0] tmp5_fu_545_p2;
reg   [31:0] tmp5_reg_1232;
wire    ap_CS_fsm_state8;
wire  signed [31:0] tmp4_1_fu_549_p2;
reg  signed [31:0] tmp4_1_reg_1239;
wire  signed [31:0] tmp4_2_fu_554_p2;
reg  signed [31:0] tmp4_2_reg_1244;
wire  signed [31:0] tmp_118_fu_564_p2;
reg  signed [31:0] tmp_118_reg_1249;
wire    ap_CS_fsm_state9;
wire   [31:0] tmp5_1_fu_603_p2;
reg   [31:0] tmp5_1_reg_1280;
wire   [31:0] tmp5_2_fu_607_p2;
reg   [31:0] tmp5_2_reg_1287;
reg   [14:0] tmp_45_reg_1314;
reg   [14:0] tmp_46_reg_1319;
wire   [31:0] tmp_128_2_fu_721_p2;
reg   [31:0] tmp_128_2_reg_1344;
wire   [31:0] tmp_128_2_1_fu_725_p2;
reg   [31:0] tmp_128_2_1_reg_1349;
wire   [31:0] tmp_128_2_2_fu_729_p2;
reg   [31:0] tmp_128_2_2_reg_1354;
reg   [14:0] tmp_47_reg_1359;
reg   [14:0] tmp_48_reg_1364;
reg   [14:0] tmp_49_reg_1394;
reg   [14:0] tmp_50_reg_1399;
reg  signed [12:0] Conv2D_3_w_load_8_reg_1409;
wire   [15:0] tmp6_fu_858_p2;
reg   [15:0] tmp6_reg_1414;
reg   [14:0] tmp_51_reg_1419;
reg   [14:0] tmp_52_reg_1424;
reg   [14:0] tmp_53_reg_1429;
wire    ap_CS_fsm_state15;
wire   [15:0] tmp2_fu_932_p2;
reg   [15:0] tmp2_reg_1434;
wire    ap_CS_fsm_state16;
wire   [15:0] tmp8_fu_956_p2;
reg   [15:0] tmp8_reg_1439;
wire   [14:0] p_tmp_s_fu_994_p3;
reg   [14:0] p_tmp_s_reg_1444;
wire    ap_CS_fsm_state18;
reg   [15:0] out_d_reg_291;
reg   [31:0] phi_mul1_reg_302;
reg   [31:0] phi_mul4_reg_314;
reg   [15:0] out_h_reg_326;
reg   [15:0] out_w_reg_337;
wire    ap_CS_fsm_state19;
reg   [15:0] in_d_reg_348;
wire    ap_CS_fsm_state17;
reg   [31:0] phi_mul_reg_359;
wire   [63:0] tmp_110_fu_427_p1;
wire  signed [63:0] tmp_114_fu_489_p1;
wire  signed [63:0] tmp_120_fu_573_p1;
wire  signed [63:0] tmp_121_fu_578_p1;
wire  signed [63:0] tmp_129_0_1_fu_587_p1;
wire  signed [63:0] tmp_133_0_1_fu_598_p1;
wire  signed [63:0] tmp_129_0_2_fu_615_p1;
wire  signed [63:0] tmp_133_0_2_fu_625_p1;
wire  signed [63:0] tmp_129_1_fu_634_p1;
wire  signed [63:0] tmp_133_1_fu_644_p1;
wire  signed [63:0] tmp_129_1_1_fu_687_p1;
wire  signed [63:0] tmp_133_1_1_fu_697_p1;
wire  signed [63:0] tmp_129_1_2_fu_706_p1;
wire  signed [63:0] tmp_133_1_2_fu_716_p1;
wire  signed [63:0] tmp_129_2_fu_767_p1;
wire  signed [63:0] tmp_133_2_fu_776_p1;
wire  signed [63:0] tmp_129_2_1_fu_781_p1;
wire  signed [63:0] tmp_133_2_1_fu_790_p1;
wire  signed [63:0] tmp_133_2_2_fu_800_p1;
wire  signed [63:0] tmp_129_2_2_fu_848_p1;
wire   [15:0] tmp_138_2_2_fu_966_p2;
wire   [15:0] p_tmp_cast_fu_1002_p1;
wire  signed [11:0] Conv2D_3_b_load_cast_fu_432_p0;
wire  signed [11:0] tmp_35_fu_436_p0;
wire   [15:0] tmp3_fu_461_p1;
wire   [31:0] tmp_113_fu_484_p2;
wire   [16:0] tmp_114_cast_fu_480_p1;
wire   [16:0] tmp_127_0_1_fu_494_p2;
wire   [16:0] tmp_127_0_2_fu_504_p2;
wire   [31:0] tmp_116_fu_525_p1;
wire   [15:0] tmp5_fu_545_p1;
wire   [31:0] tmp_44_fu_559_p2;
wire   [31:0] tmp_119_fu_569_p2;
wire   [31:0] tmp_128_0_1_fu_583_p2;
wire   [31:0] tmp_132_0_1_fu_592_p2;
wire   [15:0] tmp5_1_fu_603_p1;
wire   [15:0] tmp5_2_fu_607_p1;
wire   [31:0] tmp_128_0_2_fu_611_p2;
wire   [31:0] tmp_132_0_2_fu_620_p2;
wire   [31:0] tmp_128_1_fu_630_p2;
wire   [31:0] tmp_132_1_fu_639_p2;
wire  signed [28:0] tmp_122_fu_1006_p2;
wire  signed [28:0] tmp_135_0_1_fu_1013_p2;
wire   [31:0] tmp_128_1_1_fu_683_p2;
wire   [31:0] tmp_132_1_1_fu_692_p2;
wire   [31:0] tmp_128_1_2_fu_702_p2;
wire   [31:0] tmp_132_1_2_fu_711_p2;
wire  signed [28:0] tmp_135_0_2_fu_1020_p2;
wire  signed [28:0] tmp_135_1_fu_1027_p2;
wire   [31:0] tmp_132_2_fu_771_p2;
wire   [31:0] tmp_132_2_1_fu_785_p2;
wire   [31:0] tmp_132_2_2_fu_795_p2;
wire  signed [28:0] tmp_135_1_1_fu_1034_p2;
wire  signed [28:0] tmp_135_1_2_fu_1041_p2;
wire  signed [15:0] tmp_137_0_2_fu_808_p1;
wire  signed [15:0] tmp_137_1_fu_811_p1;
wire   [15:0] tmp7_fu_852_p2;
wire  signed [15:0] tmp_137_0_1_fu_805_p1;
wire  signed [28:0] tmp_135_2_fu_1048_p2;
wire  signed [28:0] tmp_135_2_1_fu_1055_p2;
wire  signed [28:0] tmp_135_2_2_fu_1062_p2;
wire  signed [15:0] tmp_123_fu_914_p1;
wire  signed [15:0] tmp_137_1_1_fu_917_p1;
wire  signed [15:0] tmp_137_1_2_fu_920_p1;
wire  signed [15:0] tmp_137_2_1_fu_926_p1;
wire  signed [15:0] tmp_137_2_2_fu_929_p1;
wire   [15:0] tmp11_fu_944_p2;
wire  signed [15:0] tmp_137_2_fu_923_p1;
wire   [15:0] tmp10_fu_950_p2;
wire   [15:0] tmp9_fu_938_p2;
wire   [15:0] tmp1_fu_962_p2;
wire   [14:0] tmp_42_fu_972_p1;
wire   [15:0] tmp_115_fu_976_p2;
wire   [0:0] tmp_43_fu_986_p3;
wire   [14:0] tmp_117_cast_fu_981_p2;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
end

conv2d_fix16_228_Conv2D_3_b #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
Conv2D_3_b_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Conv2D_3_b_address0),
    .ce0(Conv2D_3_b_ce0),
    .q0(Conv2D_3_b_q0)
);

conv2d_fix16_228_Conv2D_3_w #(
    .DataWidth( 13 ),
    .AddressRange( 1152 ),
    .AddressWidth( 11 ))
Conv2D_3_w_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Conv2D_3_w_address0),
    .ce0(Conv2D_3_w_ce0),
    .q0(Conv2D_3_w_q0),
    .address1(Conv2D_3_w_address1),
    .ce1(Conv2D_3_w_ce1),
    .q1(Conv2D_3_w_q1),
    .address2(Conv2D_3_w_address2),
    .ce2(Conv2D_3_w_ce2),
    .q2(Conv2D_3_w_q2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U113(
    .din0(reg_374),
    .din1(reg_370),
    .dout(tmp_122_fu_1006_p2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U114(
    .din0(reg_382),
    .din1(reg_378),
    .dout(tmp_135_0_1_fu_1013_p2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U115(
    .din0(reg_374),
    .din1(reg_370),
    .dout(tmp_135_0_2_fu_1020_p2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U116(
    .din0(reg_382),
    .din1(reg_378),
    .dout(tmp_135_1_fu_1027_p2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U117(
    .din0(reg_374),
    .din1(reg_370),
    .dout(tmp_135_1_1_fu_1034_p2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U118(
    .din0(reg_382),
    .din1(reg_378),
    .dout(tmp_135_1_2_fu_1041_p2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U119(
    .din0(reg_374),
    .din1(reg_370),
    .dout(tmp_135_2_fu_1048_p2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U120(
    .din0(reg_382),
    .din1(reg_378),
    .dout(tmp_135_2_1_fu_1055_p2)
);

network_mul_mul_13s_16s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
network_mul_mul_13s_16s_29_1_1_U121(
    .din0(Conv2D_3_w_load_8_reg_1409),
    .din1(reg_370),
    .dout(tmp_135_2_2_fu_1062_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        in_d_reg_348 <= in_d_1_reg_1209;
    end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_fu_465_p2 == 1'd0))) begin
        in_d_reg_348 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond4_fu_440_p2 == 1'd1))) begin
        out_d_reg_291 <= out_d_3_reg_1129;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_d_reg_291 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_fu_465_p2 == 1'd1))) begin
        out_h_reg_326 <= out_h_3_reg_1152;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        out_h_reg_326 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_w_reg_337 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_w_reg_337 <= out_w_3_reg_1175;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond4_fu_440_p2 == 1'd1))) begin
        phi_mul1_reg_302 <= next_mul2_reg_1121;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul1_reg_302 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond4_fu_440_p2 == 1'd1))) begin
        phi_mul4_reg_314 <= next_mul5_reg_1116;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul4_reg_314 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        phi_mul_reg_359 <= next_mul_reg_1214;
    end else if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_fu_465_p2 == 1'd0))) begin
        phi_mul_reg_359 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Conv2D_3_b_load_cast_reg_1139 <= Conv2D_3_b_load_cast_fu_432_p1;
        tmp_35_reg_1144 <= tmp_35_fu_436_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Conv2D_3_w_load_8_reg_1409 <= Conv2D_3_w_q2;
        tmp6_reg_1414 <= tmp6_fu_858_p2;
        tmp_49_reg_1394 <= {{tmp_135_1_1_fu_1034_p2[28:14]}};
        tmp_50_reg_1399 <= {{tmp_135_1_2_fu_1041_p2[28:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        in_d_1_reg_1209 <= in_d_1_fu_519_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        next_mul2_reg_1121 <= next_mul2_fu_411_p2;
        next_mul5_reg_1116 <= next_mul5_fu_406_p2;
        out_d_3_reg_1129 <= out_d_3_fu_421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (exitcond2_fu_514_p2 == 1'd0))) begin
        next_mul_reg_1214 <= next_mul_fu_529_p2;
        tmp4_reg_1225 <= tmp4_fu_540_p2;
        tmp_117_reg_1219 <= tmp_117_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_h_3_reg_1152 <= out_h_3_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        out_w_3_reg_1175 <= out_w_3_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_fu_465_p2 == 1'd0))) begin
        output_addr11_reg_1187 <= tmp_114_fu_489_p1;
        tmp_112_reg_1180[15 : 0] <= tmp_112_fu_476_p1[15 : 0];
        tmp_127_0_1_cast_reg_1192[16 : 0] <= tmp_127_0_1_cast_fu_500_p1[16 : 0];
        tmp_127_0_2_cast_reg_1199[16 : 0] <= tmp_127_0_2_cast_fu_510_p1[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        p_tmp_s_reg_1444 <= p_tmp_s_fu_994_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_370 <= Padding2D_3_array_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_374 <= Conv2D_3_w_q0;
        reg_378 <= Padding2D_3_array_q1;
        reg_382 <= Conv2D_3_w_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp2_reg_1434 <= tmp2_fu_932_p2;
        tmp8_reg_1439 <= tmp8_fu_956_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp3_reg_1167 <= tmp3_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp4_1_reg_1239 <= tmp4_1_fu_549_p2;
        tmp4_2_reg_1244 <= tmp4_2_fu_554_p2;
        tmp5_reg_1232 <= tmp5_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp5_1_reg_1280 <= tmp5_1_fu_603_p2;
        tmp5_2_reg_1287 <= tmp5_2_fu_607_p2;
        tmp_118_reg_1249 <= tmp_118_fu_564_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_105_reg_1094[15 : 0] <= tmp_105_fu_390_p1[15 : 0];
        tmp_106_reg_1099[15 : 0] <= tmp_106_fu_394_p1[15 : 0];
        tmp_107_reg_1104[15 : 0] <= tmp_107_fu_398_p1[15 : 0];
        tmp_108_reg_1111[15 : 0] <= tmp_108_fu_402_p1[15 : 0];
        tmp_s_reg_1089[15 : 0] <= tmp_s_fu_386_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond4_fu_440_p2 == 1'd0))) begin
        tmp_111_reg_1157[15 : 0] <= tmp_111_fu_451_p1[15 : 0];
        tmp_reg_1162 <= tmp_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_128_2_1_reg_1349 <= tmp_128_2_1_fu_725_p2;
        tmp_128_2_2_reg_1354 <= tmp_128_2_2_fu_729_p2;
        tmp_128_2_reg_1344 <= tmp_128_2_fu_721_p2;
        tmp_45_reg_1314 <= {{tmp_122_fu_1006_p2[28:14]}};
        tmp_46_reg_1319 <= {{tmp_135_0_1_fu_1013_p2[28:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_47_reg_1359 <= {{tmp_135_0_2_fu_1020_p2[28:14]}};
        tmp_48_reg_1364 <= {{tmp_135_1_fu_1027_p2[28:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_51_reg_1419 <= {{tmp_135_2_fu_1048_p2[28:14]}};
        tmp_52_reg_1424 <= {{tmp_135_2_1_fu_1055_p2[28:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_53_reg_1429 <= {{tmp_135_2_2_fu_1062_p2[28:14]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Conv2D_3_b_ce0 = 1'b1;
    end else begin
        Conv2D_3_b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Conv2D_3_w_address0 = tmp_133_2_fu_776_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Conv2D_3_w_address0 = tmp_133_1_1_fu_697_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Conv2D_3_w_address0 = tmp_133_0_2_fu_625_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Conv2D_3_w_address0 = tmp_121_fu_578_p1;
    end else begin
        Conv2D_3_w_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Conv2D_3_w_address1 = tmp_133_2_1_fu_790_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Conv2D_3_w_address1 = tmp_133_1_2_fu_716_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Conv2D_3_w_address1 = tmp_133_1_fu_644_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Conv2D_3_w_address1 = tmp_133_0_1_fu_598_p1;
    end else begin
        Conv2D_3_w_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        Conv2D_3_w_ce0 = 1'b1;
    end else begin
        Conv2D_3_w_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        Conv2D_3_w_ce1 = 1'b1;
    end else begin
        Conv2D_3_w_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Conv2D_3_w_ce2 = 1'b1;
    end else begin
        Conv2D_3_w_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Padding2D_3_array_address0 = tmp_129_2_2_fu_848_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Padding2D_3_array_address0 = tmp_129_2_fu_767_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Padding2D_3_array_address0 = tmp_129_1_1_fu_687_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Padding2D_3_array_address0 = tmp_129_0_2_fu_615_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Padding2D_3_array_address0 = tmp_120_fu_573_p1;
    end else begin
        Padding2D_3_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Padding2D_3_array_address1 = tmp_129_2_1_fu_781_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Padding2D_3_array_address1 = tmp_129_1_2_fu_706_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Padding2D_3_array_address1 = tmp_129_1_fu_634_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Padding2D_3_array_address1 = tmp_129_0_1_fu_587_p1;
    end else begin
        Padding2D_3_array_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state13))) begin
        Padding2D_3_array_ce0 = 1'b1;
    end else begin
        Padding2D_3_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        Padding2D_3_array_ce1 = 1'b1;
    end else begin
        Padding2D_3_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond5_fu_416_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond5_fu_416_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7))) begin
        output_r_address0 = output_addr11_reg_1187;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_address0 = tmp_114_fu_489_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        output_r_d0 = p_tmp_cast_fu_1002_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        output_r_d0 = tmp_138_2_2_fu_966_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_d0 = 16'd0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_state6) & (exitcond3_fu_465_p2 == 1'd0)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond5_fu_416_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond4_fu_440_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond3_fu_465_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((exitcond2_fu_514_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Conv2D_3_b_address0 = tmp_110_fu_427_p1;

assign Conv2D_3_b_load_cast_fu_432_p0 = Conv2D_3_b_q0;

assign Conv2D_3_b_load_cast_fu_432_p1 = Conv2D_3_b_load_cast_fu_432_p0;

assign Conv2D_3_w_address2 = tmp_133_2_2_fu_800_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign exitcond2_fu_514_p2 = ((in_d_reg_348 == input_depth) ? 1'b1 : 1'b0);

assign exitcond3_fu_465_p2 = ((out_w_reg_337 == output_width) ? 1'b1 : 1'b0);

assign exitcond4_fu_440_p2 = ((out_h_reg_326 == output_height) ? 1'b1 : 1'b0);

assign exitcond5_fu_416_p2 = ((out_d_reg_291 == output_depth) ? 1'b1 : 1'b0);

assign in_d_1_fu_519_p2 = (in_d_reg_348 + 16'd1);

assign next_mul2_fu_411_p2 = (phi_mul1_reg_302 + tmp_s_reg_1089);

assign next_mul5_fu_406_p2 = (phi_mul4_reg_314 + tmp_108_reg_1111);

assign next_mul_fu_529_p2 = (phi_mul_reg_359 + tmp_106_reg_1099);

assign out_d_3_fu_421_p2 = (out_d_reg_291 + 16'd1);

assign out_h_3_fu_445_p2 = (out_h_reg_326 + 16'd1);

assign out_w_3_fu_470_p2 = (out_w_reg_337 + 16'd1);

assign p_tmp_cast_fu_1002_p1 = p_tmp_s_reg_1444;

assign p_tmp_s_fu_994_p3 = ((tmp_43_fu_986_p3[0:0] === 1'b1) ? 15'd0 : tmp_117_cast_fu_981_p2);

assign tmp10_fu_950_p2 = ($signed(tmp11_fu_944_p2) + $signed(tmp_137_2_fu_923_p1));

assign tmp11_fu_944_p2 = ($signed(tmp_137_2_1_fu_926_p1) + $signed(tmp_137_2_2_fu_929_p1));

assign tmp1_fu_962_p2 = (tmp6_reg_1414 + tmp2_reg_1434);

assign tmp2_fu_932_p2 = ($signed(output_r_q0) + $signed(tmp_123_fu_914_p1));

assign tmp3_fu_461_p1 = tmp_105_reg_1094;

assign tmp3_fu_461_p2 = ($signed(tmp_reg_1162) * $signed({{1'b0}, {tmp3_fu_461_p1}}));

assign tmp4_1_fu_549_p2 = ($signed(32'd1) + $signed(tmp4_reg_1225));

assign tmp4_2_fu_554_p2 = ($signed(32'd2) + $signed(tmp4_reg_1225));

assign tmp4_fu_540_p2 = (phi_mul_reg_359 + tmp_111_reg_1157);

assign tmp5_1_fu_603_p1 = tmp_107_reg_1104;

assign tmp5_1_fu_603_p2 = ($signed(tmp4_1_reg_1239) * $signed({{1'b0}, {tmp5_1_fu_603_p1}}));

assign tmp5_2_fu_607_p1 = tmp_107_reg_1104;

assign tmp5_2_fu_607_p2 = ($signed(tmp4_2_reg_1244) * $signed({{1'b0}, {tmp5_2_fu_607_p1}}));

assign tmp5_fu_545_p1 = tmp_107_reg_1104;

assign tmp5_fu_545_p2 = ($signed(tmp4_reg_1225) * $signed({{1'b0}, {tmp5_fu_545_p1}}));

assign tmp6_fu_858_p2 = ($signed(tmp7_fu_852_p2) + $signed(tmp_137_0_1_fu_805_p1));

assign tmp7_fu_852_p2 = ($signed(tmp_137_0_2_fu_808_p1) + $signed(tmp_137_1_fu_811_p1));

assign tmp8_fu_956_p2 = (tmp10_fu_950_p2 + tmp9_fu_938_p2);

assign tmp9_fu_938_p2 = ($signed(tmp_137_1_1_fu_917_p1) + $signed(tmp_137_1_2_fu_920_p1));

assign tmp_105_fu_390_p1 = output_width;

assign tmp_106_fu_394_p1 = input_height;

assign tmp_107_fu_398_p1 = input_width;

assign tmp_108_fu_402_p1 = input_depth;

assign tmp_110_fu_427_p1 = out_d_reg_291;

assign tmp_111_fu_451_p1 = out_h_reg_326;

assign tmp_112_fu_476_p1 = out_w_reg_337;

assign tmp_113_fu_484_p2 = (tmp3_reg_1167 + tmp_112_fu_476_p1);

assign tmp_114_cast_fu_480_p1 = out_w_reg_337;

assign tmp_114_fu_489_p1 = $signed(tmp_113_fu_484_p2);

assign tmp_115_fu_976_p2 = ($signed(Conv2D_3_b_load_cast_reg_1139) + $signed(output_r_q0));

assign tmp_116_fu_525_p1 = in_d_reg_348;

assign tmp_117_cast_fu_981_p2 = ($signed(tmp_42_fu_972_p1) + $signed(tmp_35_reg_1144));

assign tmp_117_fu_534_p2 = (phi_mul4_reg_314 + tmp_116_fu_525_p1);

assign tmp_118_fu_564_p2 = (tmp_44_fu_559_p2 + tmp_117_reg_1219);

assign tmp_119_fu_569_p2 = (tmp5_reg_1232 + tmp_112_reg_1180);

assign tmp_120_fu_573_p1 = $signed(tmp_119_fu_569_p2);

assign tmp_121_fu_578_p1 = tmp_118_fu_564_p2;

assign tmp_123_fu_914_p1 = $signed(tmp_45_reg_1314);

assign tmp_127_0_1_cast_fu_500_p1 = tmp_127_0_1_fu_494_p2;

assign tmp_127_0_1_fu_494_p2 = (tmp_114_cast_fu_480_p1 + 17'd1);

assign tmp_127_0_2_cast_fu_510_p1 = tmp_127_0_2_fu_504_p2;

assign tmp_127_0_2_fu_504_p2 = (tmp_114_cast_fu_480_p1 + 17'd2);

assign tmp_128_0_1_fu_583_p2 = (tmp_127_0_1_cast_reg_1192 + tmp5_reg_1232);

assign tmp_128_0_2_fu_611_p2 = (tmp_127_0_2_cast_reg_1199 + tmp5_reg_1232);

assign tmp_128_1_1_fu_683_p2 = (tmp_127_0_1_cast_reg_1192 + tmp5_1_reg_1280);

assign tmp_128_1_2_fu_702_p2 = (tmp_127_0_2_cast_reg_1199 + tmp5_1_reg_1280);

assign tmp_128_1_fu_630_p2 = (tmp5_1_reg_1280 + tmp_112_reg_1180);

assign tmp_128_2_1_fu_725_p2 = (tmp_127_0_1_cast_reg_1192 + tmp5_2_reg_1287);

assign tmp_128_2_2_fu_729_p2 = (tmp_127_0_2_cast_reg_1199 + tmp5_2_reg_1287);

assign tmp_128_2_fu_721_p2 = (tmp5_2_reg_1287 + tmp_112_reg_1180);

assign tmp_129_0_1_fu_587_p1 = $signed(tmp_128_0_1_fu_583_p2);

assign tmp_129_0_2_fu_615_p1 = $signed(tmp_128_0_2_fu_611_p2);

assign tmp_129_1_1_fu_687_p1 = $signed(tmp_128_1_1_fu_683_p2);

assign tmp_129_1_2_fu_706_p1 = $signed(tmp_128_1_2_fu_702_p2);

assign tmp_129_1_fu_634_p1 = $signed(tmp_128_1_fu_630_p2);

assign tmp_129_2_1_fu_781_p1 = $signed(tmp_128_2_1_reg_1349);

assign tmp_129_2_2_fu_848_p1 = $signed(tmp_128_2_2_reg_1354);

assign tmp_129_2_fu_767_p1 = $signed(tmp_128_2_reg_1344);

assign tmp_132_0_1_fu_592_p2 = ($signed(32'd1) + $signed(tmp_118_fu_564_p2));

assign tmp_132_0_2_fu_620_p2 = ($signed(32'd2) + $signed(tmp_118_reg_1249));

assign tmp_132_1_1_fu_692_p2 = ($signed(32'd4) + $signed(tmp_118_reg_1249));

assign tmp_132_1_2_fu_711_p2 = ($signed(32'd5) + $signed(tmp_118_reg_1249));

assign tmp_132_1_fu_639_p2 = ($signed(32'd3) + $signed(tmp_118_reg_1249));

assign tmp_132_2_1_fu_785_p2 = ($signed(32'd7) + $signed(tmp_118_reg_1249));

assign tmp_132_2_2_fu_795_p2 = ($signed(32'd8) + $signed(tmp_118_reg_1249));

assign tmp_132_2_fu_771_p2 = ($signed(32'd6) + $signed(tmp_118_reg_1249));

assign tmp_133_0_1_fu_598_p1 = $signed(tmp_132_0_1_fu_592_p2);

assign tmp_133_0_2_fu_625_p1 = $signed(tmp_132_0_2_fu_620_p2);

assign tmp_133_1_1_fu_697_p1 = $signed(tmp_132_1_1_fu_692_p2);

assign tmp_133_1_2_fu_716_p1 = $signed(tmp_132_1_2_fu_711_p2);

assign tmp_133_1_fu_644_p1 = $signed(tmp_132_1_fu_639_p2);

assign tmp_133_2_1_fu_790_p1 = $signed(tmp_132_2_1_fu_785_p2);

assign tmp_133_2_2_fu_800_p1 = $signed(tmp_132_2_2_fu_795_p2);

assign tmp_133_2_fu_776_p1 = $signed(tmp_132_2_fu_771_p2);

assign tmp_137_0_1_fu_805_p1 = $signed(tmp_46_reg_1319);

assign tmp_137_0_2_fu_808_p1 = $signed(tmp_47_reg_1359);

assign tmp_137_1_1_fu_917_p1 = $signed(tmp_49_reg_1394);

assign tmp_137_1_2_fu_920_p1 = $signed(tmp_50_reg_1399);

assign tmp_137_1_fu_811_p1 = $signed(tmp_48_reg_1364);

assign tmp_137_2_1_fu_926_p1 = $signed(tmp_52_reg_1424);

assign tmp_137_2_2_fu_929_p1 = $signed(tmp_53_reg_1429);

assign tmp_137_2_fu_923_p1 = $signed(tmp_51_reg_1419);

assign tmp_138_2_2_fu_966_p2 = (tmp8_reg_1439 + tmp1_fu_962_p2);

assign tmp_35_fu_436_p0 = Conv2D_3_b_q0;

assign tmp_35_fu_436_p1 = tmp_35_fu_436_p0;

assign tmp_42_fu_972_p1 = output_r_q0[14:0];

assign tmp_43_fu_986_p3 = tmp_115_fu_976_p2[32'd15];

assign tmp_44_fu_559_p2 = tmp_117_reg_1219 << 32'd3;

assign tmp_fu_455_p2 = (phi_mul1_reg_302 + tmp_111_fu_451_p1);

assign tmp_s_fu_386_p1 = output_height;

always @ (posedge ap_clk) begin
    tmp_s_reg_1089[31:16] <= 16'b0000000000000000;
    tmp_105_reg_1094[31:16] <= 16'b0000000000000000;
    tmp_106_reg_1099[31:16] <= 16'b0000000000000000;
    tmp_107_reg_1104[31:16] <= 16'b0000000000000000;
    tmp_108_reg_1111[31:16] <= 16'b0000000000000000;
    tmp_111_reg_1157[31:16] <= 16'b0000000000000000;
    tmp_112_reg_1180[31:16] <= 16'b0000000000000000;
    tmp_127_0_1_cast_reg_1192[31:17] <= 15'b000000000000000;
    tmp_127_0_2_cast_reg_1199[31:17] <= 15'b000000000000000;
end

endmodule //conv2d_fix16_228
