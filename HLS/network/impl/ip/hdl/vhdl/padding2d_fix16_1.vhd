-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity padding2d_fix16_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_depth : IN STD_LOGIC_VECTOR (15 downto 0);
    input_height : IN STD_LOGIC_VECTOR (15 downto 0);
    input_width : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_height : IN STD_LOGIC_VECTOR (15 downto 0);
    output_width : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of padding2d_fix16_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_s_fu_220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_493 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_228_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_reg_498 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_fu_234_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_reg_503 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_fu_240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_248_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_reg_513 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_19_fu_254_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_520 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_258_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_525 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_262_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_reg_532 : STD_LOGIC_VECTOR (16 downto 0);
    signal next_mul8_fu_268_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_mul8_reg_537 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal next_mul5_fu_273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_mul5_reg_542 : STD_LOGIC_VECTOR (31 downto 0);
    signal depth_1_fu_283_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal depth_1_reg_550 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_fu_289_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_555 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul_fu_294_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_mul_reg_561 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal height_1_fu_312_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_1_reg_569 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_574 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_307_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_578 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_329_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_582 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_345_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_587 : STD_LOGIC_VECTOR (31 downto 0);
    signal width_2_fu_364_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_33_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_reg_600 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal output_addr_14_reg_605 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp7_fu_395_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal width_3_fu_413_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal width_3_reg_618 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_41_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_623 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_636 : STD_LOGIC_VECTOR (31 downto 0);
    signal width_1_fu_472_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal depth_reg_125 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_mul4_reg_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul7_reg_148 : STD_LOGIC_VECTOR (31 downto 0);
    signal height_reg_160 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_mul_reg_171 : STD_LOGIC_VECTOR (31 downto 0);
    signal width2_reg_183 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal width1_reg_194 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal width_reg_205 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_fu_430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_399_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_fu_224_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_cast_fu_244_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_289_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_cast_fu_303_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_335_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp2_cast_fu_341_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_cast_fu_355_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_39_fu_351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_386_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_395_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_cast_fu_404_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp3_fu_435_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp3_cast_fu_441_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_445_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_cast_fu_463_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_30_fu_459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    depth_reg_125_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_27_fu_307_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                depth_reg_125 <= depth_1_reg_550;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                depth_reg_125 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    height_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                height_reg_160 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((tmp_28_reg_574 = ap_const_lv1_1) or ((tmp_29_reg_578 = ap_const_lv1_0) or (tmp_38_fu_408_p2 = ap_const_lv1_0))))) then 
                height_reg_160 <= height_1_reg_569;
            end if; 
        end if;
    end process;

    phi_mul4_reg_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_27_fu_307_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_mul4_reg_136 <= next_mul5_reg_542;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul4_reg_136 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul7_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_27_fu_307_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_mul7_reg_148 <= next_mul8_reg_537;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul7_reg_148 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_171_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul_reg_171 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((tmp_28_reg_574 = ap_const_lv1_1) or ((tmp_29_reg_578 = ap_const_lv1_0) or (tmp_38_fu_408_p2 = ap_const_lv1_0))))) then 
                phi_mul_reg_171 <= next_mul_reg_561;
            end if; 
        end if;
    end process;

    width1_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                width1_reg_194 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                width1_reg_194 <= width_3_reg_618;
            end if; 
        end if;
    end process;

    width2_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_27_fu_307_p2 = ap_const_lv1_1) and (tmp_29_fu_324_p2 = ap_const_lv1_0) and (tmp_28_fu_318_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                width2_reg_183 <= ap_const_lv16_0;
            elsif (((tmp_40_fu_359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                width2_reg_183 <= width_2_fu_364_p2;
            end if; 
        end if;
    end process;

    width_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_27_fu_307_p2 = ap_const_lv1_1) and (tmp_28_fu_318_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                width_reg_205 <= ap_const_lv16_0;
            elsif (((tmp_31_fu_467_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                width_reg_205 <= width_1_fu_472_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                depth_1_reg_550 <= depth_1_fu_283_p2;
                next_mul5_reg_542 <= next_mul5_fu_273_p2;
                next_mul8_reg_537 <= next_mul8_fu_268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                height_1_reg_569 <= height_1_fu_312_p2;
                next_mul_reg_561 <= next_mul_fu_294_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                output_addr_14_reg_605 <= tmp_45_fu_390_p1(11 - 1 downto 0);
                tmp7_reg_610 <= tmp7_fu_395_p2;
                tmp_33_reg_600 <= tmp_33_fu_386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_15_reg_498 <= tmp_15_fu_228_p2;
                tmp_16_reg_503 <= tmp_16_fu_234_p2;
                    tmp_17_reg_508(15 downto 0) <= tmp_17_fu_240_p1(15 downto 0);
                tmp_18_reg_513 <= tmp_18_fu_248_p2;
                    tmp_19_reg_520(15 downto 0) <= tmp_19_fu_254_p1(15 downto 0);
                    tmp_20_reg_525(15 downto 0) <= tmp_20_fu_258_p1(15 downto 0);
                tmp_21_reg_532 <= tmp_21_fu_262_p2;
                    tmp_s_reg_493(15 downto 0) <= tmp_s_fu_220_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_24_reg_555 <= tmp_24_fu_289_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_27_fu_307_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_28_reg_574 <= tmp_28_fu_318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_27_fu_307_p2 = ap_const_lv1_1) and (tmp_28_fu_318_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_29_reg_578 <= tmp_29_fu_324_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_41_reg_623 <= tmp_41_fu_419_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (tmp_41_fu_419_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_46_reg_627 <= tmp_46_fu_425_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_46_fu_425_p2 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (tmp_41_fu_419_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_51_reg_636 <= grp_fu_216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_fu_324_p2 = ap_const_lv1_1) and (tmp_27_fu_307_p2 = ap_const_lv1_1) and (tmp_28_fu_318_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_56_reg_582 <= tmp_56_fu_329_p2;
                tmp_reg_587 <= tmp_fu_345_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                width_3_reg_618 <= width_3_fu_413_p2;
            end if;
        end if;
    end process;
    tmp_s_reg_493(31 downto 16) <= "0000000000000000";
    tmp_17_reg_508(31 downto 16) <= "0000000000000000";
    tmp_19_reg_520(31 downto 16) <= "0000000000000000";
    tmp_20_reg_525(31 downto 16) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond_fu_278_p2, ap_CS_fsm_state3, tmp_28_fu_318_p2, tmp_28_reg_574, tmp_27_fu_307_p2, tmp_29_fu_324_p2, tmp_29_reg_578, ap_CS_fsm_state4, ap_CS_fsm_state6, tmp_38_fu_408_p2, ap_CS_fsm_state8, tmp_40_fu_359_p2, tmp_31_fu_467_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_27_fu_307_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((tmp_27_fu_307_p2 = ap_const_lv1_1) and (tmp_28_fu_318_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((tmp_27_fu_307_p2 = ap_const_lv1_1) and (tmp_29_fu_324_p2 = ap_const_lv1_0) and (tmp_28_fu_318_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state4 => 
                if (((tmp_40_fu_359_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((tmp_28_reg_574 = ap_const_lv1_1) or ((tmp_29_reg_578 = ap_const_lv1_0) or (tmp_38_fu_408_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((tmp_31_fu_467_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond_fu_278_p2)
    begin
        if ((((exitcond_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond_fu_278_p2)
    begin
        if (((exitcond_fu_278_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    depth_1_fu_283_p2 <= std_logic_vector(unsigned(depth_reg_125) + unsigned(ap_const_lv16_1));
    exitcond_fu_278_p2 <= "1" when (depth_reg_125 = input_depth) else "0";
    grp_fu_216_p2 <= std_logic_vector(signed(tmp_33_reg_600) + signed(tmp_37_fu_399_p1));
    height_1_fu_312_p2 <= std_logic_vector(unsigned(height_reg_160) + unsigned(ap_const_lv16_1));
    input_r_address0 <= tmp_50_fu_450_p1(11 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    next_mul5_fu_273_p2 <= std_logic_vector(signed(phi_mul4_reg_136) + signed(tmp_19_reg_520));
    next_mul8_fu_268_p2 <= std_logic_vector(unsigned(phi_mul7_reg_148) + unsigned(tmp_s_reg_493));
    next_mul_fu_294_p2 <= std_logic_vector(unsigned(phi_mul_reg_171) + unsigned(tmp_20_reg_525));

    output_r_address0_assign_proc : process(tmp_28_reg_574, tmp_29_reg_578, ap_CS_fsm_state4, output_addr_14_reg_605, ap_CS_fsm_state6, tmp_41_fu_419_p2, tmp_38_fu_408_p2, tmp_46_fu_425_p2, ap_CS_fsm_state8, ap_CS_fsm_state7, tmp_44_fu_381_p1, tmp_54_fu_430_p1, tmp_52_fu_455_p1, tmp_36_fu_483_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_address0 <= tmp_36_fu_483_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            output_r_address0 <= tmp_52_fu_455_p1(11 - 1 downto 0);
        elsif (((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_41_fu_419_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            output_r_address0 <= output_addr_14_reg_605;
        elsif (((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (tmp_46_fu_425_p2 = ap_const_lv1_0) and (tmp_41_fu_419_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            output_r_address0 <= tmp_54_fu_430_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            output_r_address0 <= tmp_44_fu_381_p1(11 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(tmp_28_reg_574, tmp_29_reg_578, ap_CS_fsm_state4, ap_CS_fsm_state6, tmp_41_fu_419_p2, tmp_38_fu_408_p2, tmp_46_fu_425_p2, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_41_fu_419_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (tmp_46_fu_425_p2 = ap_const_lv1_0) and (tmp_41_fu_419_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(input_r_q0, tmp_28_reg_574, tmp_29_reg_578, ap_CS_fsm_state4, ap_CS_fsm_state6, tmp_41_fu_419_p2, tmp_38_fu_408_p2, tmp_46_fu_425_p2, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            output_r_d0 <= input_r_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_41_fu_419_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (tmp_46_fu_425_p2 = ap_const_lv1_0) and (tmp_41_fu_419_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            output_r_d0 <= ap_const_lv16_0;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(tmp_28_reg_574, tmp_29_reg_578, ap_CS_fsm_state4, ap_CS_fsm_state6, tmp_41_fu_419_p2, tmp_41_reg_623, tmp_38_fu_408_p2, tmp_46_fu_425_p2, tmp_46_reg_627, ap_CS_fsm_state8, tmp_40_fu_359_p2, ap_CS_fsm_state7, tmp_31_fu_467_p2)
    begin
        if ((((tmp_46_reg_627 = ap_const_lv1_1) and (tmp_41_reg_623 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((tmp_31_fu_467_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_41_fu_419_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_29_reg_578 = ap_const_lv1_1) and (tmp_38_fu_408_p2 = ap_const_lv1_1) and (tmp_28_reg_574 = ap_const_lv1_0) and (tmp_46_fu_425_p2 = ap_const_lv1_0) and (tmp_41_fu_419_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((tmp_40_fu_359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

        tmp2_cast_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_fu_335_p2),32));

    tmp2_fu_335_p2 <= std_logic_vector(unsigned(tmp_26_cast_fu_303_p1) + unsigned(ap_const_lv17_1FFFF));
        tmp3_cast_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp3_fu_435_p2),32));

    tmp3_fu_435_p2 <= std_logic_vector(unsigned(tmp_37_cast_fu_404_p1) + unsigned(ap_const_lv17_1FFFF));
    tmp4_fu_370_p2 <= std_logic_vector(unsigned(tmp_24_reg_555) + unsigned(tmp_39_fu_351_p1));
    tmp7_fu_395_p1 <= tmp_17_reg_508(16 - 1 downto 0);
    tmp7_fu_395_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_reg_587) * signed('0' &tmp7_fu_395_p1))), 32));
    tmp_15_fu_228_p2 <= std_logic_vector(unsigned(tmp_cast_fu_224_p1) + unsigned(ap_const_lv17_2));
    tmp_16_fu_234_p2 <= std_logic_vector(unsigned(tmp_cast_fu_224_p1) + unsigned(ap_const_lv17_1));
    tmp_17_cast_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_width),17));
    tmp_17_fu_240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_width),32));
    tmp_18_fu_248_p2 <= std_logic_vector(unsigned(tmp_17_cast_fu_244_p1) + unsigned(ap_const_lv17_2));
    tmp_19_fu_254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_height),32));
    tmp_20_fu_258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(output_width),32));
    tmp_21_fu_262_p2 <= std_logic_vector(unsigned(tmp_17_cast_fu_244_p1) + unsigned(ap_const_lv17_1));
    tmp_24_fu_289_p1 <= tmp_20_reg_525(16 - 1 downto 0);
    tmp_24_fu_289_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(phi_mul4_reg_136) * signed('0' &tmp_24_fu_289_p1))), 32));
    tmp_26_cast_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(height_reg_160),17));
    tmp_26_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(height_reg_160),32));
    tmp_27_fu_307_p2 <= "1" when (unsigned(tmp_26_cast_fu_303_p1) < unsigned(tmp_15_reg_498)) else "0";
    tmp_28_fu_318_p2 <= "1" when (height_reg_160 = ap_const_lv16_0) else "0";
    tmp_29_fu_324_p2 <= "1" when (unsigned(tmp_26_cast_fu_303_p1) < unsigned(tmp_16_reg_503)) else "0";
    tmp_30_cast_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width_reg_205),17));
    tmp_30_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width_reg_205),32));
    tmp_31_fu_467_p2 <= "1" when (unsigned(tmp_30_cast_fu_463_p1) < unsigned(tmp_18_reg_513)) else "0";
    tmp_33_fu_386_p0 <= tmp_20_reg_525(16 - 1 downto 0);
    tmp_33_fu_386_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &tmp_33_fu_386_p0) * signed(tmp_56_reg_582))), 32));
    tmp_35_fu_478_p2 <= std_logic_vector(unsigned(tmp_24_reg_555) + unsigned(tmp_30_fu_459_p1));
        tmp_36_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_35_fu_478_p2),64));

    tmp_37_cast_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width1_reg_194),17));
    tmp_37_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width1_reg_194),32));
    tmp_38_fu_408_p2 <= "1" when (unsigned(tmp_37_cast_fu_404_p1) < unsigned(tmp_18_reg_513)) else "0";
    tmp_39_cast_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width2_reg_183),17));
    tmp_39_fu_351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width2_reg_183),32));
    tmp_40_fu_359_p2 <= "1" when (unsigned(tmp_39_cast_fu_355_p1) < unsigned(tmp_18_reg_513)) else "0";
    tmp_41_fu_419_p2 <= "1" when (width1_reg_194 = ap_const_lv16_0) else "0";
    tmp_43_fu_375_p2 <= std_logic_vector(unsigned(tmp4_fu_370_p2) + unsigned(phi_mul_reg_171));
        tmp_44_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_43_fu_375_p2),64));

        tmp_45_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_33_fu_386_p2),64));

    tmp_46_fu_425_p2 <= "1" when (unsigned(tmp_37_cast_fu_404_p1) < unsigned(tmp_21_reg_532)) else "0";
    tmp_49_fu_445_p2 <= std_logic_vector(signed(tmp3_cast_fu_441_p1) + signed(tmp7_reg_610));
        tmp_50_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_445_p2),64));

        tmp_52_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_51_reg_636),64));

        tmp_54_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_216_p2),64));

    tmp_56_fu_329_p2 <= std_logic_vector(unsigned(tmp_26_fu_299_p1) + unsigned(phi_mul4_reg_136));
    tmp_cast_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_height),17));
    tmp_fu_345_p2 <= std_logic_vector(signed(tmp2_cast_fu_341_p1) + signed(phi_mul7_reg_148));
    tmp_s_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_height),32));
    width_1_fu_472_p2 <= std_logic_vector(unsigned(width_reg_205) + unsigned(ap_const_lv16_1));
    width_2_fu_364_p2 <= std_logic_vector(unsigned(width2_reg_183) + unsigned(ap_const_lv16_1));
    width_3_fu_413_p2 <= std_logic_vector(unsigned(width1_reg_194) + unsigned(ap_const_lv16_1));
end behav;
