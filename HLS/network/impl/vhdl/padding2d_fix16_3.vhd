-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity padding2d_fix16_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_depth : IN STD_LOGIC_VECTOR (15 downto 0);
    input_height : IN STD_LOGIC_VECTOR (15 downto 0);
    input_width : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of padding2d_fix16_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000011";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv16_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000101";
    constant ap_const_lv16_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_304_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_fu_304_p2 : signal is "no";
    signal tmp_reg_573 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_fu_546_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_reg_580 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_s_fu_552_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_reg_592 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_310_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_reg_597 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_315_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_reg_603 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_fu_325_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_45_reg_608 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_331_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_339_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_47_reg_619 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_48_fu_345_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_48_reg_624 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_49_fu_356_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_fu_367_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_634 : STD_LOGIC_VECTOR (15 downto 0);
    signal depth_1_fu_378_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal depth_1_reg_642 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i_1_fu_393_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_52_fu_404_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_50_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_count_3_fu_410_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of i_count_3_fu_410_p2 : signal is "no";
    signal i_count_3_reg_660 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_fu_420_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp_53_fu_420_p2 : signal is "no";
    signal tmp_53_reg_665 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_1_fu_430_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_1_reg_674 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_55_fu_436_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_reg_679 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond7_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_441_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_54_reg_684 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exitcond_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_456_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_reg_697 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_fu_462_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_58_reg_702 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_8_fu_472_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal o_count_9_fu_489_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal exitcond5_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next5_fu_495_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv_next4_fu_500_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_2_fu_514_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal o_count_7_fu_525_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_56_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next_fu_531_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv_next1_fu_536_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv_next2_fu_541_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv1_reg_112 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv_reg_122 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv2_reg_132 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_reg_142 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_count_reg_154 : STD_LOGIC_VECTOR (15 downto 0);
    signal depth_reg_166 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_1_reg_177 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond1_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_187 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvars_iv3_reg_198 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_6_reg_209 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_2_reg_220 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_count_1_reg_231 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_reg_242 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_3_reg_253 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_count_2_reg_264 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_4_reg_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_count_5_reg_284 : STD_LOGIC_VECTOR (15 downto 0);
    signal i2_reg_293 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_51_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_62_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_fu_520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_304_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_310_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_43_fu_315_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_320_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp1_fu_320_p2 : signal is "no";
    signal tmp_46_fu_331_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_cast_fu_336_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_cast_fu_336_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_fu_351_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_351_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_362_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp3_fu_362_p2 : signal is "no";
    signal tmp_52_cast_fu_384_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp2_fu_415_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond7_fu_425_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_436_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_cast_fu_505_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_41_fu_546_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component network_mul_mul_16s_16s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    network_mul_mul_16s_16s_16_1_1_U29 : component network_mul_mul_16s_16s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => input_height,
        din1 => tmp_41_fu_546_p1,
        dout => tmp_41_fu_546_p2);

    network_mul_mul_16s_16s_16_1_1_U30 : component network_mul_mul_16s_16s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 16)
    port map (
        din0 => input_width,
        din1 => input_height,
        dout => tmp_s_fu_552_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    depth_reg_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                depth_reg_166 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_56_fu_509_p2 = ap_const_lv1_0))) then 
                depth_reg_166 <= depth_1_reg_642;
            end if; 
        end if;
    end process;

    height_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_50_fu_388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                height_reg_242 <= ap_const_lv16_0;
            elsif (((exitcond5_fu_478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                height_reg_242 <= height_1_reg_674;
            end if; 
        end if;
    end process;

    i2_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_56_fu_509_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i2_reg_293 <= i_2_fu_514_p2;
            elsif (((exitcond7_fu_425_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                i2_reg_293 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    i_count_1_reg_231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_50_fu_388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_count_1_reg_231 <= i_count_reg_154;
            elsif (((exitcond5_fu_478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_count_1_reg_231 <= tmp_55_reg_679;
            end if; 
        end if;
    end process;

    i_count_2_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_count_2_reg_264 <= tmp_61_reg_697;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond7_fu_425_p2 = ap_const_lv1_0))) then 
                i_count_2_reg_264 <= i_count_1_reg_231;
            end if; 
        end if;
    end process;

    i_count_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                i_count_reg_154 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_56_fu_509_p2 = ap_const_lv1_0))) then 
                i_count_reg_154 <= i_count_3_reg_660;
            end if; 
        end if;
    end process;

    i_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond1_fu_373_p2 = ap_const_lv1_0))) then 
                i_reg_187 <= ap_const_lv16_0;
            elsif (((tmp_50_fu_388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_reg_187 <= i_1_fu_393_p2;
            end if; 
        end if;
    end process;

    indvars_iv1_reg_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvars_iv1_reg_112 <= tmp_49_fu_356_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_56_fu_509_p2 = ap_const_lv1_0))) then 
                indvars_iv1_reg_112 <= indvars_iv_next2_fu_541_p2;
            end if; 
        end if;
    end process;

    indvars_iv2_reg_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvars_iv2_reg_132 <= tmp_42_fu_310_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_56_fu_509_p2 = ap_const_lv1_0))) then 
                indvars_iv2_reg_132 <= indvars_iv_next_fu_531_p2;
            end if; 
        end if;
    end process;

    indvars_iv3_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_50_fu_388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvars_iv3_reg_198 <= indvars_iv1_reg_112;
            elsif (((exitcond5_fu_478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvars_iv3_reg_198 <= indvars_iv_next4_fu_500_p2;
            end if; 
        end if;
    end process;

    indvars_iv_reg_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                indvars_iv_reg_122 <= tmp_46_fu_331_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_56_fu_509_p2 = ap_const_lv1_0))) then 
                indvars_iv_reg_122 <= indvars_iv_next1_fu_536_p2;
            end if; 
        end if;
    end process;

    o_count_1_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (exitcond1_fu_373_p2 = ap_const_lv1_0))) then 
                o_count_1_reg_177 <= o_count_reg_142;
            elsif (((tmp_50_fu_388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                o_count_1_reg_177 <= tmp_52_fu_404_p2;
            end if; 
        end if;
    end process;

    o_count_2_reg_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_50_fu_388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                o_count_2_reg_220 <= indvars_iv2_reg_132;
            elsif (((exitcond5_fu_478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                o_count_2_reg_220 <= tmp_58_reg_702;
            end if; 
        end if;
    end process;

    o_count_3_reg_253_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                o_count_3_reg_253 <= o_count_8_fu_472_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond7_fu_425_p2 = ap_const_lv1_0))) then 
                o_count_3_reg_253 <= o_count_2_reg_220;
            end if; 
        end if;
    end process;

    o_count_4_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond5_fu_478_p2 = ap_const_lv1_0))) then 
                o_count_4_reg_274 <= o_count_9_fu_489_p2;
            elsif (((exitcond_fu_445_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                o_count_4_reg_274 <= o_count_6_reg_209;
            end if; 
        end if;
    end process;

    o_count_5_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_56_fu_509_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                o_count_5_reg_284 <= o_count_7_fu_525_p2;
            elsif (((exitcond7_fu_425_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                o_count_5_reg_284 <= tmp_53_reg_665;
            end if; 
        end if;
    end process;

    o_count_6_reg_209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_50_fu_388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                o_count_6_reg_209 <= indvars_iv_reg_122;
            elsif (((exitcond5_fu_478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                o_count_6_reg_209 <= indvars_iv_next5_fu_495_p2;
            end if; 
        end if;
    end process;

    o_count_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                o_count_reg_142 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_56_fu_509_p2 = ap_const_lv1_0))) then 
                o_count_reg_142 <= tmp_54_reg_684;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                depth_1_reg_642 <= depth_1_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                height_1_reg_674 <= height_1_fu_430_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_50_fu_388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                i_count_3_reg_660 <= i_count_3_fu_410_p2;
                tmp_53_reg_665 <= tmp_53_fu_420_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                tmp_22_reg_634 <= tmp_22_fu_367_p2;
                tmp_42_reg_597 <= tmp_42_fu_310_p2;
                tmp_43_reg_603 <= tmp_43_fu_315_p2;
                tmp_45_reg_608 <= tmp_45_fu_325_p2;
                tmp_47_reg_619 <= tmp_47_fu_339_p2;
                tmp_48_reg_624 <= tmp_48_fu_345_p2;
                tmp_s_reg_592 <= tmp_s_fu_552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_41_reg_580 <= tmp_41_fu_546_p2;
                tmp_reg_573 <= tmp_fu_304_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7_fu_425_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                tmp_54_reg_684 <= tmp_54_fu_441_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond7_fu_425_p2 = ap_const_lv1_0))) then
                tmp_55_reg_679 <= tmp_55_fu_436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_445_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_58_reg_702 <= tmp_58_fu_462_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond_fu_445_p2 = ap_const_lv1_0))) then
                tmp_61_reg_697 <= tmp_61_fu_456_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, tmp_50_fu_388_p2, ap_CS_fsm_state5, exitcond7_fu_425_p2, ap_CS_fsm_state6, exitcond_fu_445_p2, ap_CS_fsm_state8, exitcond5_fu_478_p2, ap_CS_fsm_state9, tmp_56_fu_509_p2, exitcond1_fu_373_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((exitcond1_fu_373_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((tmp_50_fu_388_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((exitcond7_fu_425_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((exitcond_fu_445_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((exitcond5_fu_478_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (tmp_56_fu_509_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, exitcond1_fu_373_p2)
    begin
        if ((((exitcond1_fu_373_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, exitcond1_fu_373_p2)
    begin
        if (((exitcond1_fu_373_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    depth_1_fu_378_p2 <= std_logic_vector(unsigned(depth_reg_166) + unsigned(ap_const_lv16_1));
    exitcond1_fu_373_p2 <= "1" when (depth_reg_166 = input_depth) else "0";
    exitcond5_fu_478_p2 <= "1" when (o_count_4_reg_274 = indvars_iv3_reg_198) else "0";
    exitcond7_fu_425_p1 <= input_height;
    exitcond7_fu_425_p2 <= "1" when (height_reg_242 = exitcond7_fu_425_p1) else "0";
    exitcond_fu_445_p2 <= "1" when (o_count_3_reg_253 = o_count_6_reg_209) else "0";
    height_1_fu_430_p2 <= std_logic_vector(unsigned(height_reg_242) + unsigned(ap_const_lv16_1));
    i_1_fu_393_p2 <= std_logic_vector(unsigned(i_reg_187) + unsigned(ap_const_lv16_1));
    i_2_fu_514_p2 <= std_logic_vector(unsigned(i2_reg_293) + unsigned(ap_const_lv16_1));
    i_count_3_fu_410_p2 <= std_logic_vector(signed(tmp_s_reg_592) + signed(i_count_reg_154));
    indvars_iv_next1_fu_536_p2 <= std_logic_vector(unsigned(tmp_45_reg_608) + unsigned(indvars_iv_reg_122));
    indvars_iv_next2_fu_541_p2 <= std_logic_vector(unsigned(indvars_iv1_reg_112) + unsigned(tmp_22_reg_634));
    indvars_iv_next4_fu_500_p2 <= std_logic_vector(signed(tmp_reg_573) + signed(indvars_iv3_reg_198));
    indvars_iv_next5_fu_495_p2 <= std_logic_vector(signed(tmp_reg_573) + signed(o_count_6_reg_209));
    indvars_iv_next_fu_531_p2 <= std_logic_vector(unsigned(tmp_45_reg_608) + unsigned(indvars_iv2_reg_132));
    input_r_address0 <= tmp_59_fu_451_p1(12 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    o_count_7_fu_525_p2 <= std_logic_vector(unsigned(o_count_5_reg_284) + unsigned(ap_const_lv16_1));
    o_count_8_fu_472_p2 <= std_logic_vector(unsigned(o_count_3_reg_253) + unsigned(ap_const_lv16_1));
    o_count_9_fu_489_p2 <= std_logic_vector(unsigned(o_count_4_reg_274) + unsigned(ap_const_lv16_1));

    output_r_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, tmp_51_fu_399_p1, tmp_60_fu_467_p1, tmp_62_fu_484_p1, tmp_57_fu_520_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_address0 <= tmp_57_fu_520_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_address0 <= tmp_62_fu_484_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            output_r_address0 <= tmp_60_fu_467_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            output_r_address0 <= tmp_51_fu_399_p1(12 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(input_r_q0, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            output_r_d0 <= input_r_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_r_d0 <= ap_const_lv16_0;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(ap_CS_fsm_state4, tmp_50_fu_388_p2, ap_CS_fsm_state7, ap_CS_fsm_state8, exitcond5_fu_478_p2, ap_CS_fsm_state9, tmp_56_fu_509_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((tmp_50_fu_388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_56_fu_509_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond5_fu_478_p2 = ap_const_lv1_0)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_320_p2 <= std_logic_vector(unsigned(tmp_42_fu_310_p2) + unsigned(tmp_41_reg_580));
    tmp2_fu_415_p2 <= std_logic_vector(unsigned(tmp_42_reg_597) + unsigned(o_count_reg_142));
    tmp3_fu_362_p2 <= std_logic_vector(unsigned(ap_const_lv16_4) + unsigned(tmp_41_reg_580));
    tmp_11_fu_351_p0 <= input_width;
    tmp_11_fu_351_p2 <= std_logic_vector(shift_left(unsigned(tmp_11_fu_351_p0),to_integer(unsigned('0' & ap_const_lv16_1(16-1 downto 0)))));
    tmp_22_fu_367_p2 <= std_logic_vector(unsigned(tmp3_fu_362_p2) + unsigned(tmp_11_fu_351_p2));
    tmp_41_fu_546_p1 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(tmp_fu_304_p1));
    tmp_42_fu_310_p1 <= input_width;
    tmp_42_fu_310_p2 <= std_logic_vector(unsigned(ap_const_lv16_3) + unsigned(tmp_42_fu_310_p1));
    tmp_43_fu_315_p1 <= input_width;
    tmp_43_fu_315_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(tmp_43_fu_315_p1));
    tmp_45_fu_325_p2 <= std_logic_vector(unsigned(tmp1_fu_320_p2) + unsigned(tmp_43_fu_315_p2));
    tmp_46_fu_331_p0 <= input_width;
    tmp_46_fu_331_p2 <= std_logic_vector(signed(tmp_46_fu_331_p0) + signed(tmp_42_fu_310_p2));
    tmp_47_cast_fu_336_p0 <= input_width;
    tmp_47_cast_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_cast_fu_336_p0),17));
    tmp_47_fu_339_p2 <= std_logic_vector(unsigned(ap_const_lv17_3) + unsigned(tmp_47_cast_fu_336_p1));
    tmp_48_fu_345_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_47_cast_fu_336_p1));
    tmp_49_fu_356_p2 <= std_logic_vector(unsigned(ap_const_lv16_5) + unsigned(tmp_11_fu_351_p2));
    tmp_50_fu_388_p2 <= "1" when (unsigned(tmp_52_cast_fu_384_p1) < unsigned(tmp_47_reg_619)) else "0";
    tmp_51_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_1_reg_177),64));
    tmp_52_cast_fu_384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_187),17));
    tmp_52_fu_404_p2 <= std_logic_vector(unsigned(o_count_1_reg_177) + unsigned(ap_const_lv16_1));
    tmp_53_fu_420_p2 <= std_logic_vector(unsigned(tmp2_fu_415_p2) + unsigned(tmp_41_reg_580));
    tmp_54_fu_441_p2 <= std_logic_vector(unsigned(tmp_53_reg_665) + unsigned(tmp_43_reg_603));
    tmp_55_fu_436_p1 <= input_width;
    tmp_55_fu_436_p2 <= std_logic_vector(unsigned(i_count_1_reg_231) + unsigned(tmp_55_fu_436_p1));
    tmp_56_fu_509_p2 <= "1" when (unsigned(tmp_60_cast_fu_505_p1) < unsigned(tmp_48_reg_624)) else "0";
    tmp_57_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_5_reg_284),64));
    tmp_58_fu_462_p2 <= std_logic_vector(signed(tmp_reg_573) + signed(o_count_2_reg_220));
    tmp_59_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_count_2_reg_264),64));
    tmp_60_cast_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_reg_293),17));
    tmp_60_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_3_reg_253),64));
    tmp_61_fu_456_p2 <= std_logic_vector(unsigned(i_count_2_reg_264) + unsigned(ap_const_lv16_1));
    tmp_62_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_4_reg_274),64));
    tmp_fu_304_p1 <= input_width;
    tmp_fu_304_p2 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(tmp_fu_304_p1));
end behav;
