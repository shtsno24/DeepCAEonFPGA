-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity padding2d_fix16 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_depth : IN STD_LOGIC_VECTOR (6 downto 0);
    input_height : IN STD_LOGIC_VECTOR (5 downto 0);
    input_width : IN STD_LOGIC_VECTOR (5 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of padding2d_fix16 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_51_fu_317_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_51_reg_667 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_321_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_674 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal input_height_cast3_fu_327_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal input_height_cast3_reg_685 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_27_fu_338_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_reg_690 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_52_fu_344_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_52_reg_695 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_fu_348_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_28_reg_701 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_54_fu_353_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_54_reg_711 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_34_fu_357_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_34_reg_716 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_29_fu_364_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_29_reg_722 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_32_fu_369_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_32_reg_729 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_53_fu_374_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_53_reg_734 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_33_fu_379_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_33_reg_739 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_36_fu_389_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_36_reg_744 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_cast_fu_398_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_cast_reg_749 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal input_width_cast2_fu_401_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal input_width_cast2_reg_756 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_408_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_reg_761 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_27_cast1_fu_414_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_cast1_reg_766 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_cast9_fu_417_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_cast9_reg_771 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_cast_fu_423_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_29_cast6_fu_426_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_cast6_reg_781 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_cast_fu_443_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_31_cast_reg_786 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_32_cast_fu_447_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_37_cast_fu_453_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_37_fu_456_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_37_reg_802 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_55_fu_460_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_55_reg_808 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast_fu_475_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_cast_reg_813 : STD_LOGIC_VECTOR (13 downto 0);
    signal depth_1_fu_488_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal depth_1_reg_821 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_40_fu_509_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exitcond2_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_count_3_fu_515_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_count_3_reg_834 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_38_fu_525_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_reg_839 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_1_fu_539_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal height_1_reg_848 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_42_fu_545_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_42_reg_853 : STD_LOGIC_VECTOR (13 downto 0);
    signal exitcond7_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_550_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_reg_858 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal exitcond_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_565_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_47_reg_871 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_44_fu_571_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_44_reg_876 : STD_LOGIC_VECTOR (13 downto 0);
    signal input_load_reg_881 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal o_count_8_fu_581_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal o_count_9_fu_598_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal exitcond5_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next5_fu_604_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvars_iv_next4_fu_609_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal o_count_7_fu_629_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal exitcond8_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_next_fu_635_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvars_iv_next1_fu_640_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvars_iv_next2_fu_645_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvars_iv_next6_fu_650_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv_next3_fu_655_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv9_reg_127 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv4_reg_137 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv1_reg_147 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvars_iv_reg_157 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvars_iv2_reg_167 : STD_LOGIC_VECTOR (13 downto 0);
    signal o_count_reg_177 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_count_reg_189 : STD_LOGIC_VECTOR (13 downto 0);
    signal depth_reg_201 : STD_LOGIC_VECTOR (4 downto 0);
    signal o_count_1_reg_212 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond1_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv3_reg_222 : STD_LOGIC_VECTOR (13 downto 0);
    signal o_count_6_reg_233 : STD_LOGIC_VECTOR (13 downto 0);
    signal o_count_2_reg_244 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_count_1_reg_255 : STD_LOGIC_VECTOR (13 downto 0);
    signal height_reg_266 : STD_LOGIC_VECTOR (4 downto 0);
    signal o_count_3_reg_277 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_count_2_reg_288 : STD_LOGIC_VECTOR (13 downto 0);
    signal o_count_4_reg_298 : STD_LOGIC_VECTOR (13 downto 0);
    signal o_count_5_reg_308 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_624_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_fu_317_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_height_cast3_fu_327_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_27_fu_338_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_27_fu_338_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_28_cast8_fu_361_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_32_fu_369_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_53_fu_374_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_35_fu_385_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal input_width_cast_fu_395_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal input_width_cast_fu_395_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_408_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_408_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_28_cast7_fu_420_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp1_fu_432_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_29_cast_fu_429_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_31_fu_437_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_36_cast_fu_450_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp3_fu_464_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_21_fu_469_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal depth_cast_fu_479_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_56_fu_494_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp2_fu_520_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal height_cast_fu_530_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal exitcond7_fu_534_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_57_fu_614_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_fu_338_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_fu_338_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_408_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_408_p10 : STD_LOGIC_VECTOR (13 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    depth_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                depth_reg_201 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then 
                depth_reg_201 <= depth_1_reg_821;
            end if; 
        end if;
    end process;

    height_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) then 
                height_reg_266 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond5_fu_587_p2 = ap_const_lv1_1))) then 
                height_reg_266 <= height_1_reg_848;
            end if; 
        end if;
    end process;

    i_count_1_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) then 
                i_count_1_reg_255 <= i_count_reg_189;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond5_fu_587_p2 = ap_const_lv1_1))) then 
                i_count_1_reg_255 <= tmp_42_reg_853;
            end if; 
        end if;
    end process;

    i_count_2_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                i_count_2_reg_288 <= tmp_47_reg_871;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_534_p2 = ap_const_lv1_0))) then 
                i_count_2_reg_288 <= i_count_1_reg_255;
            end if; 
        end if;
    end process;

    i_count_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i_count_reg_189 <= ap_const_lv14_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then 
                i_count_reg_189 <= i_count_3_reg_834;
            end if; 
        end if;
    end process;

    indvars_iv1_reg_147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvars_iv1_reg_147 <= tmp_37_cast_fu_453_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then 
                indvars_iv1_reg_147 <= indvars_iv_next2_fu_645_p2;
            end if; 
        end if;
    end process;

    indvars_iv2_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvars_iv2_reg_167 <= tmp_28_cast_fu_423_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then 
                indvars_iv2_reg_167 <= indvars_iv_next_fu_635_p2;
            end if; 
        end if;
    end process;

    indvars_iv3_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) then 
                indvars_iv3_reg_222 <= indvars_iv1_reg_147;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond5_fu_587_p2 = ap_const_lv1_1))) then 
                indvars_iv3_reg_222 <= indvars_iv_next4_fu_609_p2;
            end if; 
        end if;
    end process;

    indvars_iv4_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvars_iv4_reg_137 <= tmp_36_reg_744;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then 
                indvars_iv4_reg_137 <= indvars_iv_next6_fu_650_p2;
            end if; 
        end if;
    end process;

    indvars_iv9_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvars_iv9_reg_127 <= tmp_28_reg_701;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then 
                indvars_iv9_reg_127 <= indvars_iv_next3_fu_655_p2;
            end if; 
        end if;
    end process;

    indvars_iv_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvars_iv_reg_157 <= tmp_32_cast_fu_447_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then 
                indvars_iv_reg_157 <= indvars_iv_next1_fu_640_p2;
            end if; 
        end if;
    end process;

    o_count_1_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond1_fu_483_p2 = ap_const_lv1_0))) then 
                o_count_1_reg_212 <= o_count_reg_177;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_0))) then 
                o_count_1_reg_212 <= tmp_40_fu_509_p2;
            end if; 
        end if;
    end process;

    o_count_2_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) then 
                o_count_2_reg_244 <= indvars_iv2_reg_167;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond5_fu_587_p2 = ap_const_lv1_1))) then 
                o_count_2_reg_244 <= tmp_44_reg_876;
            end if; 
        end if;
    end process;

    o_count_3_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                o_count_3_reg_277 <= o_count_8_fu_581_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_534_p2 = ap_const_lv1_0))) then 
                o_count_3_reg_277 <= o_count_2_reg_244;
            end if; 
        end if;
    end process;

    o_count_4_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond5_fu_587_p2 = ap_const_lv1_0))) then 
                o_count_4_reg_298 <= o_count_9_fu_598_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_554_p2 = ap_const_lv1_1))) then 
                o_count_4_reg_298 <= o_count_6_reg_233;
            end if; 
        end if;
    end process;

    o_count_5_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_0))) then 
                o_count_5_reg_308 <= o_count_7_fu_629_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_534_p2 = ap_const_lv1_1))) then 
                o_count_5_reg_308 <= tmp_38_reg_839;
            end if; 
        end if;
    end process;

    o_count_6_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) then 
                o_count_6_reg_233 <= indvars_iv_reg_157;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond5_fu_587_p2 = ap_const_lv1_1))) then 
                o_count_6_reg_233 <= indvars_iv_next5_fu_604_p2;
            end if; 
        end if;
    end process;

    o_count_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                o_count_reg_177 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then 
                o_count_reg_177 <= tmp_41_reg_858;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                depth_1_reg_821 <= depth_1_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                height_1_reg_848 <= height_1_fu_539_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) then
                i_count_3_reg_834 <= i_count_3_fu_515_p2;
                tmp_38_reg_839 <= tmp_38_fu_525_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                input_height_cast3_reg_685 <= input_height_cast3_fu_327_p1;
                tmp_27_reg_690 <= tmp_27_fu_338_p2;
                tmp_28_reg_701 <= tmp_28_fu_348_p2;
                tmp_52_reg_695 <= tmp_52_fu_344_p1;
                tmp_54_reg_711 <= tmp_54_fu_353_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                input_load_reg_881 <= input_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    input_width_cast2_reg_756(6 downto 0) <= input_width_cast2_fu_401_p1(6 downto 0);
                    p_cast_reg_813(9 downto 0) <= p_cast_fu_475_p1(9 downto 0);
                    tmp_27_cast1_reg_766(11 downto 0) <= tmp_27_cast1_fu_414_p1(11 downto 0);
                    tmp_28_cast9_reg_771(4 downto 0) <= tmp_28_cast9_fu_417_p1(4 downto 0);
                    tmp_29_cast6_reg_781(4 downto 0) <= tmp_29_cast6_fu_426_p1(4 downto 0);
                    tmp_31_cast_reg_786(9 downto 0) <= tmp_31_cast_fu_443_p1(9 downto 0);
                tmp_37_reg_802 <= tmp_37_fu_456_p2;
                tmp_55_reg_808 <= tmp_55_fu_460_p1;
                    tmp_cast_reg_749(4 downto 0) <= tmp_cast_fu_398_p1(4 downto 0);
                tmp_s_reg_761 <= tmp_s_fu_408_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_29_reg_722 <= tmp_29_fu_364_p2;
                tmp_32_reg_729 <= tmp_32_fu_369_p2;
                    tmp_33_reg_739(5 downto 1) <= tmp_33_fu_379_p2(5 downto 1);
                tmp_36_reg_744 <= tmp_36_fu_389_p2;
                    tmp_53_reg_734(5 downto 1) <= tmp_53_fu_374_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_34_reg_716 <= tmp_34_fu_357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_534_p2 = ap_const_lv1_1))) then
                tmp_41_reg_858 <= tmp_41_fu_550_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_534_p2 = ap_const_lv1_0))) then
                tmp_42_reg_853 <= tmp_42_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_554_p2 = ap_const_lv1_1))) then
                tmp_44_reg_876 <= tmp_44_fu_571_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_554_p2 = ap_const_lv1_0))) then
                tmp_47_reg_871 <= tmp_47_fu_565_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_51_reg_667 <= tmp_51_fu_317_p1;
                tmp_reg_674 <= tmp_fu_321_p2;
            end if;
        end if;
    end process;
    tmp_53_reg_734(0) <= '0';
    tmp_33_reg_739(0) <= '1';
    tmp_cast_reg_749(13 downto 5) <= "000000000";
    input_width_cast2_reg_756(13 downto 7) <= "0000000";
    tmp_27_cast1_reg_766(15 downto 12) <= "0000";
    tmp_28_cast9_reg_771(15 downto 5) <= "00000000000";
    tmp_29_cast6_reg_781(15 downto 5) <= "00000000000";
    tmp_31_cast_reg_786(13 downto 10) <= "0000";
    p_cast_reg_813(13 downto 10) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state6, ap_CS_fsm_state7, exitcond2_fu_498_p2, ap_CS_fsm_state8, exitcond7_fu_534_p2, ap_CS_fsm_state9, exitcond_fu_554_p2, ap_CS_fsm_state12, exitcond5_fu_587_p2, ap_CS_fsm_state13, exitcond8_fu_618_p2, exitcond1_fu_483_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond1_fu_483_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (exitcond7_fu_534_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (exitcond_fu_554_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond5_fu_587_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6, exitcond1_fu_483_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond1_fu_483_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, exitcond1_fu_483_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond1_fu_483_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    depth_1_fu_488_p2 <= std_logic_vector(unsigned(depth_reg_201) + unsigned(ap_const_lv5_1));
    depth_cast_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(depth_reg_201),6));
    exitcond1_fu_483_p2 <= "1" when (depth_cast_fu_479_p1 = tmp_55_reg_808) else "0";
    exitcond2_fu_498_p2 <= "1" when (tmp_56_fu_494_p1 = indvars_iv9_reg_127) else "0";
    exitcond5_fu_587_p2 <= "1" when (o_count_4_reg_298 = indvars_iv3_reg_222) else "0";
    exitcond7_fu_534_p1 <= input_height;
    exitcond7_fu_534_p2 <= "1" when (height_cast_fu_530_p1 = exitcond7_fu_534_p1) else "0";
    exitcond8_fu_618_p2 <= "1" when (tmp_57_fu_614_p1 = indvars_iv4_reg_137) else "0";
    exitcond_fu_554_p2 <= "1" when (o_count_3_reg_277 = o_count_6_reg_233) else "0";
    height_1_fu_539_p2 <= std_logic_vector(unsigned(height_reg_266) + unsigned(ap_const_lv5_1));
    height_cast_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(height_reg_266),6));
    i_count_3_fu_515_p2 <= std_logic_vector(unsigned(tmp_s_reg_761) + unsigned(i_count_reg_189));
    indvars_iv_next1_fu_640_p2 <= std_logic_vector(unsigned(tmp_31_cast_reg_786) + unsigned(indvars_iv_reg_157));
    indvars_iv_next2_fu_645_p2 <= std_logic_vector(unsigned(indvars_iv1_reg_147) + unsigned(p_cast_reg_813));
    indvars_iv_next3_fu_655_p2 <= std_logic_vector(unsigned(tmp_37_reg_802) + unsigned(indvars_iv9_reg_127));
    indvars_iv_next4_fu_609_p2 <= std_logic_vector(unsigned(tmp_cast_reg_749) + unsigned(indvars_iv3_reg_222));
    indvars_iv_next5_fu_604_p2 <= std_logic_vector(unsigned(tmp_cast_reg_749) + unsigned(o_count_6_reg_233));
    indvars_iv_next6_fu_650_p2 <= std_logic_vector(unsigned(tmp_37_reg_802) + unsigned(indvars_iv4_reg_137));
    indvars_iv_next_fu_635_p2 <= std_logic_vector(unsigned(tmp_31_cast_reg_786) + unsigned(indvars_iv2_reg_167));
    input_height_cast3_fu_327_p0 <= input_height;
        input_height_cast3_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_height_cast3_fu_327_p0),7));

    input_r_address0 <= tmp_45_fu_560_p1(14 - 1 downto 0);

    input_r_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    input_width_cast2_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_width_cast_fu_395_p1),14));
    input_width_cast_fu_395_p0 <= input_width;
        input_width_cast_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_width_cast_fu_395_p0),7));

    o_count_7_fu_629_p2 <= std_logic_vector(unsigned(o_count_5_reg_308) + unsigned(ap_const_lv16_1));
    o_count_8_fu_581_p2 <= std_logic_vector(unsigned(o_count_3_reg_277) + unsigned(ap_const_lv14_1));
    o_count_9_fu_598_p2 <= std_logic_vector(unsigned(o_count_4_reg_298) + unsigned(ap_const_lv14_1));

    output_r_address0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, tmp_39_fu_504_p1, tmp_46_fu_576_p1, tmp_48_fu_593_p1, tmp_43_fu_624_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            output_r_address0 <= tmp_43_fu_624_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_r_address0 <= tmp_48_fu_593_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_r_address0 <= tmp_46_fu_576_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            output_r_address0 <= tmp_39_fu_504_p1(14 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(ap_CS_fsm_state7, input_load_reg_881, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_r_d0 <= input_load_reg_881;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            output_r_d0 <= ap_const_lv16_0;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(ap_CS_fsm_state7, exitcond2_fu_498_p2, ap_CS_fsm_state11, ap_CS_fsm_state12, exitcond5_fu_587_p2, ap_CS_fsm_state13, exitcond8_fu_618_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (exitcond8_fu_618_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (exitcond5_fu_587_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (exitcond2_fu_498_p2 = ap_const_lv1_0)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_469_p2),14));
    tmp1_fu_432_p2 <= std_logic_vector(unsigned(tmp_28_cast7_fu_420_p1) + unsigned(tmp_52_reg_695));
    tmp2_fu_520_p2 <= std_logic_vector(unsigned(tmp_28_cast9_reg_771) + unsigned(o_count_reg_177));
    tmp3_fu_464_p2 <= std_logic_vector(unsigned(ap_const_lv10_4) + unsigned(tmp_52_reg_695));
    tmp_21_fu_469_p2 <= std_logic_vector(unsigned(tmp_36_cast_fu_450_p1) + unsigned(tmp3_fu_464_p2));
    tmp_27_cast1_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_reg_690),16));
    tmp_27_fu_338_p0 <= tmp_27_fu_338_p00(5 - 1 downto 0);
    tmp_27_fu_338_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_674),12));
    tmp_27_fu_338_p1 <= tmp_27_fu_338_p10(7 - 1 downto 0);
    tmp_27_fu_338_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_height_cast3_fu_327_p1),12));
    tmp_27_fu_338_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_338_p0) * unsigned(tmp_27_fu_338_p1), 12));
    tmp_28_cast7_fu_420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_reg_701),10));
    tmp_28_cast8_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_reg_701),6));
    tmp_28_cast9_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_reg_701),16));
    tmp_28_cast_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_reg_701),14));
    tmp_28_fu_348_p2 <= std_logic_vector(unsigned(ap_const_lv5_3) + unsigned(tmp_51_reg_667));
    tmp_29_cast6_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_reg_722),16));
    tmp_29_cast_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_reg_722),10));
    tmp_29_fu_364_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(tmp_51_reg_667));
    tmp_31_cast_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_437_p2),14));
    tmp_31_fu_437_p2 <= std_logic_vector(unsigned(tmp1_fu_432_p2) + unsigned(tmp_29_cast_fu_429_p1));
    tmp_32_cast_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_reg_729),14));
    tmp_32_fu_369_p1 <= input_width;
    tmp_32_fu_369_p2 <= std_logic_vector(unsigned(tmp_28_cast8_fu_361_p1) + unsigned(tmp_32_fu_369_p1));
    tmp_33_fu_379_p2 <= std_logic_vector(unsigned(ap_const_lv6_5) + unsigned(tmp_53_fu_374_p2));
    tmp_34_fu_357_p2 <= std_logic_vector(unsigned(tmp_54_reg_711) + unsigned(tmp_28_reg_701));
    tmp_35_fu_385_p2 <= std_logic_vector(unsigned(tmp_51_reg_667) + unsigned(tmp_34_reg_716));
    tmp_36_cast_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_reg_734),10));
    tmp_36_fu_389_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(tmp_35_fu_385_p2));
    tmp_37_cast_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_reg_739),14));
    tmp_37_fu_456_p2 <= std_logic_vector(unsigned(tmp_34_reg_716) + unsigned(tmp_29_reg_722));
    tmp_38_fu_525_p2 <= std_logic_vector(unsigned(tmp2_fu_520_p2) + unsigned(tmp_27_cast1_reg_766));
    tmp_39_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_1_reg_212),64));
    tmp_40_fu_509_p2 <= std_logic_vector(unsigned(o_count_1_reg_212) + unsigned(ap_const_lv16_1));
    tmp_41_fu_550_p2 <= std_logic_vector(unsigned(tmp_38_reg_839) + unsigned(tmp_29_cast6_reg_781));
    tmp_42_fu_545_p2 <= std_logic_vector(unsigned(input_width_cast2_reg_756) + unsigned(i_count_1_reg_255));
    tmp_43_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_5_reg_308),64));
    tmp_44_fu_571_p2 <= std_logic_vector(unsigned(tmp_cast_reg_749) + unsigned(o_count_2_reg_244));
    tmp_45_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_count_2_reg_288),64));
    tmp_46_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_3_reg_277),64));
    tmp_47_fu_565_p2 <= std_logic_vector(unsigned(i_count_2_reg_288) + unsigned(ap_const_lv14_1));
    tmp_48_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_count_4_reg_298),64));
    tmp_51_fu_317_p0 <= input_width;
    tmp_51_fu_317_p1 <= tmp_51_fu_317_p0(5 - 1 downto 0);
    tmp_52_fu_344_p1 <= tmp_27_fu_338_p2(10 - 1 downto 0);
    tmp_53_fu_374_p0 <= input_width;
    tmp_53_fu_374_p2 <= std_logic_vector(shift_left(unsigned(tmp_53_fu_374_p0),to_integer(unsigned('0' & ap_const_lv6_1(6-1 downto 0)))));
    tmp_54_fu_353_p1 <= tmp_27_fu_338_p2(5 - 1 downto 0);
    tmp_55_fu_460_p1 <= input_depth(6 - 1 downto 0);
    tmp_56_fu_494_p1 <= o_count_1_reg_212(5 - 1 downto 0);
    tmp_57_fu_614_p1 <= o_count_5_reg_308(5 - 1 downto 0);
    tmp_cast_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_674),14));
    tmp_fu_321_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(tmp_51_fu_317_p1));
    tmp_s_fu_408_p0 <= tmp_s_fu_408_p00(7 - 1 downto 0);
    tmp_s_fu_408_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_width_cast_fu_395_p1),14));
    tmp_s_fu_408_p1 <= tmp_s_fu_408_p10(7 - 1 downto 0);
    tmp_s_fu_408_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_height_cast3_reg_685),14));
    tmp_s_fu_408_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_408_p0) * unsigned(tmp_s_fu_408_p1), 14));
end behav;
