// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pointwise_conv2d_fix_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_state4 = 5'd4;
parameter    ap_ST_fsm_pp1_stage0 = 5'd8;
parameter    ap_ST_fsm_state10 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] SeparableConv2D_4_w_s_address0;
reg    SeparableConv2D_4_w_s_ce0;
wire   [14:0] SeparableConv2D_4_w_s_q0;
reg   [4:0] i_0_reg_213;
reg   [13:0] indvar_flatten18_reg_224;
reg   [4:0] out_h_0_reg_235;
reg   [9:0] indvar_flatten_reg_246;
reg   [4:0] out_w_0_reg_257;
reg   [22:0] buffer_0_reg_268;
reg   [4:0] in_d_0_reg_280;
wire   [0:0] icmp_ln26_fu_291_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] i_fu_297_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] trunc_ln28_fu_303_p1;
reg   [3:0] trunc_ln28_reg_911;
wire   [0:0] icmp_ln31_fu_436_p2;
reg   [0:0] icmp_ln31_reg_920;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state5_pp1_stage0_iter0;
wire    ap_block_state6_pp1_stage0_iter1;
wire    ap_block_state7_pp1_stage0_iter2;
wire    ap_block_state8_pp1_stage0_iter3;
wire    ap_block_state9_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln31_reg_920_pp1_iter1_reg;
reg   [0:0] icmp_ln31_reg_920_pp1_iter2_reg;
reg   [0:0] icmp_ln31_reg_920_pp1_iter3_reg;
wire   [13:0] add_ln31_fu_442_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [10:0] select_ln32_1_fu_498_p3;
reg   [10:0] select_ln32_1_reg_929;
wire   [4:0] select_ln31_fu_532_p3;
wire   [0:0] or_ln36_fu_546_p2;
reg   [0:0] or_ln36_reg_939;
reg   [0:0] or_ln36_reg_939_pp1_iter1_reg;
reg   [0:0] or_ln36_reg_939_pp1_iter2_reg;
reg   [0:0] or_ln36_reg_939_pp1_iter3_reg;
wire   [4:0] select_ln36_1_fu_552_p3;
reg   [4:0] select_ln36_1_reg_944;
wire   [4:0] select_ln36_2_fu_564_p3;
reg   [4:0] select_ln36_2_reg_949;
wire   [10:0] select_ln36_3_fu_578_p3;
reg  signed [10:0] select_ln36_3_reg_955;
wire   [3:0] trunc_ln39_fu_586_p1;
reg   [3:0] trunc_ln39_reg_960;
reg   [3:0] trunc_ln39_reg_960_pp1_iter1_reg;
wire   [4:0] in_d_fu_590_p2;
reg   [4:0] in_d_reg_965;
wire   [9:0] select_ln33_fu_602_p3;
wire   [0:0] icmp_ln36_1_fu_627_p2;
reg   [0:0] icmp_ln36_1_reg_981;
reg   [0:0] icmp_ln36_1_reg_981_pp1_iter2_reg;
reg   [0:0] icmp_ln36_1_reg_981_pp1_iter3_reg;
wire   [10:0] add_ln47_fu_632_p2;
reg   [10:0] add_ln47_reg_985;
reg   [10:0] add_ln47_reg_985_pp1_iter2_reg;
reg   [10:0] add_ln47_reg_985_pp1_iter3_reg;
reg   [15:0] input_load_reg_990;
wire  signed [31:0] tmp_5_fu_685_p18;
reg  signed [31:0] tmp_5_reg_995;
wire   [31:0] mul_ln39_fu_725_p2;
reg   [31:0] mul_ln39_reg_1000;
wire   [22:0] buffer_fu_750_p2;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state5;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [4:0] ap_phi_mux_out_w_0_phi_fu_261_p4;
wire    ap_block_pp1_stage0;
reg   [4:0] ap_phi_mux_in_d_0_phi_fu_284_p4;
wire   [63:0] zext_ln28_fu_307_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln39_5_fu_622_p1;
wire   [63:0] zext_ln47_fu_792_p1;
reg   [31:0] kernel_buffer_15_fu_110;
wire  signed [31:0] kernel_buffer_0_fu_312_p1;
reg   [31:0] kernel_buffer_15_1_fu_114;
reg   [31:0] kernel_buffer_15_2_fu_118;
reg   [31:0] kernel_buffer_15_3_fu_122;
reg   [31:0] kernel_buffer_15_4_fu_126;
reg   [31:0] kernel_buffer_15_5_fu_130;
reg   [31:0] kernel_buffer_15_6_fu_134;
reg   [31:0] kernel_buffer_15_7_fu_138;
reg   [31:0] kernel_buffer_15_8_fu_142;
reg   [31:0] kernel_buffer_15_9_fu_146;
reg   [31:0] kernel_buffer_15_10_fu_150;
reg   [31:0] kernel_buffer_15_11_fu_154;
reg   [31:0] kernel_buffer_15_12_fu_158;
reg   [31:0] kernel_buffer_15_13_fu_162;
reg   [31:0] kernel_buffer_15_14_fu_166;
reg   [31:0] kernel_buffer_15_15_fu_170;
wire   [9:0] shl_ln_fu_396_p3;
wire   [6:0] shl_ln39_4_fu_408_p3;
wire   [10:0] zext_ln39_fu_404_p1;
wire   [10:0] zext_ln39_1_fu_416_p1;
wire   [10:0] sub_ln39_fu_420_p2;
wire   [10:0] zext_ln36_fu_426_p1;
wire   [0:0] icmp_ln33_fu_454_p2;
wire   [4:0] out_h_fu_448_p2;
wire   [9:0] shl_ln39_mid1_fu_468_p3;
wire   [6:0] shl_ln39_4_mid1_fu_480_p3;
wire   [10:0] zext_ln39_2_fu_476_p1;
wire   [10:0] zext_ln39_3_fu_488_p1;
wire   [10:0] sub_ln39_1_fu_492_p2;
wire   [10:0] add_ln39_fu_430_p2;
wire   [0:0] icmp_ln36_fu_520_p2;
wire   [0:0] xor_ln32_fu_514_p2;
wire   [4:0] select_ln32_fu_460_p3;
wire   [0:0] and_ln32_fu_526_p2;
wire   [4:0] out_w_fu_540_p2;
wire   [10:0] zext_ln36_1_fu_560_p1;
wire   [10:0] add_ln39_2_fu_572_p2;
wire   [10:0] select_ln32_2_fu_506_p3;
wire   [9:0] add_ln33_fu_596_p2;
wire  signed [14:0] grp_fu_797_p3;
wire  signed [31:0] sext_ln39_fu_619_p1;
wire   [10:0] zext_ln36_2_fu_610_p1;
wire  signed [15:0] mul_ln39_fu_725_p0;
wire   [17:0] trunc_ln39_2_fu_737_p4;
wire   [22:0] select_ln36_fu_730_p3;
wire  signed [22:0] sext_ln39_2_fu_746_p1;
wire   [0:0] tmp_1_fu_756_p3;
wire   [0:0] xor_ln46_fu_768_p2;
wire   [15:0] select_ln46_fu_774_p3;
wire   [15:0] trunc_ln46_fu_764_p1;
wire  signed [31:0] sext_ln47_fu_789_p1;
wire   [10:0] grp_fu_797_p0;
wire   [4:0] grp_fu_797_p1;
wire    ap_CS_fsm_state10;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [14:0] grp_fu_797_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

pointwise_conv2d_fix_4_SeparableConv2D_4_w_s #(
    .DataWidth( 15 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
SeparableConv2D_4_w_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SeparableConv2D_4_w_s_address0),
    .ce0(SeparableConv2D_4_w_s_ce0),
    .q0(SeparableConv2D_4_w_s_q0)
);

network_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
network_mux_164_32_1_1_U106(
    .din0(kernel_buffer_15_fu_110),
    .din1(kernel_buffer_15_1_fu_114),
    .din2(kernel_buffer_15_2_fu_118),
    .din3(kernel_buffer_15_3_fu_122),
    .din4(kernel_buffer_15_4_fu_126),
    .din5(kernel_buffer_15_5_fu_130),
    .din6(kernel_buffer_15_6_fu_134),
    .din7(kernel_buffer_15_7_fu_138),
    .din8(kernel_buffer_15_8_fu_142),
    .din9(kernel_buffer_15_9_fu_146),
    .din10(kernel_buffer_15_10_fu_150),
    .din11(kernel_buffer_15_11_fu_154),
    .din12(kernel_buffer_15_12_fu_158),
    .din13(kernel_buffer_15_13_fu_162),
    .din14(kernel_buffer_15_14_fu_166),
    .din15(kernel_buffer_15_15_fu_170),
    .din16(trunc_ln39_reg_960_pp1_iter1_reg),
    .dout(tmp_5_fu_685_p18)
);

network_mac_muladd_11ns_5ns_11s_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 15 ))
network_mac_muladd_11ns_5ns_11s_15_1_1_U107(
    .din0(grp_fu_797_p0),
    .din1(grp_fu_797_p1),
    .din2(select_ln36_3_reg_955),
    .dout(grp_fu_797_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state5) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state5)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state5);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_0_reg_268 <= 23'd8377869;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_reg_920_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        buffer_0_reg_268 <= buffer_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_213 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln26_fu_291_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_213 <= i_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in_d_0_reg_280 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_reg_920 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        in_d_0_reg_280 <= in_d_reg_965;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten18_reg_224 <= 14'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_fu_436_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten18_reg_224 <= add_ln31_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten_reg_246 <= 10'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_fu_436_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten_reg_246 <= select_ln33_fu_602_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_h_0_reg_235 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_fu_436_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        out_h_0_reg_235 <= select_ln31_fu_532_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_w_0_reg_257 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_reg_920 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        out_w_0_reg_257 <= select_ln36_2_reg_949;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln36_1_fu_627_p2 == 1'd1))) begin
        add_ln47_reg_985 <= add_ln47_fu_632_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        add_ln47_reg_985_pp1_iter2_reg <= add_ln47_reg_985;
        add_ln47_reg_985_pp1_iter3_reg <= add_ln47_reg_985_pp1_iter2_reg;
        icmp_ln31_reg_920_pp1_iter2_reg <= icmp_ln31_reg_920_pp1_iter1_reg;
        icmp_ln31_reg_920_pp1_iter3_reg <= icmp_ln31_reg_920_pp1_iter2_reg;
        icmp_ln36_1_reg_981_pp1_iter2_reg <= icmp_ln36_1_reg_981;
        icmp_ln36_1_reg_981_pp1_iter3_reg <= icmp_ln36_1_reg_981_pp1_iter2_reg;
        or_ln36_reg_939_pp1_iter2_reg <= or_ln36_reg_939_pp1_iter1_reg;
        or_ln36_reg_939_pp1_iter3_reg <= or_ln36_reg_939_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln31_reg_920 <= icmp_ln31_fu_436_p2;
        icmp_ln31_reg_920_pp1_iter1_reg <= icmp_ln31_reg_920;
        or_ln36_reg_939_pp1_iter1_reg <= or_ln36_reg_939;
        trunc_ln39_reg_960_pp1_iter1_reg <= trunc_ln39_reg_960;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_reg_920 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln36_1_reg_981 <= icmp_ln36_1_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_fu_436_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        in_d_reg_965 <= in_d_fu_590_p2;
        select_ln36_2_reg_949 <= select_ln36_2_fu_564_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_reg_920_pp1_iter1_reg == 1'd0))) begin
        input_load_reg_990 <= input_r_q0;
        tmp_5_reg_995 <= tmp_5_fu_685_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_10_fu_150 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_11_fu_154 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_12_fu_158 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_13_fu_162 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_14_fu_166 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_15_fu_170 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_1_fu_114 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_2_fu_118 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_3_fu_122 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_4_fu_126 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_5_fu_130 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_6_fu_134 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_7_fu_138 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_8_fu_142 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_9_fu_146 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln28_reg_911 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_buffer_15_fu_110 <= kernel_buffer_0_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_reg_920_pp1_iter2_reg == 1'd0))) begin
        mul_ln39_reg_1000 <= mul_ln39_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_fu_436_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        or_ln36_reg_939 <= or_ln36_fu_546_p2;
        select_ln32_1_reg_929[10 : 2] <= select_ln32_1_fu_498_p3[10 : 2];
        select_ln36_1_reg_944 <= select_ln36_1_fu_552_p3;
        select_ln36_3_reg_955 <= select_ln36_3_fu_578_p3;
        trunc_ln39_reg_960 <= trunc_ln39_fu_586_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln26_fu_291_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln28_reg_911 <= trunc_ln28_fu_303_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SeparableConv2D_4_w_s_ce0 = 1'b1;
    end else begin
        SeparableConv2D_4_w_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln26_fu_291_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln31_fu_436_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_920 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_in_d_0_phi_fu_284_p4 = in_d_reg_965;
    end else begin
        ap_phi_mux_in_d_0_phi_fu_284_p4 = in_d_0_reg_280;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_920 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        ap_phi_mux_out_w_0_phi_fu_261_p4 = select_ln36_2_reg_949;
    end else begin
        ap_phi_mux_out_w_0_phi_fu_261_p4 = out_w_0_reg_257;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln36_1_reg_981_pp1_iter3_reg == 1'd1))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln26_fu_291_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln26_fu_291_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln31_fu_436_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((icmp_ln31_fu_436_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SeparableConv2D_4_w_s_address0 = zext_ln28_fu_307_p1;

assign add_ln31_fu_442_p2 = (indvar_flatten18_reg_224 + 14'd1);

assign add_ln33_fu_596_p2 = (indvar_flatten_reg_246 + 10'd1);

assign add_ln39_2_fu_572_p2 = (zext_ln36_1_fu_560_p1 + select_ln32_1_fu_498_p3);

assign add_ln39_fu_430_p2 = (sub_ln39_fu_420_p2 + zext_ln36_fu_426_p1);

assign add_ln47_fu_632_p2 = (zext_ln36_2_fu_610_p1 + select_ln32_1_reg_929);

assign and_ln32_fu_526_p2 = (xor_ln32_fu_514_p2 & icmp_ln36_fu_520_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign buffer_fu_750_p2 = ($signed(select_ln36_fu_730_p3) + $signed(sext_ln39_2_fu_746_p1));

assign grp_fu_797_p0 = 15'd784;

assign grp_fu_797_p1 = grp_fu_797_p10;

assign grp_fu_797_p10 = select_ln36_1_reg_944;

assign i_fu_297_p2 = (i_0_reg_213 + 5'd1);

assign icmp_ln26_fu_291_p2 = ((i_0_reg_213 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_436_p2 = ((indvar_flatten18_reg_224 == 14'd12544) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_454_p2 = ((indvar_flatten_reg_246 == 10'd448) ? 1'b1 : 1'b0);

assign icmp_ln36_1_fu_627_p2 = ((in_d_reg_965 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_520_p2 = ((ap_phi_mux_in_d_0_phi_fu_284_p4 == 5'd16) ? 1'b1 : 1'b0);

assign in_d_fu_590_p2 = (5'd1 + select_ln36_1_fu_552_p3);

assign input_r_address0 = zext_ln39_5_fu_622_p1;

assign kernel_buffer_0_fu_312_p1 = $signed(SeparableConv2D_4_w_s_q0);

assign mul_ln39_fu_725_p0 = input_load_reg_990;

assign mul_ln39_fu_725_p2 = ($signed(mul_ln39_fu_725_p0) * $signed(tmp_5_reg_995));

assign or_ln36_fu_546_p2 = (icmp_ln33_fu_454_p2 | and_ln32_fu_526_p2);

assign out_h_fu_448_p2 = (5'd1 + out_h_0_reg_235);

assign out_w_fu_540_p2 = (5'd1 + select_ln32_fu_460_p3);

assign output_r_address0 = zext_ln47_fu_792_p1;

assign output_r_d0 = (trunc_ln46_fu_764_p1 & select_ln46_fu_774_p3);

assign select_ln31_fu_532_p3 = ((icmp_ln33_fu_454_p2[0:0] === 1'b1) ? out_h_fu_448_p2 : out_h_0_reg_235);

assign select_ln32_1_fu_498_p3 = ((icmp_ln33_fu_454_p2[0:0] === 1'b1) ? sub_ln39_1_fu_492_p2 : sub_ln39_fu_420_p2);

assign select_ln32_2_fu_506_p3 = ((icmp_ln33_fu_454_p2[0:0] === 1'b1) ? sub_ln39_1_fu_492_p2 : add_ln39_fu_430_p2);

assign select_ln32_fu_460_p3 = ((icmp_ln33_fu_454_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_out_w_0_phi_fu_261_p4);

assign select_ln33_fu_602_p3 = ((icmp_ln33_fu_454_p2[0:0] === 1'b1) ? 10'd1 : add_ln33_fu_596_p2);

assign select_ln36_1_fu_552_p3 = ((or_ln36_fu_546_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_in_d_0_phi_fu_284_p4);

assign select_ln36_2_fu_564_p3 = ((and_ln32_fu_526_p2[0:0] === 1'b1) ? out_w_fu_540_p2 : select_ln32_fu_460_p3);

assign select_ln36_3_fu_578_p3 = ((and_ln32_fu_526_p2[0:0] === 1'b1) ? add_ln39_2_fu_572_p2 : select_ln32_2_fu_506_p3);

assign select_ln36_fu_730_p3 = ((or_ln36_reg_939_pp1_iter3_reg[0:0] === 1'b1) ? 23'd8377869 : buffer_0_reg_268);

assign select_ln46_fu_774_p3 = ((xor_ln46_fu_768_p2[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign sext_ln39_2_fu_746_p1 = $signed(trunc_ln39_2_fu_737_p4);

assign sext_ln39_fu_619_p1 = grp_fu_797_p3;

assign sext_ln47_fu_789_p1 = $signed(add_ln47_reg_985_pp1_iter3_reg);

assign shl_ln39_4_fu_408_p3 = {{out_h_0_reg_235}, {2'd0}};

assign shl_ln39_4_mid1_fu_480_p3 = {{out_h_fu_448_p2}, {2'd0}};

assign shl_ln39_mid1_fu_468_p3 = {{out_h_fu_448_p2}, {5'd0}};

assign shl_ln_fu_396_p3 = {{out_h_0_reg_235}, {5'd0}};

assign sub_ln39_1_fu_492_p2 = (zext_ln39_2_fu_476_p1 - zext_ln39_3_fu_488_p1);

assign sub_ln39_fu_420_p2 = (zext_ln39_fu_404_p1 - zext_ln39_1_fu_416_p1);

assign tmp_1_fu_756_p3 = buffer_fu_750_p2[32'd22];

assign trunc_ln28_fu_303_p1 = i_0_reg_213[3:0];

assign trunc_ln39_2_fu_737_p4 = {{mul_ln39_reg_1000[31:14]}};

assign trunc_ln39_fu_586_p1 = select_ln36_1_fu_552_p3[3:0];

assign trunc_ln46_fu_764_p1 = buffer_fu_750_p2[15:0];

assign xor_ln32_fu_514_p2 = (icmp_ln33_fu_454_p2 ^ 1'd1);

assign xor_ln46_fu_768_p2 = (tmp_1_fu_756_p3 ^ 1'd1);

assign zext_ln28_fu_307_p1 = trunc_ln28_fu_303_p1;

assign zext_ln36_1_fu_560_p1 = out_w_fu_540_p2;

assign zext_ln36_2_fu_610_p1 = select_ln36_2_reg_949;

assign zext_ln36_fu_426_p1 = ap_phi_mux_out_w_0_phi_fu_261_p4;

assign zext_ln39_1_fu_416_p1 = shl_ln39_4_fu_408_p3;

assign zext_ln39_2_fu_476_p1 = shl_ln39_mid1_fu_468_p3;

assign zext_ln39_3_fu_488_p1 = shl_ln39_4_mid1_fu_480_p3;

assign zext_ln39_5_fu_622_p1 = $unsigned(sext_ln39_fu_619_p1);

assign zext_ln39_fu_404_p1 = shl_ln_fu_396_p3;

assign zext_ln47_fu_792_p1 = $unsigned(sext_ln47_fu_789_p1);

always @ (posedge ap_clk) begin
    select_ln32_1_reg_929[1:0] <= 2'b00;
end

endmodule //pointwise_conv2d_fix_4
