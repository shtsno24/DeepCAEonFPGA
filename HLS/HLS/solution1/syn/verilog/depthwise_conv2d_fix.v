// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module depthwise_conv2d_fix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg[13:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[15:0] output_r_d0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg  signed [15:0] reg_337;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg   [15:0] reg_341;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state9;
reg  signed [15:0] reg_346;
wire    ap_CS_fsm_state7;
wire   [4:0] out_h_fu_356_p2;
reg   [4:0] out_h_reg_1887;
wire    ap_CS_fsm_state2;
wire   [10:0] tmp5_0_0_0_fu_386_p2;
reg   [10:0] tmp5_0_0_0_reg_1892;
wire   [0:0] icmp_ln20_fu_350_p2;
wire   [10:0] tmp5_0_1_0_fu_416_p2;
reg   [10:0] tmp5_0_1_0_reg_1904;
wire   [9:0] tmp5_0_2_0_fu_448_p2;
reg   [9:0] tmp5_0_2_0_reg_1916;
wire   [10:0] tmp7_0_fu_466_p2;
reg   [10:0] tmp7_0_reg_1928;
wire   [10:0] zext_ln28_14_fu_478_p1;
reg   [10:0] zext_ln28_14_reg_1939;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln21_fu_472_p2;
wire   [4:0] or_ln28_fu_496_p2;
reg   [4:0] or_ln28_reg_1950;
wire   [10:0] zext_ln28_52_fu_502_p1;
reg   [10:0] zext_ln28_52_reg_1956;
wire   [4:0] or_ln28_1_fu_520_p2;
reg   [4:0] or_ln28_1_reg_1967;
wire   [10:0] zext_ln28_54_fu_526_p1;
reg   [10:0] zext_ln28_54_reg_1973;
wire   [15:0] add_ln28_11_fu_651_p2;
reg   [15:0] add_ln28_11_reg_1999;
reg   [15:0] trunc_ln28_9_reg_2004;
reg  signed [15:0] input_load_198_reg_2009;
reg   [12:0] tmp_11_reg_2025;
wire   [5:0] add_ln28_18_fu_722_p2;
reg   [5:0] add_ln28_18_reg_2035;
wire   [10:0] zext_ln28_59_fu_728_p1;
reg   [10:0] zext_ln28_59_reg_2040;
wire   [15:0] add_ln28_12_fu_820_p2;
reg   [15:0] add_ln28_12_reg_2050;
wire    ap_CS_fsm_state8;
wire   [15:0] add_ln28_14_fu_832_p2;
reg   [15:0] add_ln28_14_reg_2055;
wire   [4:0] or_ln28_2_fu_851_p2;
reg   [4:0] or_ln28_2_reg_2060;
wire   [10:0] zext_ln28_61_fu_857_p1;
reg   [10:0] zext_ln28_61_reg_2066;
reg   [15:0] trunc_ln28_12_reg_2077;
reg   [12:0] tmp_16_reg_2087;
wire   [15:0] add_ln28_27_fu_906_p2;
reg   [15:0] add_ln28_27_reg_2092;
reg   [12:0] tmp_21_reg_2097;
wire   [4:0] add_ln21_fu_920_p2;
reg   [4:0] add_ln21_reg_2102;
wire   [15:0] add_ln28_29_fu_997_p2;
reg   [15:0] add_ln28_29_reg_2117;
wire   [10:0] add_ln36_1_fu_1002_p2;
reg   [10:0] add_ln36_1_reg_2122;
wire   [10:0] add_ln36_2_fu_1006_p2;
reg   [10:0] add_ln36_2_reg_2127;
wire   [10:0] add_ln36_3_fu_1010_p2;
reg   [10:0] add_ln36_3_reg_2132;
reg  signed [15:0] input_load_207_reg_2137;
wire    ap_CS_fsm_state10;
reg   [14:0] tmp_17_reg_2143;
wire   [5:0] add_ln28_37_fu_1043_p2;
reg   [5:0] add_ln28_37_reg_2153;
wire   [10:0] zext_ln28_68_fu_1049_p1;
reg   [10:0] zext_ln28_68_reg_2158;
wire   [15:0] add_ln28_30_fu_1134_p2;
reg   [15:0] add_ln28_30_reg_2168;
wire    ap_CS_fsm_state11;
wire   [15:0] add_ln28_32_fu_1146_p2;
reg   [15:0] add_ln28_32_reg_2173;
reg   [14:0] tmp_22_reg_2183;
wire   [15:0] add_ln28_47_fu_1243_p2;
reg   [15:0] add_ln28_47_reg_2193;
reg   [15:0] trunc_ln28_27_reg_2198;
reg   [12:0] tmp_26_reg_2203;
wire   [15:0] add_ln28_48_fu_1337_p2;
reg   [15:0] add_ln28_48_reg_2208;
wire    ap_CS_fsm_state12;
wire   [15:0] add_ln28_50_fu_1349_p2;
reg   [15:0] add_ln28_50_reg_2213;
reg   [15:0] trunc_ln28_30_reg_2228;
wire   [10:0] add_ln28_59_fu_1423_p2;
reg   [10:0] add_ln28_59_reg_2233;
wire   [10:0] add_ln28_60_fu_1428_p2;
reg   [10:0] add_ln28_60_reg_2238;
wire   [9:0] add_ln28_62_fu_1433_p2;
reg   [9:0] add_ln28_62_reg_2243;
wire   [9:0] add_ln28_63_fu_1438_p2;
reg   [9:0] add_ln28_63_reg_2248;
reg   [13:0] tmp_24_reg_2253;
wire    ap_CS_fsm_state13;
wire   [15:0] add_ln28_64_fu_1503_p2;
reg   [15:0] add_ln28_64_reg_2268;
wire    ap_CS_fsm_state14;
wire   [15:0] add_ln28_66_fu_1554_p2;
reg   [15:0] add_ln28_66_reg_2283;
wire   [15:0] add_ln28_67_fu_1559_p2;
reg   [15:0] add_ln28_67_reg_2288;
wire   [15:0] add_ln28_69_fu_1608_p2;
reg   [15:0] add_ln28_69_reg_2293;
wire    ap_CS_fsm_state15;
reg   [4:0] out_h_0_reg_314;
reg   [4:0] out_w_0_0_reg_325;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln28_15_fu_491_p1;
wire   [63:0] zext_ln28_16_fu_515_p1;
wire   [63:0] zext_ln28_17_fu_539_p1;
wire   [63:0] zext_ln28_18_fu_552_p1;
wire   [63:0] zext_ln28_19_fu_621_p1;
wire   [63:0] zext_ln28_20_fu_634_p1;
wire   [63:0] zext_ln28_21_fu_678_p1;
wire   [63:0] zext_ln28_22_fu_688_p1;
wire   [63:0] zext_ln28_23_fu_714_p1;
wire   [63:0] zext_ln28_25_fu_741_p1;
wire   [63:0] zext_ln28_26_fu_870_p1;
wire   [63:0] zext_ln28_28_fu_892_p1;
wire   [63:0] zext_ln36_fu_944_p1;
wire   [63:0] zext_ln28_29_fu_977_p1;
wire   [63:0] zext_ln28_31_fu_987_p1;
wire   [63:0] zext_ln28_32_fu_1035_p1;
wire   [63:0] zext_ln28_35_fu_1062_p1;
wire   [63:0] zext_ln28_38_fu_1207_p1;
wire   [63:0] zext_ln28_41_fu_1226_p1;
wire   [63:0] zext_ln36_1_fu_1283_p1;
wire   [63:0] zext_ln28_43_fu_1381_p1;
wire   [63:0] zext_ln28_44_fu_1409_p1;
wire   [63:0] zext_ln36_2_fu_1456_p1;
wire   [63:0] zext_ln28_46_fu_1490_p1;
wire   [63:0] zext_ln28_47_fu_1498_p1;
wire   [63:0] zext_ln28_49_fu_1541_p1;
wire   [63:0] zext_ln28_50_fu_1545_p1;
wire   [63:0] zext_ln36_3_fu_1627_p1;
wire   [15:0] add_ln28_16_fu_930_p2;
wire   [15:0] add_ln28_34_fu_1274_p2;
wire   [15:0] add_ln28_52_fu_1447_p2;
wire   [15:0] add_ln28_71_fu_1618_p2;
wire   [9:0] p_shl_fu_362_p3;
wire   [5:0] p_shl1_fu_374_p3;
wire   [10:0] p_shl28_cast_fu_370_p1;
wire   [10:0] p_shl29_cast_fu_382_p1;
wire   [9:0] p_shl2_fu_392_p3;
wire   [5:0] p_shl3_fu_404_p3;
wire   [10:0] p_shl26_cast_fu_400_p1;
wire   [10:0] p_shl27_cast_fu_412_p1;
wire   [4:0] tmp_0_2_0_fu_422_p2;
wire   [5:0] p_shl5_fu_436_p3;
wire   [9:0] p_shl4_fu_428_p3;
wire   [9:0] p_shl25_cast_fu_444_p1;
wire   [6:0] p_shl6_fu_454_p3;
wire   [10:0] p_shl23_cast_fu_462_p1;
wire   [10:0] add_ln28_fu_482_p2;
wire  signed [31:0] sext_ln28_9_fu_487_p1;
wire   [10:0] add_ln28_1_fu_506_p2;
wire  signed [31:0] sext_ln28_11_fu_511_p1;
wire   [10:0] add_ln28_2_fu_530_p2;
wire  signed [31:0] sext_ln28_13_fu_535_p1;
wire   [10:0] add_ln28_3_fu_544_p2;
wire  signed [31:0] sext_ln28_15_fu_548_p1;
wire  signed [29:0] mul_ln28_fu_1632_p2;
wire  signed [29:0] mul_ln28_1_fu_1639_p2;
wire  signed [27:0] mul_ln28_2_fu_1646_p2;
wire   [13:0] tmp_fu_587_p4;
wire  signed [29:0] mul_ln28_3_fu_1653_p2;
wire   [10:0] add_ln28_4_fu_613_p2;
wire  signed [31:0] sext_ln28_17_fu_617_p1;
wire   [10:0] add_ln28_5_fu_626_p2;
wire  signed [31:0] sext_ln28_19_fu_630_p1;
wire   [15:0] trunc_ln_fu_561_p4;
wire   [15:0] trunc_ln28_1_fu_574_p4;
wire   [15:0] trunc_ln28_3_fu_604_p4;
wire  signed [15:0] sext_ln28_65_fu_596_p1;
wire   [15:0] add_ln28_9_fu_639_p2;
wire   [15:0] add_ln28_10_fu_645_p2;
wire  signed [29:0] mul_ln28_9_fu_1660_p2;
wire   [9:0] zext_ln28_13_fu_666_p1;
wire   [9:0] add_ln28_6_fu_673_p2;
wire   [9:0] zext_ln28_51_fu_670_p1;
wire   [9:0] add_ln28_7_fu_683_p2;
wire  signed [26:0] mul_ln28_6_fu_1667_p2;
wire   [9:0] zext_ln28_53_fu_693_p1;
wire   [9:0] add_ln28_8_fu_709_p2;
wire   [5:0] zext_ln28_56_fu_719_p1;
wire   [10:0] add_ln28_19_fu_732_p2;
wire  signed [31:0] sext_ln28_26_fu_737_p1;
wire  signed [29:0] mul_ln28_4_fu_1674_p2;
wire  signed [27:0] mul_ln28_5_fu_1681_p2;
wire   [13:0] tmp_10_fu_762_p4;
wire  signed [28:0] mul_ln28_7_fu_1688_p2;
wire   [14:0] tmp_12_fu_786_p4;
wire  signed [28:0] mul_ln28_8_fu_1695_p2;
wire   [14:0] tmp_13_fu_807_p4;
wire  signed [15:0] sext_ln28_67_fu_771_p1;
wire   [15:0] trunc_ln28_4_fu_750_p4;
wire  signed [15:0] sext_ln28_75_fu_816_p1;
wire  signed [15:0] sext_ln28_72_fu_795_p1;
wire  signed [15:0] sext_ln28_69_fu_775_p1;
wire   [15:0] add_ln28_13_fu_826_p2;
wire  signed [29:0] mul_ln28_10_fu_1702_p2;
wire   [10:0] add_ln28_20_fu_861_p2;
wire  signed [31:0] sext_ln28_28_fu_866_p1;
wire  signed [29:0] mul_ln28_12_fu_1709_p2;
wire   [10:0] add_ln28_22_fu_884_p2;
wire  signed [31:0] sext_ln28_32_fu_888_p1;
wire  signed [26:0] mul_ln28_15_fu_1716_p2;
wire   [15:0] trunc_ln28_10_fu_842_p4;
wire  signed [26:0] mul_ln28_24_fu_1723_p2;
wire   [15:0] add_ln28_15_fu_926_p2;
wire   [10:0] add_ln36_fu_936_p2;
wire  signed [31:0] sext_ln36_fu_940_p1;
wire  signed [27:0] mul_ln28_11_fu_1730_p2;
wire   [13:0] tmp_14_fu_956_p4;
wire   [10:0] add_ln28_23_fu_969_p2;
wire  signed [31:0] sext_ln28_34_fu_973_p1;
wire   [9:0] zext_ln28_58_fu_949_p1;
wire   [9:0] add_ln28_25_fu_982_p2;
wire  signed [15:0] sext_ln28_77_fu_965_p1;
wire   [15:0] add_ln28_28_fu_992_p2;
wire  signed [28:0] mul_ln28_16_fu_1737_p2;
wire   [9:0] zext_ln28_60_fu_1014_p1;
wire   [9:0] add_ln28_26_fu_1030_p2;
wire   [5:0] zext_ln28_63_fu_1040_p1;
wire   [10:0] add_ln28_38_fu_1053_p2;
wire  signed [31:0] sext_ln28_43_fu_1058_p1;
wire  signed [15:0] sext_ln28_29_fu_1074_p0;
wire  signed [29:0] mul_ln28_13_fu_1744_p2;
wire  signed [27:0] mul_ln28_14_fu_1751_p2;
wire   [13:0] tmp_15_fu_1094_p4;
wire  signed [15:0] sext_ln28_84_fu_1117_p0;
wire  signed [28:0] mul_ln28_17_fu_1758_p2;
wire   [14:0] tmp_18_fu_1121_p4;
wire  signed [15:0] sext_ln28_79_fu_1103_p1;
wire   [15:0] trunc_ln28_13_fu_1082_p4;
wire  signed [15:0] sext_ln28_85_fu_1130_p1;
wire  signed [15:0] sext_ln28_82_fu_1110_p1;
wire  signed [15:0] sext_ln28_80_fu_1107_p1;
wire   [15:0] add_ln28_31_fu_1140_p2;
wire  signed [29:0] mul_ln28_18_fu_1765_p2;
wire  signed [29:0] mul_ln28_19_fu_1772_p2;
wire  signed [27:0] mul_ln28_20_fu_1779_p2;
wire   [13:0] tmp_19_fu_1177_p4;
wire  signed [29:0] mul_ln28_21_fu_1786_p2;
wire   [10:0] add_ln28_41_fu_1199_p2;
wire  signed [31:0] sext_ln28_49_fu_1203_p1;
wire  signed [28:0] mul_ln28_25_fu_1793_p2;
wire   [9:0] zext_ln28_67_fu_1170_p1;
wire   [9:0] add_ln28_44_fu_1221_p2;
wire   [15:0] trunc_ln28_18_fu_1152_p4;
wire   [15:0] trunc_ln28_19_fu_1161_p4;
wire   [15:0] trunc_ln28_21_fu_1190_p4;
wire  signed [15:0] sext_ln28_87_fu_1186_p1;
wire   [15:0] add_ln28_45_fu_1231_p2;
wire   [15:0] add_ln28_46_fu_1237_p2;
wire  signed [29:0] mul_ln28_27_fu_1800_p2;
wire  signed [26:0] mul_ln28_33_fu_1807_p2;
wire   [15:0] add_ln28_33_fu_1270_p2;
wire  signed [31:0] sext_ln36_1_fu_1280_p1;
wire  signed [29:0] mul_ln28_22_fu_1814_p2;
wire  signed [27:0] mul_ln28_23_fu_1821_p2;
wire   [13:0] tmp_20_fu_1301_p4;
wire  signed [28:0] mul_ln28_26_fu_1828_p2;
wire   [14:0] tmp_23_fu_1324_p4;
wire  signed [15:0] sext_ln28_89_fu_1310_p1;
wire   [15:0] trunc_ln28_22_fu_1288_p4;
wire  signed [15:0] sext_ln28_93_fu_1333_p1;
wire  signed [15:0] sext_ln28_91_fu_1317_p1;
wire  signed [15:0] sext_ln28_90_fu_1314_p1;
wire   [15:0] add_ln28_49_fu_1343_p2;
wire   [5:0] zext_ln28_fu_1355_p1;
wire   [5:0] add_ln28_54_fu_1358_p2;
wire   [10:0] zext_ln28_71_fu_1368_p1;
wire   [10:0] add_ln28_55_fu_1372_p2;
wire  signed [31:0] sext_ln28_56_fu_1377_p1;
wire   [5:0] add_ln28_56_fu_1386_p2;
wire   [10:0] zext_ln28_73_fu_1396_p1;
wire   [10:0] add_ln28_57_fu_1400_p2;
wire  signed [31:0] sext_ln28_58_fu_1405_p1;
wire  signed [29:0] mul_ln28_30_fu_1835_p2;
wire   [9:0] zext_ln28_70_fu_1364_p1;
wire   [9:0] zext_ln28_72_fu_1392_p1;
wire   [15:0] add_ln28_51_fu_1443_p2;
wire  signed [31:0] sext_ln36_2_fu_1453_p1;
wire  signed [29:0] mul_ln28_28_fu_1842_p2;
wire  signed [27:0] mul_ln28_29_fu_1849_p2;
wire  signed [31:0] sext_ln28_62_fu_1487_p1;
wire  signed [31:0] sext_ln28_64_fu_1495_p1;
wire   [15:0] trunc_ln28_28_fu_1465_p4;
wire  signed [29:0] mul_ln28_31_fu_1856_p2;
wire  signed [27:0] mul_ln28_32_fu_1863_p2;
wire   [13:0] tmp_25_fu_1528_p4;
wire  signed [15:0] sext_ln28_95_fu_1508_p1;
wire   [15:0] add_ln28_65_fu_1549_p2;
wire  signed [15:0] sext_ln28_97_fu_1537_p1;
wire   [15:0] trunc_ln28_31_fu_1515_p4;
wire  signed [28:0] mul_ln28_34_fu_1870_p2;
wire   [14:0] tmp_27_fu_1572_p4;
wire  signed [28:0] mul_ln28_35_fu_1877_p2;
wire   [14:0] tmp_28_fu_1589_p4;
wire  signed [15:0] sext_ln28_102_fu_1598_p1;
wire  signed [15:0] sext_ln28_100_fu_1581_p1;
wire  signed [15:0] sext_ln28_98_fu_1565_p1;
wire   [15:0] add_ln28_68_fu_1602_p2;
wire   [15:0] add_ln28_70_fu_1614_p2;
wire  signed [31:0] sext_ln36_3_fu_1624_p1;
wire  signed [14:0] mul_ln28_fu_1632_p1;
wire  signed [15:0] mul_ln28_1_fu_1639_p0;
wire  signed [29:0] sext_ln28_12_fu_570_p1;
wire  signed [14:0] mul_ln28_1_fu_1639_p1;
wire   [11:0] mul_ln28_2_fu_1646_p1;
wire  signed [13:0] mul_ln28_3_fu_1653_p1;
wire  signed [15:0] mul_ln28_9_fu_1660_p0;
wire  signed [14:0] mul_ln28_9_fu_1660_p1;
wire  signed [10:0] mul_ln28_6_fu_1667_p1;
wire  signed [15:0] mul_ln28_4_fu_1674_p0;
wire  signed [29:0] sext_ln28_18_fu_746_p1;
wire  signed [13:0] mul_ln28_4_fu_1674_p1;
wire  signed [11:0] mul_ln28_5_fu_1681_p1;
wire   [12:0] mul_ln28_7_fu_1688_p1;
wire  signed [12:0] mul_ln28_8_fu_1695_p1;
wire  signed [14:0] mul_ln28_10_fu_1702_p1;
wire  signed [15:0] mul_ln28_12_fu_1709_p0;
wire  signed [13:0] mul_ln28_12_fu_1709_p1;
wire  signed [10:0] mul_ln28_15_fu_1716_p1;
wire  signed [10:0] mul_ln28_24_fu_1723_p1;
wire   [11:0] mul_ln28_11_fu_1730_p1;
wire   [12:0] mul_ln28_16_fu_1737_p1;
wire  signed [13:0] mul_ln28_13_fu_1744_p1;
wire  signed [11:0] mul_ln28_14_fu_1751_p1;
wire  signed [15:0] mul_ln28_17_fu_1758_p0;
wire  signed [28:0] sext_ln28_84_fu_1117_p1;
wire  signed [12:0] mul_ln28_17_fu_1758_p1;
wire  signed [14:0] mul_ln28_18_fu_1765_p1;
wire  signed [15:0] mul_ln28_19_fu_1772_p0;
wire  signed [29:0] sext_ln28_29_fu_1074_p1;
wire  signed [14:0] mul_ln28_19_fu_1772_p1;
wire   [11:0] mul_ln28_20_fu_1779_p1;
wire  signed [13:0] mul_ln28_21_fu_1786_p1;
wire  signed [15:0] mul_ln28_25_fu_1793_p0;
wire   [12:0] mul_ln28_25_fu_1793_p1;
wire  signed [15:0] mul_ln28_27_fu_1800_p0;
wire  signed [14:0] mul_ln28_27_fu_1800_p1;
wire  signed [10:0] mul_ln28_33_fu_1807_p1;
wire  signed [15:0] mul_ln28_22_fu_1814_p0;
wire  signed [29:0] sext_ln28_35_fu_1267_p1;
wire  signed [13:0] mul_ln28_22_fu_1814_p1;
wire  signed [11:0] mul_ln28_23_fu_1821_p1;
wire  signed [12:0] mul_ln28_26_fu_1828_p1;
wire  signed [15:0] mul_ln28_30_fu_1835_p0;
wire  signed [13:0] mul_ln28_30_fu_1835_p1;
wire  signed [14:0] mul_ln28_28_fu_1842_p1;
wire   [11:0] mul_ln28_29_fu_1849_p1;
wire  signed [13:0] mul_ln28_31_fu_1856_p1;
wire  signed [11:0] mul_ln28_32_fu_1863_p1;
wire   [12:0] mul_ln28_34_fu_1870_p1;
wire  signed [12:0] mul_ln28_35_fu_1877_p1;
reg   [15:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
end

network_mul_mul_16s_15s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_1_1_U6(
    .din0(reg_337),
    .din1(mul_ln28_fu_1632_p1),
    .dout(mul_ln28_fu_1632_p2)
);

network_mul_mul_16s_15s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_1_1_U7(
    .din0(mul_ln28_1_fu_1639_p0),
    .din1(mul_ln28_1_fu_1639_p1),
    .dout(mul_ln28_1_fu_1639_p2)
);

network_mul_mul_16s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12ns_28_1_1_U8(
    .din0(input_r_q0),
    .din1(mul_ln28_2_fu_1646_p1),
    .dout(mul_ln28_2_fu_1646_p2)
);

network_mul_mul_16s_14s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_1_1_U9(
    .din0(input_r_q1),
    .din1(mul_ln28_3_fu_1653_p1),
    .dout(mul_ln28_3_fu_1653_p2)
);

network_mul_mul_16s_15s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_1_1_U10(
    .din0(mul_ln28_9_fu_1660_p0),
    .din1(mul_ln28_9_fu_1660_p1),
    .dout(mul_ln28_9_fu_1660_p2)
);

network_mul_mul_16s_11s_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_mul_16s_11s_27_1_1_U11(
    .din0(input_r_q0),
    .din1(mul_ln28_6_fu_1667_p1),
    .dout(mul_ln28_6_fu_1667_p2)
);

network_mul_mul_16s_14s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_1_1_U12(
    .din0(mul_ln28_4_fu_1674_p0),
    .din1(mul_ln28_4_fu_1674_p1),
    .dout(mul_ln28_4_fu_1674_p2)
);

network_mul_mul_16s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12s_28_1_1_U13(
    .din0(input_load_198_reg_2009),
    .din1(mul_ln28_5_fu_1681_p1),
    .dout(mul_ln28_5_fu_1681_p2)
);

network_mul_mul_16s_13ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13ns_29_1_1_U14(
    .din0(reg_346),
    .din1(mul_ln28_7_fu_1688_p1),
    .dout(mul_ln28_7_fu_1688_p2)
);

network_mul_mul_16s_13s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13s_29_1_1_U15(
    .din0(input_r_q0),
    .din1(mul_ln28_8_fu_1695_p1),
    .dout(mul_ln28_8_fu_1695_p2)
);

network_mul_mul_16s_15s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_1_1_U16(
    .din0(input_r_q1),
    .din1(mul_ln28_10_fu_1702_p1),
    .dout(mul_ln28_10_fu_1702_p2)
);

network_mul_mul_16s_14s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_1_1_U17(
    .din0(mul_ln28_12_fu_1709_p0),
    .din1(mul_ln28_12_fu_1709_p1),
    .dout(mul_ln28_12_fu_1709_p2)
);

network_mul_mul_16s_11s_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_mul_16s_11s_27_1_1_U18(
    .din0(reg_346),
    .din1(mul_ln28_15_fu_1716_p1),
    .dout(mul_ln28_15_fu_1716_p2)
);

network_mul_mul_16s_11s_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_mul_16s_11s_27_1_1_U19(
    .din0(input_r_q0),
    .din1(mul_ln28_24_fu_1723_p1),
    .dout(mul_ln28_24_fu_1723_p2)
);

network_mul_mul_16s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12ns_28_1_1_U20(
    .din0(input_r_q0),
    .din1(mul_ln28_11_fu_1730_p1),
    .dout(mul_ln28_11_fu_1730_p2)
);

network_mul_mul_16s_13ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13ns_29_1_1_U21(
    .din0(input_r_q1),
    .din1(mul_ln28_16_fu_1737_p1),
    .dout(mul_ln28_16_fu_1737_p2)
);

network_mul_mul_16s_14s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_1_1_U22(
    .din0(reg_346),
    .din1(mul_ln28_13_fu_1744_p1),
    .dout(mul_ln28_13_fu_1744_p2)
);

network_mul_mul_16s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12s_28_1_1_U23(
    .din0(input_load_207_reg_2137),
    .din1(mul_ln28_14_fu_1751_p1),
    .dout(mul_ln28_14_fu_1751_p2)
);

network_mul_mul_16s_13s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13s_29_1_1_U24(
    .din0(mul_ln28_17_fu_1758_p0),
    .din1(mul_ln28_17_fu_1758_p1),
    .dout(mul_ln28_17_fu_1758_p2)
);

network_mul_mul_16s_15s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_1_1_U25(
    .din0(reg_337),
    .din1(mul_ln28_18_fu_1765_p1),
    .dout(mul_ln28_18_fu_1765_p2)
);

network_mul_mul_16s_15s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_1_1_U26(
    .din0(mul_ln28_19_fu_1772_p0),
    .din1(mul_ln28_19_fu_1772_p1),
    .dout(mul_ln28_19_fu_1772_p2)
);

network_mul_mul_16s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12ns_28_1_1_U27(
    .din0(input_r_q1),
    .din1(mul_ln28_20_fu_1779_p1),
    .dout(mul_ln28_20_fu_1779_p2)
);

network_mul_mul_16s_14s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_1_1_U28(
    .din0(input_load_198_reg_2009),
    .din1(mul_ln28_21_fu_1786_p1),
    .dout(mul_ln28_21_fu_1786_p2)
);

network_mul_mul_16s_13ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13ns_29_1_1_U29(
    .din0(mul_ln28_25_fu_1793_p0),
    .din1(mul_ln28_25_fu_1793_p1),
    .dout(mul_ln28_25_fu_1793_p2)
);

network_mul_mul_16s_15s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_1_1_U30(
    .din0(mul_ln28_27_fu_1800_p0),
    .din1(mul_ln28_27_fu_1800_p1),
    .dout(mul_ln28_27_fu_1800_p2)
);

network_mul_mul_16s_11s_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_mul_16s_11s_27_1_1_U31(
    .din0(input_r_q0),
    .din1(mul_ln28_33_fu_1807_p1),
    .dout(mul_ln28_33_fu_1807_p2)
);

network_mul_mul_16s_14s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_1_1_U32(
    .din0(mul_ln28_22_fu_1814_p0),
    .din1(mul_ln28_22_fu_1814_p1),
    .dout(mul_ln28_22_fu_1814_p2)
);

network_mul_mul_16s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12s_28_1_1_U33(
    .din0(input_r_q0),
    .din1(mul_ln28_23_fu_1821_p1),
    .dout(mul_ln28_23_fu_1821_p2)
);

network_mul_mul_16s_13s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13s_29_1_1_U34(
    .din0(input_r_q1),
    .din1(mul_ln28_26_fu_1828_p1),
    .dout(mul_ln28_26_fu_1828_p2)
);

network_mul_mul_16s_14s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_1_1_U35(
    .din0(mul_ln28_30_fu_1835_p0),
    .din1(mul_ln28_30_fu_1835_p1),
    .dout(mul_ln28_30_fu_1835_p2)
);

network_mul_mul_16s_15s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_15s_30_1_1_U36(
    .din0(input_r_q0),
    .din1(mul_ln28_28_fu_1842_p1),
    .dout(mul_ln28_28_fu_1842_p2)
);

network_mul_mul_16s_12ns_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12ns_28_1_1_U37(
    .din0(input_r_q1),
    .din1(mul_ln28_29_fu_1849_p1),
    .dout(mul_ln28_29_fu_1849_p2)
);

network_mul_mul_16s_14s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_14s_30_1_1_U38(
    .din0(input_r_q0),
    .din1(mul_ln28_31_fu_1856_p1),
    .dout(mul_ln28_31_fu_1856_p2)
);

network_mul_mul_16s_12s_28_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_mul_16s_12s_28_1_1_U39(
    .din0(input_r_q1),
    .din1(mul_ln28_32_fu_1863_p1),
    .dout(mul_ln28_32_fu_1863_p2)
);

network_mul_mul_16s_13ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13ns_29_1_1_U40(
    .din0(input_r_q0),
    .din1(mul_ln28_34_fu_1870_p1),
    .dout(mul_ln28_34_fu_1870_p2)
);

network_mul_mul_16s_13s_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_mul_16s_13s_29_1_1_U41(
    .din0(input_r_q1),
    .din1(mul_ln28_35_fu_1877_p1),
    .dout(mul_ln28_35_fu_1877_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln21_fu_472_p2 == 1'd1))) begin
        out_h_0_reg_314 <= out_h_reg_1887;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_h_0_reg_314 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        out_w_0_0_reg_325 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        out_w_0_0_reg_325 <= add_ln21_reg_2102;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_341 <= input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_341 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln21_reg_2102 <= add_ln21_fu_920_p2;
        add_ln28_12_reg_2050 <= add_ln28_12_fu_820_p2;
        add_ln28_14_reg_2055 <= add_ln28_14_fu_832_p2;
        add_ln28_27_reg_2092 <= add_ln28_27_fu_906_p2;
        or_ln28_2_reg_2060[4 : 2] <= or_ln28_2_fu_851_p2[4 : 2];
        tmp_16_reg_2087 <= {{mul_ln28_15_fu_1716_p2[26:14]}};
        tmp_21_reg_2097 <= {{mul_ln28_24_fu_1723_p2[26:14]}};
        trunc_ln28_12_reg_2077 <= {{mul_ln28_12_fu_1709_p2[29:14]}};
        zext_ln28_61_reg_2066[4 : 2] <= zext_ln28_61_fu_857_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln28_11_reg_1999 <= add_ln28_11_fu_651_p2;
        trunc_ln28_9_reg_2004 <= {{mul_ln28_9_fu_1660_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln28_18_reg_2035[5 : 1] <= add_ln28_18_fu_722_p2[5 : 1];
        tmp_11_reg_2025 <= {{mul_ln28_6_fu_1667_p2[26:14]}};
        zext_ln28_59_reg_2040[5 : 1] <= zext_ln28_59_fu_728_p1[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln28_29_reg_2117 <= add_ln28_29_fu_997_p2;
        add_ln36_1_reg_2122[10 : 1] <= add_ln36_1_fu_1002_p2[10 : 1];
        add_ln36_2_reg_2127 <= add_ln36_2_fu_1006_p2;
        add_ln36_3_reg_2132[10 : 2] <= add_ln36_3_fu_1010_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln28_30_reg_2168 <= add_ln28_30_fu_1134_p2;
        add_ln28_32_reg_2173 <= add_ln28_32_fu_1146_p2;
        add_ln28_47_reg_2193 <= add_ln28_47_fu_1243_p2;
        tmp_22_reg_2183 <= {{mul_ln28_25_fu_1793_p2[28:14]}};
        tmp_26_reg_2203 <= {{mul_ln28_33_fu_1807_p2[26:14]}};
        trunc_ln28_27_reg_2198 <= {{mul_ln28_27_fu_1800_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln28_37_reg_2153 <= add_ln28_37_fu_1043_p2;
        input_load_207_reg_2137 <= input_r_q0;
        tmp_17_reg_2143 <= {{mul_ln28_16_fu_1737_p2[28:14]}};
        zext_ln28_68_reg_2158[5 : 0] <= zext_ln28_68_fu_1049_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln28_48_reg_2208 <= add_ln28_48_fu_1337_p2;
        add_ln28_50_reg_2213 <= add_ln28_50_fu_1349_p2;
        add_ln28_59_reg_2233[10 : 1] <= add_ln28_59_fu_1423_p2[10 : 1];
        add_ln28_60_reg_2238[10 : 1] <= add_ln28_60_fu_1428_p2[10 : 1];
        add_ln28_62_reg_2243[9 : 1] <= add_ln28_62_fu_1433_p2[9 : 1];
        add_ln28_63_reg_2248[9 : 1] <= add_ln28_63_fu_1438_p2[9 : 1];
        trunc_ln28_30_reg_2228 <= {{mul_ln28_30_fu_1835_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln28_64_reg_2268 <= add_ln28_64_fu_1503_p2;
        tmp_24_reg_2253 <= {{mul_ln28_29_fu_1849_p2[27:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln28_66_reg_2283 <= add_ln28_66_fu_1554_p2;
        add_ln28_67_reg_2288 <= add_ln28_67_fu_1559_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln28_69_reg_2293 <= add_ln28_69_fu_1608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        input_load_198_reg_2009 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        or_ln28_1_reg_1967[0] <= or_ln28_1_fu_520_p2[0];
or_ln28_1_reg_1967[4 : 2] <= or_ln28_1_fu_520_p2[4 : 2];
        zext_ln28_54_reg_1973[0] <= zext_ln28_54_fu_526_p1[0];
zext_ln28_54_reg_1973[4 : 2] <= zext_ln28_54_fu_526_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        or_ln28_reg_1950[4 : 1] <= or_ln28_fu_496_p2[4 : 1];
        zext_ln28_14_reg_1939[4 : 0] <= zext_ln28_14_fu_478_p1[4 : 0];
        zext_ln28_52_reg_1956[4 : 1] <= zext_ln28_52_fu_502_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_h_reg_1887 <= out_h_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_337 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_346 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_350_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp5_0_0_0_reg_1892[10 : 1] <= tmp5_0_0_0_fu_386_p2[10 : 1];
        tmp5_0_1_0_reg_1904[10 : 1] <= tmp5_0_1_0_fu_416_p2[10 : 1];
        tmp5_0_2_0_reg_1916[9 : 1] <= tmp5_0_2_0_fu_448_p2[9 : 1];
        tmp7_0_reg_1928[10 : 2] <= tmp7_0_fu_466_p2[10 : 2];
    end
end

always @ (*) begin
    if ((((icmp_ln20_fu_350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln20_fu_350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        input_r_address0 = zext_ln28_49_fu_1541_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        input_r_address0 = zext_ln28_46_fu_1490_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address0 = zext_ln28_43_fu_1381_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address0 = zext_ln28_38_fu_1207_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = zext_ln28_32_fu_1035_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address0 = zext_ln28_29_fu_977_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address0 = zext_ln28_26_fu_870_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address0 = zext_ln28_23_fu_714_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address0 = zext_ln28_21_fu_678_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_r_address0 = zext_ln28_19_fu_621_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_address0 = zext_ln28_17_fu_539_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_r_address0 = zext_ln28_15_fu_491_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        input_r_address1 = zext_ln28_50_fu_1545_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        input_r_address1 = zext_ln28_47_fu_1498_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address1 = zext_ln28_44_fu_1409_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address1 = zext_ln28_41_fu_1226_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address1 = zext_ln28_35_fu_1062_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address1 = zext_ln28_31_fu_987_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address1 = zext_ln28_28_fu_892_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address1 = zext_ln28_25_fu_741_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address1 = zext_ln28_22_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_r_address1 = zext_ln28_20_fu_634_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_address1 = zext_ln28_18_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_r_address1 = zext_ln28_16_fu_515_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_address0 = zext_ln36_3_fu_1627_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        output_r_address0 = zext_ln36_2_fu_1456_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_address0 = zext_ln36_1_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_address0 = zext_ln36_fu_944_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        output_r_d0 = add_ln28_71_fu_1618_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        output_r_d0 = add_ln28_52_fu_1447_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_r_d0 = add_ln28_34_fu_1274_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_d0 = add_ln28_16_fu_930_p2;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln20_fu_350_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln21_fu_472_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_fu_920_p2 = (out_w_0_0_reg_325 + 5'd4);

assign add_ln28_10_fu_645_p2 = ($signed(trunc_ln28_3_fu_604_p4) + $signed(sext_ln28_65_fu_596_p1));

assign add_ln28_11_fu_651_p2 = (add_ln28_9_fu_639_p2 + add_ln28_10_fu_645_p2);

assign add_ln28_12_fu_820_p2 = ($signed(sext_ln28_67_fu_771_p1) + $signed(trunc_ln28_4_fu_750_p4));

assign add_ln28_13_fu_826_p2 = ($signed(sext_ln28_75_fu_816_p1) + $signed(sext_ln28_72_fu_795_p1));

assign add_ln28_14_fu_832_p2 = ($signed(sext_ln28_69_fu_775_p1) + $signed(add_ln28_13_fu_826_p2));

assign add_ln28_15_fu_926_p2 = (add_ln28_12_reg_2050 + add_ln28_14_reg_2055);

assign add_ln28_16_fu_930_p2 = (add_ln28_11_reg_1999 + add_ln28_15_fu_926_p2);

assign add_ln28_18_fu_722_p2 = (zext_ln28_56_fu_719_p1 + 6'd1);

assign add_ln28_19_fu_732_p2 = (tmp5_0_0_0_reg_1892 + zext_ln28_59_fu_728_p1);

assign add_ln28_1_fu_506_p2 = (tmp5_0_0_0_reg_1892 + zext_ln28_52_fu_502_p1);

assign add_ln28_20_fu_861_p2 = (tmp5_0_0_0_reg_1892 + zext_ln28_61_fu_857_p1);

assign add_ln28_22_fu_884_p2 = (tmp5_0_1_0_reg_1904 + zext_ln28_59_reg_2040);

assign add_ln28_23_fu_969_p2 = (tmp5_0_1_0_reg_1904 + zext_ln28_61_reg_2066);

assign add_ln28_25_fu_982_p2 = (tmp5_0_2_0_reg_1916 + zext_ln28_58_fu_949_p1);

assign add_ln28_26_fu_1030_p2 = (tmp5_0_2_0_reg_1916 + zext_ln28_60_fu_1014_p1);

assign add_ln28_27_fu_906_p2 = (trunc_ln28_9_reg_2004 + trunc_ln28_10_fu_842_p4);

assign add_ln28_28_fu_992_p2 = ($signed(trunc_ln28_12_reg_2077) + $signed(sext_ln28_77_fu_965_p1));

assign add_ln28_29_fu_997_p2 = (add_ln28_27_reg_2092 + add_ln28_28_fu_992_p2);

assign add_ln28_2_fu_530_p2 = (tmp5_0_0_0_reg_1892 + zext_ln28_54_fu_526_p1);

assign add_ln28_30_fu_1134_p2 = ($signed(sext_ln28_79_fu_1103_p1) + $signed(trunc_ln28_13_fu_1082_p4));

assign add_ln28_31_fu_1140_p2 = ($signed(sext_ln28_85_fu_1130_p1) + $signed(sext_ln28_82_fu_1110_p1));

assign add_ln28_32_fu_1146_p2 = ($signed(sext_ln28_80_fu_1107_p1) + $signed(add_ln28_31_fu_1140_p2));

assign add_ln28_33_fu_1270_p2 = (add_ln28_30_reg_2168 + add_ln28_32_reg_2173);

assign add_ln28_34_fu_1274_p2 = (add_ln28_29_reg_2117 + add_ln28_33_fu_1270_p2);

assign add_ln28_37_fu_1043_p2 = (zext_ln28_63_fu_1040_p1 + 6'd2);

assign add_ln28_38_fu_1053_p2 = (tmp5_0_0_0_reg_1892 + zext_ln28_68_fu_1049_p1);

assign add_ln28_3_fu_544_p2 = (zext_ln28_14_reg_1939 + tmp5_0_1_0_reg_1904);

assign add_ln28_41_fu_1199_p2 = (tmp5_0_1_0_reg_1904 + zext_ln28_68_reg_2158);

assign add_ln28_44_fu_1221_p2 = (tmp5_0_2_0_reg_1916 + zext_ln28_67_fu_1170_p1);

assign add_ln28_45_fu_1231_p2 = (trunc_ln28_18_fu_1152_p4 + trunc_ln28_19_fu_1161_p4);

assign add_ln28_46_fu_1237_p2 = ($signed(trunc_ln28_21_fu_1190_p4) + $signed(sext_ln28_87_fu_1186_p1));

assign add_ln28_47_fu_1243_p2 = (add_ln28_45_fu_1231_p2 + add_ln28_46_fu_1237_p2);

assign add_ln28_48_fu_1337_p2 = ($signed(sext_ln28_89_fu_1310_p1) + $signed(trunc_ln28_22_fu_1288_p4));

assign add_ln28_49_fu_1343_p2 = ($signed(sext_ln28_93_fu_1333_p1) + $signed(sext_ln28_91_fu_1317_p1));

assign add_ln28_4_fu_613_p2 = (tmp5_0_1_0_reg_1904 + zext_ln28_52_reg_1956);

assign add_ln28_50_fu_1349_p2 = ($signed(sext_ln28_90_fu_1314_p1) + $signed(add_ln28_49_fu_1343_p2));

assign add_ln28_51_fu_1443_p2 = (add_ln28_48_reg_2208 + add_ln28_50_reg_2213);

assign add_ln28_52_fu_1447_p2 = (add_ln28_47_reg_2193 + add_ln28_51_fu_1443_p2);

assign add_ln28_54_fu_1358_p2 = (zext_ln28_fu_1355_p1 + 6'd1);

assign add_ln28_55_fu_1372_p2 = (tmp5_0_0_0_reg_1892 + zext_ln28_71_fu_1368_p1);

assign add_ln28_56_fu_1386_p2 = (zext_ln28_fu_1355_p1 + 6'd2);

assign add_ln28_57_fu_1400_p2 = (tmp5_0_0_0_reg_1892 + zext_ln28_73_fu_1396_p1);

assign add_ln28_59_fu_1423_p2 = (tmp5_0_1_0_reg_1904 + zext_ln28_71_fu_1368_p1);

assign add_ln28_5_fu_626_p2 = (tmp5_0_1_0_reg_1904 + zext_ln28_54_reg_1973);

assign add_ln28_60_fu_1428_p2 = (tmp5_0_1_0_reg_1904 + zext_ln28_73_fu_1396_p1);

assign add_ln28_62_fu_1433_p2 = (tmp5_0_2_0_reg_1916 + zext_ln28_70_fu_1364_p1);

assign add_ln28_63_fu_1438_p2 = (tmp5_0_2_0_reg_1916 + zext_ln28_72_fu_1392_p1);

assign add_ln28_64_fu_1503_p2 = (trunc_ln28_27_reg_2198 + trunc_ln28_28_fu_1465_p4);

assign add_ln28_65_fu_1549_p2 = ($signed(trunc_ln28_30_reg_2228) + $signed(sext_ln28_95_fu_1508_p1));

assign add_ln28_66_fu_1554_p2 = (add_ln28_64_reg_2268 + add_ln28_65_fu_1549_p2);

assign add_ln28_67_fu_1559_p2 = ($signed(sext_ln28_97_fu_1537_p1) + $signed(trunc_ln28_31_fu_1515_p4));

assign add_ln28_68_fu_1602_p2 = ($signed(sext_ln28_102_fu_1598_p1) + $signed(sext_ln28_100_fu_1581_p1));

assign add_ln28_69_fu_1608_p2 = ($signed(sext_ln28_98_fu_1565_p1) + $signed(add_ln28_68_fu_1602_p2));

assign add_ln28_6_fu_673_p2 = (zext_ln28_13_fu_666_p1 + tmp5_0_2_0_reg_1916);

assign add_ln28_70_fu_1614_p2 = (add_ln28_67_reg_2288 + add_ln28_69_reg_2293);

assign add_ln28_71_fu_1618_p2 = (add_ln28_66_reg_2283 + add_ln28_70_fu_1614_p2);

assign add_ln28_7_fu_683_p2 = (tmp5_0_2_0_reg_1916 + zext_ln28_51_fu_670_p1);

assign add_ln28_8_fu_709_p2 = (tmp5_0_2_0_reg_1916 + zext_ln28_53_fu_693_p1);

assign add_ln28_9_fu_639_p2 = (trunc_ln_fu_561_p4 + trunc_ln28_1_fu_574_p4);

assign add_ln28_fu_482_p2 = (zext_ln28_14_fu_478_p1 + tmp5_0_0_0_reg_1892);

assign add_ln36_1_fu_1002_p2 = (zext_ln28_52_reg_1956 + tmp7_0_reg_1928);

assign add_ln36_2_fu_1006_p2 = (zext_ln28_54_reg_1973 + tmp7_0_reg_1928);

assign add_ln36_3_fu_1010_p2 = (zext_ln28_61_reg_2066 + tmp7_0_reg_1928);

assign add_ln36_fu_936_p2 = (zext_ln28_14_reg_1939 + tmp7_0_reg_1928);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign icmp_ln20_fu_350_p2 = ((out_h_0_reg_314 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_472_p2 = ((out_w_0_0_reg_325 == 5'd28) ? 1'b1 : 1'b0);

assign mul_ln28_10_fu_1702_p1 = 30'd1073729139;

assign mul_ln28_11_fu_1730_p1 = 28'd1933;

assign mul_ln28_12_fu_1709_p0 = sext_ln28_18_fu_746_p1;

assign mul_ln28_12_fu_1709_p1 = 30'd1073736502;

assign mul_ln28_13_fu_1744_p1 = 30'd1073734222;

assign mul_ln28_14_fu_1751_p1 = 28'd268434419;

assign mul_ln28_15_fu_1716_p1 = 27'd134216945;

assign mul_ln28_16_fu_1737_p1 = 29'd3015;

assign mul_ln28_17_fu_1758_p0 = sext_ln28_84_fu_1117_p1;

assign mul_ln28_17_fu_1758_p1 = 29'd536867259;

assign mul_ln28_18_fu_1765_p1 = 30'd1073729270;

assign mul_ln28_19_fu_1772_p0 = sext_ln28_29_fu_1074_p1;

assign mul_ln28_19_fu_1772_p1 = 30'd1073729139;

assign mul_ln28_1_fu_1639_p0 = sext_ln28_12_fu_570_p1;

assign mul_ln28_1_fu_1639_p1 = 30'd1073729139;

assign mul_ln28_20_fu_1779_p1 = 28'd1933;

assign mul_ln28_21_fu_1786_p1 = 30'd1073736502;

assign mul_ln28_22_fu_1814_p0 = sext_ln28_35_fu_1267_p1;

assign mul_ln28_22_fu_1814_p1 = 30'd1073734222;

assign mul_ln28_23_fu_1821_p1 = 28'd268434419;

assign mul_ln28_24_fu_1723_p1 = 27'd134216945;

assign mul_ln28_25_fu_1793_p0 = sext_ln28_84_fu_1117_p1;

assign mul_ln28_25_fu_1793_p1 = 29'd3015;

assign mul_ln28_26_fu_1828_p1 = 29'd536867259;

assign mul_ln28_27_fu_1800_p0 = sext_ln28_29_fu_1074_p1;

assign mul_ln28_27_fu_1800_p1 = 30'd1073729270;

assign mul_ln28_28_fu_1842_p1 = 30'd1073729139;

assign mul_ln28_29_fu_1849_p1 = 28'd1933;

assign mul_ln28_2_fu_1646_p1 = 28'd1933;

assign mul_ln28_30_fu_1835_p0 = sext_ln28_35_fu_1267_p1;

assign mul_ln28_30_fu_1835_p1 = 30'd1073736502;

assign mul_ln28_31_fu_1856_p1 = 30'd1073734222;

assign mul_ln28_32_fu_1863_p1 = 28'd268434419;

assign mul_ln28_33_fu_1807_p1 = 27'd134216945;

assign mul_ln28_34_fu_1870_p1 = 29'd3015;

assign mul_ln28_35_fu_1877_p1 = 29'd536867259;

assign mul_ln28_3_fu_1653_p1 = 30'd1073736502;

assign mul_ln28_4_fu_1674_p0 = sext_ln28_18_fu_746_p1;

assign mul_ln28_4_fu_1674_p1 = 30'd1073734222;

assign mul_ln28_5_fu_1681_p1 = 28'd268434419;

assign mul_ln28_6_fu_1667_p1 = 27'd134216945;

assign mul_ln28_7_fu_1688_p1 = 29'd3015;

assign mul_ln28_8_fu_1695_p1 = 29'd536867259;

assign mul_ln28_9_fu_1660_p0 = sext_ln28_12_fu_570_p1;

assign mul_ln28_9_fu_1660_p1 = 30'd1073729270;

assign mul_ln28_fu_1632_p1 = 30'd1073729270;

assign or_ln28_1_fu_520_p2 = (out_w_0_0_reg_325 | 5'd2);

assign or_ln28_2_fu_851_p2 = (out_w_0_0_reg_325 | 5'd3);

assign or_ln28_fu_496_p2 = (out_w_0_0_reg_325 | 5'd1);

assign out_h_fu_356_p2 = (out_h_0_reg_314 + 5'd1);

assign p_shl1_fu_374_p3 = {{out_h_0_reg_314}, {1'd0}};

assign p_shl23_cast_fu_462_p1 = p_shl6_fu_454_p3;

assign p_shl25_cast_fu_444_p1 = p_shl5_fu_436_p3;

assign p_shl26_cast_fu_400_p1 = p_shl2_fu_392_p3;

assign p_shl27_cast_fu_412_p1 = p_shl3_fu_404_p3;

assign p_shl28_cast_fu_370_p1 = p_shl_fu_362_p3;

assign p_shl29_cast_fu_382_p1 = p_shl1_fu_374_p3;

assign p_shl2_fu_392_p3 = {{out_h_fu_356_p2}, {5'd0}};

assign p_shl3_fu_404_p3 = {{out_h_fu_356_p2}, {1'd0}};

assign p_shl4_fu_428_p3 = {{tmp_0_2_0_fu_422_p2}, {5'd0}};

assign p_shl5_fu_436_p3 = {{tmp_0_2_0_fu_422_p2}, {1'd0}};

assign p_shl6_fu_454_p3 = {{out_h_0_reg_314}, {2'd0}};

assign p_shl_fu_362_p3 = {{out_h_0_reg_314}, {5'd0}};

assign sext_ln28_100_fu_1581_p1 = $signed(tmp_27_fu_1572_p4);

assign sext_ln28_102_fu_1598_p1 = $signed(tmp_28_fu_1589_p4);

assign sext_ln28_11_fu_511_p1 = $signed(add_ln28_1_fu_506_p2);

assign sext_ln28_12_fu_570_p1 = $signed(reg_341);

assign sext_ln28_13_fu_535_p1 = $signed(add_ln28_2_fu_530_p2);

assign sext_ln28_15_fu_548_p1 = $signed(add_ln28_3_fu_544_p2);

assign sext_ln28_17_fu_617_p1 = $signed(add_ln28_4_fu_613_p2);

assign sext_ln28_18_fu_746_p1 = $signed(reg_341);

assign sext_ln28_19_fu_630_p1 = $signed(add_ln28_5_fu_626_p2);

assign sext_ln28_26_fu_737_p1 = $signed(add_ln28_19_fu_732_p2);

assign sext_ln28_28_fu_866_p1 = $signed(add_ln28_20_fu_861_p2);

assign sext_ln28_29_fu_1074_p0 = reg_341;

assign sext_ln28_29_fu_1074_p1 = sext_ln28_29_fu_1074_p0;

assign sext_ln28_32_fu_888_p1 = $signed(add_ln28_22_fu_884_p2);

assign sext_ln28_34_fu_973_p1 = $signed(add_ln28_23_fu_969_p2);

assign sext_ln28_35_fu_1267_p1 = input_load_207_reg_2137;

assign sext_ln28_43_fu_1058_p1 = $signed(add_ln28_38_fu_1053_p2);

assign sext_ln28_49_fu_1203_p1 = $signed(add_ln28_41_fu_1199_p2);

assign sext_ln28_56_fu_1377_p1 = $signed(add_ln28_55_fu_1372_p2);

assign sext_ln28_58_fu_1405_p1 = $signed(add_ln28_57_fu_1400_p2);

assign sext_ln28_62_fu_1487_p1 = $signed(add_ln28_59_reg_2233);

assign sext_ln28_64_fu_1495_p1 = $signed(add_ln28_60_reg_2238);

assign sext_ln28_65_fu_596_p1 = $signed(tmp_fu_587_p4);

assign sext_ln28_67_fu_771_p1 = $signed(tmp_10_fu_762_p4);

assign sext_ln28_69_fu_775_p1 = $signed(tmp_11_reg_2025);

assign sext_ln28_72_fu_795_p1 = $signed(tmp_12_fu_786_p4);

assign sext_ln28_75_fu_816_p1 = $signed(tmp_13_fu_807_p4);

assign sext_ln28_77_fu_965_p1 = $signed(tmp_14_fu_956_p4);

assign sext_ln28_79_fu_1103_p1 = $signed(tmp_15_fu_1094_p4);

assign sext_ln28_80_fu_1107_p1 = $signed(tmp_16_reg_2087);

assign sext_ln28_82_fu_1110_p1 = $signed(tmp_17_reg_2143);

assign sext_ln28_84_fu_1117_p0 = input_r_q0;

assign sext_ln28_84_fu_1117_p1 = sext_ln28_84_fu_1117_p0;

assign sext_ln28_85_fu_1130_p1 = $signed(tmp_18_fu_1121_p4);

assign sext_ln28_87_fu_1186_p1 = $signed(tmp_19_fu_1177_p4);

assign sext_ln28_89_fu_1310_p1 = $signed(tmp_20_fu_1301_p4);

assign sext_ln28_90_fu_1314_p1 = $signed(tmp_21_reg_2097);

assign sext_ln28_91_fu_1317_p1 = $signed(tmp_22_reg_2183);

assign sext_ln28_93_fu_1333_p1 = $signed(tmp_23_fu_1324_p4);

assign sext_ln28_95_fu_1508_p1 = $signed(tmp_24_reg_2253);

assign sext_ln28_97_fu_1537_p1 = $signed(tmp_25_fu_1528_p4);

assign sext_ln28_98_fu_1565_p1 = $signed(tmp_26_reg_2203);

assign sext_ln28_9_fu_487_p1 = $signed(add_ln28_fu_482_p2);

assign sext_ln36_1_fu_1280_p1 = $signed(add_ln36_1_reg_2122);

assign sext_ln36_2_fu_1453_p1 = $signed(add_ln36_2_reg_2127);

assign sext_ln36_3_fu_1624_p1 = $signed(add_ln36_3_reg_2132);

assign sext_ln36_fu_940_p1 = $signed(add_ln36_fu_936_p2);

assign tmp5_0_0_0_fu_386_p2 = (p_shl28_cast_fu_370_p1 - p_shl29_cast_fu_382_p1);

assign tmp5_0_1_0_fu_416_p2 = (p_shl26_cast_fu_400_p1 - p_shl27_cast_fu_412_p1);

assign tmp5_0_2_0_fu_448_p2 = (p_shl4_fu_428_p3 - p_shl25_cast_fu_444_p1);

assign tmp7_0_fu_466_p2 = (p_shl28_cast_fu_370_p1 - p_shl23_cast_fu_462_p1);

assign tmp_0_2_0_fu_422_p2 = (out_h_0_reg_314 + 5'd2);

assign tmp_10_fu_762_p4 = {{mul_ln28_5_fu_1681_p2[27:14]}};

assign tmp_12_fu_786_p4 = {{mul_ln28_7_fu_1688_p2[28:14]}};

assign tmp_13_fu_807_p4 = {{mul_ln28_8_fu_1695_p2[28:14]}};

assign tmp_14_fu_956_p4 = {{mul_ln28_11_fu_1730_p2[27:14]}};

assign tmp_15_fu_1094_p4 = {{mul_ln28_14_fu_1751_p2[27:14]}};

assign tmp_18_fu_1121_p4 = {{mul_ln28_17_fu_1758_p2[28:14]}};

assign tmp_19_fu_1177_p4 = {{mul_ln28_20_fu_1779_p2[27:14]}};

assign tmp_20_fu_1301_p4 = {{mul_ln28_23_fu_1821_p2[27:14]}};

assign tmp_23_fu_1324_p4 = {{mul_ln28_26_fu_1828_p2[28:14]}};

assign tmp_25_fu_1528_p4 = {{mul_ln28_32_fu_1863_p2[27:14]}};

assign tmp_27_fu_1572_p4 = {{mul_ln28_34_fu_1870_p2[28:14]}};

assign tmp_28_fu_1589_p4 = {{mul_ln28_35_fu_1877_p2[28:14]}};

assign tmp_fu_587_p4 = {{mul_ln28_2_fu_1646_p2[27:14]}};

assign trunc_ln28_10_fu_842_p4 = {{mul_ln28_10_fu_1702_p2[29:14]}};

assign trunc_ln28_13_fu_1082_p4 = {{mul_ln28_13_fu_1744_p2[29:14]}};

assign trunc_ln28_18_fu_1152_p4 = {{mul_ln28_18_fu_1765_p2[29:14]}};

assign trunc_ln28_19_fu_1161_p4 = {{mul_ln28_19_fu_1772_p2[29:14]}};

assign trunc_ln28_1_fu_574_p4 = {{mul_ln28_1_fu_1639_p2[29:14]}};

assign trunc_ln28_21_fu_1190_p4 = {{mul_ln28_21_fu_1786_p2[29:14]}};

assign trunc_ln28_22_fu_1288_p4 = {{mul_ln28_22_fu_1814_p2[29:14]}};

assign trunc_ln28_28_fu_1465_p4 = {{mul_ln28_28_fu_1842_p2[29:14]}};

assign trunc_ln28_31_fu_1515_p4 = {{mul_ln28_31_fu_1856_p2[29:14]}};

assign trunc_ln28_3_fu_604_p4 = {{mul_ln28_3_fu_1653_p2[29:14]}};

assign trunc_ln28_4_fu_750_p4 = {{mul_ln28_4_fu_1674_p2[29:14]}};

assign trunc_ln_fu_561_p4 = {{mul_ln28_fu_1632_p2[29:14]}};

assign zext_ln28_13_fu_666_p1 = out_w_0_0_reg_325;

assign zext_ln28_14_fu_478_p1 = out_w_0_0_reg_325;

assign zext_ln28_15_fu_491_p1 = $unsigned(sext_ln28_9_fu_487_p1);

assign zext_ln28_16_fu_515_p1 = $unsigned(sext_ln28_11_fu_511_p1);

assign zext_ln28_17_fu_539_p1 = $unsigned(sext_ln28_13_fu_535_p1);

assign zext_ln28_18_fu_552_p1 = $unsigned(sext_ln28_15_fu_548_p1);

assign zext_ln28_19_fu_621_p1 = $unsigned(sext_ln28_17_fu_617_p1);

assign zext_ln28_20_fu_634_p1 = $unsigned(sext_ln28_19_fu_630_p1);

assign zext_ln28_21_fu_678_p1 = add_ln28_6_fu_673_p2;

assign zext_ln28_22_fu_688_p1 = add_ln28_7_fu_683_p2;

assign zext_ln28_23_fu_714_p1 = add_ln28_8_fu_709_p2;

assign zext_ln28_25_fu_741_p1 = $unsigned(sext_ln28_26_fu_737_p1);

assign zext_ln28_26_fu_870_p1 = $unsigned(sext_ln28_28_fu_866_p1);

assign zext_ln28_28_fu_892_p1 = $unsigned(sext_ln28_32_fu_888_p1);

assign zext_ln28_29_fu_977_p1 = $unsigned(sext_ln28_34_fu_973_p1);

assign zext_ln28_31_fu_987_p1 = add_ln28_25_fu_982_p2;

assign zext_ln28_32_fu_1035_p1 = add_ln28_26_fu_1030_p2;

assign zext_ln28_35_fu_1062_p1 = $unsigned(sext_ln28_43_fu_1058_p1);

assign zext_ln28_38_fu_1207_p1 = $unsigned(sext_ln28_49_fu_1203_p1);

assign zext_ln28_41_fu_1226_p1 = add_ln28_44_fu_1221_p2;

assign zext_ln28_43_fu_1381_p1 = $unsigned(sext_ln28_56_fu_1377_p1);

assign zext_ln28_44_fu_1409_p1 = $unsigned(sext_ln28_58_fu_1405_p1);

assign zext_ln28_46_fu_1490_p1 = $unsigned(sext_ln28_62_fu_1487_p1);

assign zext_ln28_47_fu_1498_p1 = $unsigned(sext_ln28_64_fu_1495_p1);

assign zext_ln28_49_fu_1541_p1 = add_ln28_62_reg_2243;

assign zext_ln28_50_fu_1545_p1 = add_ln28_63_reg_2248;

assign zext_ln28_51_fu_670_p1 = or_ln28_reg_1950;

assign zext_ln28_52_fu_502_p1 = or_ln28_fu_496_p2;

assign zext_ln28_53_fu_693_p1 = or_ln28_1_reg_1967;

assign zext_ln28_54_fu_526_p1 = or_ln28_1_fu_520_p2;

assign zext_ln28_56_fu_719_p1 = or_ln28_reg_1950;

assign zext_ln28_58_fu_949_p1 = add_ln28_18_reg_2035;

assign zext_ln28_59_fu_728_p1 = add_ln28_18_fu_722_p2;

assign zext_ln28_60_fu_1014_p1 = or_ln28_2_reg_2060;

assign zext_ln28_61_fu_857_p1 = or_ln28_2_fu_851_p2;

assign zext_ln28_63_fu_1040_p1 = or_ln28_1_reg_1967;

assign zext_ln28_67_fu_1170_p1 = add_ln28_37_reg_2153;

assign zext_ln28_68_fu_1049_p1 = add_ln28_37_fu_1043_p2;

assign zext_ln28_70_fu_1364_p1 = add_ln28_54_fu_1358_p2;

assign zext_ln28_71_fu_1368_p1 = add_ln28_54_fu_1358_p2;

assign zext_ln28_72_fu_1392_p1 = add_ln28_56_fu_1386_p2;

assign zext_ln28_73_fu_1396_p1 = add_ln28_56_fu_1386_p2;

assign zext_ln28_fu_1355_p1 = or_ln28_2_reg_2060;

assign zext_ln36_1_fu_1283_p1 = $unsigned(sext_ln36_1_fu_1280_p1);

assign zext_ln36_2_fu_1456_p1 = $unsigned(sext_ln36_2_fu_1453_p1);

assign zext_ln36_3_fu_1627_p1 = $unsigned(sext_ln36_3_fu_1624_p1);

assign zext_ln36_fu_944_p1 = $unsigned(sext_ln36_fu_940_p1);

always @ (posedge ap_clk) begin
    tmp5_0_0_0_reg_1892[0] <= 1'b0;
    tmp5_0_1_0_reg_1904[0] <= 1'b0;
    tmp5_0_2_0_reg_1916[0] <= 1'b0;
    tmp7_0_reg_1928[1:0] <= 2'b00;
    zext_ln28_14_reg_1939[10:5] <= 6'b000000;
    or_ln28_reg_1950[0] <= 1'b1;
    zext_ln28_52_reg_1956[0] <= 1'b1;
    zext_ln28_52_reg_1956[10:5] <= 6'b000000;
    or_ln28_1_reg_1967[1] <= 1'b1;
    zext_ln28_54_reg_1973[1] <= 1'b1;
    zext_ln28_54_reg_1973[10:5] <= 6'b000000;
    add_ln28_18_reg_2035[0] <= 1'b0;
    zext_ln28_59_reg_2040[0] <= 1'b0;
    zext_ln28_59_reg_2040[10:6] <= 5'b00000;
    or_ln28_2_reg_2060[1:0] <= 2'b11;
    zext_ln28_61_reg_2066[1:0] <= 2'b11;
    zext_ln28_61_reg_2066[10:5] <= 6'b000000;
    add_ln36_1_reg_2122[0] <= 1'b1;
    add_ln36_3_reg_2132[1:0] <= 2'b11;
    zext_ln28_68_reg_2158[10:6] <= 5'b00000;
    add_ln28_59_reg_2233[0] <= 1'b0;
    add_ln28_60_reg_2238[0] <= 1'b1;
    add_ln28_62_reg_2243[0] <= 1'b0;
    add_ln28_63_reg_2248[0] <= 1'b1;
end

endmodule //depthwise_conv2d_fix
