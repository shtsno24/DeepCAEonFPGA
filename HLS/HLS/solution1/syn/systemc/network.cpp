// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "network.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic network::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic network::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<46> network::ap_ST_fsm_state1 = "1";
const sc_lv<46> network::ap_ST_fsm_state2 = "10";
const sc_lv<46> network::ap_ST_fsm_state3 = "100";
const sc_lv<46> network::ap_ST_fsm_state4 = "1000";
const sc_lv<46> network::ap_ST_fsm_state5 = "10000";
const sc_lv<46> network::ap_ST_fsm_state6 = "100000";
const sc_lv<46> network::ap_ST_fsm_state7 = "1000000";
const sc_lv<46> network::ap_ST_fsm_state8 = "10000000";
const sc_lv<46> network::ap_ST_fsm_state9 = "100000000";
const sc_lv<46> network::ap_ST_fsm_state10 = "1000000000";
const sc_lv<46> network::ap_ST_fsm_state11 = "10000000000";
const sc_lv<46> network::ap_ST_fsm_state12 = "100000000000";
const sc_lv<46> network::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<46> network::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<46> network::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<46> network::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<46> network::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<46> network::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<46> network::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<46> network::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<32> network::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> network::ap_const_lv1_0 = "0";
const sc_lv<1> network::ap_const_lv1_1 = "1";
const sc_lv<2> network::ap_const_lv2_0 = "00";
const sc_lv<2> network::ap_const_lv2_2 = "10";
const sc_lv<2> network::ap_const_lv2_3 = "11";
const sc_lv<2> network::ap_const_lv2_1 = "1";
const sc_lv<32> network::ap_const_lv32_1 = "1";
const sc_lv<32> network::ap_const_lv32_2B = "101011";
const sc_lv<32> network::ap_const_lv32_2C = "101100";
const int network::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> network::ap_const_lv32_28 = "101000";
const sc_lv<32> network::ap_const_lv32_2A = "101010";
const sc_lv<10> network::ap_const_lv10_0 = "0000000000";
const sc_lv<32> network::ap_const_lv32_27 = "100111";
const sc_lv<32> network::ap_const_lv32_29 = "101001";
const sc_lv<32> network::ap_const_lv32_2 = "10";
const sc_lv<32> network::ap_const_lv32_A = "1010";
const sc_lv<32> network::ap_const_lv32_12 = "10010";
const sc_lv<32> network::ap_const_lv32_1A = "11010";
const sc_lv<32> network::ap_const_lv32_22 = "100010";
const sc_lv<7> network::ap_const_lv7_1 = "1";
const sc_lv<32> network::ap_const_lv32_3 = "11";
const sc_lv<7> network::ap_const_lv7_10 = "10000";
const sc_lv<32> network::ap_const_lv32_B = "1011";
const sc_lv<7> network::ap_const_lv7_8 = "1000";
const sc_lv<32> network::ap_const_lv32_13 = "10011";
const sc_lv<32> network::ap_const_lv32_1B = "11011";
const sc_lv<32> network::ap_const_lv32_23 = "100011";
const sc_lv<6> network::ap_const_lv6_1C = "11100";
const sc_lv<6> network::ap_const_lv6_E = "1110";
const sc_lv<6> network::ap_const_lv6_7 = "111";
const sc_lv<32> network::ap_const_lv32_C = "1100";
const sc_lv<32> network::ap_const_lv32_24 = "100100";
const sc_lv<32> network::ap_const_lv32_D = "1101";
const sc_lv<7> network::ap_const_lv7_1E = "11110";
const sc_lv<32> network::ap_const_lv32_25 = "100101";
const sc_lv<6> network::ap_const_lv6_10 = "10000";
const sc_lv<6> network::ap_const_lv6_1E = "11110";
const sc_lv<32> network::ap_const_lv32_14 = "10100";
const sc_lv<32> network::ap_const_lv32_1C = "11100";
const sc_lv<6> network::ap_const_lv6_9 = "1001";
const sc_lv<32> network::ap_const_lv32_15 = "10101";
const sc_lv<32> network::ap_const_lv32_1D = "11101";
const sc_lv<5> network::ap_const_lv5_7 = "111";
const sc_lv<5> network::ap_const_lv5_E = "1110";
const sc_lv<32> network::ap_const_lv32_E = "1110";
const sc_lv<32> network::ap_const_lv32_F = "1111";
const sc_lv<32> network::ap_const_lv32_1E = "11110";
const sc_lv<32> network::ap_const_lv32_1F = "11111";
const sc_lv<32> network::ap_const_lv32_8 = "1000";
const sc_lv<32> network::ap_const_lv32_10 = "10000";
const sc_lv<7> network::ap_const_lv7_1C = "11100";
const sc_lv<32> network::ap_const_lv32_9 = "1001";
const sc_lv<7> network::ap_const_lv7_E = "1110";
const sc_lv<32> network::ap_const_lv32_11 = "10001";
const sc_lv<6> network::ap_const_lv6_8 = "1000";
const sc_lv<32> network::ap_const_lv32_16 = "10110";
const sc_lv<32> network::ap_const_lv32_17 = "10111";
const sc_lv<32> network::ap_const_lv32_4 = "100";
const sc_lv<32> network::ap_const_lv32_5 = "101";
const sc_lv<32> network::ap_const_lv32_26 = "100110";
const sc_lv<32> network::ap_const_lv32_18 = "11000";
const sc_lv<32> network::ap_const_lv32_20 = "100000";
const sc_lv<32> network::ap_const_lv32_19 = "11001";
const sc_lv<32> network::ap_const_lv32_21 = "100001";
const sc_lv<32> network::ap_const_lv32_6 = "110";
const sc_lv<32> network::ap_const_lv32_7 = "111";
const sc_lv<10> network::ap_const_lv10_310 = "1100010000";
const sc_lv<10> network::ap_const_lv10_1 = "1";
const sc_lv<32> network::ap_const_lv32_2D = "101101";
const bool network::ap_const_boolean_1 = true;

network::network(sc_module_name name) : sc_module(name), mVcdFile(0) {
    SeparableConv2D_1_b_1_U = new network_SeparableConv2D_1_b_1("SeparableConv2D_1_b_1_U");
    SeparableConv2D_1_b_1_U->clk(ap_clk);
    SeparableConv2D_1_b_1_U->reset(ap_rst_n_inv);
    SeparableConv2D_1_b_1_U->address0(grp_depthwise_conv2d_fix_2_fu_449_bias_address0);
    SeparableConv2D_1_b_1_U->ce0(SeparableConv2D_1_b_1_ce0);
    SeparableConv2D_1_b_1_U->q0(SeparableConv2D_1_b_1_q0);
    SeparableConv2D_1_w_1_U = new network_SeparableConv2D_1_w_1("SeparableConv2D_1_w_1_U");
    SeparableConv2D_1_w_1_U->clk(ap_clk);
    SeparableConv2D_1_w_1_U->reset(ap_rst_n_inv);
    SeparableConv2D_1_w_1_U->address0(grp_depthwise_conv2d_fix_2_fu_449_kernel_0_address0);
    SeparableConv2D_1_w_1_U->ce0(SeparableConv2D_1_w_1_ce0);
    SeparableConv2D_1_w_1_U->q0(SeparableConv2D_1_w_1_q0);
    SeparableConv2D_2_b_1_U = new network_SeparableConv2D_2_b_1("SeparableConv2D_2_b_1_U");
    SeparableConv2D_2_b_1_U->clk(ap_clk);
    SeparableConv2D_2_b_1_U->reset(ap_rst_n_inv);
    SeparableConv2D_2_b_1_U->address0(grp_depthwise_conv2d_fix_1_fu_473_bias_address0);
    SeparableConv2D_2_b_1_U->ce0(SeparableConv2D_2_b_1_ce0);
    SeparableConv2D_2_b_1_U->q0(SeparableConv2D_2_b_1_q0);
    SeparableConv2D_2_w_1_U = new network_SeparableConv2D_2_w_1("SeparableConv2D_2_w_1_U");
    SeparableConv2D_2_w_1_U->clk(ap_clk);
    SeparableConv2D_2_w_1_U->reset(ap_rst_n_inv);
    SeparableConv2D_2_w_1_U->address0(grp_depthwise_conv2d_fix_1_fu_473_kernel_0_address0);
    SeparableConv2D_2_w_1_U->ce0(SeparableConv2D_2_w_1_ce0);
    SeparableConv2D_2_w_1_U->q0(SeparableConv2D_2_w_1_q0);
    SeparableConv2D_3_b_1_U = new network_SeparableConv2D_2_b_1("SeparableConv2D_3_b_1_U");
    SeparableConv2D_3_b_1_U->clk(ap_clk);
    SeparableConv2D_3_b_1_U->reset(ap_rst_n_inv);
    SeparableConv2D_3_b_1_U->address0(grp_depthwise_conv2d_fix_1_fu_473_bias_address0);
    SeparableConv2D_3_b_1_U->ce0(SeparableConv2D_3_b_1_ce0);
    SeparableConv2D_3_b_1_U->q0(SeparableConv2D_3_b_1_q0);
    SeparableConv2D_3_w_1_U = new network_SeparableConv2D_3_w_1("SeparableConv2D_3_w_1_U");
    SeparableConv2D_3_w_1_U->clk(ap_clk);
    SeparableConv2D_3_w_1_U->reset(ap_rst_n_inv);
    SeparableConv2D_3_w_1_U->address0(grp_depthwise_conv2d_fix_1_fu_473_kernel_0_address0);
    SeparableConv2D_3_w_1_U->ce0(SeparableConv2D_3_w_1_ce0);
    SeparableConv2D_3_w_1_U->q0(SeparableConv2D_3_w_1_q0);
    SeparableConv2D_4_b_s_U = new network_SeparableConv2D_1_b_1("SeparableConv2D_4_b_s_U");
    SeparableConv2D_4_b_s_U->clk(ap_clk);
    SeparableConv2D_4_b_s_U->reset(ap_rst_n_inv);
    SeparableConv2D_4_b_s_U->address0(grp_depthwise_conv2d_fix_2_fu_449_bias_address0);
    SeparableConv2D_4_b_s_U->ce0(SeparableConv2D_4_b_s_ce0);
    SeparableConv2D_4_b_s_U->q0(SeparableConv2D_4_b_s_q0);
    SeparableConv2D_4_w_1_U = new network_SeparableConv2D_4_w_1("SeparableConv2D_4_w_1_U");
    SeparableConv2D_4_w_1_U->clk(ap_clk);
    SeparableConv2D_4_w_1_U->reset(ap_rst_n_inv);
    SeparableConv2D_4_w_1_U->address0(grp_depthwise_conv2d_fix_2_fu_449_kernel_0_address0);
    SeparableConv2D_4_w_1_U->ce0(SeparableConv2D_4_w_1_ce0);
    SeparableConv2D_4_w_1_U->q0(SeparableConv2D_4_w_1_q0);
    network_AXILiteS_s_axi_U = new network_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("network_AXILiteS_s_axi_U");
    network_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    network_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    network_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    network_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    network_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    network_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    network_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    network_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    network_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    network_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    network_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    network_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    network_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    network_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    network_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    network_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    network_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    network_AXILiteS_s_axi_U->ACLK(ap_clk);
    network_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    network_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    network_AXILiteS_s_axi_U->ap_start(ap_start);
    network_AXILiteS_s_axi_U->interrupt(interrupt);
    network_AXILiteS_s_axi_U->ap_ready(ap_ready);
    network_AXILiteS_s_axi_U->ap_done(ap_done);
    network_AXILiteS_s_axi_U->ap_idle(ap_idle);
    network_AXILiteS_s_axi_U->ap_return(ap_return);
    MemBank_A_U = new network_MemBank_A("MemBank_A_U");
    MemBank_A_U->clk(ap_clk);
    MemBank_A_U->reset(ap_rst_n_inv);
    MemBank_A_U->address0(MemBank_A_address0);
    MemBank_A_U->ce0(MemBank_A_ce0);
    MemBank_A_U->we0(MemBank_A_we0);
    MemBank_A_U->d0(MemBank_A_d0);
    MemBank_A_U->q0(MemBank_A_q0);
    MemBank_B_U = new network_MemBank_A("MemBank_B_U");
    MemBank_B_U->clk(ap_clk);
    MemBank_B_U->reset(ap_rst_n_inv);
    MemBank_B_U->address0(MemBank_B_address0);
    MemBank_B_U->ce0(MemBank_B_ce0);
    MemBank_B_U->we0(MemBank_B_we0);
    MemBank_B_U->d0(MemBank_B_d0);
    MemBank_B_U->q0(MemBank_B_q0);
    MemBank_Out_U = new network_MemBank_Out("MemBank_Out_U");
    MemBank_Out_U->clk(ap_clk);
    MemBank_Out_U->reset(ap_rst_n_inv);
    MemBank_Out_U->address0(MemBank_Out_address0);
    MemBank_Out_U->ce0(MemBank_Out_ce0);
    MemBank_Out_U->we0(MemBank_Out_we0);
    MemBank_Out_U->d0(MemBank_B_q0);
    MemBank_Out_U->q0(MemBank_Out_q0);
    sig_buffer_keep_V_U = new network_sig_buffer_keep_V("sig_buffer_keep_V_U");
    sig_buffer_keep_V_U->clk(ap_clk);
    sig_buffer_keep_V_U->reset(ap_rst_n_inv);
    sig_buffer_keep_V_U->address0(sig_buffer_keep_V_address0);
    sig_buffer_keep_V_U->ce0(sig_buffer_keep_V_ce0);
    sig_buffer_keep_V_U->we0(sig_buffer_keep_V_we0);
    sig_buffer_keep_V_U->d0(input_data_keep_V_0_data_out);
    sig_buffer_keep_V_U->q0(sig_buffer_keep_V_q0);
    sig_buffer_strb_V_U = new network_sig_buffer_keep_V("sig_buffer_strb_V_U");
    sig_buffer_strb_V_U->clk(ap_clk);
    sig_buffer_strb_V_U->reset(ap_rst_n_inv);
    sig_buffer_strb_V_U->address0(sig_buffer_strb_V_address0);
    sig_buffer_strb_V_U->ce0(sig_buffer_strb_V_ce0);
    sig_buffer_strb_V_U->we0(sig_buffer_strb_V_we0);
    sig_buffer_strb_V_U->d0(input_data_strb_V_0_data_out);
    sig_buffer_strb_V_U->q0(sig_buffer_strb_V_q0);
    sig_buffer_user_V_U = new network_sig_buffer_user_V("sig_buffer_user_V_U");
    sig_buffer_user_V_U->clk(ap_clk);
    sig_buffer_user_V_U->reset(ap_rst_n_inv);
    sig_buffer_user_V_U->address0(sig_buffer_user_V_address0);
    sig_buffer_user_V_U->ce0(sig_buffer_user_V_ce0);
    sig_buffer_user_V_U->we0(sig_buffer_user_V_we0);
    sig_buffer_user_V_U->d0(input_data_user_V_0_data_out);
    sig_buffer_user_V_U->q0(sig_buffer_user_V_q0);
    sig_buffer_last_V_U = new network_sig_buffer_user_V("sig_buffer_last_V_U");
    sig_buffer_last_V_U->clk(ap_clk);
    sig_buffer_last_V_U->reset(ap_rst_n_inv);
    sig_buffer_last_V_U->address0(sig_buffer_last_V_address0);
    sig_buffer_last_V_U->ce0(sig_buffer_last_V_ce0);
    sig_buffer_last_V_U->we0(sig_buffer_last_V_we0);
    sig_buffer_last_V_U->d0(input_data_last_V_0_data_out);
    sig_buffer_last_V_U->q0(sig_buffer_last_V_q0);
    sig_buffer_id_V_U = new network_sig_buffer_user_V("sig_buffer_id_V_U");
    sig_buffer_id_V_U->clk(ap_clk);
    sig_buffer_id_V_U->reset(ap_rst_n_inv);
    sig_buffer_id_V_U->address0(sig_buffer_id_V_address0);
    sig_buffer_id_V_U->ce0(sig_buffer_id_V_ce0);
    sig_buffer_id_V_U->we0(sig_buffer_id_V_we0);
    sig_buffer_id_V_U->d0(input_data_id_V_0_data_out);
    sig_buffer_id_V_U->q0(sig_buffer_id_V_q0);
    sig_buffer_dest_V_U = new network_sig_buffer_user_V("sig_buffer_dest_V_U");
    sig_buffer_dest_V_U->clk(ap_clk);
    sig_buffer_dest_V_U->reset(ap_rst_n_inv);
    sig_buffer_dest_V_U->address0(sig_buffer_dest_V_address0);
    sig_buffer_dest_V_U->ce0(sig_buffer_dest_V_ce0);
    sig_buffer_dest_V_U->we0(sig_buffer_dest_V_we0);
    sig_buffer_dest_V_U->d0(input_data_dest_V_0_data_out);
    sig_buffer_dest_V_U->q0(sig_buffer_dest_V_q0);
    grp_padding2d_fix16_fu_431 = new padding2d_fix16("grp_padding2d_fix16_fu_431");
    grp_padding2d_fix16_fu_431->ap_clk(ap_clk);
    grp_padding2d_fix16_fu_431->ap_rst(ap_rst_n_inv);
    grp_padding2d_fix16_fu_431->ap_start(grp_padding2d_fix16_fu_431_ap_start);
    grp_padding2d_fix16_fu_431->ap_done(grp_padding2d_fix16_fu_431_ap_done);
    grp_padding2d_fix16_fu_431->ap_idle(grp_padding2d_fix16_fu_431_ap_idle);
    grp_padding2d_fix16_fu_431->ap_ready(grp_padding2d_fix16_fu_431_ap_ready);
    grp_padding2d_fix16_fu_431->input_depth(grp_padding2d_fix16_fu_431_input_depth);
    grp_padding2d_fix16_fu_431->input_height(grp_padding2d_fix16_fu_431_input_height);
    grp_padding2d_fix16_fu_431->input_width(grp_padding2d_fix16_fu_431_input_width);
    grp_padding2d_fix16_fu_431->input_r_address0(grp_padding2d_fix16_fu_431_input_r_address0);
    grp_padding2d_fix16_fu_431->input_r_ce0(grp_padding2d_fix16_fu_431_input_r_ce0);
    grp_padding2d_fix16_fu_431->input_r_q0(MemBank_A_q0);
    grp_padding2d_fix16_fu_431->output_r_address0(grp_padding2d_fix16_fu_431_output_r_address0);
    grp_padding2d_fix16_fu_431->output_r_ce0(grp_padding2d_fix16_fu_431_output_r_ce0);
    grp_padding2d_fix16_fu_431->output_r_we0(grp_padding2d_fix16_fu_431_output_r_we0);
    grp_padding2d_fix16_fu_431->output_r_d0(grp_padding2d_fix16_fu_431_output_r_d0);
    grp_depthwise_conv2d_fix_2_fu_449 = new depthwise_conv2d_fix_2("grp_depthwise_conv2d_fix_2_fu_449");
    grp_depthwise_conv2d_fix_2_fu_449->ap_clk(ap_clk);
    grp_depthwise_conv2d_fix_2_fu_449->ap_rst(ap_rst_n_inv);
    grp_depthwise_conv2d_fix_2_fu_449->ap_start(grp_depthwise_conv2d_fix_2_fu_449_ap_start);
    grp_depthwise_conv2d_fix_2_fu_449->ap_done(grp_depthwise_conv2d_fix_2_fu_449_ap_done);
    grp_depthwise_conv2d_fix_2_fu_449->ap_idle(grp_depthwise_conv2d_fix_2_fu_449_ap_idle);
    grp_depthwise_conv2d_fix_2_fu_449->ap_ready(grp_depthwise_conv2d_fix_2_fu_449_ap_ready);
    grp_depthwise_conv2d_fix_2_fu_449->input_height(grp_depthwise_conv2d_fix_2_fu_449_input_height);
    grp_depthwise_conv2d_fix_2_fu_449->input_width(grp_depthwise_conv2d_fix_2_fu_449_input_width);
    grp_depthwise_conv2d_fix_2_fu_449->input_r_address0(grp_depthwise_conv2d_fix_2_fu_449_input_r_address0);
    grp_depthwise_conv2d_fix_2_fu_449->input_r_ce0(grp_depthwise_conv2d_fix_2_fu_449_input_r_ce0);
    grp_depthwise_conv2d_fix_2_fu_449->input_r_q0(MemBank_B_q0);
    grp_depthwise_conv2d_fix_2_fu_449->output_height(grp_depthwise_conv2d_fix_2_fu_449_output_height);
    grp_depthwise_conv2d_fix_2_fu_449->output_width(grp_depthwise_conv2d_fix_2_fu_449_output_width);
    grp_depthwise_conv2d_fix_2_fu_449->output_r_address0(grp_depthwise_conv2d_fix_2_fu_449_output_r_address0);
    grp_depthwise_conv2d_fix_2_fu_449->output_r_ce0(grp_depthwise_conv2d_fix_2_fu_449_output_r_ce0);
    grp_depthwise_conv2d_fix_2_fu_449->output_r_we0(grp_depthwise_conv2d_fix_2_fu_449_output_r_we0);
    grp_depthwise_conv2d_fix_2_fu_449->output_r_d0(grp_depthwise_conv2d_fix_2_fu_449_output_r_d0);
    grp_depthwise_conv2d_fix_2_fu_449->bias_address0(grp_depthwise_conv2d_fix_2_fu_449_bias_address0);
    grp_depthwise_conv2d_fix_2_fu_449->bias_ce0(grp_depthwise_conv2d_fix_2_fu_449_bias_ce0);
    grp_depthwise_conv2d_fix_2_fu_449->bias_q0(grp_depthwise_conv2d_fix_2_fu_449_bias_q0);
    grp_depthwise_conv2d_fix_2_fu_449->kernel_0_address0(grp_depthwise_conv2d_fix_2_fu_449_kernel_0_address0);
    grp_depthwise_conv2d_fix_2_fu_449->kernel_0_ce0(grp_depthwise_conv2d_fix_2_fu_449_kernel_0_ce0);
    grp_depthwise_conv2d_fix_2_fu_449->kernel_0_q0(grp_depthwise_conv2d_fix_2_fu_449_kernel_0_q0);
    grp_depthwise_conv2d_fix_1_fu_473 = new depthwise_conv2d_fix_1("grp_depthwise_conv2d_fix_1_fu_473");
    grp_depthwise_conv2d_fix_1_fu_473->ap_clk(ap_clk);
    grp_depthwise_conv2d_fix_1_fu_473->ap_rst(ap_rst_n_inv);
    grp_depthwise_conv2d_fix_1_fu_473->ap_start(grp_depthwise_conv2d_fix_1_fu_473_ap_start);
    grp_depthwise_conv2d_fix_1_fu_473->ap_done(grp_depthwise_conv2d_fix_1_fu_473_ap_done);
    grp_depthwise_conv2d_fix_1_fu_473->ap_idle(grp_depthwise_conv2d_fix_1_fu_473_ap_idle);
    grp_depthwise_conv2d_fix_1_fu_473->ap_ready(grp_depthwise_conv2d_fix_1_fu_473_ap_ready);
    grp_depthwise_conv2d_fix_1_fu_473->input_height(grp_depthwise_conv2d_fix_1_fu_473_input_height);
    grp_depthwise_conv2d_fix_1_fu_473->input_width(grp_depthwise_conv2d_fix_1_fu_473_input_width);
    grp_depthwise_conv2d_fix_1_fu_473->input_r_address0(grp_depthwise_conv2d_fix_1_fu_473_input_r_address0);
    grp_depthwise_conv2d_fix_1_fu_473->input_r_ce0(grp_depthwise_conv2d_fix_1_fu_473_input_r_ce0);
    grp_depthwise_conv2d_fix_1_fu_473->input_r_q0(MemBank_B_q0);
    grp_depthwise_conv2d_fix_1_fu_473->output_height(grp_depthwise_conv2d_fix_1_fu_473_output_height);
    grp_depthwise_conv2d_fix_1_fu_473->output_width(grp_depthwise_conv2d_fix_1_fu_473_output_width);
    grp_depthwise_conv2d_fix_1_fu_473->output_r_address0(grp_depthwise_conv2d_fix_1_fu_473_output_r_address0);
    grp_depthwise_conv2d_fix_1_fu_473->output_r_ce0(grp_depthwise_conv2d_fix_1_fu_473_output_r_ce0);
    grp_depthwise_conv2d_fix_1_fu_473->output_r_we0(grp_depthwise_conv2d_fix_1_fu_473_output_r_we0);
    grp_depthwise_conv2d_fix_1_fu_473->output_r_d0(grp_depthwise_conv2d_fix_1_fu_473_output_r_d0);
    grp_depthwise_conv2d_fix_1_fu_473->bias_address0(grp_depthwise_conv2d_fix_1_fu_473_bias_address0);
    grp_depthwise_conv2d_fix_1_fu_473->bias_ce0(grp_depthwise_conv2d_fix_1_fu_473_bias_ce0);
    grp_depthwise_conv2d_fix_1_fu_473->bias_q0(grp_depthwise_conv2d_fix_1_fu_473_bias_q0);
    grp_depthwise_conv2d_fix_1_fu_473->kernel_0_address0(grp_depthwise_conv2d_fix_1_fu_473_kernel_0_address0);
    grp_depthwise_conv2d_fix_1_fu_473->kernel_0_ce0(grp_depthwise_conv2d_fix_1_fu_473_kernel_0_ce0);
    grp_depthwise_conv2d_fix_1_fu_473->kernel_0_q0(grp_depthwise_conv2d_fix_1_fu_473_kernel_0_q0);
    grp_pointwise_conv2d_fix_1_fu_497 = new pointwise_conv2d_fix_1("grp_pointwise_conv2d_fix_1_fu_497");
    grp_pointwise_conv2d_fix_1_fu_497->ap_clk(ap_clk);
    grp_pointwise_conv2d_fix_1_fu_497->ap_rst(ap_rst_n_inv);
    grp_pointwise_conv2d_fix_1_fu_497->ap_start(grp_pointwise_conv2d_fix_1_fu_497_ap_start);
    grp_pointwise_conv2d_fix_1_fu_497->ap_done(grp_pointwise_conv2d_fix_1_fu_497_ap_done);
    grp_pointwise_conv2d_fix_1_fu_497->ap_idle(grp_pointwise_conv2d_fix_1_fu_497_ap_idle);
    grp_pointwise_conv2d_fix_1_fu_497->ap_ready(grp_pointwise_conv2d_fix_1_fu_497_ap_ready);
    grp_pointwise_conv2d_fix_1_fu_497->input_r_address0(grp_pointwise_conv2d_fix_1_fu_497_input_r_address0);
    grp_pointwise_conv2d_fix_1_fu_497->input_r_ce0(grp_pointwise_conv2d_fix_1_fu_497_input_r_ce0);
    grp_pointwise_conv2d_fix_1_fu_497->input_r_q0(MemBank_A_q0);
    grp_pointwise_conv2d_fix_1_fu_497->output_r_address0(grp_pointwise_conv2d_fix_1_fu_497_output_r_address0);
    grp_pointwise_conv2d_fix_1_fu_497->output_r_ce0(grp_pointwise_conv2d_fix_1_fu_497_output_r_ce0);
    grp_pointwise_conv2d_fix_1_fu_497->output_r_we0(grp_pointwise_conv2d_fix_1_fu_497_output_r_we0);
    grp_pointwise_conv2d_fix_1_fu_497->output_r_d0(grp_pointwise_conv2d_fix_1_fu_497_output_r_d0);
    grp_pointwise_conv2d_fix_3_fu_507 = new pointwise_conv2d_fix_3("grp_pointwise_conv2d_fix_3_fu_507");
    grp_pointwise_conv2d_fix_3_fu_507->ap_clk(ap_clk);
    grp_pointwise_conv2d_fix_3_fu_507->ap_rst(ap_rst_n_inv);
    grp_pointwise_conv2d_fix_3_fu_507->ap_start(grp_pointwise_conv2d_fix_3_fu_507_ap_start);
    grp_pointwise_conv2d_fix_3_fu_507->ap_done(grp_pointwise_conv2d_fix_3_fu_507_ap_done);
    grp_pointwise_conv2d_fix_3_fu_507->ap_idle(grp_pointwise_conv2d_fix_3_fu_507_ap_idle);
    grp_pointwise_conv2d_fix_3_fu_507->ap_ready(grp_pointwise_conv2d_fix_3_fu_507_ap_ready);
    grp_pointwise_conv2d_fix_3_fu_507->input_r_address0(grp_pointwise_conv2d_fix_3_fu_507_input_r_address0);
    grp_pointwise_conv2d_fix_3_fu_507->input_r_ce0(grp_pointwise_conv2d_fix_3_fu_507_input_r_ce0);
    grp_pointwise_conv2d_fix_3_fu_507->input_r_q0(MemBank_A_q0);
    grp_pointwise_conv2d_fix_3_fu_507->output_r_address0(grp_pointwise_conv2d_fix_3_fu_507_output_r_address0);
    grp_pointwise_conv2d_fix_3_fu_507->output_r_ce0(grp_pointwise_conv2d_fix_3_fu_507_output_r_ce0);
    grp_pointwise_conv2d_fix_3_fu_507->output_r_we0(grp_pointwise_conv2d_fix_3_fu_507_output_r_we0);
    grp_pointwise_conv2d_fix_3_fu_507->output_r_d0(grp_pointwise_conv2d_fix_3_fu_507_output_r_d0);
    grp_max_pooling2d_fix16_fu_517 = new max_pooling2d_fix16("grp_max_pooling2d_fix16_fu_517");
    grp_max_pooling2d_fix16_fu_517->ap_clk(ap_clk);
    grp_max_pooling2d_fix16_fu_517->ap_rst(ap_rst_n_inv);
    grp_max_pooling2d_fix16_fu_517->ap_start(grp_max_pooling2d_fix16_fu_517_ap_start);
    grp_max_pooling2d_fix16_fu_517->ap_done(grp_max_pooling2d_fix16_fu_517_ap_done);
    grp_max_pooling2d_fix16_fu_517->ap_idle(grp_max_pooling2d_fix16_fu_517_ap_idle);
    grp_max_pooling2d_fix16_fu_517->ap_ready(grp_max_pooling2d_fix16_fu_517_ap_ready);
    grp_max_pooling2d_fix16_fu_517->input_height(grp_max_pooling2d_fix16_fu_517_input_height);
    grp_max_pooling2d_fix16_fu_517->input_width(grp_max_pooling2d_fix16_fu_517_input_width);
    grp_max_pooling2d_fix16_fu_517->input_r_address0(grp_max_pooling2d_fix16_fu_517_input_r_address0);
    grp_max_pooling2d_fix16_fu_517->input_r_ce0(grp_max_pooling2d_fix16_fu_517_input_r_ce0);
    grp_max_pooling2d_fix16_fu_517->input_r_q0(MemBank_B_q0);
    grp_max_pooling2d_fix16_fu_517->output_depth(grp_max_pooling2d_fix16_fu_517_output_depth);
    grp_max_pooling2d_fix16_fu_517->output_height(grp_max_pooling2d_fix16_fu_517_output_height);
    grp_max_pooling2d_fix16_fu_517->output_width(grp_max_pooling2d_fix16_fu_517_output_width);
    grp_max_pooling2d_fix16_fu_517->output_r_address0(grp_max_pooling2d_fix16_fu_517_output_r_address0);
    grp_max_pooling2d_fix16_fu_517->output_r_ce0(grp_max_pooling2d_fix16_fu_517_output_r_ce0);
    grp_max_pooling2d_fix16_fu_517->output_r_we0(grp_max_pooling2d_fix16_fu_517_output_r_we0);
    grp_max_pooling2d_fix16_fu_517->output_r_d0(grp_max_pooling2d_fix16_fu_517_output_r_d0);
    grp_pointwise_conv2d_fix_2_fu_538 = new pointwise_conv2d_fix_2("grp_pointwise_conv2d_fix_2_fu_538");
    grp_pointwise_conv2d_fix_2_fu_538->ap_clk(ap_clk);
    grp_pointwise_conv2d_fix_2_fu_538->ap_rst(ap_rst_n_inv);
    grp_pointwise_conv2d_fix_2_fu_538->ap_start(grp_pointwise_conv2d_fix_2_fu_538_ap_start);
    grp_pointwise_conv2d_fix_2_fu_538->ap_done(grp_pointwise_conv2d_fix_2_fu_538_ap_done);
    grp_pointwise_conv2d_fix_2_fu_538->ap_idle(grp_pointwise_conv2d_fix_2_fu_538_ap_idle);
    grp_pointwise_conv2d_fix_2_fu_538->ap_ready(grp_pointwise_conv2d_fix_2_fu_538_ap_ready);
    grp_pointwise_conv2d_fix_2_fu_538->input_r_address0(grp_pointwise_conv2d_fix_2_fu_538_input_r_address0);
    grp_pointwise_conv2d_fix_2_fu_538->input_r_ce0(grp_pointwise_conv2d_fix_2_fu_538_input_r_ce0);
    grp_pointwise_conv2d_fix_2_fu_538->input_r_q0(MemBank_A_q0);
    grp_pointwise_conv2d_fix_2_fu_538->output_r_address0(grp_pointwise_conv2d_fix_2_fu_538_output_r_address0);
    grp_pointwise_conv2d_fix_2_fu_538->output_r_ce0(grp_pointwise_conv2d_fix_2_fu_538_output_r_ce0);
    grp_pointwise_conv2d_fix_2_fu_538->output_r_we0(grp_pointwise_conv2d_fix_2_fu_538_output_r_we0);
    grp_pointwise_conv2d_fix_2_fu_538->output_r_d0(grp_pointwise_conv2d_fix_2_fu_538_output_r_d0);
    grp_depthwise_conv2d_fix_fu_548 = new depthwise_conv2d_fix("grp_depthwise_conv2d_fix_fu_548");
    grp_depthwise_conv2d_fix_fu_548->ap_clk(ap_clk);
    grp_depthwise_conv2d_fix_fu_548->ap_rst(ap_rst_n_inv);
    grp_depthwise_conv2d_fix_fu_548->ap_start(grp_depthwise_conv2d_fix_fu_548_ap_start);
    grp_depthwise_conv2d_fix_fu_548->ap_done(grp_depthwise_conv2d_fix_fu_548_ap_done);
    grp_depthwise_conv2d_fix_fu_548->ap_idle(grp_depthwise_conv2d_fix_fu_548_ap_idle);
    grp_depthwise_conv2d_fix_fu_548->ap_ready(grp_depthwise_conv2d_fix_fu_548_ap_ready);
    grp_depthwise_conv2d_fix_fu_548->input_r_address0(grp_depthwise_conv2d_fix_fu_548_input_r_address0);
    grp_depthwise_conv2d_fix_fu_548->input_r_ce0(grp_depthwise_conv2d_fix_fu_548_input_r_ce0);
    grp_depthwise_conv2d_fix_fu_548->input_r_q0(MemBank_B_q0);
    grp_depthwise_conv2d_fix_fu_548->output_r_address0(grp_depthwise_conv2d_fix_fu_548_output_r_address0);
    grp_depthwise_conv2d_fix_fu_548->output_r_ce0(grp_depthwise_conv2d_fix_fu_548_output_r_ce0);
    grp_depthwise_conv2d_fix_fu_548->output_r_we0(grp_depthwise_conv2d_fix_fu_548_output_r_we0);
    grp_depthwise_conv2d_fix_fu_548->output_r_d0(grp_depthwise_conv2d_fix_fu_548_output_r_d0);
    grp_pointwise_conv2d_fix_4_fu_556 = new pointwise_conv2d_fix_4("grp_pointwise_conv2d_fix_4_fu_556");
    grp_pointwise_conv2d_fix_4_fu_556->ap_clk(ap_clk);
    grp_pointwise_conv2d_fix_4_fu_556->ap_rst(ap_rst_n_inv);
    grp_pointwise_conv2d_fix_4_fu_556->ap_start(grp_pointwise_conv2d_fix_4_fu_556_ap_start);
    grp_pointwise_conv2d_fix_4_fu_556->ap_done(grp_pointwise_conv2d_fix_4_fu_556_ap_done);
    grp_pointwise_conv2d_fix_4_fu_556->ap_idle(grp_pointwise_conv2d_fix_4_fu_556_ap_idle);
    grp_pointwise_conv2d_fix_4_fu_556->ap_ready(grp_pointwise_conv2d_fix_4_fu_556_ap_ready);
    grp_pointwise_conv2d_fix_4_fu_556->input_r_address0(grp_pointwise_conv2d_fix_4_fu_556_input_r_address0);
    grp_pointwise_conv2d_fix_4_fu_556->input_r_ce0(grp_pointwise_conv2d_fix_4_fu_556_input_r_ce0);
    grp_pointwise_conv2d_fix_4_fu_556->input_r_q0(MemBank_A_q0);
    grp_pointwise_conv2d_fix_4_fu_556->output_r_address0(grp_pointwise_conv2d_fix_4_fu_556_output_r_address0);
    grp_pointwise_conv2d_fix_4_fu_556->output_r_ce0(grp_pointwise_conv2d_fix_4_fu_556_output_r_ce0);
    grp_pointwise_conv2d_fix_4_fu_556->output_r_we0(grp_pointwise_conv2d_fix_4_fu_556_output_r_we0);
    grp_pointwise_conv2d_fix_4_fu_556->output_r_d0(grp_pointwise_conv2d_fix_4_fu_556_output_r_d0);
    grp_up_sampling2d_fix16_fu_564 = new up_sampling2d_fix16("grp_up_sampling2d_fix16_fu_564");
    grp_up_sampling2d_fix16_fu_564->ap_clk(ap_clk);
    grp_up_sampling2d_fix16_fu_564->ap_rst(ap_rst_n_inv);
    grp_up_sampling2d_fix16_fu_564->ap_start(grp_up_sampling2d_fix16_fu_564_ap_start);
    grp_up_sampling2d_fix16_fu_564->ap_done(grp_up_sampling2d_fix16_fu_564_ap_done);
    grp_up_sampling2d_fix16_fu_564->ap_idle(grp_up_sampling2d_fix16_fu_564_ap_idle);
    grp_up_sampling2d_fix16_fu_564->ap_ready(grp_up_sampling2d_fix16_fu_564_ap_ready);
    grp_up_sampling2d_fix16_fu_564->input_height(grp_up_sampling2d_fix16_fu_564_input_height);
    grp_up_sampling2d_fix16_fu_564->input_width(grp_up_sampling2d_fix16_fu_564_input_width);
    grp_up_sampling2d_fix16_fu_564->input_r_address0(grp_up_sampling2d_fix16_fu_564_input_r_address0);
    grp_up_sampling2d_fix16_fu_564->input_r_ce0(grp_up_sampling2d_fix16_fu_564_input_r_ce0);
    grp_up_sampling2d_fix16_fu_564->input_r_q0(MemBank_B_q0);
    grp_up_sampling2d_fix16_fu_564->output_depth(grp_up_sampling2d_fix16_fu_564_output_depth);
    grp_up_sampling2d_fix16_fu_564->output_height(grp_up_sampling2d_fix16_fu_564_output_height);
    grp_up_sampling2d_fix16_fu_564->output_width(grp_up_sampling2d_fix16_fu_564_output_width);
    grp_up_sampling2d_fix16_fu_564->output_r_address0(grp_up_sampling2d_fix16_fu_564_output_r_address0);
    grp_up_sampling2d_fix16_fu_564->output_r_ce0(grp_up_sampling2d_fix16_fu_564_output_r_ce0);
    grp_up_sampling2d_fix16_fu_564->output_r_we0(grp_up_sampling2d_fix16_fu_564_output_r_we0);
    grp_up_sampling2d_fix16_fu_564->output_r_d0(grp_up_sampling2d_fix16_fu_564_output_r_d0);
    grp_pointwise_conv2d_fix_fu_585 = new pointwise_conv2d_fix("grp_pointwise_conv2d_fix_fu_585");
    grp_pointwise_conv2d_fix_fu_585->ap_clk(ap_clk);
    grp_pointwise_conv2d_fix_fu_585->ap_rst(ap_rst_n_inv);
    grp_pointwise_conv2d_fix_fu_585->ap_start(grp_pointwise_conv2d_fix_fu_585_ap_start);
    grp_pointwise_conv2d_fix_fu_585->ap_done(grp_pointwise_conv2d_fix_fu_585_ap_done);
    grp_pointwise_conv2d_fix_fu_585->ap_idle(grp_pointwise_conv2d_fix_fu_585_ap_idle);
    grp_pointwise_conv2d_fix_fu_585->ap_ready(grp_pointwise_conv2d_fix_fu_585_ap_ready);
    grp_pointwise_conv2d_fix_fu_585->input_r_address0(grp_pointwise_conv2d_fix_fu_585_input_r_address0);
    grp_pointwise_conv2d_fix_fu_585->input_r_ce0(grp_pointwise_conv2d_fix_fu_585_input_r_ce0);
    grp_pointwise_conv2d_fix_fu_585->input_r_q0(MemBank_A_q0);
    grp_pointwise_conv2d_fix_fu_585->output_r_address0(grp_pointwise_conv2d_fix_fu_585_output_r_address0);
    grp_pointwise_conv2d_fix_fu_585->output_r_ce0(grp_pointwise_conv2d_fix_fu_585_output_r_ce0);
    grp_pointwise_conv2d_fix_fu_585->output_r_we0(grp_pointwise_conv2d_fix_fu_585_output_r_we0);
    grp_pointwise_conv2d_fix_fu_585->output_r_d0(grp_pointwise_conv2d_fix_fu_585_output_r_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_MemBank_A_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_padding2d_fix16_fu_431_input_r_address0 );
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_output_r_address0 );
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_output_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_1_fu_497_input_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_3_fu_507_input_r_address0 );
    sensitive << ( grp_max_pooling2d_fix16_fu_517_output_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_2_fu_538_input_r_address0 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_548_output_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_4_fu_556_input_r_address0 );
    sensitive << ( grp_up_sampling2d_fix16_fu_564_output_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_585_input_r_address0 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sext_ln62_fu_595_p1 );

    SC_METHOD(thread_MemBank_A_ce0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_padding2d_fix16_fu_431_input_r_ce0 );
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_output_r_ce0 );
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_output_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_1_fu_497_input_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_3_fu_507_input_r_ce0 );
    sensitive << ( grp_max_pooling2d_fix16_fu_517_output_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_2_fu_538_input_r_ce0 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_548_output_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_4_fu_556_input_r_ce0 );
    sensitive << ( grp_up_sampling2d_fix16_fu_564_output_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_585_input_r_ce0 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_MemBank_A_d0);
    sensitive << ( input_data_data_V_0_data_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_output_r_d0 );
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_output_r_d0 );
    sensitive << ( grp_max_pooling2d_fix16_fu_517_output_r_d0 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_548_output_r_d0 );
    sensitive << ( grp_up_sampling2d_fix16_fu_564_output_r_d0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_MemBank_A_we0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_output_r_we0 );
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_output_r_we0 );
    sensitive << ( grp_max_pooling2d_fix16_fu_517_output_r_we0 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_548_output_r_we0 );
    sensitive << ( grp_up_sampling2d_fix16_fu_564_output_r_we0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_MemBank_B_address0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( zext_ln162_fu_659_p1 );
    sensitive << ( grp_padding2d_fix16_fu_431_output_r_address0 );
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_input_r_address0 );
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_input_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_1_fu_497_output_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_3_fu_507_output_r_address0 );
    sensitive << ( grp_max_pooling2d_fix16_fu_517_input_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_2_fu_538_output_r_address0 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_548_input_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_4_fu_556_output_r_address0 );
    sensitive << ( grp_up_sampling2d_fix16_fu_564_input_r_address0 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_585_output_r_address0 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_MemBank_B_ce0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( grp_padding2d_fix16_fu_431_output_r_ce0 );
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_input_r_ce0 );
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_input_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_1_fu_497_output_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_3_fu_507_output_r_ce0 );
    sensitive << ( grp_max_pooling2d_fix16_fu_517_input_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_2_fu_538_output_r_ce0 );
    sensitive << ( grp_depthwise_conv2d_fix_fu_548_input_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_4_fu_556_output_r_ce0 );
    sensitive << ( grp_up_sampling2d_fix16_fu_564_input_r_ce0 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_585_output_r_ce0 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_MemBank_B_d0);
    sensitive << ( grp_padding2d_fix16_fu_431_output_r_d0 );
    sensitive << ( grp_pointwise_conv2d_fix_1_fu_497_output_r_d0 );
    sensitive << ( grp_pointwise_conv2d_fix_3_fu_507_output_r_d0 );
    sensitive << ( grp_pointwise_conv2d_fix_2_fu_538_output_r_d0 );
    sensitive << ( grp_pointwise_conv2d_fix_4_fu_556_output_r_d0 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_585_output_r_d0 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_MemBank_B_we0);
    sensitive << ( grp_padding2d_fix16_fu_431_output_r_we0 );
    sensitive << ( grp_pointwise_conv2d_fix_1_fu_497_output_r_we0 );
    sensitive << ( grp_pointwise_conv2d_fix_3_fu_507_output_r_we0 );
    sensitive << ( grp_pointwise_conv2d_fix_2_fu_538_output_r_we0 );
    sensitive << ( grp_pointwise_conv2d_fix_4_fu_556_output_r_we0 );
    sensitive << ( grp_pointwise_conv2d_fix_fu_585_output_r_we0 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_MemBank_Out_address0);
    sensitive << ( zext_ln162_reg_703 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( zext_ln167_fu_676_p1 );

    SC_METHOD(thread_MemBank_Out_ce0);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_MemBank_Out_we0);
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_SeparableConv2D_1_b_1_ce0);
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_bias_ce0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_SeparableConv2D_1_w_1_ce0);
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_kernel_0_ce0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_SeparableConv2D_2_b_1_ce0);
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_bias_ce0 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_SeparableConv2D_2_w_1_ce0);
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_kernel_0_ce0 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_SeparableConv2D_3_b_1_ce0);
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_bias_ce0 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_SeparableConv2D_3_w_1_ce0);
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_kernel_0_ce0 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_SeparableConv2D_4_b_s_ce0);
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_bias_ce0 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_SeparableConv2D_4_w_1_ce0);
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_kernel_0_ce0 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state46);
    sensitive << ( output_data_TREADY );
    sensitive << ( output_data_data_V_1_state );
    sensitive << ( output_data_keep_V_1_state );
    sensitive << ( output_data_strb_V_1_state );
    sensitive << ( output_data_user_V_1_state );
    sensitive << ( output_data_last_V_1_state );
    sensitive << ( output_data_id_V_1_state );
    sensitive << ( output_data_dest_V_1_state );

    SC_METHOD(thread_ap_done);
    sensitive << ( output_data_TREADY );
    sensitive << ( output_data_data_V_1_state );
    sensitive << ( output_data_keep_V_1_state );
    sensitive << ( output_data_strb_V_1_state );
    sensitive << ( output_data_user_V_1_state );
    sensitive << ( output_data_last_V_1_state );
    sensitive << ( output_data_id_V_1_state );
    sensitive << ( output_data_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( output_data_TREADY );
    sensitive << ( output_data_data_V_1_state );
    sensitive << ( output_data_keep_V_1_state );
    sensitive << ( output_data_strb_V_1_state );
    sensitive << ( output_data_user_V_1_state );
    sensitive << ( output_data_last_V_1_state );
    sensitive << ( output_data_id_V_1_state );
    sensitive << ( output_data_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( icmp_ln165_fu_664_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_1_fu_473_ap_start);
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_ap_start_reg );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_1_fu_473_bias_q0);
    sensitive << ( SeparableConv2D_2_b_1_q0 );
    sensitive << ( SeparableConv2D_3_b_1_q0 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_1_fu_473_input_height);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_1_fu_473_input_width);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_1_fu_473_kernel_0_q0);
    sensitive << ( SeparableConv2D_2_w_1_q0 );
    sensitive << ( SeparableConv2D_3_w_1_q0 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_1_fu_473_output_height);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_1_fu_473_output_width);
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_2_fu_449_ap_start);
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_ap_start_reg );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_2_fu_449_bias_q0);
    sensitive << ( SeparableConv2D_1_b_1_q0 );
    sensitive << ( SeparableConv2D_4_b_s_q0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_2_fu_449_input_height);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_2_fu_449_input_width);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_2_fu_449_kernel_0_q0);
    sensitive << ( SeparableConv2D_1_w_1_q0 );
    sensitive << ( SeparableConv2D_4_w_1_q0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_2_fu_449_output_height);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_2_fu_449_output_width);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_depthwise_conv2d_fix_fu_548_ap_start);
    sensitive << ( grp_depthwise_conv2d_fix_fu_548_ap_start_reg );

    SC_METHOD(thread_grp_max_pooling2d_fix16_fu_517_ap_start);
    sensitive << ( grp_max_pooling2d_fix16_fu_517_ap_start_reg );

    SC_METHOD(thread_grp_max_pooling2d_fix16_fu_517_input_height);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_max_pooling2d_fix16_fu_517_input_width);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_max_pooling2d_fix16_fu_517_output_depth);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_max_pooling2d_fix16_fu_517_output_height);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_max_pooling2d_fix16_fu_517_output_width);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_padding2d_fix16_fu_431_ap_start);
    sensitive << ( grp_padding2d_fix16_fu_431_ap_start_reg );

    SC_METHOD(thread_grp_padding2d_fix16_fu_431_input_depth);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_padding2d_fix16_fu_431_input_height);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_padding2d_fix16_fu_431_input_width);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_pointwise_conv2d_fix_1_fu_497_ap_start);
    sensitive << ( grp_pointwise_conv2d_fix_1_fu_497_ap_start_reg );

    SC_METHOD(thread_grp_pointwise_conv2d_fix_2_fu_538_ap_start);
    sensitive << ( grp_pointwise_conv2d_fix_2_fu_538_ap_start_reg );

    SC_METHOD(thread_grp_pointwise_conv2d_fix_3_fu_507_ap_start);
    sensitive << ( grp_pointwise_conv2d_fix_3_fu_507_ap_start_reg );

    SC_METHOD(thread_grp_pointwise_conv2d_fix_4_fu_556_ap_start);
    sensitive << ( grp_pointwise_conv2d_fix_4_fu_556_ap_start_reg );

    SC_METHOD(thread_grp_pointwise_conv2d_fix_fu_585_ap_start);
    sensitive << ( grp_pointwise_conv2d_fix_fu_585_ap_start_reg );

    SC_METHOD(thread_grp_up_sampling2d_fix16_fu_564_ap_start);
    sensitive << ( grp_up_sampling2d_fix16_fu_564_ap_start_reg );

    SC_METHOD(thread_grp_up_sampling2d_fix16_fu_564_input_height);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_grp_up_sampling2d_fix16_fu_564_input_width);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_grp_up_sampling2d_fix16_fu_564_output_depth);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_grp_up_sampling2d_fix16_fu_564_output_height);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_grp_up_sampling2d_fix16_fu_564_output_width);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_i_3_fu_653_p2);
    sensitive << ( i_1_reg_409 );

    SC_METHOD(thread_i_4_fu_670_p2);
    sensitive << ( i_2_reg_420 );

    SC_METHOD(thread_i_fu_641_p2);
    sensitive << ( i_0_reg_398 );

    SC_METHOD(thread_icmp_ln160_fu_647_p2);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( i_1_reg_409 );

    SC_METHOD(thread_icmp_ln165_fu_664_p2);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( i_2_reg_420 );

    SC_METHOD(thread_input_data_TDATA_blk_n);
    sensitive << ( input_data_data_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_data_TREADY);
    sensitive << ( input_data_dest_V_0_state );

    SC_METHOD(thread_input_data_data_V_0_ack_in);
    sensitive << ( input_data_data_V_0_state );

    SC_METHOD(thread_input_data_data_V_0_ack_out);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_data_data_V_0_data_out);
    sensitive << ( input_data_data_V_0_payload_A );
    sensitive << ( input_data_data_V_0_payload_B );
    sensitive << ( input_data_data_V_0_sel );

    SC_METHOD(thread_input_data_data_V_0_load_A);
    sensitive << ( input_data_data_V_0_sel_wr );
    sensitive << ( input_data_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_data_V_0_load_B);
    sensitive << ( input_data_data_V_0_sel_wr );
    sensitive << ( input_data_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_data_V_0_sel);
    sensitive << ( input_data_data_V_0_sel_rd );

    SC_METHOD(thread_input_data_data_V_0_state_cmp_full);
    sensitive << ( input_data_data_V_0_state );

    SC_METHOD(thread_input_data_data_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_input_data_data_V_0_vld_out);
    sensitive << ( input_data_data_V_0_state );

    SC_METHOD(thread_input_data_dest_V_0_ack_in);
    sensitive << ( input_data_dest_V_0_state );

    SC_METHOD(thread_input_data_dest_V_0_ack_out);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_data_dest_V_0_data_out);
    sensitive << ( input_data_dest_V_0_payload_A );
    sensitive << ( input_data_dest_V_0_payload_B );
    sensitive << ( input_data_dest_V_0_sel );

    SC_METHOD(thread_input_data_dest_V_0_load_A);
    sensitive << ( input_data_dest_V_0_sel_wr );
    sensitive << ( input_data_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_dest_V_0_load_B);
    sensitive << ( input_data_dest_V_0_sel_wr );
    sensitive << ( input_data_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_dest_V_0_sel);
    sensitive << ( input_data_dest_V_0_sel_rd );

    SC_METHOD(thread_input_data_dest_V_0_state_cmp_full);
    sensitive << ( input_data_dest_V_0_state );

    SC_METHOD(thread_input_data_dest_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_input_data_dest_V_0_vld_out);
    sensitive << ( input_data_dest_V_0_state );

    SC_METHOD(thread_input_data_id_V_0_ack_in);
    sensitive << ( input_data_id_V_0_state );

    SC_METHOD(thread_input_data_id_V_0_ack_out);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_data_id_V_0_data_out);
    sensitive << ( input_data_id_V_0_payload_A );
    sensitive << ( input_data_id_V_0_payload_B );
    sensitive << ( input_data_id_V_0_sel );

    SC_METHOD(thread_input_data_id_V_0_load_A);
    sensitive << ( input_data_id_V_0_sel_wr );
    sensitive << ( input_data_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_id_V_0_load_B);
    sensitive << ( input_data_id_V_0_sel_wr );
    sensitive << ( input_data_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_id_V_0_sel);
    sensitive << ( input_data_id_V_0_sel_rd );

    SC_METHOD(thread_input_data_id_V_0_state_cmp_full);
    sensitive << ( input_data_id_V_0_state );

    SC_METHOD(thread_input_data_id_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_input_data_id_V_0_vld_out);
    sensitive << ( input_data_id_V_0_state );

    SC_METHOD(thread_input_data_keep_V_0_ack_in);
    sensitive << ( input_data_keep_V_0_state );

    SC_METHOD(thread_input_data_keep_V_0_ack_out);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_data_keep_V_0_data_out);
    sensitive << ( input_data_keep_V_0_payload_A );
    sensitive << ( input_data_keep_V_0_payload_B );
    sensitive << ( input_data_keep_V_0_sel );

    SC_METHOD(thread_input_data_keep_V_0_load_A);
    sensitive << ( input_data_keep_V_0_sel_wr );
    sensitive << ( input_data_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_keep_V_0_load_B);
    sensitive << ( input_data_keep_V_0_sel_wr );
    sensitive << ( input_data_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_keep_V_0_sel);
    sensitive << ( input_data_keep_V_0_sel_rd );

    SC_METHOD(thread_input_data_keep_V_0_state_cmp_full);
    sensitive << ( input_data_keep_V_0_state );

    SC_METHOD(thread_input_data_keep_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_input_data_keep_V_0_vld_out);
    sensitive << ( input_data_keep_V_0_state );

    SC_METHOD(thread_input_data_last_V_0_ack_in);
    sensitive << ( input_data_last_V_0_state );

    SC_METHOD(thread_input_data_last_V_0_ack_out);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_data_last_V_0_data_out);
    sensitive << ( input_data_last_V_0_payload_A );
    sensitive << ( input_data_last_V_0_payload_B );
    sensitive << ( input_data_last_V_0_sel );

    SC_METHOD(thread_input_data_last_V_0_load_A);
    sensitive << ( input_data_last_V_0_sel_wr );
    sensitive << ( input_data_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_last_V_0_load_B);
    sensitive << ( input_data_last_V_0_sel_wr );
    sensitive << ( input_data_last_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_last_V_0_sel);
    sensitive << ( input_data_last_V_0_sel_rd );

    SC_METHOD(thread_input_data_last_V_0_state_cmp_full);
    sensitive << ( input_data_last_V_0_state );

    SC_METHOD(thread_input_data_last_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_input_data_last_V_0_vld_out);
    sensitive << ( input_data_last_V_0_state );

    SC_METHOD(thread_input_data_last_V_tm_fu_626_p1);
    sensitive << ( input_data_last_V_0_data_out );

    SC_METHOD(thread_input_data_strb_V_0_ack_in);
    sensitive << ( input_data_strb_V_0_state );

    SC_METHOD(thread_input_data_strb_V_0_ack_out);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_data_strb_V_0_data_out);
    sensitive << ( input_data_strb_V_0_payload_A );
    sensitive << ( input_data_strb_V_0_payload_B );
    sensitive << ( input_data_strb_V_0_sel );

    SC_METHOD(thread_input_data_strb_V_0_load_A);
    sensitive << ( input_data_strb_V_0_sel_wr );
    sensitive << ( input_data_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_strb_V_0_load_B);
    sensitive << ( input_data_strb_V_0_sel_wr );
    sensitive << ( input_data_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_strb_V_0_sel);
    sensitive << ( input_data_strb_V_0_sel_rd );

    SC_METHOD(thread_input_data_strb_V_0_state_cmp_full);
    sensitive << ( input_data_strb_V_0_state );

    SC_METHOD(thread_input_data_strb_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_input_data_strb_V_0_vld_out);
    sensitive << ( input_data_strb_V_0_state );

    SC_METHOD(thread_input_data_user_V_0_ack_in);
    sensitive << ( input_data_user_V_0_state );

    SC_METHOD(thread_input_data_user_V_0_ack_out);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_data_user_V_0_data_out);
    sensitive << ( input_data_user_V_0_payload_A );
    sensitive << ( input_data_user_V_0_payload_B );
    sensitive << ( input_data_user_V_0_sel );

    SC_METHOD(thread_input_data_user_V_0_load_A);
    sensitive << ( input_data_user_V_0_sel_wr );
    sensitive << ( input_data_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_user_V_0_load_B);
    sensitive << ( input_data_user_V_0_sel_wr );
    sensitive << ( input_data_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_data_user_V_0_sel);
    sensitive << ( input_data_user_V_0_sel_rd );

    SC_METHOD(thread_input_data_user_V_0_state_cmp_full);
    sensitive << ( input_data_user_V_0_state );

    SC_METHOD(thread_input_data_user_V_0_vld_in);
    sensitive << ( input_data_TVALID );

    SC_METHOD(thread_input_data_user_V_0_vld_out);
    sensitive << ( input_data_user_V_0_state );

    SC_METHOD(thread_output_data_TDATA);
    sensitive << ( output_data_data_V_1_data_out );

    SC_METHOD(thread_output_data_TDATA_blk_n);
    sensitive << ( output_data_data_V_1_state );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_output_data_TDEST);
    sensitive << ( output_data_dest_V_1_data_out );

    SC_METHOD(thread_output_data_TID);
    sensitive << ( output_data_id_V_1_data_out );

    SC_METHOD(thread_output_data_TKEEP);
    sensitive << ( output_data_keep_V_1_data_out );

    SC_METHOD(thread_output_data_TLAST);
    sensitive << ( output_data_last_V_1_data_out );

    SC_METHOD(thread_output_data_TSTRB);
    sensitive << ( output_data_strb_V_1_data_out );

    SC_METHOD(thread_output_data_TUSER);
    sensitive << ( output_data_user_V_1_data_out );

    SC_METHOD(thread_output_data_TVALID);
    sensitive << ( output_data_dest_V_1_state );

    SC_METHOD(thread_output_data_data_V_1_ack_in);
    sensitive << ( output_data_data_V_1_state );

    SC_METHOD(thread_output_data_data_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_data_V_1_data_out);
    sensitive << ( output_data_data_V_1_payload_A );
    sensitive << ( output_data_data_V_1_payload_B );
    sensitive << ( output_data_data_V_1_sel );

    SC_METHOD(thread_output_data_data_V_1_load_A);
    sensitive << ( output_data_data_V_1_sel_wr );
    sensitive << ( output_data_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_data_V_1_load_B);
    sensitive << ( output_data_data_V_1_sel_wr );
    sensitive << ( output_data_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_data_V_1_sel);
    sensitive << ( output_data_data_V_1_sel_rd );

    SC_METHOD(thread_output_data_data_V_1_state_cmp_full);
    sensitive << ( output_data_data_V_1_state );

    SC_METHOD(thread_output_data_data_V_1_vld_in);
    sensitive << ( output_data_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output_data_data_V_1_vld_out);
    sensitive << ( output_data_data_V_1_state );

    SC_METHOD(thread_output_data_dest_V_1_ack_in);
    sensitive << ( output_data_dest_V_1_state );

    SC_METHOD(thread_output_data_dest_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_dest_V_1_data_out);
    sensitive << ( output_data_dest_V_1_payload_A );
    sensitive << ( output_data_dest_V_1_payload_B );
    sensitive << ( output_data_dest_V_1_sel );

    SC_METHOD(thread_output_data_dest_V_1_load_A);
    sensitive << ( output_data_dest_V_1_sel_wr );
    sensitive << ( output_data_dest_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_dest_V_1_load_B);
    sensitive << ( output_data_dest_V_1_sel_wr );
    sensitive << ( output_data_dest_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_dest_V_1_sel);
    sensitive << ( output_data_dest_V_1_sel_rd );

    SC_METHOD(thread_output_data_dest_V_1_state_cmp_full);
    sensitive << ( output_data_dest_V_1_state );

    SC_METHOD(thread_output_data_dest_V_1_vld_in);
    sensitive << ( output_data_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output_data_dest_V_1_vld_out);
    sensitive << ( output_data_dest_V_1_state );

    SC_METHOD(thread_output_data_id_V_1_ack_in);
    sensitive << ( output_data_id_V_1_state );

    SC_METHOD(thread_output_data_id_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_id_V_1_data_out);
    sensitive << ( output_data_id_V_1_payload_A );
    sensitive << ( output_data_id_V_1_payload_B );
    sensitive << ( output_data_id_V_1_sel );

    SC_METHOD(thread_output_data_id_V_1_load_A);
    sensitive << ( output_data_id_V_1_sel_wr );
    sensitive << ( output_data_id_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_id_V_1_load_B);
    sensitive << ( output_data_id_V_1_sel_wr );
    sensitive << ( output_data_id_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_id_V_1_sel);
    sensitive << ( output_data_id_V_1_sel_rd );

    SC_METHOD(thread_output_data_id_V_1_state_cmp_full);
    sensitive << ( output_data_id_V_1_state );

    SC_METHOD(thread_output_data_id_V_1_vld_in);
    sensitive << ( output_data_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output_data_id_V_1_vld_out);
    sensitive << ( output_data_id_V_1_state );

    SC_METHOD(thread_output_data_keep_V_1_ack_in);
    sensitive << ( output_data_keep_V_1_state );

    SC_METHOD(thread_output_data_keep_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_keep_V_1_data_out);
    sensitive << ( output_data_keep_V_1_payload_A );
    sensitive << ( output_data_keep_V_1_payload_B );
    sensitive << ( output_data_keep_V_1_sel );

    SC_METHOD(thread_output_data_keep_V_1_load_A);
    sensitive << ( output_data_keep_V_1_sel_wr );
    sensitive << ( output_data_keep_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_keep_V_1_load_B);
    sensitive << ( output_data_keep_V_1_sel_wr );
    sensitive << ( output_data_keep_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_keep_V_1_sel);
    sensitive << ( output_data_keep_V_1_sel_rd );

    SC_METHOD(thread_output_data_keep_V_1_state_cmp_full);
    sensitive << ( output_data_keep_V_1_state );

    SC_METHOD(thread_output_data_keep_V_1_vld_in);
    sensitive << ( output_data_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output_data_keep_V_1_vld_out);
    sensitive << ( output_data_keep_V_1_state );

    SC_METHOD(thread_output_data_last_V_1_ack_in);
    sensitive << ( output_data_last_V_1_state );

    SC_METHOD(thread_output_data_last_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_last_V_1_data_out);
    sensitive << ( output_data_last_V_1_payload_A );
    sensitive << ( output_data_last_V_1_payload_B );
    sensitive << ( output_data_last_V_1_sel );

    SC_METHOD(thread_output_data_last_V_1_load_A);
    sensitive << ( output_data_last_V_1_sel_wr );
    sensitive << ( output_data_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_last_V_1_load_B);
    sensitive << ( output_data_last_V_1_sel_wr );
    sensitive << ( output_data_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_last_V_1_sel);
    sensitive << ( output_data_last_V_1_sel_rd );

    SC_METHOD(thread_output_data_last_V_1_state_cmp_full);
    sensitive << ( output_data_last_V_1_state );

    SC_METHOD(thread_output_data_last_V_1_vld_in);
    sensitive << ( output_data_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output_data_last_V_1_vld_out);
    sensitive << ( output_data_last_V_1_state );

    SC_METHOD(thread_output_data_strb_V_1_ack_in);
    sensitive << ( output_data_strb_V_1_state );

    SC_METHOD(thread_output_data_strb_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_strb_V_1_data_out);
    sensitive << ( output_data_strb_V_1_payload_A );
    sensitive << ( output_data_strb_V_1_payload_B );
    sensitive << ( output_data_strb_V_1_sel );

    SC_METHOD(thread_output_data_strb_V_1_load_A);
    sensitive << ( output_data_strb_V_1_sel_wr );
    sensitive << ( output_data_strb_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_strb_V_1_load_B);
    sensitive << ( output_data_strb_V_1_sel_wr );
    sensitive << ( output_data_strb_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_strb_V_1_sel);
    sensitive << ( output_data_strb_V_1_sel_rd );

    SC_METHOD(thread_output_data_strb_V_1_state_cmp_full);
    sensitive << ( output_data_strb_V_1_state );

    SC_METHOD(thread_output_data_strb_V_1_vld_in);
    sensitive << ( output_data_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output_data_strb_V_1_vld_out);
    sensitive << ( output_data_strb_V_1_state );

    SC_METHOD(thread_output_data_user_V_1_ack_in);
    sensitive << ( output_data_user_V_1_state );

    SC_METHOD(thread_output_data_user_V_1_ack_out);
    sensitive << ( output_data_TREADY );

    SC_METHOD(thread_output_data_user_V_1_data_out);
    sensitive << ( output_data_user_V_1_payload_A );
    sensitive << ( output_data_user_V_1_payload_B );
    sensitive << ( output_data_user_V_1_sel );

    SC_METHOD(thread_output_data_user_V_1_load_A);
    sensitive << ( output_data_user_V_1_sel_wr );
    sensitive << ( output_data_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_user_V_1_load_B);
    sensitive << ( output_data_user_V_1_sel_wr );
    sensitive << ( output_data_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_data_user_V_1_sel);
    sensitive << ( output_data_user_V_1_sel_rd );

    SC_METHOD(thread_output_data_user_V_1_state_cmp_full);
    sensitive << ( output_data_user_V_1_state );

    SC_METHOD(thread_output_data_user_V_1_vld_in);
    sensitive << ( output_data_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output_data_user_V_1_vld_out);
    sensitive << ( output_data_user_V_1_state );

    SC_METHOD(thread_sext_ln62_fu_595_p1);
    sensitive << ( i_0_reg_398 );

    SC_METHOD(thread_sig_buffer_dest_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( sext_ln62_fu_595_p1 );
    sensitive << ( zext_ln167_fu_676_p1 );

    SC_METHOD(thread_sig_buffer_dest_V_ce0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sig_buffer_dest_V_we0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sig_buffer_id_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( sext_ln62_fu_595_p1 );
    sensitive << ( zext_ln167_fu_676_p1 );

    SC_METHOD(thread_sig_buffer_id_V_ce0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sig_buffer_id_V_we0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sig_buffer_keep_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( sext_ln62_fu_595_p1 );
    sensitive << ( zext_ln167_fu_676_p1 );

    SC_METHOD(thread_sig_buffer_keep_V_ce0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sig_buffer_keep_V_we0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sig_buffer_last_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( sext_ln62_fu_595_p1 );
    sensitive << ( zext_ln167_fu_676_p1 );

    SC_METHOD(thread_sig_buffer_last_V_ce0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sig_buffer_last_V_we0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sig_buffer_strb_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( sext_ln62_fu_595_p1 );
    sensitive << ( zext_ln167_fu_676_p1 );

    SC_METHOD(thread_sig_buffer_strb_V_ce0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sig_buffer_strb_V_we0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sig_buffer_user_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( sext_ln62_fu_595_p1 );
    sensitive << ( zext_ln167_fu_676_p1 );

    SC_METHOD(thread_sig_buffer_user_V_ce0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_sig_buffer_user_V_we0);
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_zext_ln162_fu_659_p1);
    sensitive << ( i_1_reg_409 );

    SC_METHOD(thread_zext_ln167_fu_676_p1);
    sensitive << ( i_2_reg_420 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_data_data_V_0_vld_out );
    sensitive << ( output_data_TREADY );
    sensitive << ( output_data_data_V_1_ack_in );
    sensitive << ( output_data_data_V_1_state );
    sensitive << ( output_data_keep_V_1_state );
    sensitive << ( output_data_strb_V_1_state );
    sensitive << ( output_data_user_V_1_state );
    sensitive << ( output_data_last_V_1_state );
    sensitive << ( output_data_id_V_1_state );
    sensitive << ( output_data_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( icmp_ln160_fu_647_p2 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( icmp_ln165_fu_664_p2 );
    sensitive << ( grp_padding2d_fix16_fu_431_ap_done );
    sensitive << ( grp_depthwise_conv2d_fix_2_fu_449_ap_done );
    sensitive << ( grp_depthwise_conv2d_fix_1_fu_473_ap_done );
    sensitive << ( grp_pointwise_conv2d_fix_1_fu_497_ap_done );
    sensitive << ( grp_pointwise_conv2d_fix_3_fu_507_ap_done );
    sensitive << ( grp_max_pooling2d_fix16_fu_517_ap_done );
    sensitive << ( grp_pointwise_conv2d_fix_2_fu_538_ap_done );
    sensitive << ( grp_depthwise_conv2d_fix_fu_548_ap_done );
    sensitive << ( grp_pointwise_conv2d_fix_4_fu_556_ap_done );
    sensitive << ( grp_up_sampling2d_fix16_fu_564_ap_done );
    sensitive << ( grp_pointwise_conv2d_fix_fu_585_ap_done );
    sensitive << ( input_data_last_V_tm_fu_626_p1 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000000000001";
    input_data_data_V_0_sel_rd = SC_LOGIC_0;
    input_data_data_V_0_sel_wr = SC_LOGIC_0;
    input_data_data_V_0_state = "00";
    input_data_keep_V_0_sel_rd = SC_LOGIC_0;
    input_data_keep_V_0_sel_wr = SC_LOGIC_0;
    input_data_keep_V_0_state = "00";
    input_data_strb_V_0_sel_rd = SC_LOGIC_0;
    input_data_strb_V_0_sel_wr = SC_LOGIC_0;
    input_data_strb_V_0_state = "00";
    input_data_user_V_0_sel_rd = SC_LOGIC_0;
    input_data_user_V_0_sel_wr = SC_LOGIC_0;
    input_data_user_V_0_state = "00";
    input_data_last_V_0_sel_rd = SC_LOGIC_0;
    input_data_last_V_0_sel_wr = SC_LOGIC_0;
    input_data_last_V_0_state = "00";
    input_data_id_V_0_sel_rd = SC_LOGIC_0;
    input_data_id_V_0_sel_wr = SC_LOGIC_0;
    input_data_id_V_0_state = "00";
    input_data_dest_V_0_sel_rd = SC_LOGIC_0;
    input_data_dest_V_0_sel_wr = SC_LOGIC_0;
    input_data_dest_V_0_state = "00";
    output_data_data_V_1_sel_rd = SC_LOGIC_0;
    output_data_data_V_1_sel_wr = SC_LOGIC_0;
    output_data_data_V_1_state = "00";
    output_data_keep_V_1_sel_rd = SC_LOGIC_0;
    output_data_keep_V_1_sel_wr = SC_LOGIC_0;
    output_data_keep_V_1_state = "00";
    output_data_strb_V_1_sel_rd = SC_LOGIC_0;
    output_data_strb_V_1_sel_wr = SC_LOGIC_0;
    output_data_strb_V_1_state = "00";
    output_data_user_V_1_sel_rd = SC_LOGIC_0;
    output_data_user_V_1_sel_wr = SC_LOGIC_0;
    output_data_user_V_1_state = "00";
    output_data_last_V_1_sel_rd = SC_LOGIC_0;
    output_data_last_V_1_sel_wr = SC_LOGIC_0;
    output_data_last_V_1_state = "00";
    output_data_id_V_1_sel_rd = SC_LOGIC_0;
    output_data_id_V_1_sel_wr = SC_LOGIC_0;
    output_data_id_V_1_state = "00";
    output_data_dest_V_1_sel_rd = SC_LOGIC_0;
    output_data_dest_V_1_sel_wr = SC_LOGIC_0;
    output_data_dest_V_1_state = "00";
    grp_padding2d_fix16_fu_431_ap_start_reg = SC_LOGIC_0;
    grp_depthwise_conv2d_fix_2_fu_449_ap_start_reg = SC_LOGIC_0;
    grp_depthwise_conv2d_fix_1_fu_473_ap_start_reg = SC_LOGIC_0;
    grp_pointwise_conv2d_fix_1_fu_497_ap_start_reg = SC_LOGIC_0;
    grp_pointwise_conv2d_fix_3_fu_507_ap_start_reg = SC_LOGIC_0;
    grp_max_pooling2d_fix16_fu_517_ap_start_reg = SC_LOGIC_0;
    grp_pointwise_conv2d_fix_2_fu_538_ap_start_reg = SC_LOGIC_0;
    grp_depthwise_conv2d_fix_fu_548_ap_start_reg = SC_LOGIC_0;
    grp_pointwise_conv2d_fix_4_fu_556_ap_start_reg = SC_LOGIC_0;
    grp_up_sampling2d_fix16_fu_564_ap_start_reg = SC_LOGIC_0;
    grp_pointwise_conv2d_fix_fu_585_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "network_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_data_TDATA, "(port)input_data_TDATA");
    sc_trace(mVcdFile, input_data_TVALID, "(port)input_data_TVALID");
    sc_trace(mVcdFile, input_data_TREADY, "(port)input_data_TREADY");
    sc_trace(mVcdFile, input_data_TKEEP, "(port)input_data_TKEEP");
    sc_trace(mVcdFile, input_data_TSTRB, "(port)input_data_TSTRB");
    sc_trace(mVcdFile, input_data_TUSER, "(port)input_data_TUSER");
    sc_trace(mVcdFile, input_data_TLAST, "(port)input_data_TLAST");
    sc_trace(mVcdFile, input_data_TID, "(port)input_data_TID");
    sc_trace(mVcdFile, input_data_TDEST, "(port)input_data_TDEST");
    sc_trace(mVcdFile, output_data_TDATA, "(port)output_data_TDATA");
    sc_trace(mVcdFile, output_data_TVALID, "(port)output_data_TVALID");
    sc_trace(mVcdFile, output_data_TREADY, "(port)output_data_TREADY");
    sc_trace(mVcdFile, output_data_TKEEP, "(port)output_data_TKEEP");
    sc_trace(mVcdFile, output_data_TSTRB, "(port)output_data_TSTRB");
    sc_trace(mVcdFile, output_data_TUSER, "(port)output_data_TUSER");
    sc_trace(mVcdFile, output_data_TLAST, "(port)output_data_TLAST");
    sc_trace(mVcdFile, output_data_TID, "(port)output_data_TID");
    sc_trace(mVcdFile, output_data_TDEST, "(port)output_data_TDEST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_data_data_V_0_data_out, "input_data_data_V_0_data_out");
    sc_trace(mVcdFile, input_data_data_V_0_vld_in, "input_data_data_V_0_vld_in");
    sc_trace(mVcdFile, input_data_data_V_0_vld_out, "input_data_data_V_0_vld_out");
    sc_trace(mVcdFile, input_data_data_V_0_ack_in, "input_data_data_V_0_ack_in");
    sc_trace(mVcdFile, input_data_data_V_0_ack_out, "input_data_data_V_0_ack_out");
    sc_trace(mVcdFile, input_data_data_V_0_payload_A, "input_data_data_V_0_payload_A");
    sc_trace(mVcdFile, input_data_data_V_0_payload_B, "input_data_data_V_0_payload_B");
    sc_trace(mVcdFile, input_data_data_V_0_sel_rd, "input_data_data_V_0_sel_rd");
    sc_trace(mVcdFile, input_data_data_V_0_sel_wr, "input_data_data_V_0_sel_wr");
    sc_trace(mVcdFile, input_data_data_V_0_sel, "input_data_data_V_0_sel");
    sc_trace(mVcdFile, input_data_data_V_0_load_A, "input_data_data_V_0_load_A");
    sc_trace(mVcdFile, input_data_data_V_0_load_B, "input_data_data_V_0_load_B");
    sc_trace(mVcdFile, input_data_data_V_0_state, "input_data_data_V_0_state");
    sc_trace(mVcdFile, input_data_data_V_0_state_cmp_full, "input_data_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_data_keep_V_0_data_out, "input_data_keep_V_0_data_out");
    sc_trace(mVcdFile, input_data_keep_V_0_vld_in, "input_data_keep_V_0_vld_in");
    sc_trace(mVcdFile, input_data_keep_V_0_vld_out, "input_data_keep_V_0_vld_out");
    sc_trace(mVcdFile, input_data_keep_V_0_ack_in, "input_data_keep_V_0_ack_in");
    sc_trace(mVcdFile, input_data_keep_V_0_ack_out, "input_data_keep_V_0_ack_out");
    sc_trace(mVcdFile, input_data_keep_V_0_payload_A, "input_data_keep_V_0_payload_A");
    sc_trace(mVcdFile, input_data_keep_V_0_payload_B, "input_data_keep_V_0_payload_B");
    sc_trace(mVcdFile, input_data_keep_V_0_sel_rd, "input_data_keep_V_0_sel_rd");
    sc_trace(mVcdFile, input_data_keep_V_0_sel_wr, "input_data_keep_V_0_sel_wr");
    sc_trace(mVcdFile, input_data_keep_V_0_sel, "input_data_keep_V_0_sel");
    sc_trace(mVcdFile, input_data_keep_V_0_load_A, "input_data_keep_V_0_load_A");
    sc_trace(mVcdFile, input_data_keep_V_0_load_B, "input_data_keep_V_0_load_B");
    sc_trace(mVcdFile, input_data_keep_V_0_state, "input_data_keep_V_0_state");
    sc_trace(mVcdFile, input_data_keep_V_0_state_cmp_full, "input_data_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_data_strb_V_0_data_out, "input_data_strb_V_0_data_out");
    sc_trace(mVcdFile, input_data_strb_V_0_vld_in, "input_data_strb_V_0_vld_in");
    sc_trace(mVcdFile, input_data_strb_V_0_vld_out, "input_data_strb_V_0_vld_out");
    sc_trace(mVcdFile, input_data_strb_V_0_ack_in, "input_data_strb_V_0_ack_in");
    sc_trace(mVcdFile, input_data_strb_V_0_ack_out, "input_data_strb_V_0_ack_out");
    sc_trace(mVcdFile, input_data_strb_V_0_payload_A, "input_data_strb_V_0_payload_A");
    sc_trace(mVcdFile, input_data_strb_V_0_payload_B, "input_data_strb_V_0_payload_B");
    sc_trace(mVcdFile, input_data_strb_V_0_sel_rd, "input_data_strb_V_0_sel_rd");
    sc_trace(mVcdFile, input_data_strb_V_0_sel_wr, "input_data_strb_V_0_sel_wr");
    sc_trace(mVcdFile, input_data_strb_V_0_sel, "input_data_strb_V_0_sel");
    sc_trace(mVcdFile, input_data_strb_V_0_load_A, "input_data_strb_V_0_load_A");
    sc_trace(mVcdFile, input_data_strb_V_0_load_B, "input_data_strb_V_0_load_B");
    sc_trace(mVcdFile, input_data_strb_V_0_state, "input_data_strb_V_0_state");
    sc_trace(mVcdFile, input_data_strb_V_0_state_cmp_full, "input_data_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_data_user_V_0_data_out, "input_data_user_V_0_data_out");
    sc_trace(mVcdFile, input_data_user_V_0_vld_in, "input_data_user_V_0_vld_in");
    sc_trace(mVcdFile, input_data_user_V_0_vld_out, "input_data_user_V_0_vld_out");
    sc_trace(mVcdFile, input_data_user_V_0_ack_in, "input_data_user_V_0_ack_in");
    sc_trace(mVcdFile, input_data_user_V_0_ack_out, "input_data_user_V_0_ack_out");
    sc_trace(mVcdFile, input_data_user_V_0_payload_A, "input_data_user_V_0_payload_A");
    sc_trace(mVcdFile, input_data_user_V_0_payload_B, "input_data_user_V_0_payload_B");
    sc_trace(mVcdFile, input_data_user_V_0_sel_rd, "input_data_user_V_0_sel_rd");
    sc_trace(mVcdFile, input_data_user_V_0_sel_wr, "input_data_user_V_0_sel_wr");
    sc_trace(mVcdFile, input_data_user_V_0_sel, "input_data_user_V_0_sel");
    sc_trace(mVcdFile, input_data_user_V_0_load_A, "input_data_user_V_0_load_A");
    sc_trace(mVcdFile, input_data_user_V_0_load_B, "input_data_user_V_0_load_B");
    sc_trace(mVcdFile, input_data_user_V_0_state, "input_data_user_V_0_state");
    sc_trace(mVcdFile, input_data_user_V_0_state_cmp_full, "input_data_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_data_last_V_0_data_out, "input_data_last_V_0_data_out");
    sc_trace(mVcdFile, input_data_last_V_0_vld_in, "input_data_last_V_0_vld_in");
    sc_trace(mVcdFile, input_data_last_V_0_vld_out, "input_data_last_V_0_vld_out");
    sc_trace(mVcdFile, input_data_last_V_0_ack_in, "input_data_last_V_0_ack_in");
    sc_trace(mVcdFile, input_data_last_V_0_ack_out, "input_data_last_V_0_ack_out");
    sc_trace(mVcdFile, input_data_last_V_0_payload_A, "input_data_last_V_0_payload_A");
    sc_trace(mVcdFile, input_data_last_V_0_payload_B, "input_data_last_V_0_payload_B");
    sc_trace(mVcdFile, input_data_last_V_0_sel_rd, "input_data_last_V_0_sel_rd");
    sc_trace(mVcdFile, input_data_last_V_0_sel_wr, "input_data_last_V_0_sel_wr");
    sc_trace(mVcdFile, input_data_last_V_0_sel, "input_data_last_V_0_sel");
    sc_trace(mVcdFile, input_data_last_V_0_load_A, "input_data_last_V_0_load_A");
    sc_trace(mVcdFile, input_data_last_V_0_load_B, "input_data_last_V_0_load_B");
    sc_trace(mVcdFile, input_data_last_V_0_state, "input_data_last_V_0_state");
    sc_trace(mVcdFile, input_data_last_V_0_state_cmp_full, "input_data_last_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_data_id_V_0_data_out, "input_data_id_V_0_data_out");
    sc_trace(mVcdFile, input_data_id_V_0_vld_in, "input_data_id_V_0_vld_in");
    sc_trace(mVcdFile, input_data_id_V_0_vld_out, "input_data_id_V_0_vld_out");
    sc_trace(mVcdFile, input_data_id_V_0_ack_in, "input_data_id_V_0_ack_in");
    sc_trace(mVcdFile, input_data_id_V_0_ack_out, "input_data_id_V_0_ack_out");
    sc_trace(mVcdFile, input_data_id_V_0_payload_A, "input_data_id_V_0_payload_A");
    sc_trace(mVcdFile, input_data_id_V_0_payload_B, "input_data_id_V_0_payload_B");
    sc_trace(mVcdFile, input_data_id_V_0_sel_rd, "input_data_id_V_0_sel_rd");
    sc_trace(mVcdFile, input_data_id_V_0_sel_wr, "input_data_id_V_0_sel_wr");
    sc_trace(mVcdFile, input_data_id_V_0_sel, "input_data_id_V_0_sel");
    sc_trace(mVcdFile, input_data_id_V_0_load_A, "input_data_id_V_0_load_A");
    sc_trace(mVcdFile, input_data_id_V_0_load_B, "input_data_id_V_0_load_B");
    sc_trace(mVcdFile, input_data_id_V_0_state, "input_data_id_V_0_state");
    sc_trace(mVcdFile, input_data_id_V_0_state_cmp_full, "input_data_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_data_dest_V_0_data_out, "input_data_dest_V_0_data_out");
    sc_trace(mVcdFile, input_data_dest_V_0_vld_in, "input_data_dest_V_0_vld_in");
    sc_trace(mVcdFile, input_data_dest_V_0_vld_out, "input_data_dest_V_0_vld_out");
    sc_trace(mVcdFile, input_data_dest_V_0_ack_in, "input_data_dest_V_0_ack_in");
    sc_trace(mVcdFile, input_data_dest_V_0_ack_out, "input_data_dest_V_0_ack_out");
    sc_trace(mVcdFile, input_data_dest_V_0_payload_A, "input_data_dest_V_0_payload_A");
    sc_trace(mVcdFile, input_data_dest_V_0_payload_B, "input_data_dest_V_0_payload_B");
    sc_trace(mVcdFile, input_data_dest_V_0_sel_rd, "input_data_dest_V_0_sel_rd");
    sc_trace(mVcdFile, input_data_dest_V_0_sel_wr, "input_data_dest_V_0_sel_wr");
    sc_trace(mVcdFile, input_data_dest_V_0_sel, "input_data_dest_V_0_sel");
    sc_trace(mVcdFile, input_data_dest_V_0_load_A, "input_data_dest_V_0_load_A");
    sc_trace(mVcdFile, input_data_dest_V_0_load_B, "input_data_dest_V_0_load_B");
    sc_trace(mVcdFile, input_data_dest_V_0_state, "input_data_dest_V_0_state");
    sc_trace(mVcdFile, input_data_dest_V_0_state_cmp_full, "input_data_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, output_data_data_V_1_data_out, "output_data_data_V_1_data_out");
    sc_trace(mVcdFile, output_data_data_V_1_vld_in, "output_data_data_V_1_vld_in");
    sc_trace(mVcdFile, output_data_data_V_1_vld_out, "output_data_data_V_1_vld_out");
    sc_trace(mVcdFile, output_data_data_V_1_ack_in, "output_data_data_V_1_ack_in");
    sc_trace(mVcdFile, output_data_data_V_1_ack_out, "output_data_data_V_1_ack_out");
    sc_trace(mVcdFile, output_data_data_V_1_payload_A, "output_data_data_V_1_payload_A");
    sc_trace(mVcdFile, output_data_data_V_1_payload_B, "output_data_data_V_1_payload_B");
    sc_trace(mVcdFile, output_data_data_V_1_sel_rd, "output_data_data_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_data_V_1_sel_wr, "output_data_data_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_data_V_1_sel, "output_data_data_V_1_sel");
    sc_trace(mVcdFile, output_data_data_V_1_load_A, "output_data_data_V_1_load_A");
    sc_trace(mVcdFile, output_data_data_V_1_load_B, "output_data_data_V_1_load_B");
    sc_trace(mVcdFile, output_data_data_V_1_state, "output_data_data_V_1_state");
    sc_trace(mVcdFile, output_data_data_V_1_state_cmp_full, "output_data_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_keep_V_1_data_out, "output_data_keep_V_1_data_out");
    sc_trace(mVcdFile, output_data_keep_V_1_vld_in, "output_data_keep_V_1_vld_in");
    sc_trace(mVcdFile, output_data_keep_V_1_vld_out, "output_data_keep_V_1_vld_out");
    sc_trace(mVcdFile, output_data_keep_V_1_ack_in, "output_data_keep_V_1_ack_in");
    sc_trace(mVcdFile, output_data_keep_V_1_ack_out, "output_data_keep_V_1_ack_out");
    sc_trace(mVcdFile, output_data_keep_V_1_payload_A, "output_data_keep_V_1_payload_A");
    sc_trace(mVcdFile, output_data_keep_V_1_payload_B, "output_data_keep_V_1_payload_B");
    sc_trace(mVcdFile, output_data_keep_V_1_sel_rd, "output_data_keep_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_keep_V_1_sel_wr, "output_data_keep_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_keep_V_1_sel, "output_data_keep_V_1_sel");
    sc_trace(mVcdFile, output_data_keep_V_1_load_A, "output_data_keep_V_1_load_A");
    sc_trace(mVcdFile, output_data_keep_V_1_load_B, "output_data_keep_V_1_load_B");
    sc_trace(mVcdFile, output_data_keep_V_1_state, "output_data_keep_V_1_state");
    sc_trace(mVcdFile, output_data_keep_V_1_state_cmp_full, "output_data_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_strb_V_1_data_out, "output_data_strb_V_1_data_out");
    sc_trace(mVcdFile, output_data_strb_V_1_vld_in, "output_data_strb_V_1_vld_in");
    sc_trace(mVcdFile, output_data_strb_V_1_vld_out, "output_data_strb_V_1_vld_out");
    sc_trace(mVcdFile, output_data_strb_V_1_ack_in, "output_data_strb_V_1_ack_in");
    sc_trace(mVcdFile, output_data_strb_V_1_ack_out, "output_data_strb_V_1_ack_out");
    sc_trace(mVcdFile, output_data_strb_V_1_payload_A, "output_data_strb_V_1_payload_A");
    sc_trace(mVcdFile, output_data_strb_V_1_payload_B, "output_data_strb_V_1_payload_B");
    sc_trace(mVcdFile, output_data_strb_V_1_sel_rd, "output_data_strb_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_strb_V_1_sel_wr, "output_data_strb_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_strb_V_1_sel, "output_data_strb_V_1_sel");
    sc_trace(mVcdFile, output_data_strb_V_1_load_A, "output_data_strb_V_1_load_A");
    sc_trace(mVcdFile, output_data_strb_V_1_load_B, "output_data_strb_V_1_load_B");
    sc_trace(mVcdFile, output_data_strb_V_1_state, "output_data_strb_V_1_state");
    sc_trace(mVcdFile, output_data_strb_V_1_state_cmp_full, "output_data_strb_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_user_V_1_data_out, "output_data_user_V_1_data_out");
    sc_trace(mVcdFile, output_data_user_V_1_vld_in, "output_data_user_V_1_vld_in");
    sc_trace(mVcdFile, output_data_user_V_1_vld_out, "output_data_user_V_1_vld_out");
    sc_trace(mVcdFile, output_data_user_V_1_ack_in, "output_data_user_V_1_ack_in");
    sc_trace(mVcdFile, output_data_user_V_1_ack_out, "output_data_user_V_1_ack_out");
    sc_trace(mVcdFile, output_data_user_V_1_payload_A, "output_data_user_V_1_payload_A");
    sc_trace(mVcdFile, output_data_user_V_1_payload_B, "output_data_user_V_1_payload_B");
    sc_trace(mVcdFile, output_data_user_V_1_sel_rd, "output_data_user_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_user_V_1_sel_wr, "output_data_user_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_user_V_1_sel, "output_data_user_V_1_sel");
    sc_trace(mVcdFile, output_data_user_V_1_load_A, "output_data_user_V_1_load_A");
    sc_trace(mVcdFile, output_data_user_V_1_load_B, "output_data_user_V_1_load_B");
    sc_trace(mVcdFile, output_data_user_V_1_state, "output_data_user_V_1_state");
    sc_trace(mVcdFile, output_data_user_V_1_state_cmp_full, "output_data_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_last_V_1_data_out, "output_data_last_V_1_data_out");
    sc_trace(mVcdFile, output_data_last_V_1_vld_in, "output_data_last_V_1_vld_in");
    sc_trace(mVcdFile, output_data_last_V_1_vld_out, "output_data_last_V_1_vld_out");
    sc_trace(mVcdFile, output_data_last_V_1_ack_in, "output_data_last_V_1_ack_in");
    sc_trace(mVcdFile, output_data_last_V_1_ack_out, "output_data_last_V_1_ack_out");
    sc_trace(mVcdFile, output_data_last_V_1_payload_A, "output_data_last_V_1_payload_A");
    sc_trace(mVcdFile, output_data_last_V_1_payload_B, "output_data_last_V_1_payload_B");
    sc_trace(mVcdFile, output_data_last_V_1_sel_rd, "output_data_last_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_last_V_1_sel_wr, "output_data_last_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_last_V_1_sel, "output_data_last_V_1_sel");
    sc_trace(mVcdFile, output_data_last_V_1_load_A, "output_data_last_V_1_load_A");
    sc_trace(mVcdFile, output_data_last_V_1_load_B, "output_data_last_V_1_load_B");
    sc_trace(mVcdFile, output_data_last_V_1_state, "output_data_last_V_1_state");
    sc_trace(mVcdFile, output_data_last_V_1_state_cmp_full, "output_data_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_id_V_1_data_out, "output_data_id_V_1_data_out");
    sc_trace(mVcdFile, output_data_id_V_1_vld_in, "output_data_id_V_1_vld_in");
    sc_trace(mVcdFile, output_data_id_V_1_vld_out, "output_data_id_V_1_vld_out");
    sc_trace(mVcdFile, output_data_id_V_1_ack_in, "output_data_id_V_1_ack_in");
    sc_trace(mVcdFile, output_data_id_V_1_ack_out, "output_data_id_V_1_ack_out");
    sc_trace(mVcdFile, output_data_id_V_1_payload_A, "output_data_id_V_1_payload_A");
    sc_trace(mVcdFile, output_data_id_V_1_payload_B, "output_data_id_V_1_payload_B");
    sc_trace(mVcdFile, output_data_id_V_1_sel_rd, "output_data_id_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_id_V_1_sel_wr, "output_data_id_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_id_V_1_sel, "output_data_id_V_1_sel");
    sc_trace(mVcdFile, output_data_id_V_1_load_A, "output_data_id_V_1_load_A");
    sc_trace(mVcdFile, output_data_id_V_1_load_B, "output_data_id_V_1_load_B");
    sc_trace(mVcdFile, output_data_id_V_1_state, "output_data_id_V_1_state");
    sc_trace(mVcdFile, output_data_id_V_1_state_cmp_full, "output_data_id_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_data_dest_V_1_data_out, "output_data_dest_V_1_data_out");
    sc_trace(mVcdFile, output_data_dest_V_1_vld_in, "output_data_dest_V_1_vld_in");
    sc_trace(mVcdFile, output_data_dest_V_1_vld_out, "output_data_dest_V_1_vld_out");
    sc_trace(mVcdFile, output_data_dest_V_1_ack_in, "output_data_dest_V_1_ack_in");
    sc_trace(mVcdFile, output_data_dest_V_1_ack_out, "output_data_dest_V_1_ack_out");
    sc_trace(mVcdFile, output_data_dest_V_1_payload_A, "output_data_dest_V_1_payload_A");
    sc_trace(mVcdFile, output_data_dest_V_1_payload_B, "output_data_dest_V_1_payload_B");
    sc_trace(mVcdFile, output_data_dest_V_1_sel_rd, "output_data_dest_V_1_sel_rd");
    sc_trace(mVcdFile, output_data_dest_V_1_sel_wr, "output_data_dest_V_1_sel_wr");
    sc_trace(mVcdFile, output_data_dest_V_1_sel, "output_data_dest_V_1_sel");
    sc_trace(mVcdFile, output_data_dest_V_1_load_A, "output_data_dest_V_1_load_A");
    sc_trace(mVcdFile, output_data_dest_V_1_load_B, "output_data_dest_V_1_load_B");
    sc_trace(mVcdFile, output_data_dest_V_1_state, "output_data_dest_V_1_state");
    sc_trace(mVcdFile, output_data_dest_V_1_state_cmp_full, "output_data_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, SeparableConv2D_1_b_1_ce0, "SeparableConv2D_1_b_1_ce0");
    sc_trace(mVcdFile, SeparableConv2D_1_b_1_q0, "SeparableConv2D_1_b_1_q0");
    sc_trace(mVcdFile, SeparableConv2D_1_w_1_ce0, "SeparableConv2D_1_w_1_ce0");
    sc_trace(mVcdFile, SeparableConv2D_1_w_1_q0, "SeparableConv2D_1_w_1_q0");
    sc_trace(mVcdFile, SeparableConv2D_2_b_1_ce0, "SeparableConv2D_2_b_1_ce0");
    sc_trace(mVcdFile, SeparableConv2D_2_b_1_q0, "SeparableConv2D_2_b_1_q0");
    sc_trace(mVcdFile, SeparableConv2D_2_w_1_ce0, "SeparableConv2D_2_w_1_ce0");
    sc_trace(mVcdFile, SeparableConv2D_2_w_1_q0, "SeparableConv2D_2_w_1_q0");
    sc_trace(mVcdFile, SeparableConv2D_3_b_1_ce0, "SeparableConv2D_3_b_1_ce0");
    sc_trace(mVcdFile, SeparableConv2D_3_b_1_q0, "SeparableConv2D_3_b_1_q0");
    sc_trace(mVcdFile, SeparableConv2D_3_w_1_ce0, "SeparableConv2D_3_w_1_ce0");
    sc_trace(mVcdFile, SeparableConv2D_3_w_1_q0, "SeparableConv2D_3_w_1_q0");
    sc_trace(mVcdFile, SeparableConv2D_4_b_s_ce0, "SeparableConv2D_4_b_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_4_b_s_q0, "SeparableConv2D_4_b_s_q0");
    sc_trace(mVcdFile, SeparableConv2D_4_w_1_ce0, "SeparableConv2D_4_w_1_ce0");
    sc_trace(mVcdFile, SeparableConv2D_4_w_1_q0, "SeparableConv2D_4_w_1_q0");
    sc_trace(mVcdFile, ap_return, "ap_return");
    sc_trace(mVcdFile, input_data_TDATA_blk_n, "input_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, output_data_TDATA_blk_n, "output_data_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, i_fu_641_p2, "i_fu_641_p2");
    sc_trace(mVcdFile, i_3_fu_653_p2, "i_3_fu_653_p2");
    sc_trace(mVcdFile, i_3_reg_698, "i_3_reg_698");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, zext_ln162_fu_659_p1, "zext_ln162_fu_659_p1");
    sc_trace(mVcdFile, zext_ln162_reg_703, "zext_ln162_reg_703");
    sc_trace(mVcdFile, icmp_ln160_fu_647_p2, "icmp_ln160_fu_647_p2");
    sc_trace(mVcdFile, i_4_fu_670_p2, "i_4_fu_670_p2");
    sc_trace(mVcdFile, i_4_reg_716, "i_4_reg_716");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, icmp_ln165_fu_664_p2, "icmp_ln165_fu_664_p2");
    sc_trace(mVcdFile, MemBank_Out_q0, "MemBank_Out_q0");
    sc_trace(mVcdFile, sig_buffer_keep_V_q0, "sig_buffer_keep_V_q0");
    sc_trace(mVcdFile, sig_buffer_strb_V_q0, "sig_buffer_strb_V_q0");
    sc_trace(mVcdFile, sig_buffer_user_V_q0, "sig_buffer_user_V_q0");
    sc_trace(mVcdFile, sig_buffer_last_V_q0, "sig_buffer_last_V_q0");
    sc_trace(mVcdFile, sig_buffer_id_V_q0, "sig_buffer_id_V_q0");
    sc_trace(mVcdFile, sig_buffer_dest_V_q0, "sig_buffer_dest_V_q0");
    sc_trace(mVcdFile, MemBank_A_address0, "MemBank_A_address0");
    sc_trace(mVcdFile, MemBank_A_ce0, "MemBank_A_ce0");
    sc_trace(mVcdFile, MemBank_A_we0, "MemBank_A_we0");
    sc_trace(mVcdFile, MemBank_A_d0, "MemBank_A_d0");
    sc_trace(mVcdFile, MemBank_A_q0, "MemBank_A_q0");
    sc_trace(mVcdFile, MemBank_B_address0, "MemBank_B_address0");
    sc_trace(mVcdFile, MemBank_B_ce0, "MemBank_B_ce0");
    sc_trace(mVcdFile, MemBank_B_we0, "MemBank_B_we0");
    sc_trace(mVcdFile, MemBank_B_d0, "MemBank_B_d0");
    sc_trace(mVcdFile, MemBank_B_q0, "MemBank_B_q0");
    sc_trace(mVcdFile, MemBank_Out_address0, "MemBank_Out_address0");
    sc_trace(mVcdFile, MemBank_Out_ce0, "MemBank_Out_ce0");
    sc_trace(mVcdFile, MemBank_Out_we0, "MemBank_Out_we0");
    sc_trace(mVcdFile, sig_buffer_keep_V_address0, "sig_buffer_keep_V_address0");
    sc_trace(mVcdFile, sig_buffer_keep_V_ce0, "sig_buffer_keep_V_ce0");
    sc_trace(mVcdFile, sig_buffer_keep_V_we0, "sig_buffer_keep_V_we0");
    sc_trace(mVcdFile, sig_buffer_strb_V_address0, "sig_buffer_strb_V_address0");
    sc_trace(mVcdFile, sig_buffer_strb_V_ce0, "sig_buffer_strb_V_ce0");
    sc_trace(mVcdFile, sig_buffer_strb_V_we0, "sig_buffer_strb_V_we0");
    sc_trace(mVcdFile, sig_buffer_user_V_address0, "sig_buffer_user_V_address0");
    sc_trace(mVcdFile, sig_buffer_user_V_ce0, "sig_buffer_user_V_ce0");
    sc_trace(mVcdFile, sig_buffer_user_V_we0, "sig_buffer_user_V_we0");
    sc_trace(mVcdFile, sig_buffer_last_V_address0, "sig_buffer_last_V_address0");
    sc_trace(mVcdFile, sig_buffer_last_V_ce0, "sig_buffer_last_V_ce0");
    sc_trace(mVcdFile, sig_buffer_last_V_we0, "sig_buffer_last_V_we0");
    sc_trace(mVcdFile, sig_buffer_id_V_address0, "sig_buffer_id_V_address0");
    sc_trace(mVcdFile, sig_buffer_id_V_ce0, "sig_buffer_id_V_ce0");
    sc_trace(mVcdFile, sig_buffer_id_V_we0, "sig_buffer_id_V_we0");
    sc_trace(mVcdFile, sig_buffer_dest_V_address0, "sig_buffer_dest_V_address0");
    sc_trace(mVcdFile, sig_buffer_dest_V_ce0, "sig_buffer_dest_V_ce0");
    sc_trace(mVcdFile, sig_buffer_dest_V_we0, "sig_buffer_dest_V_we0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_ap_start, "grp_padding2d_fix16_fu_431_ap_start");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_ap_done, "grp_padding2d_fix16_fu_431_ap_done");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_ap_idle, "grp_padding2d_fix16_fu_431_ap_idle");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_ap_ready, "grp_padding2d_fix16_fu_431_ap_ready");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_input_depth, "grp_padding2d_fix16_fu_431_input_depth");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_input_height, "grp_padding2d_fix16_fu_431_input_height");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_input_width, "grp_padding2d_fix16_fu_431_input_width");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_input_r_address0, "grp_padding2d_fix16_fu_431_input_r_address0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_input_r_ce0, "grp_padding2d_fix16_fu_431_input_r_ce0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_output_r_address0, "grp_padding2d_fix16_fu_431_output_r_address0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_output_r_ce0, "grp_padding2d_fix16_fu_431_output_r_ce0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_output_r_we0, "grp_padding2d_fix16_fu_431_output_r_we0");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_output_r_d0, "grp_padding2d_fix16_fu_431_output_r_d0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_ap_start, "grp_depthwise_conv2d_fix_2_fu_449_ap_start");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_ap_done, "grp_depthwise_conv2d_fix_2_fu_449_ap_done");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_ap_idle, "grp_depthwise_conv2d_fix_2_fu_449_ap_idle");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_ap_ready, "grp_depthwise_conv2d_fix_2_fu_449_ap_ready");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_input_height, "grp_depthwise_conv2d_fix_2_fu_449_input_height");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_input_width, "grp_depthwise_conv2d_fix_2_fu_449_input_width");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_input_r_address0, "grp_depthwise_conv2d_fix_2_fu_449_input_r_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_input_r_ce0, "grp_depthwise_conv2d_fix_2_fu_449_input_r_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_output_height, "grp_depthwise_conv2d_fix_2_fu_449_output_height");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_output_width, "grp_depthwise_conv2d_fix_2_fu_449_output_width");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_output_r_address0, "grp_depthwise_conv2d_fix_2_fu_449_output_r_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_output_r_ce0, "grp_depthwise_conv2d_fix_2_fu_449_output_r_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_output_r_we0, "grp_depthwise_conv2d_fix_2_fu_449_output_r_we0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_output_r_d0, "grp_depthwise_conv2d_fix_2_fu_449_output_r_d0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_bias_address0, "grp_depthwise_conv2d_fix_2_fu_449_bias_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_bias_ce0, "grp_depthwise_conv2d_fix_2_fu_449_bias_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_bias_q0, "grp_depthwise_conv2d_fix_2_fu_449_bias_q0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_kernel_0_address0, "grp_depthwise_conv2d_fix_2_fu_449_kernel_0_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_kernel_0_ce0, "grp_depthwise_conv2d_fix_2_fu_449_kernel_0_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_kernel_0_q0, "grp_depthwise_conv2d_fix_2_fu_449_kernel_0_q0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_ap_start, "grp_depthwise_conv2d_fix_1_fu_473_ap_start");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_ap_done, "grp_depthwise_conv2d_fix_1_fu_473_ap_done");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_ap_idle, "grp_depthwise_conv2d_fix_1_fu_473_ap_idle");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_ap_ready, "grp_depthwise_conv2d_fix_1_fu_473_ap_ready");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_input_height, "grp_depthwise_conv2d_fix_1_fu_473_input_height");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_input_width, "grp_depthwise_conv2d_fix_1_fu_473_input_width");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_input_r_address0, "grp_depthwise_conv2d_fix_1_fu_473_input_r_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_input_r_ce0, "grp_depthwise_conv2d_fix_1_fu_473_input_r_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_output_height, "grp_depthwise_conv2d_fix_1_fu_473_output_height");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_output_width, "grp_depthwise_conv2d_fix_1_fu_473_output_width");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_output_r_address0, "grp_depthwise_conv2d_fix_1_fu_473_output_r_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_output_r_ce0, "grp_depthwise_conv2d_fix_1_fu_473_output_r_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_output_r_we0, "grp_depthwise_conv2d_fix_1_fu_473_output_r_we0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_output_r_d0, "grp_depthwise_conv2d_fix_1_fu_473_output_r_d0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_bias_address0, "grp_depthwise_conv2d_fix_1_fu_473_bias_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_bias_ce0, "grp_depthwise_conv2d_fix_1_fu_473_bias_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_bias_q0, "grp_depthwise_conv2d_fix_1_fu_473_bias_q0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_kernel_0_address0, "grp_depthwise_conv2d_fix_1_fu_473_kernel_0_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_kernel_0_ce0, "grp_depthwise_conv2d_fix_1_fu_473_kernel_0_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_kernel_0_q0, "grp_depthwise_conv2d_fix_1_fu_473_kernel_0_q0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_ap_start, "grp_pointwise_conv2d_fix_1_fu_497_ap_start");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_ap_done, "grp_pointwise_conv2d_fix_1_fu_497_ap_done");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_ap_idle, "grp_pointwise_conv2d_fix_1_fu_497_ap_idle");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_ap_ready, "grp_pointwise_conv2d_fix_1_fu_497_ap_ready");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_input_r_address0, "grp_pointwise_conv2d_fix_1_fu_497_input_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_input_r_ce0, "grp_pointwise_conv2d_fix_1_fu_497_input_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_output_r_address0, "grp_pointwise_conv2d_fix_1_fu_497_output_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_output_r_ce0, "grp_pointwise_conv2d_fix_1_fu_497_output_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_output_r_we0, "grp_pointwise_conv2d_fix_1_fu_497_output_r_we0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_output_r_d0, "grp_pointwise_conv2d_fix_1_fu_497_output_r_d0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_ap_start, "grp_pointwise_conv2d_fix_3_fu_507_ap_start");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_ap_done, "grp_pointwise_conv2d_fix_3_fu_507_ap_done");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_ap_idle, "grp_pointwise_conv2d_fix_3_fu_507_ap_idle");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_ap_ready, "grp_pointwise_conv2d_fix_3_fu_507_ap_ready");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_input_r_address0, "grp_pointwise_conv2d_fix_3_fu_507_input_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_input_r_ce0, "grp_pointwise_conv2d_fix_3_fu_507_input_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_output_r_address0, "grp_pointwise_conv2d_fix_3_fu_507_output_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_output_r_ce0, "grp_pointwise_conv2d_fix_3_fu_507_output_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_output_r_we0, "grp_pointwise_conv2d_fix_3_fu_507_output_r_we0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_output_r_d0, "grp_pointwise_conv2d_fix_3_fu_507_output_r_d0");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_ap_start, "grp_max_pooling2d_fix16_fu_517_ap_start");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_ap_done, "grp_max_pooling2d_fix16_fu_517_ap_done");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_ap_idle, "grp_max_pooling2d_fix16_fu_517_ap_idle");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_ap_ready, "grp_max_pooling2d_fix16_fu_517_ap_ready");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_input_height, "grp_max_pooling2d_fix16_fu_517_input_height");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_input_width, "grp_max_pooling2d_fix16_fu_517_input_width");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_input_r_address0, "grp_max_pooling2d_fix16_fu_517_input_r_address0");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_input_r_ce0, "grp_max_pooling2d_fix16_fu_517_input_r_ce0");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_output_depth, "grp_max_pooling2d_fix16_fu_517_output_depth");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_output_height, "grp_max_pooling2d_fix16_fu_517_output_height");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_output_width, "grp_max_pooling2d_fix16_fu_517_output_width");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_output_r_address0, "grp_max_pooling2d_fix16_fu_517_output_r_address0");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_output_r_ce0, "grp_max_pooling2d_fix16_fu_517_output_r_ce0");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_output_r_we0, "grp_max_pooling2d_fix16_fu_517_output_r_we0");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_output_r_d0, "grp_max_pooling2d_fix16_fu_517_output_r_d0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_ap_start, "grp_pointwise_conv2d_fix_2_fu_538_ap_start");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_ap_done, "grp_pointwise_conv2d_fix_2_fu_538_ap_done");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_ap_idle, "grp_pointwise_conv2d_fix_2_fu_538_ap_idle");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_ap_ready, "grp_pointwise_conv2d_fix_2_fu_538_ap_ready");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_input_r_address0, "grp_pointwise_conv2d_fix_2_fu_538_input_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_input_r_ce0, "grp_pointwise_conv2d_fix_2_fu_538_input_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_output_r_address0, "grp_pointwise_conv2d_fix_2_fu_538_output_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_output_r_ce0, "grp_pointwise_conv2d_fix_2_fu_538_output_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_output_r_we0, "grp_pointwise_conv2d_fix_2_fu_538_output_r_we0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_output_r_d0, "grp_pointwise_conv2d_fix_2_fu_538_output_r_d0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_ap_start, "grp_depthwise_conv2d_fix_fu_548_ap_start");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_ap_done, "grp_depthwise_conv2d_fix_fu_548_ap_done");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_ap_idle, "grp_depthwise_conv2d_fix_fu_548_ap_idle");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_ap_ready, "grp_depthwise_conv2d_fix_fu_548_ap_ready");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_input_r_address0, "grp_depthwise_conv2d_fix_fu_548_input_r_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_input_r_ce0, "grp_depthwise_conv2d_fix_fu_548_input_r_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_output_r_address0, "grp_depthwise_conv2d_fix_fu_548_output_r_address0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_output_r_ce0, "grp_depthwise_conv2d_fix_fu_548_output_r_ce0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_output_r_we0, "grp_depthwise_conv2d_fix_fu_548_output_r_we0");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_output_r_d0, "grp_depthwise_conv2d_fix_fu_548_output_r_d0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_ap_start, "grp_pointwise_conv2d_fix_4_fu_556_ap_start");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_ap_done, "grp_pointwise_conv2d_fix_4_fu_556_ap_done");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_ap_idle, "grp_pointwise_conv2d_fix_4_fu_556_ap_idle");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_ap_ready, "grp_pointwise_conv2d_fix_4_fu_556_ap_ready");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_input_r_address0, "grp_pointwise_conv2d_fix_4_fu_556_input_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_input_r_ce0, "grp_pointwise_conv2d_fix_4_fu_556_input_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_output_r_address0, "grp_pointwise_conv2d_fix_4_fu_556_output_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_output_r_ce0, "grp_pointwise_conv2d_fix_4_fu_556_output_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_output_r_we0, "grp_pointwise_conv2d_fix_4_fu_556_output_r_we0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_output_r_d0, "grp_pointwise_conv2d_fix_4_fu_556_output_r_d0");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_ap_start, "grp_up_sampling2d_fix16_fu_564_ap_start");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_ap_done, "grp_up_sampling2d_fix16_fu_564_ap_done");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_ap_idle, "grp_up_sampling2d_fix16_fu_564_ap_idle");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_ap_ready, "grp_up_sampling2d_fix16_fu_564_ap_ready");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_input_height, "grp_up_sampling2d_fix16_fu_564_input_height");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_input_width, "grp_up_sampling2d_fix16_fu_564_input_width");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_input_r_address0, "grp_up_sampling2d_fix16_fu_564_input_r_address0");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_input_r_ce0, "grp_up_sampling2d_fix16_fu_564_input_r_ce0");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_output_depth, "grp_up_sampling2d_fix16_fu_564_output_depth");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_output_height, "grp_up_sampling2d_fix16_fu_564_output_height");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_output_width, "grp_up_sampling2d_fix16_fu_564_output_width");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_output_r_address0, "grp_up_sampling2d_fix16_fu_564_output_r_address0");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_output_r_ce0, "grp_up_sampling2d_fix16_fu_564_output_r_ce0");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_output_r_we0, "grp_up_sampling2d_fix16_fu_564_output_r_we0");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_output_r_d0, "grp_up_sampling2d_fix16_fu_564_output_r_d0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_ap_start, "grp_pointwise_conv2d_fix_fu_585_ap_start");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_ap_done, "grp_pointwise_conv2d_fix_fu_585_ap_done");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_ap_idle, "grp_pointwise_conv2d_fix_fu_585_ap_idle");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_ap_ready, "grp_pointwise_conv2d_fix_fu_585_ap_ready");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_input_r_address0, "grp_pointwise_conv2d_fix_fu_585_input_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_input_r_ce0, "grp_pointwise_conv2d_fix_fu_585_input_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_output_r_address0, "grp_pointwise_conv2d_fix_fu_585_output_r_address0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_output_r_ce0, "grp_pointwise_conv2d_fix_fu_585_output_r_ce0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_output_r_we0, "grp_pointwise_conv2d_fix_fu_585_output_r_we0");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_output_r_d0, "grp_pointwise_conv2d_fix_fu_585_output_r_d0");
    sc_trace(mVcdFile, i_0_reg_398, "i_0_reg_398");
    sc_trace(mVcdFile, input_data_last_V_tm_fu_626_p1, "input_data_last_V_tm_fu_626_p1");
    sc_trace(mVcdFile, i_1_reg_409, "i_1_reg_409");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, i_2_reg_420, "i_2_reg_420");
    sc_trace(mVcdFile, grp_padding2d_fix16_fu_431_ap_start_reg, "grp_padding2d_fix16_fu_431_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_2_fu_449_ap_start_reg, "grp_depthwise_conv2d_fix_2_fu_449_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_1_fu_473_ap_start_reg, "grp_depthwise_conv2d_fix_1_fu_473_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_1_fu_497_ap_start_reg, "grp_pointwise_conv2d_fix_1_fu_497_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_3_fu_507_ap_start_reg, "grp_pointwise_conv2d_fix_3_fu_507_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_max_pooling2d_fix16_fu_517_ap_start_reg, "grp_max_pooling2d_fix16_fu_517_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_2_fu_538_ap_start_reg, "grp_pointwise_conv2d_fix_2_fu_538_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_depthwise_conv2d_fix_fu_548_ap_start_reg, "grp_depthwise_conv2d_fix_fu_548_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_4_fu_556_ap_start_reg, "grp_pointwise_conv2d_fix_4_fu_556_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_up_sampling2d_fix16_fu_564_ap_start_reg, "grp_up_sampling2d_fix16_fu_564_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, grp_pointwise_conv2d_fix_fu_585_ap_start_reg, "grp_pointwise_conv2d_fix_fu_585_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sext_ln62_fu_595_p1, "sext_ln62_fu_595_p1");
    sc_trace(mVcdFile, zext_ln167_fu_676_p1, "zext_ln167_fu_676_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_block_state46, "ap_block_state46");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("network.hdltvin.dat");
    mHdltvoutHandle.open("network.hdltvout.dat");
}

network::~network() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete SeparableConv2D_1_b_1_U;
    delete SeparableConv2D_1_w_1_U;
    delete SeparableConv2D_2_b_1_U;
    delete SeparableConv2D_2_w_1_U;
    delete SeparableConv2D_3_b_1_U;
    delete SeparableConv2D_3_w_1_U;
    delete SeparableConv2D_4_b_s_U;
    delete SeparableConv2D_4_w_1_U;
    delete network_AXILiteS_s_axi_U;
    delete MemBank_A_U;
    delete MemBank_B_U;
    delete MemBank_Out_U;
    delete sig_buffer_keep_V_U;
    delete sig_buffer_strb_V_U;
    delete sig_buffer_user_V_U;
    delete sig_buffer_last_V_U;
    delete sig_buffer_id_V_U;
    delete sig_buffer_dest_V_U;
    delete grp_padding2d_fix16_fu_431;
    delete grp_depthwise_conv2d_fix_2_fu_449;
    delete grp_depthwise_conv2d_fix_1_fu_473;
    delete grp_pointwise_conv2d_fix_1_fu_497;
    delete grp_pointwise_conv2d_fix_3_fu_507;
    delete grp_max_pooling2d_fix16_fu_517;
    delete grp_pointwise_conv2d_fix_2_fu_538;
    delete grp_depthwise_conv2d_fix_fu_548;
    delete grp_pointwise_conv2d_fix_4_fu_556;
    delete grp_up_sampling2d_fix16_fu_564;
    delete grp_pointwise_conv2d_fix_fu_585;
}

void network::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void network::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_depthwise_conv2d_fix_1_fu_473_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
            grp_depthwise_conv2d_fix_1_fu_473_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_depthwise_conv2d_fix_1_fu_473_ap_ready.read())) {
            grp_depthwise_conv2d_fix_1_fu_473_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_depthwise_conv2d_fix_2_fu_449_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()))) {
            grp_depthwise_conv2d_fix_2_fu_449_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_depthwise_conv2d_fix_2_fu_449_ap_ready.read())) {
            grp_depthwise_conv2d_fix_2_fu_449_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_depthwise_conv2d_fix_fu_548_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_depthwise_conv2d_fix_fu_548_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_depthwise_conv2d_fix_fu_548_ap_ready.read())) {
            grp_depthwise_conv2d_fix_fu_548_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_max_pooling2d_fix16_fu_517_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
            grp_max_pooling2d_fix16_fu_517_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_max_pooling2d_fix16_fu_517_ap_ready.read())) {
            grp_max_pooling2d_fix16_fu_517_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_padding2d_fix16_fu_431_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
            grp_padding2d_fix16_fu_431_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_padding2d_fix16_fu_431_ap_ready.read())) {
            grp_padding2d_fix16_fu_431_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pointwise_conv2d_fix_1_fu_497_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
            grp_pointwise_conv2d_fix_1_fu_497_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointwise_conv2d_fix_1_fu_497_ap_ready.read())) {
            grp_pointwise_conv2d_fix_1_fu_497_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pointwise_conv2d_fix_2_fu_538_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
            grp_pointwise_conv2d_fix_2_fu_538_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointwise_conv2d_fix_2_fu_538_ap_ready.read())) {
            grp_pointwise_conv2d_fix_2_fu_538_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pointwise_conv2d_fix_3_fu_507_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
            grp_pointwise_conv2d_fix_3_fu_507_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointwise_conv2d_fix_3_fu_507_ap_ready.read())) {
            grp_pointwise_conv2d_fix_3_fu_507_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pointwise_conv2d_fix_4_fu_556_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
            grp_pointwise_conv2d_fix_4_fu_556_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointwise_conv2d_fix_4_fu_556_ap_ready.read())) {
            grp_pointwise_conv2d_fix_4_fu_556_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pointwise_conv2d_fix_fu_585_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_pointwise_conv2d_fix_fu_585_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pointwise_conv2d_fix_fu_585_ap_ready.read())) {
            grp_pointwise_conv2d_fix_fu_585_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_up_sampling2d_fix16_fu_564_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
            grp_up_sampling2d_fix16_fu_564_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_up_sampling2d_fix16_fu_564_ap_ready.read())) {
            grp_up_sampling2d_fix16_fu_564_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_398 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, input_data_last_V_tm_fu_626_p1.read()))) {
        i_0_reg_398 = i_fu_641_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        i_1_reg_409 = i_3_reg_698.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && 
                esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_4_fu_556_ap_done.read(), ap_const_logic_1))) {
        i_1_reg_409 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln160_fu_647_p2.read()))) {
        i_2_reg_420 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
                esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        i_2_reg_420 = i_4_reg_716.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_vld_out.read()))) {
            input_data_data_V_0_sel_rd =  (sc_logic) (~input_data_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_ack_in.read()))) {
            input_data_data_V_0_sel_wr =  (sc_logic) (~input_data_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(input_data_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(input_data_data_V_0_state.read(), ap_const_lv2_2)))) {
            input_data_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_data_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_data_data_V_0_state.read(), ap_const_lv2_1)))) {
            input_data_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(input_data_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_data_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(input_data_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_ack_out.read()))))) {
            input_data_data_V_0_state = ap_const_lv2_3;
        } else {
            input_data_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_vld_out.read()))) {
            input_data_dest_V_0_sel_rd =  (sc_logic) (~input_data_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_ack_in.read()))) {
            input_data_dest_V_0_sel_wr =  (sc_logic) (~input_data_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_data_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_data_dest_V_0_state.read())))) {
            input_data_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_data_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_dest_V_0_state.read())))) {
            input_data_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_data_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_data_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_ack_out.read()))))) {
            input_data_dest_V_0_state = ap_const_lv2_3;
        } else {
            input_data_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_vld_out.read()))) {
            input_data_id_V_0_sel_rd =  (sc_logic) (~input_data_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_ack_in.read()))) {
            input_data_id_V_0_sel_wr =  (sc_logic) (~input_data_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_data_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_data_id_V_0_state.read())))) {
            input_data_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_data_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_id_V_0_state.read())))) {
            input_data_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_data_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_data_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_ack_out.read()))))) {
            input_data_id_V_0_state = ap_const_lv2_3;
        } else {
            input_data_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_vld_out.read()))) {
            input_data_keep_V_0_sel_rd =  (sc_logic) (~input_data_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_ack_in.read()))) {
            input_data_keep_V_0_sel_wr =  (sc_logic) (~input_data_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_data_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_data_keep_V_0_state.read())))) {
            input_data_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_data_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_keep_V_0_state.read())))) {
            input_data_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_data_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_data_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_ack_out.read()))))) {
            input_data_keep_V_0_state = ap_const_lv2_3;
        } else {
            input_data_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_last_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_vld_out.read()))) {
            input_data_last_V_0_sel_rd =  (sc_logic) (~input_data_last_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_last_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_ack_in.read()))) {
            input_data_last_V_0_sel_wr =  (sc_logic) (~input_data_last_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_data_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_data_last_V_0_state.read())))) {
            input_data_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_data_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_last_V_0_state.read())))) {
            input_data_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_data_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_data_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_ack_out.read()))))) {
            input_data_last_V_0_state = ap_const_lv2_3;
        } else {
            input_data_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_vld_out.read()))) {
            input_data_strb_V_0_sel_rd =  (sc_logic) (~input_data_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_ack_in.read()))) {
            input_data_strb_V_0_sel_wr =  (sc_logic) (~input_data_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_data_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_data_strb_V_0_state.read())))) {
            input_data_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_data_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_strb_V_0_state.read())))) {
            input_data_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_data_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_data_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_ack_out.read()))))) {
            input_data_strb_V_0_state = ap_const_lv2_3;
        } else {
            input_data_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_vld_out.read()))) {
            input_data_user_V_0_sel_rd =  (sc_logic) (~input_data_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_ack_in.read()))) {
            input_data_user_V_0_sel_wr =  (sc_logic) (~input_data_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_data_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_data_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_data_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_data_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_data_user_V_0_state.read())))) {
            input_data_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_data_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_data_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_data_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_user_V_0_state.read())))) {
            input_data_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_data_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_data_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_data_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_data_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_data_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_ack_out.read()))))) {
            input_data_user_V_0_state = ap_const_lv2_3;
        } else {
            input_data_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_vld_out.read()))) {
            output_data_data_V_1_sel_rd =  (sc_logic) (~output_data_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_ack_in.read()))) {
            output_data_data_V_1_sel_wr =  (sc_logic) (~output_data_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_data_V_1_state.read())))) {
            output_data_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_data_V_1_state.read())))) {
            output_data_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_ack_out.read()))))) {
            output_data_data_V_1_state = ap_const_lv2_3;
        } else {
            output_data_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_vld_out.read()))) {
            output_data_dest_V_1_sel_rd =  (sc_logic) (~output_data_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_ack_in.read()))) {
            output_data_dest_V_1_sel_wr =  (sc_logic) (~output_data_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_dest_V_1_state.read())))) {
            output_data_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_dest_V_1_state.read())))) {
            output_data_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_ack_out.read()))))) {
            output_data_dest_V_1_state = ap_const_lv2_3;
        } else {
            output_data_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_vld_out.read()))) {
            output_data_id_V_1_sel_rd =  (sc_logic) (~output_data_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_id_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_ack_in.read()))) {
            output_data_id_V_1_sel_wr =  (sc_logic) (~output_data_id_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_id_V_1_state.read())))) {
            output_data_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_id_V_1_state.read())))) {
            output_data_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_ack_out.read()))))) {
            output_data_id_V_1_state = ap_const_lv2_3;
        } else {
            output_data_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_vld_out.read()))) {
            output_data_keep_V_1_sel_rd =  (sc_logic) (~output_data_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_ack_in.read()))) {
            output_data_keep_V_1_sel_wr =  (sc_logic) (~output_data_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_keep_V_1_state.read())))) {
            output_data_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_keep_V_1_state.read())))) {
            output_data_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_ack_out.read()))))) {
            output_data_keep_V_1_state = ap_const_lv2_3;
        } else {
            output_data_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_vld_out.read()))) {
            output_data_last_V_1_sel_rd =  (sc_logic) (~output_data_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_ack_in.read()))) {
            output_data_last_V_1_sel_wr =  (sc_logic) (~output_data_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_last_V_1_state.read())))) {
            output_data_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_last_V_1_state.read())))) {
            output_data_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_ack_out.read()))))) {
            output_data_last_V_1_state = ap_const_lv2_3;
        } else {
            output_data_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_vld_out.read()))) {
            output_data_strb_V_1_sel_rd =  (sc_logic) (~output_data_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_strb_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_ack_in.read()))) {
            output_data_strb_V_1_sel_wr =  (sc_logic) (~output_data_strb_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_strb_V_1_state.read())))) {
            output_data_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_strb_V_1_state.read())))) {
            output_data_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_ack_out.read()))))) {
            output_data_strb_V_1_state = ap_const_lv2_3;
        } else {
            output_data_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_vld_out.read()))) {
            output_data_user_V_1_sel_rd =  (sc_logic) (~output_data_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_ack_in.read()))) {
            output_data_user_V_1_sel_wr =  (sc_logic) (~output_data_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_data_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_data_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_data_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_data_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_data_user_V_1_state.read())))) {
            output_data_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_data_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_user_V_1_state.read())))) {
            output_data_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_data_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_data_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_data_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_data_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_ack_out.read()))))) {
            output_data_user_V_1_state = ap_const_lv2_3;
        } else {
            output_data_user_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        i_3_reg_698 = i_3_fu_653_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        i_4_reg_716 = i_4_fu_670_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_load_A.read())) {
        input_data_data_V_0_payload_A = input_data_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_load_B.read())) {
        input_data_data_V_0_payload_B = input_data_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_load_A.read())) {
        input_data_dest_V_0_payload_A = input_data_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_load_B.read())) {
        input_data_dest_V_0_payload_B = input_data_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_load_A.read())) {
        input_data_id_V_0_payload_A = input_data_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_load_B.read())) {
        input_data_id_V_0_payload_B = input_data_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_load_A.read())) {
        input_data_keep_V_0_payload_A = input_data_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_load_B.read())) {
        input_data_keep_V_0_payload_B = input_data_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_load_A.read())) {
        input_data_last_V_0_payload_A = input_data_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_load_B.read())) {
        input_data_last_V_0_payload_B = input_data_TLAST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_load_A.read())) {
        input_data_strb_V_0_payload_A = input_data_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_load_B.read())) {
        input_data_strb_V_0_payload_B = input_data_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_load_A.read())) {
        input_data_user_V_0_payload_A = input_data_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_load_B.read())) {
        input_data_user_V_0_payload_B = input_data_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_load_A.read())) {
        output_data_data_V_1_payload_A = MemBank_Out_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_load_B.read())) {
        output_data_data_V_1_payload_B = MemBank_Out_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_load_A.read())) {
        output_data_dest_V_1_payload_A = sig_buffer_dest_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_load_B.read())) {
        output_data_dest_V_1_payload_B = sig_buffer_dest_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_load_A.read())) {
        output_data_id_V_1_payload_A = sig_buffer_id_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_load_B.read())) {
        output_data_id_V_1_payload_B = sig_buffer_id_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_load_A.read())) {
        output_data_keep_V_1_payload_A = sig_buffer_keep_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_load_B.read())) {
        output_data_keep_V_1_payload_B = sig_buffer_keep_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_load_A.read())) {
        output_data_last_V_1_payload_A = sig_buffer_last_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_load_B.read())) {
        output_data_last_V_1_payload_B = sig_buffer_last_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_load_A.read())) {
        output_data_strb_V_1_payload_A = sig_buffer_strb_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_load_B.read())) {
        output_data_strb_V_1_payload_B = sig_buffer_strb_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_load_A.read())) {
        output_data_user_V_1_payload_A = sig_buffer_user_V_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_load_B.read())) {
        output_data_user_V_1_payload_B = sig_buffer_user_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln160_fu_647_p2.read()))) {
        zext_ln162_reg_703 = zext_ln162_fu_659_p1.read();
    }
}

void network::thread_MemBank_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        MemBank_A_address0 =  (sc_lv<14>) (sext_ln62_fu_595_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        MemBank_A_address0 = grp_pointwise_conv2d_fix_fu_585_input_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        MemBank_A_address0 = grp_up_sampling2d_fix16_fu_564_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        MemBank_A_address0 = grp_pointwise_conv2d_fix_4_fu_556_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        MemBank_A_address0 = grp_depthwise_conv2d_fix_fu_548_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        MemBank_A_address0 = grp_pointwise_conv2d_fix_2_fu_538_input_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        MemBank_A_address0 = grp_max_pooling2d_fix16_fu_517_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        MemBank_A_address0 = grp_pointwise_conv2d_fix_3_fu_507_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        MemBank_A_address0 = grp_pointwise_conv2d_fix_1_fu_497_input_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        MemBank_A_address0 = grp_depthwise_conv2d_fix_1_fu_473_output_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        MemBank_A_address0 = grp_depthwise_conv2d_fix_2_fu_449_output_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        MemBank_A_address0 = grp_padding2d_fix16_fu_431_input_r_address0.read();
    } else {
        MemBank_A_address0 = "XXXXXXXXXXXXXX";
    }
}

void network::thread_MemBank_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        MemBank_A_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        MemBank_A_ce0 = grp_pointwise_conv2d_fix_fu_585_input_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        MemBank_A_ce0 = grp_up_sampling2d_fix16_fu_564_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        MemBank_A_ce0 = grp_pointwise_conv2d_fix_4_fu_556_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        MemBank_A_ce0 = grp_depthwise_conv2d_fix_fu_548_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        MemBank_A_ce0 = grp_pointwise_conv2d_fix_2_fu_538_input_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        MemBank_A_ce0 = grp_max_pooling2d_fix16_fu_517_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        MemBank_A_ce0 = grp_pointwise_conv2d_fix_3_fu_507_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        MemBank_A_ce0 = grp_pointwise_conv2d_fix_1_fu_497_input_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        MemBank_A_ce0 = grp_depthwise_conv2d_fix_1_fu_473_output_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        MemBank_A_ce0 = grp_depthwise_conv2d_fix_2_fu_449_output_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        MemBank_A_ce0 = grp_padding2d_fix16_fu_431_input_r_ce0.read();
    } else {
        MemBank_A_ce0 = ap_const_logic_0;
    }
}

void network::thread_MemBank_A_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        MemBank_A_d0 = input_data_data_V_0_data_out.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        MemBank_A_d0 = grp_up_sampling2d_fix16_fu_564_output_r_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        MemBank_A_d0 = grp_depthwise_conv2d_fix_fu_548_output_r_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        MemBank_A_d0 = grp_max_pooling2d_fix16_fu_517_output_r_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        MemBank_A_d0 = grp_depthwise_conv2d_fix_1_fu_473_output_r_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        MemBank_A_d0 = grp_depthwise_conv2d_fix_2_fu_449_output_r_d0.read();
    } else {
        MemBank_A_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void network::thread_MemBank_A_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        MemBank_A_we0 = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        MemBank_A_we0 = grp_up_sampling2d_fix16_fu_564_output_r_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        MemBank_A_we0 = grp_depthwise_conv2d_fix_fu_548_output_r_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        MemBank_A_we0 = grp_max_pooling2d_fix16_fu_517_output_r_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        MemBank_A_we0 = grp_depthwise_conv2d_fix_1_fu_473_output_r_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        MemBank_A_we0 = grp_depthwise_conv2d_fix_2_fu_449_output_r_we0.read();
    } else {
        MemBank_A_we0 = ap_const_logic_0;
    }
}

void network::thread_MemBank_B_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        MemBank_B_address0 =  (sc_lv<14>) (zext_ln162_fu_659_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        MemBank_B_address0 = grp_pointwise_conv2d_fix_fu_585_output_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        MemBank_B_address0 = grp_up_sampling2d_fix16_fu_564_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        MemBank_B_address0 = grp_pointwise_conv2d_fix_4_fu_556_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        MemBank_B_address0 = grp_depthwise_conv2d_fix_fu_548_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        MemBank_B_address0 = grp_pointwise_conv2d_fix_2_fu_538_output_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        MemBank_B_address0 = grp_max_pooling2d_fix16_fu_517_input_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        MemBank_B_address0 = grp_pointwise_conv2d_fix_3_fu_507_output_r_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        MemBank_B_address0 = grp_pointwise_conv2d_fix_1_fu_497_output_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        MemBank_B_address0 = grp_depthwise_conv2d_fix_1_fu_473_input_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        MemBank_B_address0 = grp_depthwise_conv2d_fix_2_fu_449_input_r_address0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        MemBank_B_address0 = grp_padding2d_fix16_fu_431_output_r_address0.read();
    } else {
        MemBank_B_address0 = "XXXXXXXXXXXXXX";
    }
}

void network::thread_MemBank_B_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        MemBank_B_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        MemBank_B_ce0 = grp_pointwise_conv2d_fix_fu_585_output_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        MemBank_B_ce0 = grp_up_sampling2d_fix16_fu_564_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        MemBank_B_ce0 = grp_pointwise_conv2d_fix_4_fu_556_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        MemBank_B_ce0 = grp_depthwise_conv2d_fix_fu_548_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        MemBank_B_ce0 = grp_pointwise_conv2d_fix_2_fu_538_output_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        MemBank_B_ce0 = grp_max_pooling2d_fix16_fu_517_input_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        MemBank_B_ce0 = grp_pointwise_conv2d_fix_3_fu_507_output_r_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        MemBank_B_ce0 = grp_pointwise_conv2d_fix_1_fu_497_output_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        MemBank_B_ce0 = grp_depthwise_conv2d_fix_1_fu_473_input_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        MemBank_B_ce0 = grp_depthwise_conv2d_fix_2_fu_449_input_r_ce0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        MemBank_B_ce0 = grp_padding2d_fix16_fu_431_output_r_ce0.read();
    } else {
        MemBank_B_ce0 = ap_const_logic_0;
    }
}

void network::thread_MemBank_B_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        MemBank_B_d0 = grp_pointwise_conv2d_fix_fu_585_output_r_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        MemBank_B_d0 = grp_pointwise_conv2d_fix_4_fu_556_output_r_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        MemBank_B_d0 = grp_pointwise_conv2d_fix_2_fu_538_output_r_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        MemBank_B_d0 = grp_pointwise_conv2d_fix_3_fu_507_output_r_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        MemBank_B_d0 = grp_pointwise_conv2d_fix_1_fu_497_output_r_d0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        MemBank_B_d0 = grp_padding2d_fix16_fu_431_output_r_d0.read();
    } else {
        MemBank_B_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void network::thread_MemBank_B_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        MemBank_B_we0 = grp_pointwise_conv2d_fix_fu_585_output_r_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        MemBank_B_we0 = grp_pointwise_conv2d_fix_4_fu_556_output_r_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        MemBank_B_we0 = grp_pointwise_conv2d_fix_2_fu_538_output_r_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        MemBank_B_we0 = grp_pointwise_conv2d_fix_3_fu_507_output_r_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        MemBank_B_we0 = grp_pointwise_conv2d_fix_1_fu_497_output_r_we0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        MemBank_B_we0 = grp_padding2d_fix16_fu_431_output_r_we0.read();
    } else {
        MemBank_B_we0 = ap_const_logic_0;
    }
}

void network::thread_MemBank_Out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        MemBank_Out_address0 =  (sc_lv<10>) (zext_ln167_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        MemBank_Out_address0 =  (sc_lv<10>) (zext_ln162_reg_703.read());
    } else {
        MemBank_Out_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void network::thread_MemBank_Out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        MemBank_Out_ce0 = ap_const_logic_1;
    } else {
        MemBank_Out_ce0 = ap_const_logic_0;
    }
}

void network::thread_MemBank_Out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        MemBank_Out_we0 = ap_const_logic_1;
    } else {
        MemBank_Out_we0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_1_b_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        SeparableConv2D_1_b_1_ce0 = grp_depthwise_conv2d_fix_2_fu_449_bias_ce0.read();
    } else {
        SeparableConv2D_1_b_1_ce0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_1_w_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        SeparableConv2D_1_w_1_ce0 = grp_depthwise_conv2d_fix_2_fu_449_kernel_0_ce0.read();
    } else {
        SeparableConv2D_1_w_1_ce0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_2_b_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        SeparableConv2D_2_b_1_ce0 = grp_depthwise_conv2d_fix_1_fu_473_bias_ce0.read();
    } else {
        SeparableConv2D_2_b_1_ce0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_2_w_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        SeparableConv2D_2_w_1_ce0 = grp_depthwise_conv2d_fix_1_fu_473_kernel_0_ce0.read();
    } else {
        SeparableConv2D_2_w_1_ce0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_3_b_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        SeparableConv2D_3_b_1_ce0 = grp_depthwise_conv2d_fix_1_fu_473_bias_ce0.read();
    } else {
        SeparableConv2D_3_b_1_ce0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_3_w_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        SeparableConv2D_3_w_1_ce0 = grp_depthwise_conv2d_fix_1_fu_473_kernel_0_ce0.read();
    } else {
        SeparableConv2D_3_w_1_ce0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_4_b_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        SeparableConv2D_4_b_s_ce0 = grp_depthwise_conv2d_fix_2_fu_449_bias_ce0.read();
    } else {
        SeparableConv2D_4_b_s_ce0 = ap_const_logic_0;
    }
}

void network::thread_SeparableConv2D_4_w_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        SeparableConv2D_4_w_1_ce0 = grp_depthwise_conv2d_fix_2_fu_449_kernel_0_ce0.read();
    } else {
        SeparableConv2D_4_w_1_ce0 = ap_const_logic_0;
    }
}

void network::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void network::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void network::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void network::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void network::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void network::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void network::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void network::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void network::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void network::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void network::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void network::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void network::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void network::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void network::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void network::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void network::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void network::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void network::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void network::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void network::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void network::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void network::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void network::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void network::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void network::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void network::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void network::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void network::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void network::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void network::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void network::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void network::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void network::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void network::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void network::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void network::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void network::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void network::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void network::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void network::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void network::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void network::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void network::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void network::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void network::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void network::thread_ap_block_state46() {
    ap_block_state46 = (esl_seteq<1,2,2>(ap_const_lv2_1, output_data_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_dest_V_1_state.read())));
}

void network::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, output_data_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_dest_V_1_state.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void network::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void network::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
         !(esl_seteq<1,2,2>(ap_const_lv2_1, output_data_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_dest_V_1_state.read()))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void network::thread_ap_return() {
    ap_return = ap_const_lv32_0;
}

void network::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void network::thread_grp_depthwise_conv2d_fix_1_fu_473_ap_start() {
    grp_depthwise_conv2d_fix_1_fu_473_ap_start = grp_depthwise_conv2d_fix_1_fu_473_ap_start_reg.read();
}

void network::thread_grp_depthwise_conv2d_fix_1_fu_473_bias_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_bias_q0 = SeparableConv2D_3_b_1_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_bias_q0 = SeparableConv2D_2_b_1_q0.read();
    } else {
        grp_depthwise_conv2d_fix_1_fu_473_bias_q0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_1_fu_473_input_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_input_height = ap_const_lv6_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_input_height = ap_const_lv6_9;
    } else {
        grp_depthwise_conv2d_fix_1_fu_473_input_height =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_1_fu_473_input_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_input_width = ap_const_lv6_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_input_width = ap_const_lv6_9;
    } else {
        grp_depthwise_conv2d_fix_1_fu_473_input_width =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_1_fu_473_kernel_0_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_kernel_0_q0 = SeparableConv2D_3_w_1_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_kernel_0_q0 = SeparableConv2D_2_w_1_q0.read();
    } else {
        grp_depthwise_conv2d_fix_1_fu_473_kernel_0_q0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_1_fu_473_output_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_output_height = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_output_height = ap_const_lv5_7;
    } else {
        grp_depthwise_conv2d_fix_1_fu_473_output_height =  (sc_lv<5>) ("XXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_1_fu_473_output_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_output_width = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_depthwise_conv2d_fix_1_fu_473_output_width = ap_const_lv5_7;
    } else {
        grp_depthwise_conv2d_fix_1_fu_473_output_width =  (sc_lv<5>) ("XXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_2_fu_449_ap_start() {
    grp_depthwise_conv2d_fix_2_fu_449_ap_start = grp_depthwise_conv2d_fix_2_fu_449_ap_start_reg.read();
}

void network::thread_grp_depthwise_conv2d_fix_2_fu_449_bias_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_bias_q0 = SeparableConv2D_4_b_s_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_bias_q0 = SeparableConv2D_1_b_1_q0.read();
    } else {
        grp_depthwise_conv2d_fix_2_fu_449_bias_q0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_2_fu_449_input_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_input_height = ap_const_lv7_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_input_height = ap_const_lv7_10;
    } else {
        grp_depthwise_conv2d_fix_2_fu_449_input_height =  (sc_lv<7>) ("XXXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_2_fu_449_input_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_input_width = ap_const_lv6_1E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_input_width = ap_const_lv6_10;
    } else {
        grp_depthwise_conv2d_fix_2_fu_449_input_width =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_2_fu_449_kernel_0_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_kernel_0_q0 = SeparableConv2D_4_w_1_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_kernel_0_q0 = SeparableConv2D_1_w_1_q0.read();
    } else {
        grp_depthwise_conv2d_fix_2_fu_449_kernel_0_q0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_2_fu_449_output_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_output_height = ap_const_lv6_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_output_height = ap_const_lv6_E;
    } else {
        grp_depthwise_conv2d_fix_2_fu_449_output_height =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_2_fu_449_output_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_output_width = ap_const_lv6_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_depthwise_conv2d_fix_2_fu_449_output_width = ap_const_lv6_E;
    } else {
        grp_depthwise_conv2d_fix_2_fu_449_output_width =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_depthwise_conv2d_fix_fu_548_ap_start() {
    grp_depthwise_conv2d_fix_fu_548_ap_start = grp_depthwise_conv2d_fix_fu_548_ap_start_reg.read();
}

void network::thread_grp_max_pooling2d_fix16_fu_517_ap_start() {
    grp_max_pooling2d_fix16_fu_517_ap_start = grp_max_pooling2d_fix16_fu_517_ap_start_reg.read();
}

void network::thread_grp_max_pooling2d_fix16_fu_517_input_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_max_pooling2d_fix16_fu_517_input_height = ap_const_lv7_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_max_pooling2d_fix16_fu_517_input_height = ap_const_lv7_1C;
    } else {
        grp_max_pooling2d_fix16_fu_517_input_height =  (sc_lv<7>) ("XXXXXXX");
    }
}

void network::thread_grp_max_pooling2d_fix16_fu_517_input_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_max_pooling2d_fix16_fu_517_input_width = ap_const_lv6_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_max_pooling2d_fix16_fu_517_input_width = ap_const_lv6_1C;
    } else {
        grp_max_pooling2d_fix16_fu_517_input_width =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_max_pooling2d_fix16_fu_517_output_depth() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_max_pooling2d_fix16_fu_517_output_depth = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_max_pooling2d_fix16_fu_517_output_depth = ap_const_lv6_10;
    } else {
        grp_max_pooling2d_fix16_fu_517_output_depth =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_max_pooling2d_fix16_fu_517_output_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_max_pooling2d_fix16_fu_517_output_height = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_max_pooling2d_fix16_fu_517_output_height = ap_const_lv5_E;
    } else {
        grp_max_pooling2d_fix16_fu_517_output_height =  (sc_lv<5>) ("XXXXX");
    }
}

void network::thread_grp_max_pooling2d_fix16_fu_517_output_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_max_pooling2d_fix16_fu_517_output_width = ap_const_lv5_7;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_max_pooling2d_fix16_fu_517_output_width = ap_const_lv5_E;
    } else {
        grp_max_pooling2d_fix16_fu_517_output_width =  (sc_lv<5>) ("XXXXX");
    }
}

void network::thread_grp_padding2d_fix16_fu_431_ap_start() {
    grp_padding2d_fix16_fu_431_ap_start = grp_padding2d_fix16_fu_431_ap_start_reg.read();
}

void network::thread_grp_padding2d_fix16_fu_431_input_depth() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_padding2d_fix16_fu_431_input_depth = ap_const_lv7_8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        grp_padding2d_fix16_fu_431_input_depth = ap_const_lv7_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_padding2d_fix16_fu_431_input_depth = ap_const_lv7_1;
    } else {
        grp_padding2d_fix16_fu_431_input_depth =  (sc_lv<7>) ("XXXXXXX");
    }
}

void network::thread_grp_padding2d_fix16_fu_431_input_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_padding2d_fix16_fu_431_input_height = ap_const_lv6_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_padding2d_fix16_fu_431_input_height = ap_const_lv6_E;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        grp_padding2d_fix16_fu_431_input_height = ap_const_lv6_1C;
    } else {
        grp_padding2d_fix16_fu_431_input_height =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_padding2d_fix16_fu_431_input_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_padding2d_fix16_fu_431_input_width = ap_const_lv6_7;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_padding2d_fix16_fu_431_input_width = ap_const_lv6_E;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        grp_padding2d_fix16_fu_431_input_width = ap_const_lv6_1C;
    } else {
        grp_padding2d_fix16_fu_431_input_width =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_pointwise_conv2d_fix_1_fu_497_ap_start() {
    grp_pointwise_conv2d_fix_1_fu_497_ap_start = grp_pointwise_conv2d_fix_1_fu_497_ap_start_reg.read();
}

void network::thread_grp_pointwise_conv2d_fix_2_fu_538_ap_start() {
    grp_pointwise_conv2d_fix_2_fu_538_ap_start = grp_pointwise_conv2d_fix_2_fu_538_ap_start_reg.read();
}

void network::thread_grp_pointwise_conv2d_fix_3_fu_507_ap_start() {
    grp_pointwise_conv2d_fix_3_fu_507_ap_start = grp_pointwise_conv2d_fix_3_fu_507_ap_start_reg.read();
}

void network::thread_grp_pointwise_conv2d_fix_4_fu_556_ap_start() {
    grp_pointwise_conv2d_fix_4_fu_556_ap_start = grp_pointwise_conv2d_fix_4_fu_556_ap_start_reg.read();
}

void network::thread_grp_pointwise_conv2d_fix_fu_585_ap_start() {
    grp_pointwise_conv2d_fix_fu_585_ap_start = grp_pointwise_conv2d_fix_fu_585_ap_start_reg.read();
}

void network::thread_grp_up_sampling2d_fix16_fu_564_ap_start() {
    grp_up_sampling2d_fix16_fu_564_ap_start = grp_up_sampling2d_fix16_fu_564_ap_start_reg.read();
}

void network::thread_grp_up_sampling2d_fix16_fu_564_input_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_up_sampling2d_fix16_fu_564_input_height = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_up_sampling2d_fix16_fu_564_input_height = ap_const_lv5_7;
    } else {
        grp_up_sampling2d_fix16_fu_564_input_height =  (sc_lv<5>) ("XXXXX");
    }
}

void network::thread_grp_up_sampling2d_fix16_fu_564_input_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_up_sampling2d_fix16_fu_564_input_width = ap_const_lv5_E;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_up_sampling2d_fix16_fu_564_input_width = ap_const_lv5_7;
    } else {
        grp_up_sampling2d_fix16_fu_564_input_width =  (sc_lv<5>) ("XXXXX");
    }
}

void network::thread_grp_up_sampling2d_fix16_fu_564_output_depth() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_up_sampling2d_fix16_fu_564_output_depth = ap_const_lv6_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_up_sampling2d_fix16_fu_564_output_depth = ap_const_lv6_8;
    } else {
        grp_up_sampling2d_fix16_fu_564_output_depth =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_up_sampling2d_fix16_fu_564_output_height() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_up_sampling2d_fix16_fu_564_output_height = ap_const_lv6_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_up_sampling2d_fix16_fu_564_output_height = ap_const_lv6_E;
    } else {
        grp_up_sampling2d_fix16_fu_564_output_height =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_grp_up_sampling2d_fix16_fu_564_output_width() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        grp_up_sampling2d_fix16_fu_564_output_width = ap_const_lv6_1C;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_up_sampling2d_fix16_fu_564_output_width = ap_const_lv6_E;
    } else {
        grp_up_sampling2d_fix16_fu_564_output_width =  (sc_lv<6>) ("XXXXXX");
    }
}

void network::thread_i_3_fu_653_p2() {
    i_3_fu_653_p2 = (!i_1_reg_409.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_1_reg_409.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void network::thread_i_4_fu_670_p2() {
    i_4_fu_670_p2 = (!i_2_reg_420.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_2_reg_420.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void network::thread_i_fu_641_p2() {
    i_fu_641_p2 = (!i_0_reg_398.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(i_0_reg_398.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void network::thread_icmp_ln160_fu_647_p2() {
    icmp_ln160_fu_647_p2 = (!i_1_reg_409.read().is_01() || !ap_const_lv10_310.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_409.read() == ap_const_lv10_310);
}

void network::thread_icmp_ln165_fu_664_p2() {
    icmp_ln165_fu_664_p2 = (!i_2_reg_420.read().is_01() || !ap_const_lv10_310.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_420.read() == ap_const_lv10_310);
}

void network::thread_input_data_TDATA_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        input_data_TDATA_blk_n = input_data_data_V_0_state.read()[0];
    } else {
        input_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void network::thread_input_data_TREADY() {
    input_data_TREADY = input_data_dest_V_0_state.read()[1];
}

void network::thread_input_data_data_V_0_ack_in() {
    input_data_data_V_0_ack_in = input_data_data_V_0_state.read()[1];
}

void network::thread_input_data_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        input_data_data_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_data_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_data_V_0_sel.read())) {
        input_data_data_V_0_data_out = input_data_data_V_0_payload_B.read();
    } else {
        input_data_data_V_0_data_out = input_data_data_V_0_payload_A.read();
    }
}

void network::thread_input_data_data_V_0_load_A() {
    input_data_data_V_0_load_A = (input_data_data_V_0_state_cmp_full.read() & ~input_data_data_V_0_sel_wr.read());
}

void network::thread_input_data_data_V_0_load_B() {
    input_data_data_V_0_load_B = (input_data_data_V_0_sel_wr.read() & input_data_data_V_0_state_cmp_full.read());
}

void network::thread_input_data_data_V_0_sel() {
    input_data_data_V_0_sel = input_data_data_V_0_sel_rd.read();
}

void network::thread_input_data_data_V_0_state_cmp_full() {
    input_data_data_V_0_state_cmp_full =  (sc_logic) ((!input_data_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_data_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void network::thread_input_data_data_V_0_vld_in() {
    input_data_data_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_input_data_data_V_0_vld_out() {
    input_data_data_V_0_vld_out = input_data_data_V_0_state.read()[0];
}

void network::thread_input_data_dest_V_0_ack_in() {
    input_data_dest_V_0_ack_in = input_data_dest_V_0_state.read()[1];
}

void network::thread_input_data_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        input_data_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_dest_V_0_sel.read())) {
        input_data_dest_V_0_data_out = input_data_dest_V_0_payload_B.read();
    } else {
        input_data_dest_V_0_data_out = input_data_dest_V_0_payload_A.read();
    }
}

void network::thread_input_data_dest_V_0_load_A() {
    input_data_dest_V_0_load_A = (input_data_dest_V_0_state_cmp_full.read() & ~input_data_dest_V_0_sel_wr.read());
}

void network::thread_input_data_dest_V_0_load_B() {
    input_data_dest_V_0_load_B = (input_data_dest_V_0_sel_wr.read() & input_data_dest_V_0_state_cmp_full.read());
}

void network::thread_input_data_dest_V_0_sel() {
    input_data_dest_V_0_sel = input_data_dest_V_0_sel_rd.read();
}

void network::thread_input_data_dest_V_0_state_cmp_full() {
    input_data_dest_V_0_state_cmp_full =  (sc_logic) ((!input_data_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_data_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void network::thread_input_data_dest_V_0_vld_in() {
    input_data_dest_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_input_data_dest_V_0_vld_out() {
    input_data_dest_V_0_vld_out = input_data_dest_V_0_state.read()[0];
}

void network::thread_input_data_id_V_0_ack_in() {
    input_data_id_V_0_ack_in = input_data_id_V_0_state.read()[1];
}

void network::thread_input_data_id_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        input_data_id_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_id_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_id_V_0_sel.read())) {
        input_data_id_V_0_data_out = input_data_id_V_0_payload_B.read();
    } else {
        input_data_id_V_0_data_out = input_data_id_V_0_payload_A.read();
    }
}

void network::thread_input_data_id_V_0_load_A() {
    input_data_id_V_0_load_A = (input_data_id_V_0_state_cmp_full.read() & ~input_data_id_V_0_sel_wr.read());
}

void network::thread_input_data_id_V_0_load_B() {
    input_data_id_V_0_load_B = (input_data_id_V_0_sel_wr.read() & input_data_id_V_0_state_cmp_full.read());
}

void network::thread_input_data_id_V_0_sel() {
    input_data_id_V_0_sel = input_data_id_V_0_sel_rd.read();
}

void network::thread_input_data_id_V_0_state_cmp_full() {
    input_data_id_V_0_state_cmp_full =  (sc_logic) ((!input_data_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_data_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void network::thread_input_data_id_V_0_vld_in() {
    input_data_id_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_input_data_id_V_0_vld_out() {
    input_data_id_V_0_vld_out = input_data_id_V_0_state.read()[0];
}

void network::thread_input_data_keep_V_0_ack_in() {
    input_data_keep_V_0_ack_in = input_data_keep_V_0_state.read()[1];
}

void network::thread_input_data_keep_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        input_data_keep_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_keep_V_0_sel.read())) {
        input_data_keep_V_0_data_out = input_data_keep_V_0_payload_B.read();
    } else {
        input_data_keep_V_0_data_out = input_data_keep_V_0_payload_A.read();
    }
}

void network::thread_input_data_keep_V_0_load_A() {
    input_data_keep_V_0_load_A = (input_data_keep_V_0_state_cmp_full.read() & ~input_data_keep_V_0_sel_wr.read());
}

void network::thread_input_data_keep_V_0_load_B() {
    input_data_keep_V_0_load_B = (input_data_keep_V_0_sel_wr.read() & input_data_keep_V_0_state_cmp_full.read());
}

void network::thread_input_data_keep_V_0_sel() {
    input_data_keep_V_0_sel = input_data_keep_V_0_sel_rd.read();
}

void network::thread_input_data_keep_V_0_state_cmp_full() {
    input_data_keep_V_0_state_cmp_full =  (sc_logic) ((!input_data_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_data_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void network::thread_input_data_keep_V_0_vld_in() {
    input_data_keep_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_input_data_keep_V_0_vld_out() {
    input_data_keep_V_0_vld_out = input_data_keep_V_0_state.read()[0];
}

void network::thread_input_data_last_V_0_ack_in() {
    input_data_last_V_0_ack_in = input_data_last_V_0_state.read()[1];
}

void network::thread_input_data_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        input_data_last_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_last_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_last_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_last_V_0_sel.read())) {
        input_data_last_V_0_data_out = input_data_last_V_0_payload_B.read();
    } else {
        input_data_last_V_0_data_out = input_data_last_V_0_payload_A.read();
    }
}

void network::thread_input_data_last_V_0_load_A() {
    input_data_last_V_0_load_A = (input_data_last_V_0_state_cmp_full.read() & ~input_data_last_V_0_sel_wr.read());
}

void network::thread_input_data_last_V_0_load_B() {
    input_data_last_V_0_load_B = (input_data_last_V_0_sel_wr.read() & input_data_last_V_0_state_cmp_full.read());
}

void network::thread_input_data_last_V_0_sel() {
    input_data_last_V_0_sel = input_data_last_V_0_sel_rd.read();
}

void network::thread_input_data_last_V_0_state_cmp_full() {
    input_data_last_V_0_state_cmp_full =  (sc_logic) ((!input_data_last_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_data_last_V_0_state.read() != ap_const_lv2_1))[0];
}

void network::thread_input_data_last_V_0_vld_in() {
    input_data_last_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_input_data_last_V_0_vld_out() {
    input_data_last_V_0_vld_out = input_data_last_V_0_state.read()[0];
}

void network::thread_input_data_last_V_tm_fu_626_p1() {
    input_data_last_V_tm_fu_626_p1 = input_data_last_V_0_data_out.read();
}

void network::thread_input_data_strb_V_0_ack_in() {
    input_data_strb_V_0_ack_in = input_data_strb_V_0_state.read()[1];
}

void network::thread_input_data_strb_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        input_data_strb_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_strb_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_strb_V_0_sel.read())) {
        input_data_strb_V_0_data_out = input_data_strb_V_0_payload_B.read();
    } else {
        input_data_strb_V_0_data_out = input_data_strb_V_0_payload_A.read();
    }
}

void network::thread_input_data_strb_V_0_load_A() {
    input_data_strb_V_0_load_A = (input_data_strb_V_0_state_cmp_full.read() & ~input_data_strb_V_0_sel_wr.read());
}

void network::thread_input_data_strb_V_0_load_B() {
    input_data_strb_V_0_load_B = (input_data_strb_V_0_sel_wr.read() & input_data_strb_V_0_state_cmp_full.read());
}

void network::thread_input_data_strb_V_0_sel() {
    input_data_strb_V_0_sel = input_data_strb_V_0_sel_rd.read();
}

void network::thread_input_data_strb_V_0_state_cmp_full() {
    input_data_strb_V_0_state_cmp_full =  (sc_logic) ((!input_data_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_data_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void network::thread_input_data_strb_V_0_vld_in() {
    input_data_strb_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_input_data_strb_V_0_vld_out() {
    input_data_strb_V_0_vld_out = input_data_strb_V_0_state.read()[0];
}

void network::thread_input_data_user_V_0_ack_in() {
    input_data_user_V_0_ack_in = input_data_user_V_0_state.read()[1];
}

void network::thread_input_data_user_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        input_data_user_V_0_ack_out = ap_const_logic_1;
    } else {
        input_data_user_V_0_ack_out = ap_const_logic_0;
    }
}

void network::thread_input_data_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_data_user_V_0_sel.read())) {
        input_data_user_V_0_data_out = input_data_user_V_0_payload_B.read();
    } else {
        input_data_user_V_0_data_out = input_data_user_V_0_payload_A.read();
    }
}

void network::thread_input_data_user_V_0_load_A() {
    input_data_user_V_0_load_A = (input_data_user_V_0_state_cmp_full.read() & ~input_data_user_V_0_sel_wr.read());
}

void network::thread_input_data_user_V_0_load_B() {
    input_data_user_V_0_load_B = (input_data_user_V_0_sel_wr.read() & input_data_user_V_0_state_cmp_full.read());
}

void network::thread_input_data_user_V_0_sel() {
    input_data_user_V_0_sel = input_data_user_V_0_sel_rd.read();
}

void network::thread_input_data_user_V_0_state_cmp_full() {
    input_data_user_V_0_state_cmp_full =  (sc_logic) ((!input_data_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_data_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void network::thread_input_data_user_V_0_vld_in() {
    input_data_user_V_0_vld_in = input_data_TVALID.read();
}

void network::thread_input_data_user_V_0_vld_out() {
    input_data_user_V_0_vld_out = input_data_user_V_0_state.read()[0];
}

void network::thread_output_data_TDATA() {
    output_data_TDATA = output_data_data_V_1_data_out.read();
}

void network::thread_output_data_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()))) {
        output_data_TDATA_blk_n = output_data_data_V_1_state.read()[1];
    } else {
        output_data_TDATA_blk_n = ap_const_logic_1;
    }
}

void network::thread_output_data_TDEST() {
    output_data_TDEST = output_data_dest_V_1_data_out.read();
}

void network::thread_output_data_TID() {
    output_data_TID = output_data_id_V_1_data_out.read();
}

void network::thread_output_data_TKEEP() {
    output_data_TKEEP = output_data_keep_V_1_data_out.read();
}

void network::thread_output_data_TLAST() {
    output_data_TLAST = output_data_last_V_1_data_out.read();
}

void network::thread_output_data_TSTRB() {
    output_data_TSTRB = output_data_strb_V_1_data_out.read();
}

void network::thread_output_data_TUSER() {
    output_data_TUSER = output_data_user_V_1_data_out.read();
}

void network::thread_output_data_TVALID() {
    output_data_TVALID = output_data_dest_V_1_state.read()[0];
}

void network::thread_output_data_data_V_1_ack_in() {
    output_data_data_V_1_ack_in = output_data_data_V_1_state.read()[1];
}

void network::thread_output_data_data_V_1_ack_out() {
    output_data_data_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_data_V_1_sel.read())) {
        output_data_data_V_1_data_out = output_data_data_V_1_payload_B.read();
    } else {
        output_data_data_V_1_data_out = output_data_data_V_1_payload_A.read();
    }
}

void network::thread_output_data_data_V_1_load_A() {
    output_data_data_V_1_load_A = (output_data_data_V_1_state_cmp_full.read() & ~output_data_data_V_1_sel_wr.read());
}

void network::thread_output_data_data_V_1_load_B() {
    output_data_data_V_1_load_B = (output_data_data_V_1_sel_wr.read() & output_data_data_V_1_state_cmp_full.read());
}

void network::thread_output_data_data_V_1_sel() {
    output_data_data_V_1_sel = output_data_data_V_1_sel_rd.read();
}

void network::thread_output_data_data_V_1_state_cmp_full() {
    output_data_data_V_1_state_cmp_full =  (sc_logic) ((!output_data_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_data_data_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_data_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_data_V_1_vld_out() {
    output_data_data_V_1_vld_out = output_data_data_V_1_state.read()[0];
}

void network::thread_output_data_dest_V_1_ack_in() {
    output_data_dest_V_1_ack_in = output_data_dest_V_1_state.read()[1];
}

void network::thread_output_data_dest_V_1_ack_out() {
    output_data_dest_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_dest_V_1_sel.read())) {
        output_data_dest_V_1_data_out = output_data_dest_V_1_payload_B.read();
    } else {
        output_data_dest_V_1_data_out = output_data_dest_V_1_payload_A.read();
    }
}

void network::thread_output_data_dest_V_1_load_A() {
    output_data_dest_V_1_load_A = (output_data_dest_V_1_state_cmp_full.read() & ~output_data_dest_V_1_sel_wr.read());
}

void network::thread_output_data_dest_V_1_load_B() {
    output_data_dest_V_1_load_B = (output_data_dest_V_1_sel_wr.read() & output_data_dest_V_1_state_cmp_full.read());
}

void network::thread_output_data_dest_V_1_sel() {
    output_data_dest_V_1_sel = output_data_dest_V_1_sel_rd.read();
}

void network::thread_output_data_dest_V_1_state_cmp_full() {
    output_data_dest_V_1_state_cmp_full =  (sc_logic) ((!output_data_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_data_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_dest_V_1_vld_out() {
    output_data_dest_V_1_vld_out = output_data_dest_V_1_state.read()[0];
}

void network::thread_output_data_id_V_1_ack_in() {
    output_data_id_V_1_ack_in = output_data_id_V_1_state.read()[1];
}

void network::thread_output_data_id_V_1_ack_out() {
    output_data_id_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_id_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_id_V_1_sel.read())) {
        output_data_id_V_1_data_out = output_data_id_V_1_payload_B.read();
    } else {
        output_data_id_V_1_data_out = output_data_id_V_1_payload_A.read();
    }
}

void network::thread_output_data_id_V_1_load_A() {
    output_data_id_V_1_load_A = (output_data_id_V_1_state_cmp_full.read() & ~output_data_id_V_1_sel_wr.read());
}

void network::thread_output_data_id_V_1_load_B() {
    output_data_id_V_1_load_B = (output_data_id_V_1_sel_wr.read() & output_data_id_V_1_state_cmp_full.read());
}

void network::thread_output_data_id_V_1_sel() {
    output_data_id_V_1_sel = output_data_id_V_1_sel_rd.read();
}

void network::thread_output_data_id_V_1_state_cmp_full() {
    output_data_id_V_1_state_cmp_full =  (sc_logic) ((!output_data_id_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_id_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_data_id_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_id_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_id_V_1_vld_out() {
    output_data_id_V_1_vld_out = output_data_id_V_1_state.read()[0];
}

void network::thread_output_data_keep_V_1_ack_in() {
    output_data_keep_V_1_ack_in = output_data_keep_V_1_state.read()[1];
}

void network::thread_output_data_keep_V_1_ack_out() {
    output_data_keep_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_keep_V_1_sel.read())) {
        output_data_keep_V_1_data_out = output_data_keep_V_1_payload_B.read();
    } else {
        output_data_keep_V_1_data_out = output_data_keep_V_1_payload_A.read();
    }
}

void network::thread_output_data_keep_V_1_load_A() {
    output_data_keep_V_1_load_A = (output_data_keep_V_1_state_cmp_full.read() & ~output_data_keep_V_1_sel_wr.read());
}

void network::thread_output_data_keep_V_1_load_B() {
    output_data_keep_V_1_load_B = (output_data_keep_V_1_sel_wr.read() & output_data_keep_V_1_state_cmp_full.read());
}

void network::thread_output_data_keep_V_1_sel() {
    output_data_keep_V_1_sel = output_data_keep_V_1_sel_rd.read();
}

void network::thread_output_data_keep_V_1_state_cmp_full() {
    output_data_keep_V_1_state_cmp_full =  (sc_logic) ((!output_data_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_data_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_keep_V_1_vld_out() {
    output_data_keep_V_1_vld_out = output_data_keep_V_1_state.read()[0];
}

void network::thread_output_data_last_V_1_ack_in() {
    output_data_last_V_1_ack_in = output_data_last_V_1_state.read()[1];
}

void network::thread_output_data_last_V_1_ack_out() {
    output_data_last_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_last_V_1_sel.read())) {
        output_data_last_V_1_data_out = output_data_last_V_1_payload_B.read();
    } else {
        output_data_last_V_1_data_out = output_data_last_V_1_payload_A.read();
    }
}

void network::thread_output_data_last_V_1_load_A() {
    output_data_last_V_1_load_A = (output_data_last_V_1_state_cmp_full.read() & ~output_data_last_V_1_sel_wr.read());
}

void network::thread_output_data_last_V_1_load_B() {
    output_data_last_V_1_load_B = (output_data_last_V_1_sel_wr.read() & output_data_last_V_1_state_cmp_full.read());
}

void network::thread_output_data_last_V_1_sel() {
    output_data_last_V_1_sel = output_data_last_V_1_sel_rd.read();
}

void network::thread_output_data_last_V_1_state_cmp_full() {
    output_data_last_V_1_state_cmp_full =  (sc_logic) ((!output_data_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_data_last_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_last_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_last_V_1_vld_out() {
    output_data_last_V_1_vld_out = output_data_last_V_1_state.read()[0];
}

void network::thread_output_data_strb_V_1_ack_in() {
    output_data_strb_V_1_ack_in = output_data_strb_V_1_state.read()[1];
}

void network::thread_output_data_strb_V_1_ack_out() {
    output_data_strb_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_strb_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_strb_V_1_sel.read())) {
        output_data_strb_V_1_data_out = output_data_strb_V_1_payload_B.read();
    } else {
        output_data_strb_V_1_data_out = output_data_strb_V_1_payload_A.read();
    }
}

void network::thread_output_data_strb_V_1_load_A() {
    output_data_strb_V_1_load_A = (output_data_strb_V_1_state_cmp_full.read() & ~output_data_strb_V_1_sel_wr.read());
}

void network::thread_output_data_strb_V_1_load_B() {
    output_data_strb_V_1_load_B = (output_data_strb_V_1_sel_wr.read() & output_data_strb_V_1_state_cmp_full.read());
}

void network::thread_output_data_strb_V_1_sel() {
    output_data_strb_V_1_sel = output_data_strb_V_1_sel_rd.read();
}

void network::thread_output_data_strb_V_1_state_cmp_full() {
    output_data_strb_V_1_state_cmp_full =  (sc_logic) ((!output_data_strb_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_strb_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_data_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_strb_V_1_vld_out() {
    output_data_strb_V_1_vld_out = output_data_strb_V_1_state.read()[0];
}

void network::thread_output_data_user_V_1_ack_in() {
    output_data_user_V_1_ack_in = output_data_user_V_1_state.read()[1];
}

void network::thread_output_data_user_V_1_ack_out() {
    output_data_user_V_1_ack_out = output_data_TREADY.read();
}

void network::thread_output_data_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_data_user_V_1_sel.read())) {
        output_data_user_V_1_data_out = output_data_user_V_1_payload_B.read();
    } else {
        output_data_user_V_1_data_out = output_data_user_V_1_payload_A.read();
    }
}

void network::thread_output_data_user_V_1_load_A() {
    output_data_user_V_1_load_A = (output_data_user_V_1_state_cmp_full.read() & ~output_data_user_V_1_sel_wr.read());
}

void network::thread_output_data_user_V_1_load_B() {
    output_data_user_V_1_load_B = (output_data_user_V_1_sel_wr.read() & output_data_user_V_1_state_cmp_full.read());
}

void network::thread_output_data_user_V_1_sel() {
    output_data_user_V_1_sel = output_data_user_V_1_sel_rd.read();
}

void network::thread_output_data_user_V_1_state_cmp_full() {
    output_data_user_V_1_state_cmp_full =  (sc_logic) ((!output_data_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_data_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void network::thread_output_data_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && 
         esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_data_user_V_1_vld_in = ap_const_logic_1;
    } else {
        output_data_user_V_1_vld_in = ap_const_logic_0;
    }
}

void network::thread_output_data_user_V_1_vld_out() {
    output_data_user_V_1_vld_out = output_data_user_V_1_state.read()[0];
}

void network::thread_sext_ln62_fu_595_p1() {
    sext_ln62_fu_595_p1 = esl_sext<64,32>(i_0_reg_398.read());
}

void network::thread_sig_buffer_dest_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sig_buffer_dest_V_address0 =  (sc_lv<10>) (zext_ln167_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_buffer_dest_V_address0 =  (sc_lv<10>) (sext_ln62_fu_595_p1.read());
    } else {
        sig_buffer_dest_V_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void network::thread_sig_buffer_dest_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        sig_buffer_dest_V_ce0 = ap_const_logic_1;
    } else {
        sig_buffer_dest_V_ce0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_dest_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        sig_buffer_dest_V_we0 = ap_const_logic_1;
    } else {
        sig_buffer_dest_V_we0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_id_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sig_buffer_id_V_address0 =  (sc_lv<10>) (zext_ln167_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_buffer_id_V_address0 =  (sc_lv<10>) (sext_ln62_fu_595_p1.read());
    } else {
        sig_buffer_id_V_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void network::thread_sig_buffer_id_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        sig_buffer_id_V_ce0 = ap_const_logic_1;
    } else {
        sig_buffer_id_V_ce0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_id_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        sig_buffer_id_V_we0 = ap_const_logic_1;
    } else {
        sig_buffer_id_V_we0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_keep_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sig_buffer_keep_V_address0 =  (sc_lv<10>) (zext_ln167_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_buffer_keep_V_address0 =  (sc_lv<10>) (sext_ln62_fu_595_p1.read());
    } else {
        sig_buffer_keep_V_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void network::thread_sig_buffer_keep_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        sig_buffer_keep_V_ce0 = ap_const_logic_1;
    } else {
        sig_buffer_keep_V_ce0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_keep_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        sig_buffer_keep_V_we0 = ap_const_logic_1;
    } else {
        sig_buffer_keep_V_we0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_last_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sig_buffer_last_V_address0 =  (sc_lv<10>) (zext_ln167_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_buffer_last_V_address0 =  (sc_lv<10>) (sext_ln62_fu_595_p1.read());
    } else {
        sig_buffer_last_V_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void network::thread_sig_buffer_last_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        sig_buffer_last_V_ce0 = ap_const_logic_1;
    } else {
        sig_buffer_last_V_ce0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_last_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        sig_buffer_last_V_we0 = ap_const_logic_1;
    } else {
        sig_buffer_last_V_we0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_strb_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sig_buffer_strb_V_address0 =  (sc_lv<10>) (zext_ln167_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_buffer_strb_V_address0 =  (sc_lv<10>) (sext_ln62_fu_595_p1.read());
    } else {
        sig_buffer_strb_V_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void network::thread_sig_buffer_strb_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        sig_buffer_strb_V_ce0 = ap_const_logic_1;
    } else {
        sig_buffer_strb_V_ce0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_strb_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        sig_buffer_strb_V_we0 = ap_const_logic_1;
    } else {
        sig_buffer_strb_V_we0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_user_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        sig_buffer_user_V_address0 =  (sc_lv<10>) (zext_ln167_fu_676_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sig_buffer_user_V_address0 =  (sc_lv<10>) (sext_ln62_fu_595_p1.read());
    } else {
        sig_buffer_user_V_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void network::thread_sig_buffer_user_V_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        sig_buffer_user_V_ce0 = ap_const_logic_1;
    } else {
        sig_buffer_user_V_ce0 = ap_const_logic_0;
    }
}

void network::thread_sig_buffer_user_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1))) {
        sig_buffer_user_V_we0 = ap_const_logic_1;
    } else {
        sig_buffer_user_V_we0 = ap_const_logic_0;
    }
}

void network::thread_zext_ln162_fu_659_p1() {
    zext_ln162_fu_659_p1 = esl_zext<64,10>(i_1_reg_409.read());
}

void network::thread_zext_ln167_fu_676_p1() {
    zext_ln167_fu_676_p1 = esl_zext<64,10>(i_2_reg_420.read());
}

void network::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, input_data_last_V_tm_fu_626_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(input_data_data_V_0_vld_out.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, input_data_last_V_tm_fu_626_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_padding2d_fix16_fu_431_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_depthwise_conv2d_fix_fu_548_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_fu_585_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_max_pooling2d_fix16_fu_517_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_padding2d_fix16_fu_431_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(grp_depthwise_conv2d_fix_2_fu_449_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_1_fu_497_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(grp_max_pooling2d_fix16_fu_517_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state18;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(grp_padding2d_fix16_fu_431_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(grp_depthwise_conv2d_fix_1_fu_473_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) && esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_2_fu_538_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) && esl_seteq<1,1,1>(grp_up_sampling2d_fix16_fu_564_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state27;
            } else {
                ap_NS_fsm = ap_ST_fsm_state26;
            }
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(grp_padding2d_fix16_fu_431_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) && esl_seteq<1,1,1>(grp_depthwise_conv2d_fix_1_fu_473_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state31;
            } else {
                ap_NS_fsm = ap_ST_fsm_state30;
            }
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) && esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_3_fu_507_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) && esl_seteq<1,1,1>(grp_up_sampling2d_fix16_fu_564_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_state34;
            }
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) && esl_seteq<1,1,1>(grp_padding2d_fix16_fu_431_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state36;
            }
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(grp_depthwise_conv2d_fix_2_fu_449_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(grp_pointwise_conv2d_fix_4_fu_556_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        case 1099511627776 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln160_fu_647_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_state42;
            }
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 4398046511104 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln165_fu_664_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state46;
            } else {
                ap_NS_fsm = ap_ST_fsm_state44;
            }
            break;
        case 8796093022208 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state45;
            } else {
                ap_NS_fsm = ap_ST_fsm_state44;
            }
            break;
        case 17592186044416 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(output_data_data_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_state45;
            }
            break;
        case 35184372088832 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, output_data_data_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_keep_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_strb_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_user_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_last_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_id_V_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_data_dest_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_data_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_keep_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_strb_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_user_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_last_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_id_V_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_data_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_data_dest_V_1_state.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state46;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<46>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void network::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TDATA\" :  \"" << input_data_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TVALID\" :  \"" << input_data_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_data_TREADY\" :  \"" << input_data_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TKEEP\" :  \"" << input_data_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TSTRB\" :  \"" << input_data_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TUSER\" :  \"" << input_data_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TLAST\" :  \"" << input_data_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TID\" :  \"" << input_data_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_data_TDEST\" :  \"" << input_data_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TDATA\" :  \"" << output_data_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TVALID\" :  \"" << output_data_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_data_TREADY\" :  \"" << output_data_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TKEEP\" :  \"" << output_data_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TSTRB\" :  \"" << output_data_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TUSER\" :  \"" << output_data_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TLAST\" :  \"" << output_data_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TID\" :  \"" << output_data_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_data_TDEST\" :  \"" << output_data_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

