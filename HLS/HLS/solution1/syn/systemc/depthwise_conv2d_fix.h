// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _depthwise_conv2d_fix_HH_
#define _depthwise_conv2d_fix_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mul_mul_16s_13s_30_1_1.h"
#include "depthwise_conv2d_fix_empty.h"

namespace ap_rtl {

struct depthwise_conv2d_fix : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    depthwise_conv2d_fix(sc_module_name name);
    SC_HAS_PROCESS(depthwise_conv2d_fix);

    ~depthwise_conv2d_fix();

    sc_trace_file* mVcdFile;

    depthwise_conv2d_fix_empty* empty_U;
    network_mul_mul_16s_13s_30_1_1<1,1,16,13,30>* network_mul_mul_16s_13s_30_1_1_U6;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > empty_address0;
    sc_signal< sc_logic > empty_ce0;
    sc_signal< sc_lv<13> > empty_q0;
    sc_signal< sc_lv<4> > i_fu_180_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > out_h_fu_192_p2;
    sc_signal< sc_lv<5> > out_h_reg_428;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > tmp8_fu_222_p2;
    sc_signal< sc_lv<11> > tmp8_reg_433;
    sc_signal< sc_lv<1> > icmp_ln31_fu_186_p2;
    sc_signal< sc_lv<5> > out_w_fu_234_p2;
    sc_signal< sc_lv<5> > out_w_reg_441;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > zext_ln35_fu_240_p1;
    sc_signal< sc_lv<11> > zext_ln35_reg_446;
    sc_signal< sc_lv<1> > icmp_ln32_fu_228_p2;
    sc_signal< sc_lv<2> > k_h_fu_250_p2;
    sc_signal< sc_lv<2> > k_h_reg_454;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > sub_ln37_fu_272_p2;
    sc_signal< sc_lv<5> > sub_ln37_reg_459;
    sc_signal< sc_lv<1> > icmp_ln35_fu_244_p2;
    sc_signal< sc_lv<11> > tmp6_fu_308_p2;
    sc_signal< sc_lv<11> > tmp6_reg_464;
    sc_signal< sc_lv<2> > k_w_fu_338_p2;
    sc_signal< sc_lv<2> > k_w_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln36_fu_332_p2;
    sc_signal< sc_lv<16> > input_load_reg_487;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<13> > empty_79_reg_492;
    sc_signal< sc_lv<17> > tmp_7_reg_497;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > buffer_fu_404_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > i_0_reg_93;
    sc_signal< sc_lv<1> > icmp_ln24_fu_174_p2;
    sc_signal< sc_lv<5> > out_h_0_reg_104;
    sc_signal< sc_lv<5> > out_w_0_reg_116;
    sc_signal< sc_lv<32> > buffer_0_reg_128;
    sc_signal< sc_lv<2> > k_h_0_reg_140;
    sc_signal< sc_lv<32> > buffer_1_reg_151;
    sc_signal< sc_lv<2> > k_w_0_reg_163;
    sc_signal< sc_lv<64> > zext_ln45_fu_327_p1;
    sc_signal< sc_lv<64> > zext_ln37_9_fu_367_p1;
    sc_signal< sc_lv<64> > zext_ln37_8_fu_381_p1;
    sc_signal< sc_lv<10> > p_shl8_fu_198_p3;
    sc_signal< sc_lv<7> > p_shl9_fu_210_p3;
    sc_signal< sc_lv<11> > p_shl8_cast_fu_206_p1;
    sc_signal< sc_lv<11> > p_shl9_cast_fu_218_p1;
    sc_signal< sc_lv<4> > shl_ln_fu_260_p3;
    sc_signal< sc_lv<5> > zext_ln37_22_fu_268_p1;
    sc_signal< sc_lv<5> > zext_ln37_fu_256_p1;
    sc_signal< sc_lv<5> > tmp_fu_278_p2;
    sc_signal< sc_lv<10> > p_shl6_fu_284_p3;
    sc_signal< sc_lv<6> > p_shl7_fu_296_p3;
    sc_signal< sc_lv<11> > p_shl6_cast_fu_292_p1;
    sc_signal< sc_lv<11> > p_shl7_cast_fu_304_p1;
    sc_signal< sc_lv<11> > add_ln45_fu_319_p2;
    sc_signal< sc_lv<32> > sext_ln45_fu_323_p1;
    sc_signal< sc_lv<5> > zext_ln37_23_fu_344_p1;
    sc_signal< sc_lv<5> > add_ln37_fu_348_p2;
    sc_signal< sc_lv<11> > zext_ln37_24_fu_354_p1;
    sc_signal< sc_lv<11> > add_ln37_4_fu_358_p2;
    sc_signal< sc_lv<32> > sext_ln37_12_fu_363_p1;
    sc_signal< sc_lv<5> > add_ln37_5_fu_372_p2;
    sc_signal< sc_lv<32> > sext_ln37_13_fu_377_p1;
    sc_signal< sc_lv<30> > mul_ln37_fu_410_p2;
    sc_signal< sc_lv<32> > sext_ln37_2_fu_401_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1D;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln37_4_fu_358_p2();
    void thread_add_ln37_5_fu_372_p2();
    void thread_add_ln37_fu_348_p2();
    void thread_add_ln45_fu_319_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_fu_404_p2();
    void thread_empty_address0();
    void thread_empty_ce0();
    void thread_i_fu_180_p2();
    void thread_icmp_ln24_fu_174_p2();
    void thread_icmp_ln31_fu_186_p2();
    void thread_icmp_ln32_fu_228_p2();
    void thread_icmp_ln35_fu_244_p2();
    void thread_icmp_ln36_fu_332_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_k_h_fu_250_p2();
    void thread_k_w_fu_338_p2();
    void thread_out_h_fu_192_p2();
    void thread_out_w_fu_234_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl6_cast_fu_292_p1();
    void thread_p_shl6_fu_284_p3();
    void thread_p_shl7_cast_fu_304_p1();
    void thread_p_shl7_fu_296_p3();
    void thread_p_shl8_cast_fu_206_p1();
    void thread_p_shl8_fu_198_p3();
    void thread_p_shl9_cast_fu_218_p1();
    void thread_p_shl9_fu_210_p3();
    void thread_sext_ln37_12_fu_363_p1();
    void thread_sext_ln37_13_fu_377_p1();
    void thread_sext_ln37_2_fu_401_p1();
    void thread_sext_ln45_fu_323_p1();
    void thread_shl_ln_fu_260_p3();
    void thread_sub_ln37_fu_272_p2();
    void thread_tmp6_fu_308_p2();
    void thread_tmp8_fu_222_p2();
    void thread_tmp_fu_278_p2();
    void thread_zext_ln35_fu_240_p1();
    void thread_zext_ln37_22_fu_268_p1();
    void thread_zext_ln37_23_fu_344_p1();
    void thread_zext_ln37_24_fu_354_p1();
    void thread_zext_ln37_8_fu_381_p1();
    void thread_zext_ln37_9_fu_367_p1();
    void thread_zext_ln37_fu_256_p1();
    void thread_zext_ln45_fu_327_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
