// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv2d_fix.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv2d_fix::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv2d_fix::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> pointwise_conv2d_fix::ap_ST_fsm_state1 = "1";
const sc_lv<8> pointwise_conv2d_fix::ap_ST_fsm_state2 = "10";
const sc_lv<8> pointwise_conv2d_fix::ap_ST_fsm_state3 = "100";
const sc_lv<8> pointwise_conv2d_fix::ap_ST_fsm_state4 = "1000";
const sc_lv<8> pointwise_conv2d_fix::ap_ST_fsm_state5 = "10000";
const sc_lv<8> pointwise_conv2d_fix::ap_ST_fsm_state6 = "100000";
const sc_lv<8> pointwise_conv2d_fix::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> pointwise_conv2d_fix::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_1 = "1";
const sc_lv<1> pointwise_conv2d_fix::ap_const_lv1_0 = "0";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_2 = "10";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_3 = "11";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_4 = "100";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_5 = "101";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_6 = "110";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_0 = "00000";
const sc_lv<1> pointwise_conv2d_fix::ap_const_lv1_1 = "1";
const sc_lv<14> pointwise_conv2d_fix::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_7 = "111";
const sc_lv<14> pointwise_conv2d_fix::ap_const_lv14_310 = "1100010000";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_10 = "10000";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_1 = "1";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_1C = "11100";
const sc_lv<2> pointwise_conv2d_fix::ap_const_lv2_0 = "00";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_D = "1101";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_1D = "11101";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_12 = "10010";
const sc_lv<16> pointwise_conv2d_fix::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<16> pointwise_conv2d_fix::ap_const_lv16_0 = "0000000000000000";
const bool pointwise_conv2d_fix::ap_const_boolean_1 = true;

pointwise_conv2d_fix::pointwise_conv2d_fix(sc_module_name name) : sc_module(name), mVcdFile(0) {
    SeparableConv2D_0_b_s_U = new pointwise_conv2d_fix_SeparableConv2D_0_b_s("SeparableConv2D_0_b_s_U");
    SeparableConv2D_0_b_s_U->clk(ap_clk);
    SeparableConv2D_0_b_s_U->reset(ap_rst);
    SeparableConv2D_0_b_s_U->address0(SeparableConv2D_0_b_s_address0);
    SeparableConv2D_0_b_s_U->ce0(SeparableConv2D_0_b_s_ce0);
    SeparableConv2D_0_b_s_U->q0(SeparableConv2D_0_b_s_q0);
    SeparableConv2D_0_w_s_U = new pointwise_conv2d_fix_SeparableConv2D_0_w_s("SeparableConv2D_0_w_s_U");
    SeparableConv2D_0_w_s_U->clk(ap_clk);
    SeparableConv2D_0_w_s_U->reset(ap_rst);
    SeparableConv2D_0_w_s_U->address0(SeparableConv2D_0_w_s_address0);
    SeparableConv2D_0_w_s_U->ce0(SeparableConv2D_0_w_s_ce0);
    SeparableConv2D_0_w_s_U->q0(SeparableConv2D_0_w_s_q0);
    network_mul_mul_16s_14s_30_1_1_U11 = new network_mul_mul_16s_14s_30_1_1<1,1,16,14,30>("network_mul_mul_16s_14s_30_1_1_U11");
    network_mul_mul_16s_14s_30_1_1_U11->din0(input_load_reg_407);
    network_mul_mul_16s_14s_30_1_1_U11->din1(mul_ln37_fu_332_p1);
    network_mul_mul_16s_14s_30_1_1_U11->dout(mul_ln37_fu_332_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SeparableConv2D_0_b_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln25_fu_168_p1 );

    SC_METHOD(thread_SeparableConv2D_0_b_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_SeparableConv2D_0_w_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln28_1_fu_177_p1 );

    SC_METHOD(thread_SeparableConv2D_0_w_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_add_ln24_fu_150_p2);
    sensitive << ( phi_mul_reg_113 );

    SC_METHOD(thread_add_ln37_fu_248_p2);
    sensitive << ( sub_ln37_reg_384 );
    sensitive << ( zext_ln35_fu_244_p1 );

    SC_METHOD(thread_add_ln43_fu_266_p2);
    sensitive << ( zext_ln24_reg_338 );
    sensitive << ( sext_ln43_fu_262_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_156_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_156_p2 );

    SC_METHOD(thread_buffer_fu_286_p2);
    sensitive << ( sext_ln31_reg_371 );
    sensitive << ( sext_ln37_14_fu_283_p1 );

    SC_METHOD(thread_icmp_ln24_fu_156_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_d_0_reg_102 );

    SC_METHOD(thread_icmp_ln31_fu_190_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( out_h_0_reg_124 );

    SC_METHOD(thread_icmp_ln33_fu_232_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( out_w_0_reg_135 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln37_4_fu_257_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_mul_ln37_fu_332_p1);
    sensitive << ( sext_ln37_2_cast_reg_366 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_out_d_fu_162_p2);
    sensitive << ( out_d_0_reg_102 );

    SC_METHOD(thread_out_h_fu_196_p2);
    sensitive << ( out_h_0_reg_124 );

    SC_METHOD(thread_out_w_fu_238_p2);
    sensitive << ( out_w_0_reg_135 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln43_fu_327_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( select_ln42_fu_309_p3 );
    sensitive << ( trunc_ln42_fu_299_p1 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_select_ln42_fu_309_p3);
    sensitive << ( xor_ln42_fu_303_p2 );

    SC_METHOD(thread_sext_ln31_fu_186_p1);
    sensitive << ( SeparableConv2D_0_b_s_q0 );

    SC_METHOD(thread_sext_ln37_14_fu_283_p1);
    sensitive << ( tmp_reg_412 );

    SC_METHOD(thread_sext_ln37_2_cast_fu_182_p1);
    sensitive << ( SeparableConv2D_0_w_s_q0 );

    SC_METHOD(thread_sext_ln37_fu_253_p1);
    sensitive << ( add_ln37_fu_248_p2 );

    SC_METHOD(thread_sext_ln43_1_fu_324_p1);
    sensitive << ( add_ln43_reg_402 );

    SC_METHOD(thread_sext_ln43_fu_262_p1);
    sensitive << ( add_ln37_fu_248_p2 );

    SC_METHOD(thread_shl_ln37_1_fu_214_p3);
    sensitive << ( out_h_0_reg_124 );

    SC_METHOD(thread_shl_ln_fu_202_p3);
    sensitive << ( out_h_0_reg_124 );

    SC_METHOD(thread_sub_ln37_fu_226_p2);
    sensitive << ( zext_ln37_2_fu_210_p1 );
    sensitive << ( zext_ln37_5_fu_222_p1 );

    SC_METHOD(thread_tmp_4_fu_291_p3);
    sensitive << ( buffer_fu_286_p2 );

    SC_METHOD(thread_trunc_ln26_fu_173_p1);
    sensitive << ( out_d_0_reg_102 );

    SC_METHOD(thread_trunc_ln42_fu_299_p1);
    sensitive << ( buffer_fu_286_p2 );

    SC_METHOD(thread_xor_ln42_fu_303_p2);
    sensitive << ( tmp_4_fu_291_p3 );

    SC_METHOD(thread_zext_ln24_fu_146_p1);
    sensitive << ( phi_mul_reg_113 );

    SC_METHOD(thread_zext_ln25_fu_168_p1);
    sensitive << ( out_d_0_reg_102 );

    SC_METHOD(thread_zext_ln28_1_fu_177_p1);
    sensitive << ( trunc_ln26_fu_173_p1 );

    SC_METHOD(thread_zext_ln35_fu_244_p1);
    sensitive << ( out_w_0_reg_135 );

    SC_METHOD(thread_zext_ln37_2_fu_210_p1);
    sensitive << ( shl_ln_fu_202_p3 );

    SC_METHOD(thread_zext_ln37_4_fu_257_p1);
    sensitive << ( sext_ln37_fu_253_p1 );

    SC_METHOD(thread_zext_ln37_5_fu_222_p1);
    sensitive << ( shl_ln37_1_fu_214_p3 );

    SC_METHOD(thread_zext_ln43_fu_327_p1);
    sensitive << ( sext_ln43_1_fu_324_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_156_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln31_fu_190_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln33_fu_232_p2 );

    ap_CS_fsm = "00000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv2d_fix_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_address0, "SeparableConv2D_0_b_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_ce0, "SeparableConv2D_0_b_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_q0, "SeparableConv2D_0_b_s_q0");
    sc_trace(mVcdFile, SeparableConv2D_0_w_s_address0, "SeparableConv2D_0_w_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_0_w_s_ce0, "SeparableConv2D_0_w_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_0_w_s_q0, "SeparableConv2D_0_w_s_q0");
    sc_trace(mVcdFile, zext_ln24_fu_146_p1, "zext_ln24_fu_146_p1");
    sc_trace(mVcdFile, zext_ln24_reg_338, "zext_ln24_reg_338");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln24_fu_150_p2, "add_ln24_fu_150_p2");
    sc_trace(mVcdFile, add_ln24_reg_343, "add_ln24_reg_343");
    sc_trace(mVcdFile, out_d_fu_162_p2, "out_d_fu_162_p2");
    sc_trace(mVcdFile, out_d_reg_351, "out_d_reg_351");
    sc_trace(mVcdFile, icmp_ln24_fu_156_p2, "icmp_ln24_fu_156_p2");
    sc_trace(mVcdFile, sext_ln37_2_cast_fu_182_p1, "sext_ln37_2_cast_fu_182_p1");
    sc_trace(mVcdFile, sext_ln37_2_cast_reg_366, "sext_ln37_2_cast_reg_366");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sext_ln31_fu_186_p1, "sext_ln31_fu_186_p1");
    sc_trace(mVcdFile, sext_ln31_reg_371, "sext_ln31_reg_371");
    sc_trace(mVcdFile, out_h_fu_196_p2, "out_h_fu_196_p2");
    sc_trace(mVcdFile, out_h_reg_379, "out_h_reg_379");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sub_ln37_fu_226_p2, "sub_ln37_fu_226_p2");
    sc_trace(mVcdFile, sub_ln37_reg_384, "sub_ln37_reg_384");
    sc_trace(mVcdFile, icmp_ln31_fu_190_p2, "icmp_ln31_fu_190_p2");
    sc_trace(mVcdFile, out_w_fu_238_p2, "out_w_fu_238_p2");
    sc_trace(mVcdFile, out_w_reg_392, "out_w_reg_392");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln33_fu_232_p2, "icmp_ln33_fu_232_p2");
    sc_trace(mVcdFile, add_ln43_fu_266_p2, "add_ln43_fu_266_p2");
    sc_trace(mVcdFile, add_ln43_reg_402, "add_ln43_reg_402");
    sc_trace(mVcdFile, input_load_reg_407, "input_load_reg_407");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_reg_412, "tmp_reg_412");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, out_d_0_reg_102, "out_d_0_reg_102");
    sc_trace(mVcdFile, phi_mul_reg_113, "phi_mul_reg_113");
    sc_trace(mVcdFile, out_h_0_reg_124, "out_h_0_reg_124");
    sc_trace(mVcdFile, out_w_0_reg_135, "out_w_0_reg_135");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, zext_ln25_fu_168_p1, "zext_ln25_fu_168_p1");
    sc_trace(mVcdFile, zext_ln28_1_fu_177_p1, "zext_ln28_1_fu_177_p1");
    sc_trace(mVcdFile, zext_ln37_4_fu_257_p1, "zext_ln37_4_fu_257_p1");
    sc_trace(mVcdFile, zext_ln43_fu_327_p1, "zext_ln43_fu_327_p1");
    sc_trace(mVcdFile, trunc_ln26_fu_173_p1, "trunc_ln26_fu_173_p1");
    sc_trace(mVcdFile, shl_ln_fu_202_p3, "shl_ln_fu_202_p3");
    sc_trace(mVcdFile, shl_ln37_1_fu_214_p3, "shl_ln37_1_fu_214_p3");
    sc_trace(mVcdFile, zext_ln37_2_fu_210_p1, "zext_ln37_2_fu_210_p1");
    sc_trace(mVcdFile, zext_ln37_5_fu_222_p1, "zext_ln37_5_fu_222_p1");
    sc_trace(mVcdFile, zext_ln35_fu_244_p1, "zext_ln35_fu_244_p1");
    sc_trace(mVcdFile, add_ln37_fu_248_p2, "add_ln37_fu_248_p2");
    sc_trace(mVcdFile, sext_ln37_fu_253_p1, "sext_ln37_fu_253_p1");
    sc_trace(mVcdFile, sext_ln43_fu_262_p1, "sext_ln43_fu_262_p1");
    sc_trace(mVcdFile, mul_ln37_fu_332_p2, "mul_ln37_fu_332_p2");
    sc_trace(mVcdFile, sext_ln37_14_fu_283_p1, "sext_ln37_14_fu_283_p1");
    sc_trace(mVcdFile, buffer_fu_286_p2, "buffer_fu_286_p2");
    sc_trace(mVcdFile, tmp_4_fu_291_p3, "tmp_4_fu_291_p3");
    sc_trace(mVcdFile, xor_ln42_fu_303_p2, "xor_ln42_fu_303_p2");
    sc_trace(mVcdFile, select_ln42_fu_309_p3, "select_ln42_fu_309_p3");
    sc_trace(mVcdFile, trunc_ln42_fu_299_p1, "trunc_ln42_fu_299_p1");
    sc_trace(mVcdFile, sext_ln43_1_fu_324_p1, "sext_ln43_1_fu_324_p1");
    sc_trace(mVcdFile, mul_ln37_fu_332_p1, "mul_ln37_fu_332_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pointwise_conv2d_fix::~pointwise_conv2d_fix() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete SeparableConv2D_0_b_s_U;
    delete SeparableConv2D_0_w_s_U;
    delete network_mul_mul_16s_14s_30_1_1_U11;
}

void pointwise_conv2d_fix::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln31_fu_190_p2.read(), ap_const_lv1_1))) {
        out_d_0_reg_102 = out_d_reg_351.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_d_0_reg_102 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_232_p2.read(), ap_const_lv1_1))) {
        out_h_0_reg_124 = out_h_reg_379.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_h_0_reg_124 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_190_p2.read()))) {
        out_w_0_reg_135 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        out_w_0_reg_135 = out_w_reg_392.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln31_fu_190_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_113 = add_ln24_reg_343.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_113 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln24_reg_343 = add_ln24_fu_150_p2.read();
        out_d_reg_351 = out_d_fu_162_p2.read();
        zext_ln24_reg_338 = zext_ln24_fu_146_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_232_p2.read()))) {
        add_ln43_reg_402 = add_ln43_fu_266_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_load_reg_407 = input_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        out_h_reg_379 = out_h_fu_196_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_w_reg_392 = out_w_fu_238_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sext_ln31_reg_371 = sext_ln31_fu_186_p1.read();
        sext_ln37_2_cast_reg_366 = sext_ln37_2_cast_fu_182_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_190_p2.read()))) {
        sub_ln37_reg_384 = sub_ln37_fu_226_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp_reg_412 = mul_ln37_fu_332_p2.read().range(29, 13);
    }
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_b_s_address0() {
    SeparableConv2D_0_b_s_address0 =  (sc_lv<4>) (zext_ln25_fu_168_p1.read());
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_b_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        SeparableConv2D_0_b_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_0_b_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_w_s_address0() {
    SeparableConv2D_0_w_s_address0 =  (sc_lv<4>) (zext_ln28_1_fu_177_p1.read());
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_w_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        SeparableConv2D_0_w_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_0_w_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_add_ln24_fu_150_p2() {
    add_ln24_fu_150_p2 = (!phi_mul_reg_113.read().is_01() || !ap_const_lv14_310.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_113.read()) + sc_biguint<14>(ap_const_lv14_310));
}

void pointwise_conv2d_fix::thread_add_ln37_fu_248_p2() {
    add_ln37_fu_248_p2 = (!zext_ln35_fu_244_p1.read().is_01() || !sub_ln37_reg_384.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln35_fu_244_p1.read()) + sc_biguint<11>(sub_ln37_reg_384.read()));
}

void pointwise_conv2d_fix::thread_add_ln43_fu_266_p2() {
    add_ln43_fu_266_p2 = (!zext_ln24_reg_338.read().is_01() || !sext_ln43_fu_262_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln24_reg_338.read()) + sc_bigint<15>(sext_ln43_fu_262_p1.read()));
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void pointwise_conv2d_fix::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln24_fu_156_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_156_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_buffer_fu_286_p2() {
    buffer_fu_286_p2 = (!sext_ln37_14_fu_283_p1.read().is_01() || !sext_ln31_reg_371.read().is_01())? sc_lv<19>(): (sc_bigint<19>(sext_ln37_14_fu_283_p1.read()) + sc_bigint<19>(sext_ln31_reg_371.read()));
}

void pointwise_conv2d_fix::thread_icmp_ln24_fu_156_p2() {
    icmp_ln24_fu_156_p2 = (!out_d_0_reg_102.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(out_d_0_reg_102.read() == ap_const_lv5_10);
}

void pointwise_conv2d_fix::thread_icmp_ln31_fu_190_p2() {
    icmp_ln31_fu_190_p2 = (!out_h_0_reg_124.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_h_0_reg_124.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix::thread_icmp_ln33_fu_232_p2() {
    icmp_ln33_fu_232_p2 = (!out_w_0_reg_135.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_w_0_reg_135.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<14>) (zext_ln37_4_fu_257_p1.read());
}

void pointwise_conv2d_fix::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_mul_ln37_fu_332_p1() {
    mul_ln37_fu_332_p1 =  (sc_lv<14>) (sext_ln37_2_cast_reg_366.read());
}

void pointwise_conv2d_fix::thread_out_d_fu_162_p2() {
    out_d_fu_162_p2 = (!out_d_0_reg_102.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_d_0_reg_102.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix::thread_out_h_fu_196_p2() {
    out_h_fu_196_p2 = (!out_h_0_reg_124.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_h_0_reg_124.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix::thread_out_w_fu_238_p2() {
    out_w_fu_238_p2 = (!out_w_0_reg_135.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_w_0_reg_135.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<14>) (zext_ln43_fu_327_p1.read());
}

void pointwise_conv2d_fix::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_output_r_d0() {
    output_r_d0 = (select_ln42_fu_309_p3.read() & trunc_ln42_fu_299_p1.read());
}

void pointwise_conv2d_fix::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_select_ln42_fu_309_p3() {
    select_ln42_fu_309_p3 = (!xor_ln42_fu_303_p2.read()[0].is_01())? sc_lv<16>(): ((xor_ln42_fu_303_p2.read()[0].to_bool())? ap_const_lv16_FFFF: ap_const_lv16_0);
}

void pointwise_conv2d_fix::thread_sext_ln31_fu_186_p1() {
    sext_ln31_fu_186_p1 = esl_sext<19,14>(SeparableConv2D_0_b_s_q0.read());
}

void pointwise_conv2d_fix::thread_sext_ln37_14_fu_283_p1() {
    sext_ln37_14_fu_283_p1 = esl_sext<19,17>(tmp_reg_412.read());
}

void pointwise_conv2d_fix::thread_sext_ln37_2_cast_fu_182_p1() {
    sext_ln37_2_cast_fu_182_p1 = esl_sext<30,14>(SeparableConv2D_0_w_s_q0.read());
}

void pointwise_conv2d_fix::thread_sext_ln37_fu_253_p1() {
    sext_ln37_fu_253_p1 = esl_sext<32,11>(add_ln37_fu_248_p2.read());
}

void pointwise_conv2d_fix::thread_sext_ln43_1_fu_324_p1() {
    sext_ln43_1_fu_324_p1 = esl_sext<32,15>(add_ln43_reg_402.read());
}

void pointwise_conv2d_fix::thread_sext_ln43_fu_262_p1() {
    sext_ln43_fu_262_p1 = esl_sext<15,11>(add_ln37_fu_248_p2.read());
}

void pointwise_conv2d_fix::thread_shl_ln37_1_fu_214_p3() {
    shl_ln37_1_fu_214_p3 = esl_concat<5,2>(out_h_0_reg_124.read(), ap_const_lv2_0);
}

void pointwise_conv2d_fix::thread_shl_ln_fu_202_p3() {
    shl_ln_fu_202_p3 = esl_concat<5,5>(out_h_0_reg_124.read(), ap_const_lv5_0);
}

void pointwise_conv2d_fix::thread_sub_ln37_fu_226_p2() {
    sub_ln37_fu_226_p2 = (!zext_ln37_2_fu_210_p1.read().is_01() || !zext_ln37_5_fu_222_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln37_2_fu_210_p1.read()) - sc_biguint<11>(zext_ln37_5_fu_222_p1.read()));
}

void pointwise_conv2d_fix::thread_tmp_4_fu_291_p3() {
    tmp_4_fu_291_p3 = buffer_fu_286_p2.read().range(18, 18);
}

void pointwise_conv2d_fix::thread_trunc_ln26_fu_173_p1() {
    trunc_ln26_fu_173_p1 = out_d_0_reg_102.read().range(4-1, 0);
}

void pointwise_conv2d_fix::thread_trunc_ln42_fu_299_p1() {
    trunc_ln42_fu_299_p1 = buffer_fu_286_p2.read().range(16-1, 0);
}

void pointwise_conv2d_fix::thread_xor_ln42_fu_303_p2() {
    xor_ln42_fu_303_p2 = (tmp_4_fu_291_p3.read() ^ ap_const_lv1_1);
}

void pointwise_conv2d_fix::thread_zext_ln24_fu_146_p1() {
    zext_ln24_fu_146_p1 = esl_zext<15,14>(phi_mul_reg_113.read());
}

void pointwise_conv2d_fix::thread_zext_ln25_fu_168_p1() {
    zext_ln25_fu_168_p1 = esl_zext<64,5>(out_d_0_reg_102.read());
}

void pointwise_conv2d_fix::thread_zext_ln28_1_fu_177_p1() {
    zext_ln28_1_fu_177_p1 = esl_zext<64,4>(trunc_ln26_fu_173_p1.read());
}

void pointwise_conv2d_fix::thread_zext_ln35_fu_244_p1() {
    zext_ln35_fu_244_p1 = esl_zext<11,5>(out_w_0_reg_135.read());
}

void pointwise_conv2d_fix::thread_zext_ln37_2_fu_210_p1() {
    zext_ln37_2_fu_210_p1 = esl_zext<11,10>(shl_ln_fu_202_p3.read());
}

void pointwise_conv2d_fix::thread_zext_ln37_4_fu_257_p1() {
    zext_ln37_4_fu_257_p1 = esl_zext<64,32>(sext_ln37_fu_253_p1.read());
}

void pointwise_conv2d_fix::thread_zext_ln37_5_fu_222_p1() {
    zext_ln37_5_fu_222_p1 = esl_zext<11,7>(shl_ln37_1_fu_214_p3.read());
}

void pointwise_conv2d_fix::thread_zext_ln43_fu_327_p1() {
    zext_ln43_fu_327_p1 = esl_zext<64,32>(sext_ln43_1_fu_324_p1.read());
}

void pointwise_conv2d_fix::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln24_fu_156_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln31_fu_190_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln33_fu_232_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

