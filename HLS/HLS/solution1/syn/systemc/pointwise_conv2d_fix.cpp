// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv2d_fix.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv2d_fix::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv2d_fix::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> pointwise_conv2d_fix::ap_ST_fsm_state1 = "1";
const sc_lv<6> pointwise_conv2d_fix::ap_ST_fsm_state2 = "10";
const sc_lv<6> pointwise_conv2d_fix::ap_ST_fsm_state3 = "100";
const sc_lv<6> pointwise_conv2d_fix::ap_ST_fsm_state4 = "1000";
const sc_lv<6> pointwise_conv2d_fix::ap_ST_fsm_pp0_stage0 = "10000";
const sc_lv<6> pointwise_conv2d_fix::ap_ST_fsm_state9 = "100000";
const bool pointwise_conv2d_fix::ap_const_boolean_1 = true;
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_4 = "100";
const bool pointwise_conv2d_fix::ap_const_boolean_0 = false;
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_1 = "1";
const sc_lv<1> pointwise_conv2d_fix::ap_const_lv1_0 = "0";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_2 = "10";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_3 = "11";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_5 = "101";
const sc_lv<1> pointwise_conv2d_fix::ap_const_lv1_1 = "1";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_0 = "00000";
const sc_lv<14> pointwise_conv2d_fix::ap_const_lv14_0 = "00000000000000";
const sc_lv<10> pointwise_conv2d_fix::ap_const_lv10_0 = "0000000000";
const sc_lv<14> pointwise_conv2d_fix::ap_const_lv14_310 = "1100010000";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_10 = "10000";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_1 = "1";
const sc_lv<2> pointwise_conv2d_fix::ap_const_lv2_0 = "00";
const sc_lv<10> pointwise_conv2d_fix::ap_const_lv10_310 = "1100010000";
const sc_lv<10> pointwise_conv2d_fix::ap_const_lv10_1 = "1";
const sc_lv<5> pointwise_conv2d_fix::ap_const_lv5_1C = "11100";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_E = "1110";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_1F = "11111";
const sc_lv<32> pointwise_conv2d_fix::ap_const_lv32_12 = "10010";
const sc_lv<16> pointwise_conv2d_fix::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<16> pointwise_conv2d_fix::ap_const_lv16_0 = "0000000000000000";

pointwise_conv2d_fix::pointwise_conv2d_fix(sc_module_name name) : sc_module(name), mVcdFile(0) {
    SeparableConv2D_0_b_s_U = new pointwise_conv2d_fix_SeparableConv2D_0_b_s("SeparableConv2D_0_b_s_U");
    SeparableConv2D_0_b_s_U->clk(ap_clk);
    SeparableConv2D_0_b_s_U->reset(ap_rst);
    SeparableConv2D_0_b_s_U->address0(SeparableConv2D_0_b_s_address0);
    SeparableConv2D_0_b_s_U->ce0(SeparableConv2D_0_b_s_ce0);
    SeparableConv2D_0_b_s_U->q0(SeparableConv2D_0_b_s_q0);
    SeparableConv2D_0_w_s_U = new pointwise_conv2d_fix_SeparableConv2D_0_w_s("SeparableConv2D_0_w_s_U");
    SeparableConv2D_0_w_s_U->clk(ap_clk);
    SeparableConv2D_0_w_s_U->reset(ap_rst);
    SeparableConv2D_0_w_s_U->address0(SeparableConv2D_0_w_s_address0);
    SeparableConv2D_0_w_s_U->ce0(SeparableConv2D_0_w_s_ce0);
    SeparableConv2D_0_w_s_U->q0(SeparableConv2D_0_w_s_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SeparableConv2D_0_b_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln25_fu_233_p1 );

    SC_METHOD(thread_SeparableConv2D_0_b_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_SeparableConv2D_0_w_s_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln28_1_fu_242_p1 );

    SC_METHOD(thread_SeparableConv2D_0_w_s_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_add_ln24_fu_215_p2);
    sensitive << ( phi_mul_reg_144 );

    SC_METHOD(thread_add_ln31_fu_296_p2);
    sensitive << ( indvar_flatten_reg_155 );

    SC_METHOD(thread_add_ln39_fu_372_p2);
    sensitive << ( zext_ln36_fu_368_p1 );
    sensitive << ( select_ln32_12_fu_352_p3 );

    SC_METHOD(thread_add_ln47_1_fu_454_p2);
    sensitive << ( zext_ln24_reg_479 );
    sensitive << ( sext_ln47_fu_451_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter3);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state5);
    sensitive << ( ap_phi_mux_in_d_0_phi_fu_202_p4 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_221_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_in_d_0_phi_fu_202_p4);
    sensitive << ( in_d_0_reg_198 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_221_p2 );

    SC_METHOD(thread_buffer_fu_412_p2);
    sensitive << ( buffer_0_reg_188 );
    sensitive << ( sext_ln39_2_fu_409_p1 );

    SC_METHOD(thread_icmp_ln24_fu_221_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_d_0_reg_133 );

    SC_METHOD(thread_icmp_ln31_fu_290_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( indvar_flatten_reg_155 );

    SC_METHOD(thread_icmp_ln33_fu_308_p2);
    sensitive << ( icmp_ln31_fu_290_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( out_w_0_reg_177 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( input_addr_reg_536 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_kernel_buffer_0_fu_251_p1);
    sensitive << ( SeparableConv2D_0_w_s_q0 );

    SC_METHOD(thread_mul_ln39_fu_393_p0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( kernel_buffer_0_1_fu_78 );

    SC_METHOD(thread_mul_ln39_fu_393_p1);
    sensitive << ( input_load_reg_541 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_mul_ln39_fu_393_p2);
    sensitive << ( mul_ln39_fu_393_p0 );
    sensitive << ( mul_ln39_fu_393_p1 );

    SC_METHOD(thread_out_d_fu_227_p2);
    sensitive << ( out_d_0_reg_133 );

    SC_METHOD(thread_out_h_fu_302_p2);
    sensitive << ( out_h_0_reg_166 );

    SC_METHOD(thread_out_w_fu_468_p2);
    sensitive << ( select_ln32_reg_521 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln47_fu_463_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( select_ln46_fu_436_p3 );
    sensitive << ( trunc_ln46_fu_426_p1 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_select_ln31_fu_360_p3);
    sensitive << ( out_h_0_reg_166 );
    sensitive << ( icmp_ln33_fu_308_p2 );
    sensitive << ( out_h_fu_302_p2 );

    SC_METHOD(thread_select_ln32_12_fu_352_p3);
    sensitive << ( icmp_ln33_fu_308_p2 );
    sensitive << ( sub_ln39_5_fu_346_p2 );
    sensitive << ( sub_ln39_fu_284_p2 );

    SC_METHOD(thread_select_ln32_fu_314_p3);
    sensitive << ( out_w_0_reg_177 );
    sensitive << ( icmp_ln33_fu_308_p2 );

    SC_METHOD(thread_select_ln46_fu_436_p3);
    sensitive << ( xor_ln46_fu_430_p2 );

    SC_METHOD(thread_sext_ln34_fu_247_p1);
    sensitive << ( SeparableConv2D_0_b_s_q0 );

    SC_METHOD(thread_sext_ln39_1_fu_378_p1);
    sensitive << ( add_ln39_fu_372_p2 );

    SC_METHOD(thread_sext_ln39_2_fu_409_p1);
    sensitive << ( trunc_ln7_reg_546 );

    SC_METHOD(thread_sext_ln47_1_fu_459_p1);
    sensitive << ( add_ln47_1_fu_454_p2 );

    SC_METHOD(thread_sext_ln47_fu_451_p1);
    sensitive << ( add_ln39_reg_531 );

    SC_METHOD(thread_shl_ln39_1_fu_272_p3);
    sensitive << ( out_h_0_reg_166 );

    SC_METHOD(thread_shl_ln39_1_mid1_fu_334_p3);
    sensitive << ( out_h_fu_302_p2 );

    SC_METHOD(thread_shl_ln39_mid1_fu_322_p3);
    sensitive << ( out_h_fu_302_p2 );

    SC_METHOD(thread_shl_ln_fu_260_p3);
    sensitive << ( out_h_0_reg_166 );

    SC_METHOD(thread_sub_ln39_5_fu_346_p2);
    sensitive << ( zext_ln39_fu_330_p1 );
    sensitive << ( zext_ln39_16_fu_342_p1 );

    SC_METHOD(thread_sub_ln39_fu_284_p2);
    sensitive << ( zext_ln39_2_fu_268_p1 );
    sensitive << ( zext_ln39_4_fu_280_p1 );

    SC_METHOD(thread_tmp_6_fu_418_p3);
    sensitive << ( buffer_0_reg_188 );

    SC_METHOD(thread_trunc_ln26_fu_238_p1);
    sensitive << ( out_d_0_reg_133 );

    SC_METHOD(thread_trunc_ln46_fu_426_p1);
    sensitive << ( buffer_0_reg_188 );

    SC_METHOD(thread_xor_ln46_fu_430_p2);
    sensitive << ( tmp_6_fu_418_p3 );

    SC_METHOD(thread_zext_ln24_fu_211_p1);
    sensitive << ( phi_mul_reg_144 );

    SC_METHOD(thread_zext_ln25_fu_233_p1);
    sensitive << ( out_d_0_reg_133 );

    SC_METHOD(thread_zext_ln28_1_fu_242_p1);
    sensitive << ( trunc_ln26_fu_238_p1 );

    SC_METHOD(thread_zext_ln36_fu_368_p1);
    sensitive << ( select_ln32_fu_314_p3 );

    SC_METHOD(thread_zext_ln39_16_fu_342_p1);
    sensitive << ( shl_ln39_1_mid1_fu_334_p3 );

    SC_METHOD(thread_zext_ln39_2_fu_268_p1);
    sensitive << ( shl_ln_fu_260_p3 );

    SC_METHOD(thread_zext_ln39_3_fu_382_p1);
    sensitive << ( sext_ln39_1_fu_378_p1 );

    SC_METHOD(thread_zext_ln39_4_fu_280_p1);
    sensitive << ( shl_ln39_1_fu_272_p3 );

    SC_METHOD(thread_zext_ln39_fu_330_p1);
    sensitive << ( shl_ln39_mid1_fu_322_p3 );

    SC_METHOD(thread_zext_ln47_fu_463_p1);
    sensitive << ( sext_ln47_1_fu_459_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln24_fu_221_p2 );
    sensitive << ( icmp_ln31_fu_290_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_phi_mux_in_d_0_phi_fu_202_p4 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv2d_fix_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_address0, "SeparableConv2D_0_b_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_ce0, "SeparableConv2D_0_b_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_0_b_s_q0, "SeparableConv2D_0_b_s_q0");
    sc_trace(mVcdFile, SeparableConv2D_0_w_s_address0, "SeparableConv2D_0_w_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_0_w_s_ce0, "SeparableConv2D_0_w_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_0_w_s_q0, "SeparableConv2D_0_w_s_q0");
    sc_trace(mVcdFile, buffer_0_reg_188, "buffer_0_reg_188");
    sc_trace(mVcdFile, in_d_0_reg_198, "in_d_0_reg_198");
    sc_trace(mVcdFile, in_d_0_reg_198_pp0_iter1_reg, "in_d_0_reg_198_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter0, "ap_block_state5_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter2, "ap_block_state7_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter3, "ap_block_state8_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, in_d_0_reg_198_pp0_iter2_reg, "in_d_0_reg_198_pp0_iter2_reg");
    sc_trace(mVcdFile, zext_ln24_fu_211_p1, "zext_ln24_fu_211_p1");
    sc_trace(mVcdFile, zext_ln24_reg_479, "zext_ln24_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln24_fu_215_p2, "add_ln24_fu_215_p2");
    sc_trace(mVcdFile, add_ln24_reg_484, "add_ln24_reg_484");
    sc_trace(mVcdFile, out_d_fu_227_p2, "out_d_fu_227_p2");
    sc_trace(mVcdFile, out_d_reg_492, "out_d_reg_492");
    sc_trace(mVcdFile, icmp_ln24_fu_221_p2, "icmp_ln24_fu_221_p2");
    sc_trace(mVcdFile, sext_ln34_fu_247_p1, "sext_ln34_fu_247_p1");
    sc_trace(mVcdFile, sext_ln34_reg_507, "sext_ln34_reg_507");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln31_fu_290_p2, "icmp_ln31_fu_290_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln31_fu_296_p2, "add_ln31_fu_296_p2");
    sc_trace(mVcdFile, add_ln31_reg_516, "add_ln31_reg_516");
    sc_trace(mVcdFile, select_ln32_fu_314_p3, "select_ln32_fu_314_p3");
    sc_trace(mVcdFile, select_ln32_reg_521, "select_ln32_reg_521");
    sc_trace(mVcdFile, select_ln31_fu_360_p3, "select_ln31_fu_360_p3");
    sc_trace(mVcdFile, select_ln31_reg_526, "select_ln31_reg_526");
    sc_trace(mVcdFile, add_ln39_fu_372_p2, "add_ln39_fu_372_p2");
    sc_trace(mVcdFile, add_ln39_reg_531, "add_ln39_reg_531");
    sc_trace(mVcdFile, input_addr_reg_536, "input_addr_reg_536");
    sc_trace(mVcdFile, input_load_reg_541, "input_load_reg_541");
    sc_trace(mVcdFile, trunc_ln7_reg_546, "trunc_ln7_reg_546");
    sc_trace(mVcdFile, buffer_fu_412_p2, "buffer_fu_412_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, out_w_fu_468_p2, "out_w_fu_468_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_in_d_0_phi_fu_202_p4, "ap_phi_mux_in_d_0_phi_fu_202_p4");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state5, "ap_condition_pp0_exit_iter0_state5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, out_d_0_reg_133, "out_d_0_reg_133");
    sc_trace(mVcdFile, phi_mul_reg_144, "phi_mul_reg_144");
    sc_trace(mVcdFile, indvar_flatten_reg_155, "indvar_flatten_reg_155");
    sc_trace(mVcdFile, out_h_0_reg_166, "out_h_0_reg_166");
    sc_trace(mVcdFile, out_w_0_reg_177, "out_w_0_reg_177");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln25_fu_233_p1, "zext_ln25_fu_233_p1");
    sc_trace(mVcdFile, zext_ln28_1_fu_242_p1, "zext_ln28_1_fu_242_p1");
    sc_trace(mVcdFile, zext_ln39_3_fu_382_p1, "zext_ln39_3_fu_382_p1");
    sc_trace(mVcdFile, zext_ln47_fu_463_p1, "zext_ln47_fu_463_p1");
    sc_trace(mVcdFile, kernel_buffer_0_1_fu_78, "kernel_buffer_0_1_fu_78");
    sc_trace(mVcdFile, kernel_buffer_0_fu_251_p1, "kernel_buffer_0_fu_251_p1");
    sc_trace(mVcdFile, trunc_ln26_fu_238_p1, "trunc_ln26_fu_238_p1");
    sc_trace(mVcdFile, shl_ln_fu_260_p3, "shl_ln_fu_260_p3");
    sc_trace(mVcdFile, shl_ln39_1_fu_272_p3, "shl_ln39_1_fu_272_p3");
    sc_trace(mVcdFile, zext_ln39_2_fu_268_p1, "zext_ln39_2_fu_268_p1");
    sc_trace(mVcdFile, zext_ln39_4_fu_280_p1, "zext_ln39_4_fu_280_p1");
    sc_trace(mVcdFile, icmp_ln33_fu_308_p2, "icmp_ln33_fu_308_p2");
    sc_trace(mVcdFile, out_h_fu_302_p2, "out_h_fu_302_p2");
    sc_trace(mVcdFile, shl_ln39_mid1_fu_322_p3, "shl_ln39_mid1_fu_322_p3");
    sc_trace(mVcdFile, shl_ln39_1_mid1_fu_334_p3, "shl_ln39_1_mid1_fu_334_p3");
    sc_trace(mVcdFile, zext_ln39_fu_330_p1, "zext_ln39_fu_330_p1");
    sc_trace(mVcdFile, zext_ln39_16_fu_342_p1, "zext_ln39_16_fu_342_p1");
    sc_trace(mVcdFile, sub_ln39_5_fu_346_p2, "sub_ln39_5_fu_346_p2");
    sc_trace(mVcdFile, sub_ln39_fu_284_p2, "sub_ln39_fu_284_p2");
    sc_trace(mVcdFile, zext_ln36_fu_368_p1, "zext_ln36_fu_368_p1");
    sc_trace(mVcdFile, select_ln32_12_fu_352_p3, "select_ln32_12_fu_352_p3");
    sc_trace(mVcdFile, sext_ln39_1_fu_378_p1, "sext_ln39_1_fu_378_p1");
    sc_trace(mVcdFile, mul_ln39_fu_393_p0, "mul_ln39_fu_393_p0");
    sc_trace(mVcdFile, mul_ln39_fu_393_p1, "mul_ln39_fu_393_p1");
    sc_trace(mVcdFile, mul_ln39_fu_393_p2, "mul_ln39_fu_393_p2");
    sc_trace(mVcdFile, sext_ln39_2_fu_409_p1, "sext_ln39_2_fu_409_p1");
    sc_trace(mVcdFile, tmp_6_fu_418_p3, "tmp_6_fu_418_p3");
    sc_trace(mVcdFile, xor_ln46_fu_430_p2, "xor_ln46_fu_430_p2");
    sc_trace(mVcdFile, select_ln46_fu_436_p3, "select_ln46_fu_436_p3");
    sc_trace(mVcdFile, trunc_ln46_fu_426_p1, "trunc_ln46_fu_426_p1");
    sc_trace(mVcdFile, sext_ln47_fu_451_p1, "sext_ln47_fu_451_p1");
    sc_trace(mVcdFile, add_ln47_1_fu_454_p2, "add_ln47_1_fu_454_p2");
    sc_trace(mVcdFile, sext_ln47_1_fu_459_p1, "sext_ln47_1_fu_459_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

pointwise_conv2d_fix::~pointwise_conv2d_fix() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete SeparableConv2D_0_b_s_U;
    delete SeparableConv2D_0_w_s_U;
}

void pointwise_conv2d_fix::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_290_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state5.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_290_p2.read()))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_290_p2.read()))) {
        buffer_0_reg_188 = sext_ln34_reg_507.read();
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
                esl_seteq<1,1,1>(in_d_0_reg_198_pp0_iter2_reg.read(), ap_const_lv1_0))) {
        buffer_0_reg_188 = buffer_fu_412_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_290_p2.read()))) {
        in_d_0_reg_198 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(in_d_0_reg_198.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        in_d_0_reg_198 = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        indvar_flatten_reg_155 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        indvar_flatten_reg_155 = add_ln31_reg_516.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln31_fu_290_p2.read(), ap_const_lv1_1))) {
        out_d_0_reg_133 = out_d_reg_492.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_d_0_reg_133 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_h_0_reg_166 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_h_0_reg_166 = select_ln31_reg_526.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_w_0_reg_177 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        out_w_0_reg_177 = out_w_fu_468_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln31_fu_290_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_144 = add_ln24_reg_484.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_144 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln24_reg_484 = add_ln24_fu_215_p2.read();
        out_d_reg_492 = out_d_fu_227_p2.read();
        zext_ln24_reg_479 = zext_ln24_fu_211_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln31_reg_516 = add_ln31_fu_296_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln31_fu_290_p2.read()))) {
        add_ln39_reg_531 = add_ln39_fu_372_p2.read();
        input_addr_reg_536 =  (sc_lv<14>) (zext_ln39_3_fu_382_p1.read());
        select_ln31_reg_526 = select_ln31_fu_360_p3.read();
        select_ln32_reg_521 = select_ln32_fu_314_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_d_0_reg_198_pp0_iter1_reg = in_d_0_reg_198.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        in_d_0_reg_198_pp0_iter2_reg = in_d_0_reg_198_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(in_d_0_reg_198.read(), ap_const_lv1_0))) {
        input_load_reg_541 = input_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        kernel_buffer_0_1_fu_78 = kernel_buffer_0_fu_251_p1.read();
        sext_ln34_reg_507 = sext_ln34_fu_247_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(in_d_0_reg_198_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        trunc_ln7_reg_546 = mul_ln39_fu_393_p2.read().range(31, 14);
    }
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_b_s_address0() {
    SeparableConv2D_0_b_s_address0 =  (sc_lv<4>) (zext_ln25_fu_233_p1.read());
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_b_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        SeparableConv2D_0_b_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_0_b_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_w_s_address0() {
    SeparableConv2D_0_w_s_address0 =  (sc_lv<4>) (zext_ln28_1_fu_242_p1.read());
}

void pointwise_conv2d_fix::thread_SeparableConv2D_0_w_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        SeparableConv2D_0_w_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_0_w_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_add_ln24_fu_215_p2() {
    add_ln24_fu_215_p2 = (!phi_mul_reg_144.read().is_01() || !ap_const_lv14_310.is_01())? sc_lv<14>(): (sc_biguint<14>(phi_mul_reg_144.read()) + sc_biguint<14>(ap_const_lv14_310));
}

void pointwise_conv2d_fix::thread_add_ln31_fu_296_p2() {
    add_ln31_fu_296_p2 = (!indvar_flatten_reg_155.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_flatten_reg_155.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void pointwise_conv2d_fix::thread_add_ln39_fu_372_p2() {
    add_ln39_fu_372_p2 = (!zext_ln36_fu_368_p1.read().is_01() || !select_ln32_12_fu_352_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln36_fu_368_p1.read()) + sc_biguint<11>(select_ln32_12_fu_352_p3.read()));
}

void pointwise_conv2d_fix::thread_add_ln47_1_fu_454_p2() {
    add_ln47_1_fu_454_p2 = (!zext_ln24_reg_479.read().is_01() || !sext_ln47_fu_451_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln24_reg_479.read()) + sc_bigint<15>(sext_ln47_fu_451_p1.read()));
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[4];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pointwise_conv2d_fix::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[5];
}

void pointwise_conv2d_fix::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv2d_fix::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv2d_fix::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv2d_fix::thread_ap_block_state5_pp0_stage0_iter0() {
    ap_block_state5_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv2d_fix::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv2d_fix::thread_ap_block_state7_pp0_stage0_iter2() {
    ap_block_state7_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv2d_fix::thread_ap_block_state8_pp0_stage0_iter3() {
    ap_block_state8_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void pointwise_conv2d_fix::thread_ap_condition_pp0_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(ap_phi_mux_in_d_0_phi_fu_202_p4.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln24_fu_221_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void pointwise_conv2d_fix::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_ap_phi_mux_in_d_0_phi_fu_202_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(in_d_0_reg_198.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_in_d_0_phi_fu_202_p4 = ap_const_lv1_1;
    } else {
        ap_phi_mux_in_d_0_phi_fu_202_p4 = in_d_0_reg_198.read();
    }
}

void pointwise_conv2d_fix::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_221_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_buffer_fu_412_p2() {
    buffer_fu_412_p2 = (!sext_ln39_2_fu_409_p1.read().is_01() || !buffer_0_reg_188.read().is_01())? sc_lv<19>(): (sc_bigint<19>(sext_ln39_2_fu_409_p1.read()) + sc_biguint<19>(buffer_0_reg_188.read()));
}

void pointwise_conv2d_fix::thread_icmp_ln24_fu_221_p2() {
    icmp_ln24_fu_221_p2 = (!out_d_0_reg_133.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(out_d_0_reg_133.read() == ap_const_lv5_10);
}

void pointwise_conv2d_fix::thread_icmp_ln31_fu_290_p2() {
    icmp_ln31_fu_290_p2 = (!indvar_flatten_reg_155.read().is_01() || !ap_const_lv10_310.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_155.read() == ap_const_lv10_310);
}

void pointwise_conv2d_fix::thread_icmp_ln33_fu_308_p2() {
    icmp_ln33_fu_308_p2 = (!out_w_0_reg_177.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_w_0_reg_177.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix::thread_input_r_address0() {
    input_r_address0 = input_addr_reg_536.read();
}

void pointwise_conv2d_fix::thread_input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_kernel_buffer_0_fu_251_p1() {
    kernel_buffer_0_fu_251_p1 = esl_sext<32,15>(SeparableConv2D_0_w_s_q0.read());
}

void pointwise_conv2d_fix::thread_mul_ln39_fu_393_p0() {
    mul_ln39_fu_393_p0 = kernel_buffer_0_1_fu_78.read();
}

void pointwise_conv2d_fix::thread_mul_ln39_fu_393_p1() {
    mul_ln39_fu_393_p1 = input_load_reg_541.read();
}

void pointwise_conv2d_fix::thread_mul_ln39_fu_393_p2() {
    mul_ln39_fu_393_p2 = (!mul_ln39_fu_393_p0.read().is_01() || !mul_ln39_fu_393_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln39_fu_393_p0.read()) * sc_bigint<16>(mul_ln39_fu_393_p1.read());
}

void pointwise_conv2d_fix::thread_out_d_fu_227_p2() {
    out_d_fu_227_p2 = (!out_d_0_reg_133.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_d_0_reg_133.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix::thread_out_h_fu_302_p2() {
    out_h_fu_302_p2 = (!out_h_0_reg_166.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_h_0_reg_166.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix::thread_out_w_fu_468_p2() {
    out_w_fu_468_p2 = (!ap_const_lv5_1.is_01() || !select_ln32_reg_521.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(select_ln32_reg_521.read()));
}

void pointwise_conv2d_fix::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<14>) (zext_ln47_fu_463_p1.read());
}

void pointwise_conv2d_fix::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_output_r_d0() {
    output_r_d0 = (select_ln46_fu_436_p3.read() & trunc_ln46_fu_426_p1.read());
}

void pointwise_conv2d_fix::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix::thread_select_ln31_fu_360_p3() {
    select_ln31_fu_360_p3 = (!icmp_ln33_fu_308_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln33_fu_308_p2.read()[0].to_bool())? out_h_fu_302_p2.read(): out_h_0_reg_166.read());
}

void pointwise_conv2d_fix::thread_select_ln32_12_fu_352_p3() {
    select_ln32_12_fu_352_p3 = (!icmp_ln33_fu_308_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln33_fu_308_p2.read()[0].to_bool())? sub_ln39_5_fu_346_p2.read(): sub_ln39_fu_284_p2.read());
}

void pointwise_conv2d_fix::thread_select_ln32_fu_314_p3() {
    select_ln32_fu_314_p3 = (!icmp_ln33_fu_308_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln33_fu_308_p2.read()[0].to_bool())? ap_const_lv5_0: out_w_0_reg_177.read());
}

void pointwise_conv2d_fix::thread_select_ln46_fu_436_p3() {
    select_ln46_fu_436_p3 = (!xor_ln46_fu_430_p2.read()[0].is_01())? sc_lv<16>(): ((xor_ln46_fu_430_p2.read()[0].to_bool())? ap_const_lv16_FFFF: ap_const_lv16_0);
}

void pointwise_conv2d_fix::thread_sext_ln34_fu_247_p1() {
    sext_ln34_fu_247_p1 = esl_sext<19,13>(SeparableConv2D_0_b_s_q0.read());
}

void pointwise_conv2d_fix::thread_sext_ln39_1_fu_378_p1() {
    sext_ln39_1_fu_378_p1 = esl_sext<32,11>(add_ln39_fu_372_p2.read());
}

void pointwise_conv2d_fix::thread_sext_ln39_2_fu_409_p1() {
    sext_ln39_2_fu_409_p1 = esl_sext<19,18>(trunc_ln7_reg_546.read());
}

void pointwise_conv2d_fix::thread_sext_ln47_1_fu_459_p1() {
    sext_ln47_1_fu_459_p1 = esl_sext<32,15>(add_ln47_1_fu_454_p2.read());
}

void pointwise_conv2d_fix::thread_sext_ln47_fu_451_p1() {
    sext_ln47_fu_451_p1 = esl_sext<15,11>(add_ln39_reg_531.read());
}

void pointwise_conv2d_fix::thread_shl_ln39_1_fu_272_p3() {
    shl_ln39_1_fu_272_p3 = esl_concat<5,2>(out_h_0_reg_166.read(), ap_const_lv2_0);
}

void pointwise_conv2d_fix::thread_shl_ln39_1_mid1_fu_334_p3() {
    shl_ln39_1_mid1_fu_334_p3 = esl_concat<5,2>(out_h_fu_302_p2.read(), ap_const_lv2_0);
}

void pointwise_conv2d_fix::thread_shl_ln39_mid1_fu_322_p3() {
    shl_ln39_mid1_fu_322_p3 = esl_concat<5,5>(out_h_fu_302_p2.read(), ap_const_lv5_0);
}

void pointwise_conv2d_fix::thread_shl_ln_fu_260_p3() {
    shl_ln_fu_260_p3 = esl_concat<5,5>(out_h_0_reg_166.read(), ap_const_lv5_0);
}

void pointwise_conv2d_fix::thread_sub_ln39_5_fu_346_p2() {
    sub_ln39_5_fu_346_p2 = (!zext_ln39_fu_330_p1.read().is_01() || !zext_ln39_16_fu_342_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln39_fu_330_p1.read()) - sc_biguint<11>(zext_ln39_16_fu_342_p1.read()));
}

void pointwise_conv2d_fix::thread_sub_ln39_fu_284_p2() {
    sub_ln39_fu_284_p2 = (!zext_ln39_2_fu_268_p1.read().is_01() || !zext_ln39_4_fu_280_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln39_2_fu_268_p1.read()) - sc_biguint<11>(zext_ln39_4_fu_280_p1.read()));
}

void pointwise_conv2d_fix::thread_tmp_6_fu_418_p3() {
    tmp_6_fu_418_p3 = buffer_0_reg_188.read().range(18, 18);
}

void pointwise_conv2d_fix::thread_trunc_ln26_fu_238_p1() {
    trunc_ln26_fu_238_p1 = out_d_0_reg_133.read().range(4-1, 0);
}

void pointwise_conv2d_fix::thread_trunc_ln46_fu_426_p1() {
    trunc_ln46_fu_426_p1 = buffer_0_reg_188.read().range(16-1, 0);
}

void pointwise_conv2d_fix::thread_xor_ln46_fu_430_p2() {
    xor_ln46_fu_430_p2 = (tmp_6_fu_418_p3.read() ^ ap_const_lv1_1);
}

void pointwise_conv2d_fix::thread_zext_ln24_fu_211_p1() {
    zext_ln24_fu_211_p1 = esl_zext<15,14>(phi_mul_reg_144.read());
}

void pointwise_conv2d_fix::thread_zext_ln25_fu_233_p1() {
    zext_ln25_fu_233_p1 = esl_zext<64,5>(out_d_0_reg_133.read());
}

void pointwise_conv2d_fix::thread_zext_ln28_1_fu_242_p1() {
    zext_ln28_1_fu_242_p1 = esl_zext<64,4>(trunc_ln26_fu_238_p1.read());
}

void pointwise_conv2d_fix::thread_zext_ln36_fu_368_p1() {
    zext_ln36_fu_368_p1 = esl_zext<11,5>(select_ln32_fu_314_p3.read());
}

void pointwise_conv2d_fix::thread_zext_ln39_16_fu_342_p1() {
    zext_ln39_16_fu_342_p1 = esl_zext<11,7>(shl_ln39_1_mid1_fu_334_p3.read());
}

void pointwise_conv2d_fix::thread_zext_ln39_2_fu_268_p1() {
    zext_ln39_2_fu_268_p1 = esl_zext<11,10>(shl_ln_fu_260_p3.read());
}

void pointwise_conv2d_fix::thread_zext_ln39_3_fu_382_p1() {
    zext_ln39_3_fu_382_p1 = esl_zext<64,32>(sext_ln39_1_fu_378_p1.read());
}

void pointwise_conv2d_fix::thread_zext_ln39_4_fu_280_p1() {
    zext_ln39_4_fu_280_p1 = esl_zext<11,7>(shl_ln39_1_fu_272_p3.read());
}

void pointwise_conv2d_fix::thread_zext_ln39_fu_330_p1() {
    zext_ln39_fu_330_p1 = esl_zext<11,10>(shl_ln39_mid1_fu_322_p3.read());
}

void pointwise_conv2d_fix::thread_zext_ln47_fu_463_p1() {
    zext_ln47_fu_463_p1 = esl_zext<64,32>(sext_ln47_1_fu_459_p1.read());
}

void pointwise_conv2d_fix::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln24_fu_221_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln31_fu_290_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_phi_mux_in_d_0_phi_fu_202_p4.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_phi_mux_in_d_0_phi_fu_202_p4.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

