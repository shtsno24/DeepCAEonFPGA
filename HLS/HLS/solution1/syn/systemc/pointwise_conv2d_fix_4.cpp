// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pointwise_conv2d_fix_4.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pointwise_conv2d_fix_4::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pointwise_conv2d_fix_4::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> pointwise_conv2d_fix_4::ap_ST_fsm_state1 = "1";
const sc_lv<7> pointwise_conv2d_fix_4::ap_ST_fsm_state2 = "10";
const sc_lv<7> pointwise_conv2d_fix_4::ap_ST_fsm_state3 = "100";
const sc_lv<7> pointwise_conv2d_fix_4::ap_ST_fsm_state4 = "1000";
const sc_lv<7> pointwise_conv2d_fix_4::ap_ST_fsm_state5 = "10000";
const sc_lv<7> pointwise_conv2d_fix_4::ap_ST_fsm_state6 = "100000";
const sc_lv<7> pointwise_conv2d_fix_4::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_1 = "1";
const sc_lv<1> pointwise_conv2d_fix_4::ap_const_lv1_0 = "0";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_2 = "10";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_3 = "11";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_4 = "100";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_5 = "101";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_6 = "110";
const sc_lv<5> pointwise_conv2d_fix_4::ap_const_lv5_0 = "00000";
const sc_lv<1> pointwise_conv2d_fix_4::ap_const_lv1_1 = "1";
const sc_lv<16> pointwise_conv2d_fix_4::ap_const_lv16_D60D = "1101011000001101";
const sc_lv<14> pointwise_conv2d_fix_4::ap_const_lv14_0 = "00000000000000";
const sc_lv<5> pointwise_conv2d_fix_4::ap_const_lv5_1C = "11100";
const sc_lv<5> pointwise_conv2d_fix_4::ap_const_lv5_1 = "1";
const sc_lv<2> pointwise_conv2d_fix_4::ap_const_lv2_0 = "00";
const sc_lv<5> pointwise_conv2d_fix_4::ap_const_lv5_10 = "10000";
const sc_lv<14> pointwise_conv2d_fix_4::ap_const_lv14_310 = "1100010000";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_F = "1111";
const sc_lv<15> pointwise_conv2d_fix_4::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_E = "1110";
const sc_lv<32> pointwise_conv2d_fix_4::ap_const_lv32_1D = "11101";
const bool pointwise_conv2d_fix_4::ap_const_boolean_1 = true;

pointwise_conv2d_fix_4::pointwise_conv2d_fix_4(sc_module_name name) : sc_module(name), mVcdFile(0) {
    SeparableConv2D_4_w_s_U = new pointwise_conv2d_fix_4_SeparableConv2D_4_w_s("SeparableConv2D_4_w_s_U");
    SeparableConv2D_4_w_s_U->clk(ap_clk);
    SeparableConv2D_4_w_s_U->reset(ap_rst);
    SeparableConv2D_4_w_s_U->address0(SeparableConv2D_4_w_s_address0);
    SeparableConv2D_4_w_s_U->ce0(SeparableConv2D_4_w_s_ce0);
    SeparableConv2D_4_w_s_U->q0(SeparableConv2D_4_w_s_q0);
    network_mul_mul_15s_16s_30_1_1_U65 = new network_mul_mul_15s_16s_30_1_1<1,1,15,16,30>("network_mul_mul_15s_16s_30_1_1_U65");
    network_mul_mul_15s_16s_30_1_1_U65->din0(SeparableConv2D_4_w_3_reg_388);
    network_mul_mul_15s_16s_30_1_1_U65->din1(input_load_reg_383);
    network_mul_mul_15s_16s_30_1_1_U65->dout(mul_ln23_fu_317_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SeparableConv2D_4_w_s_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln23_4_fu_254_p1 );

    SC_METHOD(thread_SeparableConv2D_4_w_s_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_add_ln23_1_fu_240_p2);
    sensitive << ( sext_ln23_reg_337 );
    sensitive << ( zext_ln23_2_fu_236_p1 );

    SC_METHOD(thread_add_ln23_2_fu_225_p2);
    sensitive << ( phi_mul_reg_132 );

    SC_METHOD(thread_add_ln23_fu_231_p2);
    sensitive << ( zext_ln20_1_reg_355 );
    sensitive << ( phi_mul_reg_132 );

    SC_METHOD(thread_add_ln30_fu_284_p2);
    sensitive << ( sub_ln23_reg_332 );
    sensitive << ( zext_ln20_reg_350 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_143_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_143_p2 );

    SC_METHOD(thread_buffer_fu_312_p2);
    sensitive << ( trunc_ln1_reg_393 );
    sensitive << ( buffer_0_reg_109 );

    SC_METHOD(thread_icmp_ln17_fu_143_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( out_h_0_reg_87 );

    SC_METHOD(thread_icmp_ln18_fu_189_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( out_w_0_reg_98 );

    SC_METHOD(thread_icmp_ln20_fu_209_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( in_d_0_reg_121 );

    SC_METHOD(thread_in_d_fu_215_p2);
    sensitive << ( in_d_0_reg_121 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln23_3_fu_249_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_h_fu_149_p2);
    sensitive << ( out_h_0_reg_87 );

    SC_METHOD(thread_out_w_fu_195_p2);
    sensitive << ( out_w_0_reg_98 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln30_fu_292_p1 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( select_ln27_fu_271_p3 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln20_fu_209_p2 );

    SC_METHOD(thread_select_ln27_fu_271_p3);
    sensitive << ( tmp_fu_263_p3 );
    sensitive << ( trunc_ln20_fu_259_p1 );

    SC_METHOD(thread_sext_ln23_1_fu_245_p1);
    sensitive << ( add_ln23_1_fu_240_p2 );

    SC_METHOD(thread_sext_ln23_fu_185_p1);
    sensitive << ( sub_ln23_fu_179_p2 );

    SC_METHOD(thread_sext_ln30_fu_288_p1);
    sensitive << ( add_ln30_fu_284_p2 );

    SC_METHOD(thread_shl_ln23_7_fu_167_p3);
    sensitive << ( out_h_0_reg_87 );

    SC_METHOD(thread_shl_ln_fu_155_p3);
    sensitive << ( out_h_0_reg_87 );

    SC_METHOD(thread_sub_ln23_fu_179_p2);
    sensitive << ( zext_ln23_fu_163_p1 );
    sensitive << ( zext_ln23_1_fu_175_p1 );

    SC_METHOD(thread_tmp_fu_263_p3);
    sensitive << ( buffer_0_reg_109 );

    SC_METHOD(thread_trunc_ln20_fu_259_p1);
    sensitive << ( buffer_0_reg_109 );

    SC_METHOD(thread_trunc_ln23_fu_221_p1);
    sensitive << ( in_d_0_reg_121 );

    SC_METHOD(thread_zext_ln20_1_fu_205_p1);
    sensitive << ( out_w_0_reg_98 );

    SC_METHOD(thread_zext_ln20_fu_201_p1);
    sensitive << ( out_w_0_reg_98 );

    SC_METHOD(thread_zext_ln23_1_fu_175_p1);
    sensitive << ( shl_ln23_7_fu_167_p3 );

    SC_METHOD(thread_zext_ln23_2_fu_236_p1);
    sensitive << ( add_ln23_fu_231_p2 );

    SC_METHOD(thread_zext_ln23_3_fu_249_p1);
    sensitive << ( sext_ln23_1_fu_245_p1 );

    SC_METHOD(thread_zext_ln23_4_fu_254_p1);
    sensitive << ( trunc_ln23_fu_221_p1 );

    SC_METHOD(thread_zext_ln23_fu_163_p1);
    sensitive << ( shl_ln_fu_155_p3 );

    SC_METHOD(thread_zext_ln30_fu_292_p1);
    sensitive << ( sext_ln30_fu_288_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_143_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln18_fu_189_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln20_fu_209_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pointwise_conv2d_fix_4_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, SeparableConv2D_4_w_s_address0, "SeparableConv2D_4_w_s_address0");
    sc_trace(mVcdFile, SeparableConv2D_4_w_s_ce0, "SeparableConv2D_4_w_s_ce0");
    sc_trace(mVcdFile, SeparableConv2D_4_w_s_q0, "SeparableConv2D_4_w_s_q0");
    sc_trace(mVcdFile, out_h_fu_149_p2, "out_h_fu_149_p2");
    sc_trace(mVcdFile, out_h_reg_327, "out_h_reg_327");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln23_fu_179_p2, "sub_ln23_fu_179_p2");
    sc_trace(mVcdFile, sub_ln23_reg_332, "sub_ln23_reg_332");
    sc_trace(mVcdFile, icmp_ln17_fu_143_p2, "icmp_ln17_fu_143_p2");
    sc_trace(mVcdFile, sext_ln23_fu_185_p1, "sext_ln23_fu_185_p1");
    sc_trace(mVcdFile, sext_ln23_reg_337, "sext_ln23_reg_337");
    sc_trace(mVcdFile, out_w_fu_195_p2, "out_w_fu_195_p2");
    sc_trace(mVcdFile, out_w_reg_345, "out_w_reg_345");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln20_fu_201_p1, "zext_ln20_fu_201_p1");
    sc_trace(mVcdFile, zext_ln20_reg_350, "zext_ln20_reg_350");
    sc_trace(mVcdFile, icmp_ln18_fu_189_p2, "icmp_ln18_fu_189_p2");
    sc_trace(mVcdFile, zext_ln20_1_fu_205_p1, "zext_ln20_1_fu_205_p1");
    sc_trace(mVcdFile, zext_ln20_1_reg_355, "zext_ln20_1_reg_355");
    sc_trace(mVcdFile, in_d_fu_215_p2, "in_d_fu_215_p2");
    sc_trace(mVcdFile, in_d_reg_363, "in_d_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln23_2_fu_225_p2, "add_ln23_2_fu_225_p2");
    sc_trace(mVcdFile, add_ln23_2_reg_368, "add_ln23_2_reg_368");
    sc_trace(mVcdFile, icmp_ln20_fu_209_p2, "icmp_ln20_fu_209_p2");
    sc_trace(mVcdFile, input_load_reg_383, "input_load_reg_383");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, SeparableConv2D_4_w_3_reg_388, "SeparableConv2D_4_w_3_reg_388");
    sc_trace(mVcdFile, trunc_ln1_reg_393, "trunc_ln1_reg_393");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, buffer_fu_312_p2, "buffer_fu_312_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, out_h_0_reg_87, "out_h_0_reg_87");
    sc_trace(mVcdFile, out_w_0_reg_98, "out_w_0_reg_98");
    sc_trace(mVcdFile, buffer_0_reg_109, "buffer_0_reg_109");
    sc_trace(mVcdFile, in_d_0_reg_121, "in_d_0_reg_121");
    sc_trace(mVcdFile, phi_mul_reg_132, "phi_mul_reg_132");
    sc_trace(mVcdFile, zext_ln23_3_fu_249_p1, "zext_ln23_3_fu_249_p1");
    sc_trace(mVcdFile, zext_ln23_4_fu_254_p1, "zext_ln23_4_fu_254_p1");
    sc_trace(mVcdFile, zext_ln30_fu_292_p1, "zext_ln30_fu_292_p1");
    sc_trace(mVcdFile, shl_ln_fu_155_p3, "shl_ln_fu_155_p3");
    sc_trace(mVcdFile, shl_ln23_7_fu_167_p3, "shl_ln23_7_fu_167_p3");
    sc_trace(mVcdFile, zext_ln23_fu_163_p1, "zext_ln23_fu_163_p1");
    sc_trace(mVcdFile, zext_ln23_1_fu_175_p1, "zext_ln23_1_fu_175_p1");
    sc_trace(mVcdFile, add_ln23_fu_231_p2, "add_ln23_fu_231_p2");
    sc_trace(mVcdFile, zext_ln23_2_fu_236_p1, "zext_ln23_2_fu_236_p1");
    sc_trace(mVcdFile, add_ln23_1_fu_240_p2, "add_ln23_1_fu_240_p2");
    sc_trace(mVcdFile, sext_ln23_1_fu_245_p1, "sext_ln23_1_fu_245_p1");
    sc_trace(mVcdFile, trunc_ln23_fu_221_p1, "trunc_ln23_fu_221_p1");
    sc_trace(mVcdFile, tmp_fu_263_p3, "tmp_fu_263_p3");
    sc_trace(mVcdFile, trunc_ln20_fu_259_p1, "trunc_ln20_fu_259_p1");
    sc_trace(mVcdFile, select_ln27_fu_271_p3, "select_ln27_fu_271_p3");
    sc_trace(mVcdFile, add_ln30_fu_284_p2, "add_ln30_fu_284_p2");
    sc_trace(mVcdFile, sext_ln30_fu_288_p1, "sext_ln30_fu_288_p1");
    sc_trace(mVcdFile, mul_ln23_fu_317_p2, "mul_ln23_fu_317_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pointwise_conv2d_fix_4::~pointwise_conv2d_fix_4() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete SeparableConv2D_4_w_s_U;
    delete network_mul_mul_15s_16s_30_1_1_U65;
}

void pointwise_conv2d_fix_4::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        buffer_0_reg_109 = buffer_fu_312_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_189_p2.read()))) {
        buffer_0_reg_109 = ap_const_lv16_D60D;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        in_d_0_reg_121 = in_d_reg_363.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_189_p2.read()))) {
        in_d_0_reg_121 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln18_fu_189_p2.read(), ap_const_lv1_1))) {
        out_h_0_reg_87 = out_h_reg_327.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_h_0_reg_87 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_143_p2.read(), ap_const_lv1_0))) {
        out_w_0_reg_98 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(icmp_ln20_fu_209_p2.read(), ap_const_lv1_1))) {
        out_w_0_reg_98 = out_w_reg_345.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        phi_mul_reg_132 = add_ln23_2_reg_368.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_189_p2.read()))) {
        phi_mul_reg_132 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        SeparableConv2D_4_w_3_reg_388 = SeparableConv2D_4_w_s_q0.read();
        input_load_reg_383 = input_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_209_p2.read()))) {
        add_ln23_2_reg_368 = add_ln23_2_fu_225_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        in_d_reg_363 = in_d_fu_215_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        out_h_reg_327 = out_h_fu_149_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_w_reg_345 = out_w_fu_195_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_143_p2.read(), ap_const_lv1_0))) {
        sext_ln23_reg_337 = sext_ln23_fu_185_p1.read();
        sub_ln23_reg_332 = sub_ln23_fu_179_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        trunc_ln1_reg_393 = mul_ln23_fu_317_p2.read().range(29, 14);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_189_p2.read()))) {
        zext_ln20_1_reg_355 = zext_ln20_1_fu_205_p1.read();
        zext_ln20_reg_350 = zext_ln20_fu_201_p1.read();
    }
}

void pointwise_conv2d_fix_4::thread_SeparableConv2D_4_w_s_address0() {
    SeparableConv2D_4_w_s_address0 =  (sc_lv<4>) (zext_ln23_4_fu_254_p1.read());
}

void pointwise_conv2d_fix_4::thread_SeparableConv2D_4_w_s_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        SeparableConv2D_4_w_s_ce0 = ap_const_logic_1;
    } else {
        SeparableConv2D_4_w_s_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_add_ln23_1_fu_240_p2() {
    add_ln23_1_fu_240_p2 = (!sext_ln23_reg_337.read().is_01() || !zext_ln23_2_fu_236_p1.read().is_01())? sc_lv<15>(): (sc_bigint<15>(sext_ln23_reg_337.read()) + sc_biguint<15>(zext_ln23_2_fu_236_p1.read()));
}

void pointwise_conv2d_fix_4::thread_add_ln23_2_fu_225_p2() {
    add_ln23_2_fu_225_p2 = (!ap_const_lv14_310.is_01() || !phi_mul_reg_132.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ap_const_lv14_310) + sc_biguint<14>(phi_mul_reg_132.read()));
}

void pointwise_conv2d_fix_4::thread_add_ln23_fu_231_p2() {
    add_ln23_fu_231_p2 = (!zext_ln20_1_reg_355.read().is_01() || !phi_mul_reg_132.read().is_01())? sc_lv<14>(): (sc_biguint<14>(zext_ln20_1_reg_355.read()) + sc_biguint<14>(phi_mul_reg_132.read()));
}

void pointwise_conv2d_fix_4::thread_add_ln30_fu_284_p2() {
    add_ln30_fu_284_p2 = (!sub_ln23_reg_332.read().is_01() || !zext_ln20_reg_350.read().is_01())? sc_lv<11>(): (sc_bigint<11>(sub_ln23_reg_332.read()) + sc_biguint<11>(zext_ln20_reg_350.read()));
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pointwise_conv2d_fix_4::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pointwise_conv2d_fix_4::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln17_fu_143_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln17_fu_143_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_buffer_fu_312_p2() {
    buffer_fu_312_p2 = (!buffer_0_reg_109.read().is_01() || !trunc_ln1_reg_393.read().is_01())? sc_lv<16>(): (sc_biguint<16>(buffer_0_reg_109.read()) + sc_biguint<16>(trunc_ln1_reg_393.read()));
}

void pointwise_conv2d_fix_4::thread_icmp_ln17_fu_143_p2() {
    icmp_ln17_fu_143_p2 = (!out_h_0_reg_87.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_h_0_reg_87.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix_4::thread_icmp_ln18_fu_189_p2() {
    icmp_ln18_fu_189_p2 = (!out_w_0_reg_98.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(out_w_0_reg_98.read() == ap_const_lv5_1C);
}

void pointwise_conv2d_fix_4::thread_icmp_ln20_fu_209_p2() {
    icmp_ln20_fu_209_p2 = (!in_d_0_reg_121.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(in_d_0_reg_121.read() == ap_const_lv5_10);
}

void pointwise_conv2d_fix_4::thread_in_d_fu_215_p2() {
    in_d_fu_215_p2 = (!in_d_0_reg_121.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(in_d_0_reg_121.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix_4::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<14>) (zext_ln23_3_fu_249_p1.read());
}

void pointwise_conv2d_fix_4::thread_input_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_out_h_fu_149_p2() {
    out_h_fu_149_p2 = (!out_h_0_reg_87.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_h_0_reg_87.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix_4::thread_out_w_fu_195_p2() {
    out_w_fu_195_p2 = (!out_w_0_reg_98.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(out_w_0_reg_98.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pointwise_conv2d_fix_4::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<14>) (zext_ln30_fu_292_p1.read());
}

void pointwise_conv2d_fix_4::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_output_r_d0() {
    output_r_d0 = esl_zext<16,15>(select_ln27_fu_271_p3.read());
}

void pointwise_conv2d_fix_4::thread_output_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln20_fu_209_p2.read(), ap_const_lv1_1))) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void pointwise_conv2d_fix_4::thread_select_ln27_fu_271_p3() {
    select_ln27_fu_271_p3 = (!tmp_fu_263_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_fu_263_p3.read()[0].to_bool())? ap_const_lv15_0: trunc_ln20_fu_259_p1.read());
}

void pointwise_conv2d_fix_4::thread_sext_ln23_1_fu_245_p1() {
    sext_ln23_1_fu_245_p1 = esl_sext<32,15>(add_ln23_1_fu_240_p2.read());
}

void pointwise_conv2d_fix_4::thread_sext_ln23_fu_185_p1() {
    sext_ln23_fu_185_p1 = esl_sext<15,11>(sub_ln23_fu_179_p2.read());
}

void pointwise_conv2d_fix_4::thread_sext_ln30_fu_288_p1() {
    sext_ln30_fu_288_p1 = esl_sext<32,11>(add_ln30_fu_284_p2.read());
}

void pointwise_conv2d_fix_4::thread_shl_ln23_7_fu_167_p3() {
    shl_ln23_7_fu_167_p3 = esl_concat<5,2>(out_h_0_reg_87.read(), ap_const_lv2_0);
}

void pointwise_conv2d_fix_4::thread_shl_ln_fu_155_p3() {
    shl_ln_fu_155_p3 = esl_concat<5,5>(out_h_0_reg_87.read(), ap_const_lv5_0);
}

void pointwise_conv2d_fix_4::thread_sub_ln23_fu_179_p2() {
    sub_ln23_fu_179_p2 = (!zext_ln23_fu_163_p1.read().is_01() || !zext_ln23_1_fu_175_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln23_fu_163_p1.read()) - sc_biguint<11>(zext_ln23_1_fu_175_p1.read()));
}

void pointwise_conv2d_fix_4::thread_tmp_fu_263_p3() {
    tmp_fu_263_p3 = buffer_0_reg_109.read().range(15, 15);
}

void pointwise_conv2d_fix_4::thread_trunc_ln20_fu_259_p1() {
    trunc_ln20_fu_259_p1 = buffer_0_reg_109.read().range(15-1, 0);
}

void pointwise_conv2d_fix_4::thread_trunc_ln23_fu_221_p1() {
    trunc_ln23_fu_221_p1 = in_d_0_reg_121.read().range(4-1, 0);
}

void pointwise_conv2d_fix_4::thread_zext_ln20_1_fu_205_p1() {
    zext_ln20_1_fu_205_p1 = esl_zext<14,5>(out_w_0_reg_98.read());
}

void pointwise_conv2d_fix_4::thread_zext_ln20_fu_201_p1() {
    zext_ln20_fu_201_p1 = esl_zext<11,5>(out_w_0_reg_98.read());
}

void pointwise_conv2d_fix_4::thread_zext_ln23_1_fu_175_p1() {
    zext_ln23_1_fu_175_p1 = esl_zext<11,7>(shl_ln23_7_fu_167_p3.read());
}

void pointwise_conv2d_fix_4::thread_zext_ln23_2_fu_236_p1() {
    zext_ln23_2_fu_236_p1 = esl_zext<15,14>(add_ln23_fu_231_p2.read());
}

void pointwise_conv2d_fix_4::thread_zext_ln23_3_fu_249_p1() {
    zext_ln23_3_fu_249_p1 = esl_zext<64,32>(sext_ln23_1_fu_245_p1.read());
}

void pointwise_conv2d_fix_4::thread_zext_ln23_4_fu_254_p1() {
    zext_ln23_4_fu_254_p1 = esl_zext<64,4>(trunc_ln23_fu_221_p1.read());
}

void pointwise_conv2d_fix_4::thread_zext_ln23_fu_163_p1() {
    zext_ln23_fu_163_p1 = esl_zext<11,10>(shl_ln_fu_155_p3.read());
}

void pointwise_conv2d_fix_4::thread_zext_ln30_fu_292_p1() {
    zext_ln30_fu_292_p1 = esl_zext<64,32>(sext_ln30_fu_288_p1.read());
}

void pointwise_conv2d_fix_4::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_143_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln18_fu_189_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln20_fu_209_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

