// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv2d_fix_4_HH_
#define _pointwise_conv2d_fix_4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mux_164_32_1_1.h"
#include "network_mac_muladd_11ns_5ns_11s_15_1_1.h"
#include "pointwise_conv2d_fix_4_SeparableConv2D_4_w_s.h"

namespace ap_rtl {

struct pointwise_conv2d_fix_4 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    pointwise_conv2d_fix_4(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv2d_fix_4);

    ~pointwise_conv2d_fix_4();

    sc_trace_file* mVcdFile;

    pointwise_conv2d_fix_4_SeparableConv2D_4_w_s* SeparableConv2D_4_w_s_U;
    network_mux_164_32_1_1<1,1,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,4,32>* network_mux_164_32_1_1_U106;
    network_mac_muladd_11ns_5ns_11s_15_1_1<1,1,11,5,11,15>* network_mac_muladd_11ns_5ns_11s_15_1_1_U107;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > SeparableConv2D_4_w_s_address0;
    sc_signal< sc_logic > SeparableConv2D_4_w_s_ce0;
    sc_signal< sc_lv<15> > SeparableConv2D_4_w_s_q0;
    sc_signal< sc_lv<5> > i_0_reg_213;
    sc_signal< sc_lv<14> > indvar_flatten18_reg_224;
    sc_signal< sc_lv<5> > out_h_0_reg_235;
    sc_signal< sc_lv<10> > indvar_flatten_reg_246;
    sc_signal< sc_lv<5> > out_w_0_reg_257;
    sc_signal< sc_lv<23> > buffer_0_reg_268;
    sc_signal< sc_lv<5> > in_d_0_reg_280;
    sc_signal< sc_lv<1> > icmp_ln26_fu_291_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > i_fu_297_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > trunc_ln28_fu_303_p1;
    sc_signal< sc_lv<4> > trunc_ln28_reg_911;
    sc_signal< sc_lv<1> > icmp_ln31_fu_436_p2;
    sc_signal< sc_lv<1> > icmp_ln31_reg_920;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter4;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln31_reg_920_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln31_reg_920_pp1_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln31_reg_920_pp1_iter3_reg;
    sc_signal< sc_lv<14> > add_ln31_fu_442_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<11> > select_ln32_1_fu_498_p3;
    sc_signal< sc_lv<11> > select_ln32_1_reg_929;
    sc_signal< sc_lv<5> > select_ln31_fu_532_p3;
    sc_signal< sc_lv<1> > or_ln36_fu_546_p2;
    sc_signal< sc_lv<1> > or_ln36_reg_939;
    sc_signal< sc_lv<1> > or_ln36_reg_939_pp1_iter1_reg;
    sc_signal< sc_lv<1> > or_ln36_reg_939_pp1_iter2_reg;
    sc_signal< sc_lv<1> > or_ln36_reg_939_pp1_iter3_reg;
    sc_signal< sc_lv<5> > select_ln36_1_fu_552_p3;
    sc_signal< sc_lv<5> > select_ln36_1_reg_944;
    sc_signal< sc_lv<5> > select_ln36_2_fu_564_p3;
    sc_signal< sc_lv<5> > select_ln36_2_reg_949;
    sc_signal< sc_lv<11> > select_ln36_3_fu_578_p3;
    sc_signal< sc_lv<11> > select_ln36_3_reg_955;
    sc_signal< sc_lv<4> > trunc_ln39_fu_586_p1;
    sc_signal< sc_lv<4> > trunc_ln39_reg_960;
    sc_signal< sc_lv<4> > trunc_ln39_reg_960_pp1_iter1_reg;
    sc_signal< sc_lv<5> > in_d_fu_590_p2;
    sc_signal< sc_lv<5> > in_d_reg_965;
    sc_signal< sc_lv<10> > select_ln33_fu_602_p3;
    sc_signal< sc_lv<1> > icmp_ln36_1_fu_627_p2;
    sc_signal< sc_lv<1> > icmp_ln36_1_reg_981;
    sc_signal< sc_lv<1> > icmp_ln36_1_reg_981_pp1_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln36_1_reg_981_pp1_iter3_reg;
    sc_signal< sc_lv<11> > add_ln47_fu_632_p2;
    sc_signal< sc_lv<11> > add_ln47_reg_985;
    sc_signal< sc_lv<11> > add_ln47_reg_985_pp1_iter2_reg;
    sc_signal< sc_lv<11> > add_ln47_reg_985_pp1_iter3_reg;
    sc_signal< sc_lv<16> > input_load_reg_990;
    sc_signal< sc_lv<32> > tmp_5_fu_685_p18;
    sc_signal< sc_lv<32> > tmp_5_reg_995;
    sc_signal< sc_lv<32> > mul_ln39_fu_725_p2;
    sc_signal< sc_lv<32> > mul_ln39_reg_1000;
    sc_signal< sc_lv<23> > buffer_fu_750_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_lv<5> > ap_phi_mux_out_w_0_phi_fu_261_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<5> > ap_phi_mux_in_d_0_phi_fu_284_p4;
    sc_signal< sc_lv<64> > zext_ln28_fu_307_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln39_5_fu_622_p1;
    sc_signal< sc_lv<64> > zext_ln47_fu_792_p1;
    sc_signal< sc_lv<32> > kernel_buffer_15_fu_110;
    sc_signal< sc_lv<32> > kernel_buffer_0_fu_312_p1;
    sc_signal< sc_lv<32> > kernel_buffer_15_1_fu_114;
    sc_signal< sc_lv<32> > kernel_buffer_15_2_fu_118;
    sc_signal< sc_lv<32> > kernel_buffer_15_3_fu_122;
    sc_signal< sc_lv<32> > kernel_buffer_15_4_fu_126;
    sc_signal< sc_lv<32> > kernel_buffer_15_5_fu_130;
    sc_signal< sc_lv<32> > kernel_buffer_15_6_fu_134;
    sc_signal< sc_lv<32> > kernel_buffer_15_7_fu_138;
    sc_signal< sc_lv<32> > kernel_buffer_15_8_fu_142;
    sc_signal< sc_lv<32> > kernel_buffer_15_9_fu_146;
    sc_signal< sc_lv<32> > kernel_buffer_15_10_fu_150;
    sc_signal< sc_lv<32> > kernel_buffer_15_11_fu_154;
    sc_signal< sc_lv<32> > kernel_buffer_15_12_fu_158;
    sc_signal< sc_lv<32> > kernel_buffer_15_13_fu_162;
    sc_signal< sc_lv<32> > kernel_buffer_15_14_fu_166;
    sc_signal< sc_lv<32> > kernel_buffer_15_15_fu_170;
    sc_signal< sc_lv<10> > shl_ln_fu_396_p3;
    sc_signal< sc_lv<7> > shl_ln39_4_fu_408_p3;
    sc_signal< sc_lv<11> > zext_ln39_fu_404_p1;
    sc_signal< sc_lv<11> > zext_ln39_1_fu_416_p1;
    sc_signal< sc_lv<11> > sub_ln39_fu_420_p2;
    sc_signal< sc_lv<11> > zext_ln36_fu_426_p1;
    sc_signal< sc_lv<1> > icmp_ln33_fu_454_p2;
    sc_signal< sc_lv<5> > out_h_fu_448_p2;
    sc_signal< sc_lv<10> > shl_ln39_mid1_fu_468_p3;
    sc_signal< sc_lv<7> > shl_ln39_4_mid1_fu_480_p3;
    sc_signal< sc_lv<11> > zext_ln39_2_fu_476_p1;
    sc_signal< sc_lv<11> > zext_ln39_3_fu_488_p1;
    sc_signal< sc_lv<11> > sub_ln39_1_fu_492_p2;
    sc_signal< sc_lv<11> > add_ln39_fu_430_p2;
    sc_signal< sc_lv<1> > icmp_ln36_fu_520_p2;
    sc_signal< sc_lv<1> > xor_ln32_fu_514_p2;
    sc_signal< sc_lv<5> > select_ln32_fu_460_p3;
    sc_signal< sc_lv<1> > and_ln32_fu_526_p2;
    sc_signal< sc_lv<5> > out_w_fu_540_p2;
    sc_signal< sc_lv<11> > zext_ln36_1_fu_560_p1;
    sc_signal< sc_lv<11> > add_ln39_2_fu_572_p2;
    sc_signal< sc_lv<11> > select_ln32_2_fu_506_p3;
    sc_signal< sc_lv<10> > add_ln33_fu_596_p2;
    sc_signal< sc_lv<15> > grp_fu_797_p3;
    sc_signal< sc_lv<32> > sext_ln39_fu_619_p1;
    sc_signal< sc_lv<11> > zext_ln36_2_fu_610_p1;
    sc_signal< sc_lv<16> > mul_ln39_fu_725_p0;
    sc_signal< sc_lv<18> > trunc_ln39_2_fu_737_p4;
    sc_signal< sc_lv<23> > select_ln36_fu_730_p3;
    sc_signal< sc_lv<23> > sext_ln39_2_fu_746_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_756_p3;
    sc_signal< sc_lv<1> > xor_ln46_fu_768_p2;
    sc_signal< sc_lv<16> > select_ln46_fu_774_p3;
    sc_signal< sc_lv<16> > trunc_ln46_fu_764_p1;
    sc_signal< sc_lv<32> > sext_ln47_fu_789_p1;
    sc_signal< sc_lv<11> > grp_fu_797_p0;
    sc_signal< sc_lv<5> > grp_fu_797_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_lv<15> > grp_fu_797_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_pp1_stage0;
    static const sc_lv<5> ap_ST_fsm_state10;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<23> ap_const_lv23_7FD60D;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<14> ap_const_lv14_3100;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<10> ap_const_lv10_1C0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<15> ap_const_lv15_310;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_SeparableConv2D_4_w_s_address0();
    void thread_SeparableConv2D_4_w_s_ce0();
    void thread_add_ln31_fu_442_p2();
    void thread_add_ln33_fu_596_p2();
    void thread_add_ln39_2_fu_572_p2();
    void thread_add_ln39_fu_430_p2();
    void thread_add_ln47_fu_632_p2();
    void thread_and_ln32_fu_526_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_block_state7_pp1_stage0_iter2();
    void thread_ap_block_state8_pp1_stage0_iter3();
    void thread_ap_block_state9_pp1_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_in_d_0_phi_fu_284_p4();
    void thread_ap_phi_mux_out_w_0_phi_fu_261_p4();
    void thread_ap_ready();
    void thread_buffer_fu_750_p2();
    void thread_grp_fu_797_p0();
    void thread_grp_fu_797_p1();
    void thread_grp_fu_797_p10();
    void thread_i_fu_297_p2();
    void thread_icmp_ln26_fu_291_p2();
    void thread_icmp_ln31_fu_436_p2();
    void thread_icmp_ln33_fu_454_p2();
    void thread_icmp_ln36_1_fu_627_p2();
    void thread_icmp_ln36_fu_520_p2();
    void thread_in_d_fu_590_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_kernel_buffer_0_fu_312_p1();
    void thread_mul_ln39_fu_725_p0();
    void thread_mul_ln39_fu_725_p2();
    void thread_or_ln36_fu_546_p2();
    void thread_out_h_fu_448_p2();
    void thread_out_w_fu_540_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_select_ln31_fu_532_p3();
    void thread_select_ln32_1_fu_498_p3();
    void thread_select_ln32_2_fu_506_p3();
    void thread_select_ln32_fu_460_p3();
    void thread_select_ln33_fu_602_p3();
    void thread_select_ln36_1_fu_552_p3();
    void thread_select_ln36_2_fu_564_p3();
    void thread_select_ln36_3_fu_578_p3();
    void thread_select_ln36_fu_730_p3();
    void thread_select_ln46_fu_774_p3();
    void thread_sext_ln39_2_fu_746_p1();
    void thread_sext_ln39_fu_619_p1();
    void thread_sext_ln47_fu_789_p1();
    void thread_shl_ln39_4_fu_408_p3();
    void thread_shl_ln39_4_mid1_fu_480_p3();
    void thread_shl_ln39_mid1_fu_468_p3();
    void thread_shl_ln_fu_396_p3();
    void thread_sub_ln39_1_fu_492_p2();
    void thread_sub_ln39_fu_420_p2();
    void thread_tmp_1_fu_756_p3();
    void thread_trunc_ln28_fu_303_p1();
    void thread_trunc_ln39_2_fu_737_p4();
    void thread_trunc_ln39_fu_586_p1();
    void thread_trunc_ln46_fu_764_p1();
    void thread_xor_ln32_fu_514_p2();
    void thread_xor_ln46_fu_768_p2();
    void thread_zext_ln28_fu_307_p1();
    void thread_zext_ln36_1_fu_560_p1();
    void thread_zext_ln36_2_fu_610_p1();
    void thread_zext_ln36_fu_426_p1();
    void thread_zext_ln39_1_fu_416_p1();
    void thread_zext_ln39_2_fu_476_p1();
    void thread_zext_ln39_3_fu_488_p1();
    void thread_zext_ln39_5_fu_622_p1();
    void thread_zext_ln39_fu_404_p1();
    void thread_zext_ln47_fu_792_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
