// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv2d_fix_4_HH_
#define _pointwise_conv2d_fix_4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mul_mul_16s_15s_31_1_1.h"
#include "pointwise_conv2d_fix_4_kernel_buffer.h"

namespace ap_rtl {

struct pointwise_conv2d_fix_4 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    pointwise_conv2d_fix_4(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv2d_fix_4);

    ~pointwise_conv2d_fix_4();

    sc_trace_file* mVcdFile;

    pointwise_conv2d_fix_4_kernel_buffer* kernel_buffer_U;
    network_mul_mul_16s_15s_31_1_1<1,1,16,15,31>* network_mul_mul_16s_15s_31_1_1_U69;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > kernel_buffer_address0;
    sc_signal< sc_logic > kernel_buffer_ce0;
    sc_signal< sc_lv<15> > kernel_buffer_q0;
    sc_signal< sc_lv<5> > i_fu_166_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > out_h_fu_178_p2;
    sc_signal< sc_lv<5> > out_h_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<11> > sub_ln37_fu_208_p2;
    sc_signal< sc_lv<11> > sub_ln37_reg_368;
    sc_signal< sc_lv<1> > icmp_ln31_fu_172_p2;
    sc_signal< sc_lv<5> > out_w_fu_220_p2;
    sc_signal< sc_lv<5> > out_w_reg_376;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > add_ln37_fu_230_p2;
    sc_signal< sc_lv<11> > add_ln37_reg_381;
    sc_signal< sc_lv<1> > icmp_ln33_fu_214_p2;
    sc_signal< sc_lv<15> > sext_ln37_fu_235_p1;
    sc_signal< sc_lv<15> > sext_ln37_reg_386;
    sc_signal< sc_lv<5> > in_d_fu_249_p2;
    sc_signal< sc_lv<5> > in_d_reg_394;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<14> > add_ln37_2_fu_255_p2;
    sc_signal< sc_lv<14> > add_ln37_2_reg_399;
    sc_signal< sc_lv<1> > icmp_ln35_fu_243_p2;
    sc_signal< sc_lv<16> > input_load_reg_414;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<15> > kernel_buffer_load_reg_419;
    sc_signal< sc_lv<18> > tmp_1_reg_424;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<24> > buffer_fu_339_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > i_0_reg_93;
    sc_signal< sc_lv<1> > icmp_ln26_fu_160_p2;
    sc_signal< sc_lv<5> > out_h_0_reg_104;
    sc_signal< sc_lv<5> > out_w_0_reg_115;
    sc_signal< sc_lv<24> > buffer_0_reg_126;
    sc_signal< sc_lv<5> > in_d_0_reg_138;
    sc_signal< sc_lv<14> > phi_mul_reg_149;
    sc_signal< sc_lv<64> > zext_ln37_3_fu_270_p1;
    sc_signal< sc_lv<64> > zext_ln37_fu_275_p1;
    sc_signal< sc_lv<64> > zext_ln43_fu_316_p1;
    sc_signal< sc_lv<10> > shl_ln_fu_184_p3;
    sc_signal< sc_lv<7> > shl_ln37_4_fu_196_p3;
    sc_signal< sc_lv<11> > zext_ln37_1_fu_192_p1;
    sc_signal< sc_lv<11> > zext_ln37_2_fu_204_p1;
    sc_signal< sc_lv<11> > zext_ln35_fu_226_p1;
    sc_signal< sc_lv<15> > zext_ln35_1_fu_239_p1;
    sc_signal< sc_lv<15> > add_ln37_1_fu_261_p2;
    sc_signal< sc_lv<32> > sext_ln37_1_fu_266_p1;
    sc_signal< sc_lv<1> > tmp_fu_280_p3;
    sc_signal< sc_lv<1> > xor_ln42_fu_292_p2;
    sc_signal< sc_lv<16> > select_ln42_fu_298_p3;
    sc_signal< sc_lv<16> > trunc_ln42_fu_288_p1;
    sc_signal< sc_lv<32> > sext_ln43_fu_313_p1;
    sc_signal< sc_lv<31> > mul_ln37_fu_345_p2;
    sc_signal< sc_lv<24> > sext_ln37_4_fu_336_p1;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<24> ap_const_lv24_FFE6BA;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<14> ap_const_lv14_310;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_1E;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln37_1_fu_261_p2();
    void thread_add_ln37_2_fu_255_p2();
    void thread_add_ln37_fu_230_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_fu_339_p2();
    void thread_i_fu_166_p2();
    void thread_icmp_ln26_fu_160_p2();
    void thread_icmp_ln31_fu_172_p2();
    void thread_icmp_ln33_fu_214_p2();
    void thread_icmp_ln35_fu_243_p2();
    void thread_in_d_fu_249_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_kernel_buffer_address0();
    void thread_kernel_buffer_ce0();
    void thread_out_h_fu_178_p2();
    void thread_out_w_fu_220_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_select_ln42_fu_298_p3();
    void thread_sext_ln37_1_fu_266_p1();
    void thread_sext_ln37_4_fu_336_p1();
    void thread_sext_ln37_fu_235_p1();
    void thread_sext_ln43_fu_313_p1();
    void thread_shl_ln37_4_fu_196_p3();
    void thread_shl_ln_fu_184_p3();
    void thread_sub_ln37_fu_208_p2();
    void thread_tmp_fu_280_p3();
    void thread_trunc_ln42_fu_288_p1();
    void thread_xor_ln42_fu_292_p2();
    void thread_zext_ln35_1_fu_239_p1();
    void thread_zext_ln35_fu_226_p1();
    void thread_zext_ln37_1_fu_192_p1();
    void thread_zext_ln37_2_fu_204_p1();
    void thread_zext_ln37_3_fu_270_p1();
    void thread_zext_ln37_fu_275_p1();
    void thread_zext_ln43_fu_316_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
