// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling2d_fix16_HH_
#define _max_pooling2d_fix16_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pooling2d_fix16 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<7> > input_height;
    sc_in< sc_lv<6> > input_width;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<6> > output_depth;
    sc_in< sc_lv<5> > output_height;
    sc_in< sc_lv<5> > output_width;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    max_pooling2d_fix16(sc_module_name name);
    SC_HAS_PROCESS(max_pooling2d_fix16);

    ~max_pooling2d_fix16();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > zext_ln26_fu_225_p1;
    sc_signal< sc_lv<9> > zext_ln26_reg_468;
    sc_signal< sc_lv<14> > zext_ln26_1_cast_fu_229_p1;
    sc_signal< sc_lv<14> > zext_ln26_1_cast_reg_473;
    sc_signal< sc_lv<8> > zext_ln32_fu_233_p1;
    sc_signal< sc_lv<8> > zext_ln32_reg_478;
    sc_signal< sc_lv<12> > zext_ln32_1_cast_fu_237_p1;
    sc_signal< sc_lv<12> > zext_ln32_1_cast_reg_483;
    sc_signal< sc_lv<4> > empty_fu_241_p1;
    sc_signal< sc_lv<4> > empty_reg_488;
    sc_signal< sc_lv<4> > empty_44_fu_245_p1;
    sc_signal< sc_lv<4> > empty_44_reg_493;
    sc_signal< sc_lv<5> > empty_45_fu_249_p1;
    sc_signal< sc_lv<5> > empty_45_reg_498;
    sc_signal< sc_lv<8> > next_mul5_fu_253_p2;
    sc_signal< sc_lv<8> > next_mul5_reg_503;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > next_mul_fu_258_p2;
    sc_signal< sc_lv<9> > next_mul_reg_508;
    sc_signal< sc_lv<5> > out_d_fu_268_p2;
    sc_signal< sc_lv<5> > out_d_reg_516;
    sc_signal< sc_lv<4> > out_h_fu_279_p2;
    sc_signal< sc_lv<4> > out_h_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > zext_ln26_2_fu_297_p1;
    sc_signal< sc_lv<9> > zext_ln26_2_reg_529;
    sc_signal< sc_lv<1> > icmp_ln19_fu_274_p2;
    sc_signal< sc_lv<12> > tmp3_fu_311_p2;
    sc_signal< sc_lv<12> > tmp3_reg_534;
    sc_signal< sc_lv<4> > out_w_fu_321_p2;
    sc_signal< sc_lv<4> > out_w_reg_542;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > zext_ln26_3_fu_327_p1;
    sc_signal< sc_lv<12> > zext_ln26_3_reg_547;
    sc_signal< sc_lv<1> > icmp_ln20_fu_316_p2;
    sc_signal< sc_lv<14> > zext_ln26_4_fu_339_p1;
    sc_signal< sc_lv<14> > zext_ln26_4_reg_552;
    sc_signal< sc_lv<1> > trunc_ln22_fu_343_p1;
    sc_signal< sc_lv<1> > trunc_ln22_reg_557;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > in_h_fu_353_p2;
    sc_signal< sc_lv<2> > in_h_reg_565;
    sc_signal< sc_lv<14> > tmp1_fu_378_p2;
    sc_signal< sc_lv<14> > tmp1_reg_570;
    sc_signal< sc_lv<1> > icmp_ln22_fu_347_p2;
    sc_signal< sc_lv<1> > trunc_ln24_fu_392_p1;
    sc_signal< sc_lv<1> > trunc_ln24_reg_575;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > in_w_fu_402_p2;
    sc_signal< sc_lv<2> > in_w_reg_583;
    sc_signal< sc_lv<1> > icmp_ln24_fu_396_p2;
    sc_signal< sc_lv<5> > out_d_0_reg_130;
    sc_signal< sc_lv<9> > phi_mul_reg_141;
    sc_signal< sc_lv<8> > phi_mul4_reg_153;
    sc_signal< sc_lv<4> > out_h_0_reg_165;
    sc_signal< sc_lv<1> > icmp_ln18_fu_263_p2;
    sc_signal< sc_lv<4> > out_w_0_reg_176;
    sc_signal< sc_lv<2> > in_h_0_reg_187;
    sc_signal< sc_lv<2> > in_w_0_reg_198;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln32_1_fu_387_p1;
    sc_signal< sc_lv<64> > zext_ln26_6_fu_422_p1;
    sc_signal< sc_lv<16> > buffer_01_fu_70;
    sc_signal< sc_lv<16> > buffer_5_fu_449_p3;
    sc_signal< sc_lv<5> > sext_ln9_fu_213_p0;
    sc_signal< sc_lv<5> > sext_ln9_1_fu_217_p0;
    sc_signal< sc_lv<7> > sext_ln9_2_fu_221_p1;
    sc_signal< sc_lv<6> > sext_ln9_1_fu_217_p1;
    sc_signal< sc_lv<6> > sext_ln9_fu_213_p1;
    sc_signal< sc_lv<5> > empty_fu_241_p0;
    sc_signal< sc_lv<5> > empty_44_fu_245_p0;
    sc_signal< sc_lv<5> > shl_ln_fu_289_p3;
    sc_signal< sc_lv<8> > zext_ln26_1_fu_285_p1;
    sc_signal< sc_lv<8> > tmp2_fu_301_p2;
    sc_signal< sc_lv<6> > tmp3_fu_311_p0;
    sc_signal< sc_lv<8> > tmp3_fu_311_p1;
    sc_signal< sc_lv<5> > shl_ln26_1_fu_331_p3;
    sc_signal< sc_lv<9> > zext_ln26_5_cast_fu_359_p1;
    sc_signal< sc_lv<9> > tmp4_fu_363_p2;
    sc_signal< sc_lv<9> > tmp_fu_369_p2;
    sc_signal< sc_lv<9> > tmp1_fu_378_p0;
    sc_signal< sc_lv<7> > tmp1_fu_378_p1;
    sc_signal< sc_lv<12> > add_ln32_fu_383_p2;
    sc_signal< sc_lv<14> > zext_ln26_5_fu_408_p1;
    sc_signal< sc_lv<14> > add_ln26_fu_412_p2;
    sc_signal< sc_lv<14> > add_ln26_3_fu_417_p2;
    sc_signal< sc_lv<1> > or_ln27_fu_427_p2;
    sc_signal< sc_lv<1> > icmp_ln27_fu_437_p2;
    sc_signal< sc_lv<1> > xor_ln27_fu_431_p2;
    sc_signal< sc_lv<1> > or_ln27_1_fu_443_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<14> > tmp1_fu_378_p00;
    sc_signal< sc_lv<12> > tmp3_fu_311_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln26_3_fu_417_p2();
    void thread_add_ln26_fu_412_p2();
    void thread_add_ln32_fu_383_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_5_fu_449_p3();
    void thread_empty_44_fu_245_p0();
    void thread_empty_44_fu_245_p1();
    void thread_empty_45_fu_249_p1();
    void thread_empty_fu_241_p0();
    void thread_empty_fu_241_p1();
    void thread_icmp_ln18_fu_263_p2();
    void thread_icmp_ln19_fu_274_p2();
    void thread_icmp_ln20_fu_316_p2();
    void thread_icmp_ln22_fu_347_p2();
    void thread_icmp_ln24_fu_396_p2();
    void thread_icmp_ln27_fu_437_p2();
    void thread_in_h_fu_353_p2();
    void thread_in_w_fu_402_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_next_mul5_fu_253_p2();
    void thread_next_mul_fu_258_p2();
    void thread_or_ln27_1_fu_443_p2();
    void thread_or_ln27_fu_427_p2();
    void thread_out_d_fu_268_p2();
    void thread_out_h_fu_279_p2();
    void thread_out_w_fu_321_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_sext_ln9_1_fu_217_p0();
    void thread_sext_ln9_1_fu_217_p1();
    void thread_sext_ln9_2_fu_221_p1();
    void thread_sext_ln9_fu_213_p0();
    void thread_sext_ln9_fu_213_p1();
    void thread_shl_ln26_1_fu_331_p3();
    void thread_shl_ln_fu_289_p3();
    void thread_tmp1_fu_378_p0();
    void thread_tmp1_fu_378_p00();
    void thread_tmp1_fu_378_p1();
    void thread_tmp1_fu_378_p2();
    void thread_tmp2_fu_301_p2();
    void thread_tmp3_fu_311_p0();
    void thread_tmp3_fu_311_p1();
    void thread_tmp3_fu_311_p10();
    void thread_tmp3_fu_311_p2();
    void thread_tmp4_fu_363_p2();
    void thread_tmp_fu_369_p2();
    void thread_trunc_ln22_fu_343_p1();
    void thread_trunc_ln24_fu_392_p1();
    void thread_xor_ln27_fu_431_p2();
    void thread_zext_ln26_1_cast_fu_229_p1();
    void thread_zext_ln26_1_fu_285_p1();
    void thread_zext_ln26_2_fu_297_p1();
    void thread_zext_ln26_3_fu_327_p1();
    void thread_zext_ln26_4_fu_339_p1();
    void thread_zext_ln26_5_cast_fu_359_p1();
    void thread_zext_ln26_5_fu_408_p1();
    void thread_zext_ln26_6_fu_422_p1();
    void thread_zext_ln26_fu_225_p1();
    void thread_zext_ln32_1_cast_fu_237_p1();
    void thread_zext_ln32_1_fu_387_p1();
    void thread_zext_ln32_fu_233_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
