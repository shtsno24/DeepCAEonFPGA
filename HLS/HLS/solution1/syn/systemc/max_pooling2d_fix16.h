// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pooling2d_fix16_HH_
#define _max_pooling2d_fix16_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pooling2d_fix16 : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<7> > input_height;
    sc_in< sc_lv<6> > input_width;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_in< sc_lv<6> > output_depth;
    sc_in< sc_lv<5> > output_height;
    sc_in< sc_lv<5> > output_width;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    max_pooling2d_fix16(sc_module_name name);
    SC_HAS_PROCESS(max_pooling2d_fix16);

    ~max_pooling2d_fix16();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > zext_ln25_fu_215_p1;
    sc_signal< sc_lv<9> > zext_ln25_reg_458;
    sc_signal< sc_lv<14> > zext_ln25_1_cast_fu_219_p1;
    sc_signal< sc_lv<14> > zext_ln25_1_cast_reg_463;
    sc_signal< sc_lv<8> > zext_ln31_fu_223_p1;
    sc_signal< sc_lv<8> > zext_ln31_reg_468;
    sc_signal< sc_lv<12> > zext_ln31_1_cast_fu_227_p1;
    sc_signal< sc_lv<12> > zext_ln31_1_cast_reg_473;
    sc_signal< sc_lv<4> > empty_fu_231_p1;
    sc_signal< sc_lv<4> > empty_reg_478;
    sc_signal< sc_lv<4> > empty_50_fu_235_p1;
    sc_signal< sc_lv<4> > empty_50_reg_483;
    sc_signal< sc_lv<5> > empty_51_fu_239_p1;
    sc_signal< sc_lv<5> > empty_51_reg_488;
    sc_signal< sc_lv<8> > next_mul5_fu_243_p2;
    sc_signal< sc_lv<8> > next_mul5_reg_493;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > next_mul_fu_248_p2;
    sc_signal< sc_lv<9> > next_mul_reg_498;
    sc_signal< sc_lv<5> > out_d_fu_258_p2;
    sc_signal< sc_lv<5> > out_d_reg_506;
    sc_signal< sc_lv<4> > out_h_fu_269_p2;
    sc_signal< sc_lv<4> > out_h_reg_514;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > zext_ln25_2_fu_287_p1;
    sc_signal< sc_lv<9> > zext_ln25_2_reg_519;
    sc_signal< sc_lv<1> > icmp_ln19_fu_264_p2;
    sc_signal< sc_lv<12> > tmp3_fu_301_p2;
    sc_signal< sc_lv<12> > tmp3_reg_524;
    sc_signal< sc_lv<4> > out_w_fu_311_p2;
    sc_signal< sc_lv<4> > out_w_reg_532;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > zext_ln25_3_fu_317_p1;
    sc_signal< sc_lv<12> > zext_ln25_3_reg_537;
    sc_signal< sc_lv<1> > icmp_ln20_fu_306_p2;
    sc_signal< sc_lv<14> > zext_ln25_4_fu_329_p1;
    sc_signal< sc_lv<14> > zext_ln25_4_reg_542;
    sc_signal< sc_lv<1> > trunc_ln23_fu_333_p1;
    sc_signal< sc_lv<1> > trunc_ln23_reg_547;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > in_h_fu_343_p2;
    sc_signal< sc_lv<2> > in_h_reg_555;
    sc_signal< sc_lv<14> > tmp1_fu_368_p2;
    sc_signal< sc_lv<14> > tmp1_reg_560;
    sc_signal< sc_lv<1> > icmp_ln23_fu_337_p2;
    sc_signal< sc_lv<1> > trunc_ln24_fu_382_p1;
    sc_signal< sc_lv<1> > trunc_ln24_reg_565;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > in_w_fu_392_p2;
    sc_signal< sc_lv<2> > in_w_reg_573;
    sc_signal< sc_lv<1> > icmp_ln24_fu_386_p2;
    sc_signal< sc_lv<5> > out_d_0_reg_120;
    sc_signal< sc_lv<9> > phi_mul_reg_131;
    sc_signal< sc_lv<8> > phi_mul4_reg_143;
    sc_signal< sc_lv<4> > out_h_0_reg_155;
    sc_signal< sc_lv<1> > icmp_ln18_fu_253_p2;
    sc_signal< sc_lv<4> > out_w_0_reg_166;
    sc_signal< sc_lv<2> > in_h_0_reg_177;
    sc_signal< sc_lv<2> > in_w_0_reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > zext_ln31_1_fu_377_p1;
    sc_signal< sc_lv<64> > zext_ln25_6_fu_412_p1;
    sc_signal< sc_lv<16> > buffer_fu_60;
    sc_signal< sc_lv<16> > buffer_2_fu_439_p3;
    sc_signal< sc_lv<5> > sext_ln9_fu_203_p0;
    sc_signal< sc_lv<5> > sext_ln9_1_fu_207_p0;
    sc_signal< sc_lv<7> > sext_ln9_2_fu_211_p1;
    sc_signal< sc_lv<6> > sext_ln9_1_fu_207_p1;
    sc_signal< sc_lv<6> > sext_ln9_fu_203_p1;
    sc_signal< sc_lv<5> > empty_fu_231_p0;
    sc_signal< sc_lv<5> > empty_50_fu_235_p0;
    sc_signal< sc_lv<5> > shl_ln_fu_279_p3;
    sc_signal< sc_lv<8> > zext_ln25_1_fu_275_p1;
    sc_signal< sc_lv<8> > tmp2_fu_291_p2;
    sc_signal< sc_lv<6> > tmp3_fu_301_p0;
    sc_signal< sc_lv<8> > tmp3_fu_301_p1;
    sc_signal< sc_lv<5> > shl_ln25_1_fu_321_p3;
    sc_signal< sc_lv<9> > zext_ln25_5_cast_fu_349_p1;
    sc_signal< sc_lv<9> > tmp4_fu_353_p2;
    sc_signal< sc_lv<9> > tmp_fu_359_p2;
    sc_signal< sc_lv<9> > tmp1_fu_368_p0;
    sc_signal< sc_lv<7> > tmp1_fu_368_p1;
    sc_signal< sc_lv<12> > add_ln31_fu_373_p2;
    sc_signal< sc_lv<14> > zext_ln25_5_fu_398_p1;
    sc_signal< sc_lv<14> > add_ln25_fu_402_p2;
    sc_signal< sc_lv<14> > add_ln25_1_fu_407_p2;
    sc_signal< sc_lv<1> > or_ln26_fu_417_p2;
    sc_signal< sc_lv<1> > icmp_ln26_fu_427_p2;
    sc_signal< sc_lv<1> > xor_ln26_fu_421_p2;
    sc_signal< sc_lv<1> > or_ln26_1_fu_433_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<14> > tmp1_fu_368_p00;
    sc_signal< sc_lv<12> > tmp3_fu_301_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln25_1_fu_407_p2();
    void thread_add_ln25_fu_402_p2();
    void thread_add_ln31_fu_373_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_2_fu_439_p3();
    void thread_empty_50_fu_235_p0();
    void thread_empty_50_fu_235_p1();
    void thread_empty_51_fu_239_p1();
    void thread_empty_fu_231_p0();
    void thread_empty_fu_231_p1();
    void thread_icmp_ln18_fu_253_p2();
    void thread_icmp_ln19_fu_264_p2();
    void thread_icmp_ln20_fu_306_p2();
    void thread_icmp_ln23_fu_337_p2();
    void thread_icmp_ln24_fu_386_p2();
    void thread_icmp_ln26_fu_427_p2();
    void thread_in_h_fu_343_p2();
    void thread_in_w_fu_392_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_next_mul5_fu_243_p2();
    void thread_next_mul_fu_248_p2();
    void thread_or_ln26_1_fu_433_p2();
    void thread_or_ln26_fu_417_p2();
    void thread_out_d_fu_258_p2();
    void thread_out_h_fu_269_p2();
    void thread_out_w_fu_311_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_sext_ln9_1_fu_207_p0();
    void thread_sext_ln9_1_fu_207_p1();
    void thread_sext_ln9_2_fu_211_p1();
    void thread_sext_ln9_fu_203_p0();
    void thread_sext_ln9_fu_203_p1();
    void thread_shl_ln25_1_fu_321_p3();
    void thread_shl_ln_fu_279_p3();
    void thread_tmp1_fu_368_p0();
    void thread_tmp1_fu_368_p00();
    void thread_tmp1_fu_368_p1();
    void thread_tmp1_fu_368_p2();
    void thread_tmp2_fu_291_p2();
    void thread_tmp3_fu_301_p0();
    void thread_tmp3_fu_301_p1();
    void thread_tmp3_fu_301_p10();
    void thread_tmp3_fu_301_p2();
    void thread_tmp4_fu_353_p2();
    void thread_tmp_fu_359_p2();
    void thread_trunc_ln23_fu_333_p1();
    void thread_trunc_ln24_fu_382_p1();
    void thread_xor_ln26_fu_421_p2();
    void thread_zext_ln25_1_cast_fu_219_p1();
    void thread_zext_ln25_1_fu_275_p1();
    void thread_zext_ln25_2_fu_287_p1();
    void thread_zext_ln25_3_fu_317_p1();
    void thread_zext_ln25_4_fu_329_p1();
    void thread_zext_ln25_5_cast_fu_349_p1();
    void thread_zext_ln25_5_fu_398_p1();
    void thread_zext_ln25_6_fu_412_p1();
    void thread_zext_ln25_fu_215_p1();
    void thread_zext_ln31_1_cast_fu_227_p1();
    void thread_zext_ln31_1_fu_377_p1();
    void thread_zext_ln31_fu_223_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
