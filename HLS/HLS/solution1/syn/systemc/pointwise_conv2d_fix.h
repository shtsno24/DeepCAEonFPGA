// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv2d_fix_HH_
#define _pointwise_conv2d_fix_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mux_164_16_1_1.h"

namespace ap_rtl {

struct pointwise_conv2d_fix : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;
    sc_signal< sc_lv<16> > ap_var_for_const0;
    sc_signal< sc_lv<16> > ap_var_for_const1;
    sc_signal< sc_lv<16> > ap_var_for_const2;
    sc_signal< sc_lv<16> > ap_var_for_const3;
    sc_signal< sc_lv<16> > ap_var_for_const4;
    sc_signal< sc_lv<16> > ap_var_for_const5;
    sc_signal< sc_lv<16> > ap_var_for_const6;
    sc_signal< sc_lv<16> > ap_var_for_const7;
    sc_signal< sc_lv<16> > ap_var_for_const8;
    sc_signal< sc_lv<16> > ap_var_for_const9;
    sc_signal< sc_lv<16> > ap_var_for_const10;
    sc_signal< sc_lv<16> > ap_var_for_const11;
    sc_signal< sc_lv<16> > ap_var_for_const12;
    sc_signal< sc_lv<16> > ap_var_for_const13;
    sc_signal< sc_lv<16> > ap_var_for_const14;
    sc_signal< sc_lv<16> > ap_var_for_const15;
    sc_signal< sc_lv<16> > ap_var_for_const16;
    sc_signal< sc_lv<16> > ap_var_for_const17;
    sc_signal< sc_lv<16> > ap_var_for_const18;
    sc_signal< sc_lv<16> > ap_var_for_const19;
    sc_signal< sc_lv<16> > ap_var_for_const20;
    sc_signal< sc_lv<16> > ap_var_for_const21;
    sc_signal< sc_lv<16> > ap_var_for_const22;
    sc_signal< sc_lv<16> > ap_var_for_const23;
    sc_signal< sc_lv<16> > ap_var_for_const24;
    sc_signal< sc_lv<16> > ap_var_for_const25;
    sc_signal< sc_lv<16> > ap_var_for_const26;
    sc_signal< sc_lv<16> > ap_var_for_const27;
    sc_signal< sc_lv<16> > ap_var_for_const28;
    sc_signal< sc_lv<16> > ap_var_for_const29;
    sc_signal< sc_lv<16> > ap_var_for_const30;


    // Module declarations
    pointwise_conv2d_fix(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv2d_fix);

    ~pointwise_conv2d_fix();

    sc_trace_file* mVcdFile;

    network_mux_164_16_1_1<1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,4,16>* network_mux_164_16_1_1_U19;
    network_mux_164_16_1_1<1,1,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,4,16>* network_mux_164_16_1_1_U20;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<19> > buffer_0_reg_220;
    sc_signal< sc_lv<1> > in_d_0_reg_230;
    sc_signal< sc_lv<1> > in_d_0_reg_230_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > in_d_0_reg_230_pp0_iter2_reg;
    sc_signal< sc_lv<15> > zext_ln23_fu_243_p1;
    sc_signal< sc_lv<15> > zext_ln23_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > add_ln23_fu_247_p2;
    sc_signal< sc_lv<14> > add_ln23_reg_582;
    sc_signal< sc_lv<5> > out_d_fu_259_p2;
    sc_signal< sc_lv<5> > out_d_reg_590;
    sc_signal< sc_lv<19> > sext_ln33_fu_307_p1;
    sc_signal< sc_lv<19> > sext_ln33_reg_595;
    sc_signal< sc_lv<1> > icmp_ln23_fu_253_p2;
    sc_signal< sc_lv<1> > icmp_ln30_fu_388_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<10> > add_ln30_fu_394_p2;
    sc_signal< sc_lv<10> > add_ln30_reg_604;
    sc_signal< sc_lv<5> > select_ln31_fu_412_p3;
    sc_signal< sc_lv<5> > select_ln31_reg_609;
    sc_signal< sc_lv<5> > select_ln30_fu_458_p3;
    sc_signal< sc_lv<5> > select_ln30_reg_614;
    sc_signal< sc_lv<11> > add_ln37_fu_470_p2;
    sc_signal< sc_lv<11> > add_ln37_reg_619;
    sc_signal< sc_lv<14> > input_addr_reg_624;
    sc_signal< sc_lv<16> > input_load_reg_629;
    sc_signal< sc_lv<18> > trunc_ln_reg_634;
    sc_signal< sc_lv<19> > buffer_fu_510_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<5> > out_w_fu_566_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<1> > ap_phi_mux_in_d_0_phi_fu_234_p4;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<5> > out_d_0_reg_165;
    sc_signal< sc_lv<14> > phi_mul_reg_176;
    sc_signal< sc_lv<10> > indvar_flatten_reg_187;
    sc_signal< sc_lv<5> > out_h_0_reg_198;
    sc_signal< sc_lv<5> > out_w_0_reg_209;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln37_3_fu_480_p1;
    sc_signal< sc_lv<64> > zext_ln43_fu_561_p1;
    sc_signal< sc_lv<32> > kernel_buffer_0_1_fu_136;
    sc_signal< sc_lv<32> > kernel_buffer_0_fu_349_p1;
    sc_signal< sc_lv<4> > trunc_ln24_fu_265_p1;
    sc_signal< sc_lv<16> > tmp_1_fu_269_p18;
    sc_signal< sc_lv<16> > tmp_3_fu_311_p18;
    sc_signal< sc_lv<10> > shl_ln_fu_358_p3;
    sc_signal< sc_lv<7> > shl_ln37_1_fu_370_p3;
    sc_signal< sc_lv<11> > zext_ln37_2_fu_366_p1;
    sc_signal< sc_lv<11> > zext_ln37_4_fu_378_p1;
    sc_signal< sc_lv<1> > icmp_ln32_fu_406_p2;
    sc_signal< sc_lv<5> > out_h_fu_400_p2;
    sc_signal< sc_lv<10> > shl_ln37_mid1_fu_420_p3;
    sc_signal< sc_lv<7> > shl_ln37_1_mid1_fu_432_p3;
    sc_signal< sc_lv<11> > zext_ln37_fu_428_p1;
    sc_signal< sc_lv<11> > zext_ln37_16_fu_440_p1;
    sc_signal< sc_lv<11> > sub_ln37_5_fu_444_p2;
    sc_signal< sc_lv<11> > sub_ln37_fu_382_p2;
    sc_signal< sc_lv<11> > zext_ln34_fu_466_p1;
    sc_signal< sc_lv<11> > select_ln31_12_fu_450_p3;
    sc_signal< sc_lv<32> > sext_ln37_1_fu_476_p1;
    sc_signal< sc_lv<32> > mul_ln37_fu_491_p0;
    sc_signal< sc_lv<16> > mul_ln37_fu_491_p1;
    sc_signal< sc_lv<32> > mul_ln37_fu_491_p2;
    sc_signal< sc_lv<19> > sext_ln37_2_fu_507_p1;
    sc_signal< sc_lv<1> > tmp_fu_516_p3;
    sc_signal< sc_lv<1> > xor_ln42_fu_528_p2;
    sc_signal< sc_lv<16> > select_ln42_fu_534_p3;
    sc_signal< sc_lv<16> > trunc_ln42_fu_524_p1;
    sc_signal< sc_lv<15> > sext_ln43_fu_549_p1;
    sc_signal< sc_lv<15> > add_ln43_1_fu_552_p2;
    sc_signal< sc_lv<32> > sext_ln43_1_fu_557_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state8;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<14> ap_const_lv14_310;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<16> ap_const_lv16_606;
    static const sc_lv<16> ap_const_lv16_FBE8;
    static const sc_lv<16> ap_const_lv16_FEB3;
    static const sc_lv<16> ap_const_lv16_30F;
    static const sc_lv<16> ap_const_lv16_FCEC;
    static const sc_lv<16> ap_const_lv16_FCDC;
    static const sc_lv<16> ap_const_lv16_2F6;
    static const sc_lv<16> ap_const_lv16_FEAA;
    static const sc_lv<16> ap_const_lv16_43B;
    static const sc_lv<16> ap_const_lv16_9D0;
    static const sc_lv<16> ap_const_lv16_1B9;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_FC3D;
    static const sc_lv<16> ap_const_lv16_67;
    static const sc_lv<16> ap_const_lv16_FD47;
    static const sc_lv<16> ap_const_lv16_FCAC;
    static const sc_lv<16> ap_const_lv16_F916;
    static const sc_lv<16> ap_const_lv16_19EF;
    static const sc_lv<16> ap_const_lv16_1F9D;
    static const sc_lv<16> ap_const_lv16_FD8C;
    static const sc_lv<16> ap_const_lv16_1338;
    static const sc_lv<16> ap_const_lv16_2592;
    static const sc_lv<16> ap_const_lv16_DBDB;
    static const sc_lv<16> ap_const_lv16_609;
    static const sc_lv<16> ap_const_lv16_D598;
    static const sc_lv<16> ap_const_lv16_AAD;
    static const sc_lv<16> ap_const_lv16_4AA;
    static const sc_lv<16> ap_const_lv16_1793;
    static const sc_lv<16> ap_const_lv16_F74;
    static const sc_lv<16> ap_const_lv16_E4E9;
    static const sc_lv<16> ap_const_lv16_1526;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<16> ap_const_lv16_FFFF;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const8();
    void thread_ap_var_for_const9();
    void thread_ap_var_for_const10();
    void thread_ap_var_for_const11();
    void thread_ap_var_for_const12();
    void thread_ap_var_for_const13();
    void thread_ap_var_for_const14();
    void thread_ap_var_for_const15();
    void thread_ap_var_for_const16();
    void thread_ap_var_for_const17();
    void thread_ap_var_for_const18();
    void thread_ap_var_for_const19();
    void thread_ap_var_for_const20();
    void thread_ap_var_for_const21();
    void thread_ap_var_for_const22();
    void thread_ap_var_for_const23();
    void thread_ap_var_for_const24();
    void thread_ap_var_for_const25();
    void thread_ap_var_for_const26();
    void thread_ap_var_for_const27();
    void thread_ap_var_for_const28();
    void thread_ap_var_for_const29();
    void thread_ap_var_for_const30();
    void thread_ap_clk_no_reset_();
    void thread_add_ln23_fu_247_p2();
    void thread_add_ln30_fu_394_p2();
    void thread_add_ln37_fu_470_p2();
    void thread_add_ln43_1_fu_552_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_block_state7_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_in_d_0_phi_fu_234_p4();
    void thread_ap_ready();
    void thread_buffer_fu_510_p2();
    void thread_icmp_ln23_fu_253_p2();
    void thread_icmp_ln30_fu_388_p2();
    void thread_icmp_ln32_fu_406_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_kernel_buffer_0_fu_349_p1();
    void thread_mul_ln37_fu_491_p0();
    void thread_mul_ln37_fu_491_p1();
    void thread_mul_ln37_fu_491_p2();
    void thread_out_d_fu_259_p2();
    void thread_out_h_fu_400_p2();
    void thread_out_w_fu_566_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_select_ln30_fu_458_p3();
    void thread_select_ln31_12_fu_450_p3();
    void thread_select_ln31_fu_412_p3();
    void thread_select_ln42_fu_534_p3();
    void thread_sext_ln33_fu_307_p1();
    void thread_sext_ln37_1_fu_476_p1();
    void thread_sext_ln37_2_fu_507_p1();
    void thread_sext_ln43_1_fu_557_p1();
    void thread_sext_ln43_fu_549_p1();
    void thread_shl_ln37_1_fu_370_p3();
    void thread_shl_ln37_1_mid1_fu_432_p3();
    void thread_shl_ln37_mid1_fu_420_p3();
    void thread_shl_ln_fu_358_p3();
    void thread_sub_ln37_5_fu_444_p2();
    void thread_sub_ln37_fu_382_p2();
    void thread_tmp_fu_516_p3();
    void thread_trunc_ln24_fu_265_p1();
    void thread_trunc_ln42_fu_524_p1();
    void thread_xor_ln42_fu_528_p2();
    void thread_zext_ln23_fu_243_p1();
    void thread_zext_ln34_fu_466_p1();
    void thread_zext_ln37_16_fu_440_p1();
    void thread_zext_ln37_2_fu_366_p1();
    void thread_zext_ln37_3_fu_480_p1();
    void thread_zext_ln37_4_fu_378_p1();
    void thread_zext_ln37_fu_428_p1();
    void thread_zext_ln43_fu_561_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
