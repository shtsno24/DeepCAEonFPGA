// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv2d_fix_HH_
#define _pointwise_conv2d_fix_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "network_mul_mul_15s_16s_30_1_1.h"
#include "pointwise_conv2d_fix_SeparableConv2D_0_b_s.h"
#include "pointwise_conv2d_fix_SeparableConv2D_0_w_s.h"

namespace ap_rtl {

struct pointwise_conv2d_fix : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    pointwise_conv2d_fix(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv2d_fix);

    ~pointwise_conv2d_fix();

    sc_trace_file* mVcdFile;

    pointwise_conv2d_fix_SeparableConv2D_0_b_s* SeparableConv2D_0_b_s_U;
    pointwise_conv2d_fix_SeparableConv2D_0_w_s* SeparableConv2D_0_w_s_U;
    network_mul_mul_15s_16s_30_1_1<1,1,15,16,30>* network_mul_mul_15s_16s_30_1_1_U11;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > SeparableConv2D_0_b_s_address0;
    sc_signal< sc_logic > SeparableConv2D_0_b_s_ce0;
    sc_signal< sc_lv<13> > SeparableConv2D_0_b_s_q0;
    sc_signal< sc_lv<4> > SeparableConv2D_0_w_s_address0;
    sc_signal< sc_logic > SeparableConv2D_0_w_s_ce0;
    sc_signal< sc_lv<15> > SeparableConv2D_0_w_s_q0;
    sc_signal< sc_lv<15> > zext_ln16_fu_142_p1;
    sc_signal< sc_lv<15> > zext_ln16_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > add_ln16_fu_146_p2;
    sc_signal< sc_lv<14> > add_ln16_reg_327;
    sc_signal< sc_lv<5> > out_d_fu_158_p2;
    sc_signal< sc_lv<5> > out_d_reg_335;
    sc_signal< sc_lv<1> > icmp_ln16_fu_152_p2;
    sc_signal< sc_lv<30> > sext_ln23_2_fu_178_p1;
    sc_signal< sc_lv<30> > sext_ln23_2_reg_350;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<16> > empty_27_fu_182_p1;
    sc_signal< sc_lv<16> > empty_27_reg_355;
    sc_signal< sc_lv<5> > out_h_fu_192_p2;
    sc_signal< sc_lv<5> > out_h_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<11> > sub_ln23_fu_222_p2;
    sc_signal< sc_lv<11> > sub_ln23_reg_368;
    sc_signal< sc_lv<1> > icmp_ln17_fu_186_p2;
    sc_signal< sc_lv<5> > out_w_fu_234_p2;
    sc_signal< sc_lv<5> > out_w_reg_376;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln18_fu_228_p2;
    sc_signal< sc_lv<15> > add_ln30_1_fu_262_p2;
    sc_signal< sc_lv<15> > add_ln30_1_reg_386;
    sc_signal< sc_lv<16> > input_load_reg_391;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<16> > trunc_ln5_reg_396;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > out_d_0_reg_98;
    sc_signal< sc_lv<14> > phi_mul_reg_109;
    sc_signal< sc_lv<5> > out_h_0_reg_120;
    sc_signal< sc_lv<5> > out_w_0_reg_131;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > zext_ln19_fu_164_p1;
    sc_signal< sc_lv<64> > zext_ln23_5_fu_173_p1;
    sc_signal< sc_lv<64> > zext_ln23_4_fu_253_p1;
    sc_signal< sc_lv<64> > zext_ln30_fu_311_p1;
    sc_signal< sc_lv<4> > trunc_ln30_fu_169_p1;
    sc_signal< sc_lv<10> > shl_ln_fu_198_p3;
    sc_signal< sc_lv<7> > shl_ln23_1_fu_210_p3;
    sc_signal< sc_lv<11> > zext_ln23_2_fu_206_p1;
    sc_signal< sc_lv<11> > zext_ln23_3_fu_218_p1;
    sc_signal< sc_lv<11> > zext_ln20_fu_240_p1;
    sc_signal< sc_lv<11> > add_ln23_1_fu_244_p2;
    sc_signal< sc_lv<32> > sext_ln23_fu_249_p1;
    sc_signal< sc_lv<15> > sext_ln30_fu_258_p1;
    sc_signal< sc_lv<30> > mul_ln23_fu_316_p2;
    sc_signal< sc_lv<16> > buffer_4_fu_279_p2;
    sc_signal< sc_lv<1> > tmp_fu_287_p3;
    sc_signal< sc_lv<15> > trunc_ln20_fu_283_p1;
    sc_signal< sc_lv<15> > select_ln27_fu_295_p3;
    sc_signal< sc_lv<32> > sext_ln30_1_fu_308_p1;
    sc_signal< sc_lv<15> > mul_ln23_fu_316_p0;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<14> ap_const_lv14_310;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<15> ap_const_lv15_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_SeparableConv2D_0_b_s_address0();
    void thread_SeparableConv2D_0_b_s_ce0();
    void thread_SeparableConv2D_0_w_s_address0();
    void thread_SeparableConv2D_0_w_s_ce0();
    void thread_add_ln16_fu_146_p2();
    void thread_add_ln23_1_fu_244_p2();
    void thread_add_ln30_1_fu_262_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_4_fu_279_p2();
    void thread_empty_27_fu_182_p1();
    void thread_icmp_ln16_fu_152_p2();
    void thread_icmp_ln17_fu_186_p2();
    void thread_icmp_ln18_fu_228_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_mul_ln23_fu_316_p0();
    void thread_out_d_fu_158_p2();
    void thread_out_h_fu_192_p2();
    void thread_out_w_fu_234_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_select_ln27_fu_295_p3();
    void thread_sext_ln23_2_fu_178_p1();
    void thread_sext_ln23_fu_249_p1();
    void thread_sext_ln30_1_fu_308_p1();
    void thread_sext_ln30_fu_258_p1();
    void thread_shl_ln23_1_fu_210_p3();
    void thread_shl_ln_fu_198_p3();
    void thread_sub_ln23_fu_222_p2();
    void thread_tmp_fu_287_p3();
    void thread_trunc_ln20_fu_283_p1();
    void thread_trunc_ln30_fu_169_p1();
    void thread_zext_ln16_fu_142_p1();
    void thread_zext_ln19_fu_164_p1();
    void thread_zext_ln20_fu_240_p1();
    void thread_zext_ln23_2_fu_206_p1();
    void thread_zext_ln23_3_fu_218_p1();
    void thread_zext_ln23_4_fu_253_p1();
    void thread_zext_ln23_5_fu_173_p1();
    void thread_zext_ln30_fu_311_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
