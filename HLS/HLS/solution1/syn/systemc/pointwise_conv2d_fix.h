// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pointwise_conv2d_fix_HH_
#define _pointwise_conv2d_fix_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pointwise_conv2d_fix_SeparableConv2D_0_b_s.h"
#include "pointwise_conv2d_fix_SeparableConv2D_0_w_s.h"

namespace ap_rtl {

struct pointwise_conv2d_fix : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<16> > input_r_q0;
    sc_out< sc_lv<14> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<16> > output_r_d0;


    // Module declarations
    pointwise_conv2d_fix(sc_module_name name);
    SC_HAS_PROCESS(pointwise_conv2d_fix);

    ~pointwise_conv2d_fix();

    sc_trace_file* mVcdFile;

    pointwise_conv2d_fix_SeparableConv2D_0_b_s* SeparableConv2D_0_b_s_U;
    pointwise_conv2d_fix_SeparableConv2D_0_w_s* SeparableConv2D_0_w_s_U;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > SeparableConv2D_0_b_s_address0;
    sc_signal< sc_logic > SeparableConv2D_0_b_s_ce0;
    sc_signal< sc_lv<13> > SeparableConv2D_0_b_s_q0;
    sc_signal< sc_lv<4> > SeparableConv2D_0_w_s_address0;
    sc_signal< sc_logic > SeparableConv2D_0_w_s_ce0;
    sc_signal< sc_lv<15> > SeparableConv2D_0_w_s_q0;
    sc_signal< sc_lv<19> > buffer_0_reg_188;
    sc_signal< sc_lv<1> > in_d_0_reg_198;
    sc_signal< sc_lv<1> > in_d_0_reg_198_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > in_d_0_reg_198_pp0_iter2_reg;
    sc_signal< sc_lv<15> > zext_ln24_fu_211_p1;
    sc_signal< sc_lv<15> > zext_ln24_reg_479;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > add_ln24_fu_215_p2;
    sc_signal< sc_lv<14> > add_ln24_reg_484;
    sc_signal< sc_lv<5> > out_d_fu_227_p2;
    sc_signal< sc_lv<5> > out_d_reg_492;
    sc_signal< sc_lv<1> > icmp_ln24_fu_221_p2;
    sc_signal< sc_lv<19> > sext_ln34_fu_247_p1;
    sc_signal< sc_lv<19> > sext_ln34_reg_507;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln31_fu_290_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > add_ln31_fu_296_p2;
    sc_signal< sc_lv<10> > add_ln31_reg_516;
    sc_signal< sc_lv<5> > select_ln32_fu_314_p3;
    sc_signal< sc_lv<5> > select_ln32_reg_521;
    sc_signal< sc_lv<5> > select_ln31_fu_360_p3;
    sc_signal< sc_lv<5> > select_ln31_reg_526;
    sc_signal< sc_lv<11> > add_ln39_fu_372_p2;
    sc_signal< sc_lv<11> > add_ln39_reg_531;
    sc_signal< sc_lv<14> > input_addr_reg_536;
    sc_signal< sc_lv<16> > input_load_reg_541;
    sc_signal< sc_lv<18> > trunc_ln7_reg_546;
    sc_signal< sc_lv<19> > buffer_fu_412_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<5> > out_w_fu_468_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<1> > ap_phi_mux_in_d_0_phi_fu_202_p4;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<5> > out_d_0_reg_133;
    sc_signal< sc_lv<14> > phi_mul_reg_144;
    sc_signal< sc_lv<10> > indvar_flatten_reg_155;
    sc_signal< sc_lv<5> > out_h_0_reg_166;
    sc_signal< sc_lv<5> > out_w_0_reg_177;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln25_fu_233_p1;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_242_p1;
    sc_signal< sc_lv<64> > zext_ln39_3_fu_382_p1;
    sc_signal< sc_lv<64> > zext_ln47_fu_463_p1;
    sc_signal< sc_lv<32> > kernel_buffer_0_1_fu_78;
    sc_signal< sc_lv<32> > kernel_buffer_0_fu_251_p1;
    sc_signal< sc_lv<4> > trunc_ln26_fu_238_p1;
    sc_signal< sc_lv<10> > shl_ln_fu_260_p3;
    sc_signal< sc_lv<7> > shl_ln39_1_fu_272_p3;
    sc_signal< sc_lv<11> > zext_ln39_2_fu_268_p1;
    sc_signal< sc_lv<11> > zext_ln39_4_fu_280_p1;
    sc_signal< sc_lv<1> > icmp_ln33_fu_308_p2;
    sc_signal< sc_lv<5> > out_h_fu_302_p2;
    sc_signal< sc_lv<10> > shl_ln39_mid1_fu_322_p3;
    sc_signal< sc_lv<7> > shl_ln39_1_mid1_fu_334_p3;
    sc_signal< sc_lv<11> > zext_ln39_fu_330_p1;
    sc_signal< sc_lv<11> > zext_ln39_16_fu_342_p1;
    sc_signal< sc_lv<11> > sub_ln39_5_fu_346_p2;
    sc_signal< sc_lv<11> > sub_ln39_fu_284_p2;
    sc_signal< sc_lv<11> > zext_ln36_fu_368_p1;
    sc_signal< sc_lv<11> > select_ln32_12_fu_352_p3;
    sc_signal< sc_lv<32> > sext_ln39_1_fu_378_p1;
    sc_signal< sc_lv<32> > mul_ln39_fu_393_p0;
    sc_signal< sc_lv<16> > mul_ln39_fu_393_p1;
    sc_signal< sc_lv<32> > mul_ln39_fu_393_p2;
    sc_signal< sc_lv<19> > sext_ln39_2_fu_409_p1;
    sc_signal< sc_lv<1> > tmp_6_fu_418_p3;
    sc_signal< sc_lv<1> > xor_ln46_fu_430_p2;
    sc_signal< sc_lv<16> > select_ln46_fu_436_p3;
    sc_signal< sc_lv<16> > trunc_ln46_fu_426_p1;
    sc_signal< sc_lv<15> > sext_ln47_fu_451_p1;
    sc_signal< sc_lv<15> > add_ln47_1_fu_454_p2;
    sc_signal< sc_lv<32> > sext_ln47_1_fu_459_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_state9;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<14> ap_const_lv14_310;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_310;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<5> ap_const_lv5_1C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<16> ap_const_lv16_FFFF;
    static const sc_lv<16> ap_const_lv16_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_SeparableConv2D_0_b_s_address0();
    void thread_SeparableConv2D_0_b_s_ce0();
    void thread_SeparableConv2D_0_w_s_address0();
    void thread_SeparableConv2D_0_w_s_ce0();
    void thread_add_ln24_fu_215_p2();
    void thread_add_ln31_fu_296_p2();
    void thread_add_ln39_fu_372_p2();
    void thread_add_ln47_1_fu_454_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state5_pp0_stage0_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage0_iter2();
    void thread_ap_block_state8_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_in_d_0_phi_fu_202_p4();
    void thread_ap_ready();
    void thread_buffer_fu_412_p2();
    void thread_icmp_ln24_fu_221_p2();
    void thread_icmp_ln31_fu_290_p2();
    void thread_icmp_ln33_fu_308_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_kernel_buffer_0_fu_251_p1();
    void thread_mul_ln39_fu_393_p0();
    void thread_mul_ln39_fu_393_p1();
    void thread_mul_ln39_fu_393_p2();
    void thread_out_d_fu_227_p2();
    void thread_out_h_fu_302_p2();
    void thread_out_w_fu_468_p2();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_select_ln31_fu_360_p3();
    void thread_select_ln32_12_fu_352_p3();
    void thread_select_ln32_fu_314_p3();
    void thread_select_ln46_fu_436_p3();
    void thread_sext_ln34_fu_247_p1();
    void thread_sext_ln39_1_fu_378_p1();
    void thread_sext_ln39_2_fu_409_p1();
    void thread_sext_ln47_1_fu_459_p1();
    void thread_sext_ln47_fu_451_p1();
    void thread_shl_ln39_1_fu_272_p3();
    void thread_shl_ln39_1_mid1_fu_334_p3();
    void thread_shl_ln39_mid1_fu_322_p3();
    void thread_shl_ln_fu_260_p3();
    void thread_sub_ln39_5_fu_346_p2();
    void thread_sub_ln39_fu_284_p2();
    void thread_tmp_6_fu_418_p3();
    void thread_trunc_ln26_fu_238_p1();
    void thread_trunc_ln46_fu_426_p1();
    void thread_xor_ln46_fu_430_p2();
    void thread_zext_ln24_fu_211_p1();
    void thread_zext_ln25_fu_233_p1();
    void thread_zext_ln28_1_fu_242_p1();
    void thread_zext_ln36_fu_368_p1();
    void thread_zext_ln39_16_fu_342_p1();
    void thread_zext_ln39_2_fu_268_p1();
    void thread_zext_ln39_3_fu_382_p1();
    void thread_zext_ln39_4_fu_280_p1();
    void thread_zext_ln39_fu_330_p1();
    void thread_zext_ln47_fu_463_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
