-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pointwise_conv2d_fix_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of pointwise_conv2d_fix_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv12_B7C : STD_LOGIC_VECTOR (11 downto 0) := "101101111100";
    constant ap_const_lv11_498 : STD_LOGIC_VECTOR (10 downto 0) := "10010011000";
    constant ap_const_lv10_C4 : STD_LOGIC_VECTOR (9 downto 0) := "0011000100";
    constant ap_const_lv11_620 : STD_LOGIC_VECTOR (10 downto 0) := "11000100000";
    constant ap_const_lv11_55C : STD_LOGIC_VECTOR (10 downto 0) := "10101011100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv11_6E4 : STD_LOGIC_VECTOR (10 downto 0) := "11011100100";
    constant ap_const_lv12_7A8 : STD_LOGIC_VECTOR (11 downto 0) := "011110101000";
    constant ap_const_lv10_24C : STD_LOGIC_VECTOR (9 downto 0) := "1001001100";
    constant ap_const_lv12_9F4 : STD_LOGIC_VECTOR (11 downto 0) := "100111110100";
    constant ap_const_lv11_3D4 : STD_LOGIC_VECTOR (10 downto 0) := "01111010100";
    constant ap_const_lv12_930 : STD_LOGIC_VECTOR (11 downto 0) := "100100110000";
    constant ap_const_lv12_86C : STD_LOGIC_VECTOR (11 downto 0) := "100001101100";
    constant ap_const_lv10_188 : STD_LOGIC_VECTOR (9 downto 0) := "0110001000";
    constant ap_const_lv11_310 : STD_LOGIC_VECTOR (10 downto 0) := "01100010000";
    constant ap_const_lv12_AB8 : STD_LOGIC_VECTOR (11 downto 0) := "101010111000";
    constant ap_const_lv11_C4 : STD_LOGIC_VECTOR (10 downto 0) := "00011000100";
    constant ap_const_lv13_C4 : STD_LOGIC_VECTOR (12 downto 0) := "0000011000100";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal SeparableConv2D_1_b_s_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal SeparableConv2D_1_b_s_ce0 : STD_LOGIC;
    signal SeparableConv2D_1_b_s_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal SeparableConv2D_1_w_s_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce0 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce1 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address2 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce2 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q2 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address3 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce3 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q3 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address4 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce4 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q4 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address5 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce5 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q5 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address6 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce6 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q6 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address7 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce7 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q7 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address8 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce8 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q8 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address9 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce9 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q9 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address10 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce10 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q10 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address11 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce11 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q11 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address12 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce12 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q12 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address13 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce13 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q13 : STD_LOGIC_VECTOR (14 downto 0);
    signal SeparableConv2D_1_w_s_address14 : STD_LOGIC_VECTOR (6 downto 0);
    signal SeparableConv2D_1_w_s_ce14 : STD_LOGIC;
    signal SeparableConv2D_1_w_s_q14 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln23_fu_543_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_489 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln18_fu_5611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln16_fu_574_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln16_reg_905 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out_d_fu_572_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_d_reg_910 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_h_fu_556_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_h_reg_1073 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal out_w_fu_566_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_w_reg_1573 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_69_fu_546_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_69_reg_1582 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_551_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_67_reg_1810 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_fu_563_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_78_reg_2102 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal add_ln23_71_fu_550_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_71_reg_2105 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln23_79_fu_570_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_79_reg_2374 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_549_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_76_reg_2609 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_fu_548_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_73_reg_2612 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln23_75_fu_567_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_75_reg_3115 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal add_ln23_68_reg_3121 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal zext_ln16_fu_5319_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln16_reg_6044 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln16_fu_5323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_5338_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln_reg_6057 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln19_fu_5511_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln19_reg_6137 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln23_54_fu_5515_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_54_reg_6142 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_56_fu_5519_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_56_reg_6147 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_58_fu_5523_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_58_reg_6152 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_60_fu_5527_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_60_reg_6157 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_62_fu_5531_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_62_reg_6162 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_64_fu_5535_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_64_reg_6167 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_66_fu_5539_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_66_reg_6172 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_68_fu_5543_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_68_reg_6177 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_70_fu_5547_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_70_reg_6182 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_72_fu_5551_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_72_reg_6187 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_74_fu_5555_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_74_reg_6192 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_76_fu_5559_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_76_reg_6197 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_78_fu_5563_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_78_reg_6202 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_80_fu_5567_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_80_reg_6207 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_82_fu_5571_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_82_reg_6212 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub_ln23_fu_5605_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln23_reg_6220 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln17_fu_5575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln23_118_fu_5622_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln23_118_reg_6228 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln23_117_fu_5642_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln23_117_reg_6243 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal trunc_ln23_1_reg_6252 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln23_2_reg_6257 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln23_4_reg_6272 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln23_6_reg_6287 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln23_116_fu_5769_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln23_116_reg_6302 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln23_8_reg_6312 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln23_10_reg_6327 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln23_12_reg_6342 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln23_14_reg_6357 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln23_fu_5949_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln23_reg_6367 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln20_fu_5953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln20_fu_5983_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln20_reg_6385 : STD_LOGIC_VECTOR (4 downto 0);
    signal out_d_0_reg_478 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_h_0_reg_500 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_w_0_reg_511 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_0_0_reg_522 : STD_LOGIC_VECTOR (15 downto 0);
    signal in_d_0_0_reg_532 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln19_fu_5329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_54_fu_5352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_56_fu_5363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_58_fu_5374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_60_fu_5385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_62_fu_5396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_64_fu_5407_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_66_fu_5418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_68_fu_5429_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_70_fu_5440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_72_fu_5451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_74_fu_5462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_76_fu_5473_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_78_fu_5484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_80_fu_5495_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_82_fu_5506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_53_fu_5632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_55_fu_5637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_57_fu_5677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_59_fu_5682_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_61_fu_5718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_63_fu_5723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_65_fu_5759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_67_fu_5764_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_69_fu_5805_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_71_fu_5810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_73_fu_5846_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_75_fu_5851_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_77_fu_5887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_79_fu_5892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_81_fu_5928_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_51_fu_5973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_52_fu_5978_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_fu_6018_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_87_fu_5617_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln23_5_fu_5733_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_547_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_547_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_548_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_548_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_549_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln23_70_fu_553_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_551_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_551_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_562_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln23_7_fu_5779_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_555_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_555_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_fu_3884_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_562_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_562_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_555_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_563_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_563_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln23_88_fu_5959_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln23_43_fu_3873_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_43_fu_3873_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_41_fu_3874_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_41_fu_3874_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_44_fu_3876_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_44_fu_3876_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_37_fu_3877_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_37_fu_3877_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_32_fu_3878_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_32_fu_3878_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_38_fu_3879_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_38_fu_3879_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_40_fu_3880_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_40_fu_3880_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_46_fu_3883_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_46_fu_3883_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_fu_3884_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln23_39_fu_3885_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_39_fu_3885_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_45_fu_3886_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_45_fu_3886_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_35_fu_3890_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_35_fu_3890_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_42_fu_3893_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_42_fu_3893_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_47_fu_3896_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_47_fu_3896_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_36_fu_3901_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_36_fu_3901_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_34_fu_3902_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_34_fu_3902_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln23_33_fu_3904_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln23_33_fu_3904_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln23_fu_5334_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln23_fu_5346_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_1_fu_5357_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_2_fu_5368_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_3_fu_5379_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_4_fu_5390_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_5_fu_5401_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_6_fu_5412_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_7_fu_5423_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_8_fu_5434_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_9_fu_5445_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_10_fu_5456_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_11_fu_5467_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_12_fu_5478_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_13_fu_5489_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln23_14_fu_5500_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln23_2_fu_5581_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln23_3_fu_5593_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_85_fu_5589_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln23_86_fu_5601_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln23_52_fu_5628_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_547_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln23_52_fu_5628_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln23_52_fu_569_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln23_117_fu_5642_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln23_33_fu_3904_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln23_34_fu_3902_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln23_53_fu_560_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln23_54_fu_571_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln23_35_fu_3890_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln23_36_fu_3901_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln23_55_fu_564_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_56_fu_545_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln23_37_fu_3877_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln23_38_fu_3879_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln23_57_fu_554_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_58_fu_552_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln23_116_fu_5769_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln23_39_fu_3885_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln23_40_fu_3880_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln23_59_fu_558_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_60_fu_559_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln23_41_fu_3874_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln23_42_fu_3893_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln23_61_fu_568_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln23_62_fu_565_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln23_43_fu_3873_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln23_44_fu_3876_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln23_63_fu_561_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln23_64_fu_573_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln23_45_fu_3886_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln23_46_fu_3883_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln23_65_fu_544_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln23_47_fu_3896_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln23_fu_5949_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln23_49_fu_557_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln23_49_fu_5969_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln23_52_fu_5978_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_5993_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln20_fu_5989_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal select_ln27_fu_6001_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln30_2_fu_6014_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln23_32_fu_3878_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln23_fu_3884_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln23_52_fu_5978_p00 : STD_LOGIC_VECTOR (15 downto 0);

    component pointwise_conv2d_fix_1_SeparableConv2D_1_b_s IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component pointwise_conv2d_fix_1_SeparableConv2D_1_w_s IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address2 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address3 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address4 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address5 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address6 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address7 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address8 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce8 : IN STD_LOGIC;
        q8 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address9 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce9 : IN STD_LOGIC;
        q9 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address10 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce10 : IN STD_LOGIC;
        q10 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address11 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce11 : IN STD_LOGIC;
        q11 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address12 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce12 : IN STD_LOGIC;
        q12 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address13 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce13 : IN STD_LOGIC;
        q13 : OUT STD_LOGIC_VECTOR (14 downto 0);
        address14 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce14 : IN STD_LOGIC;
        q14 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    SeparableConv2D_1_b_s_U : component pointwise_conv2d_fix_1_SeparableConv2D_1_b_s
    generic map (
        DataWidth => 13,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => SeparableConv2D_1_b_s_address0,
        ce0 => SeparableConv2D_1_b_s_ce0,
        q0 => SeparableConv2D_1_b_s_q0);

    SeparableConv2D_1_w_s_U : component pointwise_conv2d_fix_1_SeparableConv2D_1_w_s
    generic map (
        DataWidth => 15,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => SeparableConv2D_1_w_s_address0,
        ce0 => SeparableConv2D_1_w_s_ce0,
        q0 => SeparableConv2D_1_w_s_q0,
        address1 => SeparableConv2D_1_w_s_address1,
        ce1 => SeparableConv2D_1_w_s_ce1,
        q1 => SeparableConv2D_1_w_s_q1,
        address2 => SeparableConv2D_1_w_s_address2,
        ce2 => SeparableConv2D_1_w_s_ce2,
        q2 => SeparableConv2D_1_w_s_q2,
        address3 => SeparableConv2D_1_w_s_address3,
        ce3 => SeparableConv2D_1_w_s_ce3,
        q3 => SeparableConv2D_1_w_s_q3,
        address4 => SeparableConv2D_1_w_s_address4,
        ce4 => SeparableConv2D_1_w_s_ce4,
        q4 => SeparableConv2D_1_w_s_q4,
        address5 => SeparableConv2D_1_w_s_address5,
        ce5 => SeparableConv2D_1_w_s_ce5,
        q5 => SeparableConv2D_1_w_s_q5,
        address6 => SeparableConv2D_1_w_s_address6,
        ce6 => SeparableConv2D_1_w_s_ce6,
        q6 => SeparableConv2D_1_w_s_q6,
        address7 => SeparableConv2D_1_w_s_address7,
        ce7 => SeparableConv2D_1_w_s_ce7,
        q7 => SeparableConv2D_1_w_s_q7,
        address8 => SeparableConv2D_1_w_s_address8,
        ce8 => SeparableConv2D_1_w_s_ce8,
        q8 => SeparableConv2D_1_w_s_q8,
        address9 => SeparableConv2D_1_w_s_address9,
        ce9 => SeparableConv2D_1_w_s_ce9,
        q9 => SeparableConv2D_1_w_s_q9,
        address10 => SeparableConv2D_1_w_s_address10,
        ce10 => SeparableConv2D_1_w_s_ce10,
        q10 => SeparableConv2D_1_w_s_q10,
        address11 => SeparableConv2D_1_w_s_address11,
        ce11 => SeparableConv2D_1_w_s_ce11,
        q11 => SeparableConv2D_1_w_s_q11,
        address12 => SeparableConv2D_1_w_s_address12,
        ce12 => SeparableConv2D_1_w_s_ce12,
        q12 => SeparableConv2D_1_w_s_q12,
        address13 => SeparableConv2D_1_w_s_address13,
        ce13 => SeparableConv2D_1_w_s_ce13,
        q13 => SeparableConv2D_1_w_s_q13,
        address14 => SeparableConv2D_1_w_s_address14,
        ce14 => SeparableConv2D_1_w_s_ce14,
        q14 => SeparableConv2D_1_w_s_q14);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    buffer_0_0_reg_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                buffer_0_0_reg_522 <= grp_fu_551_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                buffer_0_0_reg_522 <= sext_ln19_reg_6137;
            end if; 
        end if;
    end process;

    in_d_0_0_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                in_d_0_0_reg_532 <= xor_ln20_reg_6385;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                in_d_0_0_reg_532 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    out_d_0_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln17_fu_5575_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                out_d_0_reg_478 <= out_d_reg_910;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                out_d_0_reg_478 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    out_h_0_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln18_fu_5611_p2 = ap_const_lv1_1))) then 
                out_h_0_reg_500 <= out_h_reg_1073;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                out_h_0_reg_500 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    out_w_0_reg_511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln17_fu_5575_p2 = ap_const_lv1_0))) then 
                out_w_0_reg_511 <= ap_const_lv4_0;
            elsif (((icmp_ln20_fu_5953_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                out_w_0_reg_511 <= out_w_reg_1573;
            end if; 
        end if;
    end process;

    reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln17_fu_5575_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                reg_489 <= add_ln16_reg_905;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_489 <= ap_const_lv11_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln18_fu_5611_p2 = ap_const_lv1_0))) then 
                reg_489 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_fu_543_p2),11));
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln16_reg_905 <= add_ln16_fu_574_p2;
                out_d_reg_910 <= out_d_fu_572_p2;
                    zext_ln16_reg_6044(10 downto 0) <= zext_ln16_fu_5319_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln23_67_reg_1810 <= grp_fu_551_p2;
                trunc_ln23_4_reg_6272 <= mul_ln23_36_fu_3901_p2(29 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                add_ln23_68_reg_3121 <= grp_fu_549_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln23_69_reg_1582 <= add_ln23_69_fu_546_p2;
                trunc_ln23_6_reg_6287 <= mul_ln23_38_fu_3879_p2(29 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln23_71_reg_2105 <= add_ln23_71_fu_550_p2;
                sext_ln23_116_reg_6302 <= sext_ln23_116_fu_5769_p1;
                trunc_ln23_8_reg_6312 <= mul_ln23_40_fu_3880_p2(29 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln23_73_reg_2612 <= grp_fu_548_p2;
                trunc_ln23_10_reg_6327 <= mul_ln23_42_fu_3893_p2(29 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln23_75_reg_3115 <= add_ln23_75_fu_567_p2;
                trunc_ln23_12_reg_6342 <= mul_ln23_44_fu_3876_p2(29 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                add_ln23_76_reg_2609 <= grp_fu_549_p2;
                trunc_ln23_14_reg_6357 <= mul_ln23_46_fu_3883_p2(29 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                add_ln23_78_reg_2102 <= grp_fu_563_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                add_ln23_79_reg_2374 <= add_ln23_79_fu_570_p2;
                sext_ln23_reg_6367 <= sext_ln23_fu_5949_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                out_h_reg_1073 <= out_h_fu_556_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                out_w_reg_1573 <= out_w_fu_566_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                sext_ln19_reg_6137 <= sext_ln19_fu_5511_p1;
                sext_ln23_54_reg_6142 <= sext_ln23_54_fu_5515_p1;
                sext_ln23_56_reg_6147 <= sext_ln23_56_fu_5519_p1;
                sext_ln23_58_reg_6152 <= sext_ln23_58_fu_5523_p1;
                sext_ln23_60_reg_6157 <= sext_ln23_60_fu_5527_p1;
                sext_ln23_62_reg_6162 <= sext_ln23_62_fu_5531_p1;
                sext_ln23_64_reg_6167 <= sext_ln23_64_fu_5535_p1;
                sext_ln23_66_reg_6172 <= sext_ln23_66_fu_5539_p1;
                sext_ln23_68_reg_6177 <= sext_ln23_68_fu_5543_p1;
                sext_ln23_70_reg_6182 <= sext_ln23_70_fu_5547_p1;
                sext_ln23_72_reg_6187 <= sext_ln23_72_fu_5551_p1;
                sext_ln23_74_reg_6192 <= sext_ln23_74_fu_5555_p1;
                sext_ln23_76_reg_6197 <= sext_ln23_76_fu_5559_p1;
                sext_ln23_78_reg_6202 <= sext_ln23_78_fu_5563_p1;
                sext_ln23_80_reg_6207 <= sext_ln23_80_fu_5567_p1;
                sext_ln23_82_reg_6212 <= sext_ln23_82_fu_5571_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                sext_ln23_117_reg_6243 <= sext_ln23_117_fu_5642_p1;
                trunc_ln23_1_reg_6252 <= mul_ln23_33_fu_3904_p2(29 downto 14);
                trunc_ln23_2_reg_6257 <= mul_ln23_34_fu_3902_p2(29 downto 14);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln18_fu_5611_p2 = ap_const_lv1_0))) then
                sext_ln23_118_reg_6228 <= sext_ln23_118_fu_5622_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln16_fu_5323_p2 = ap_const_lv1_0))) then
                    shl_ln_reg_6057(6 downto 4) <= shl_ln_fu_5338_p3(6 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln17_fu_5575_p2 = ap_const_lv1_0))) then
                    sub_ln23_reg_6220(8 downto 1) <= sub_ln23_fu_5605_p2(8 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln20_fu_5953_p2 = ap_const_lv1_0))) then
                xor_ln20_reg_6385 <= xor_ln20_fu_5983_p2;
            end if;
        end if;
    end process;
    zext_ln16_reg_6044(11) <= '0';
    shl_ln_reg_6057(3 downto 0) <= "0000";
    sub_ln23_reg_6220(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, icmp_ln18_fu_5611_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln16_fu_5323_p2, icmp_ln17_fu_5575_p2, ap_CS_fsm_state15, icmp_ln20_fu_5953_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln16_fu_5323_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln17_fu_5575_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln18_fu_5611_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln20_fu_5953_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    SeparableConv2D_1_b_s_address0 <= zext_ln19_fu_5329_p1(3 - 1 downto 0);

    SeparableConv2D_1_b_s_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_b_s_ce0 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_b_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15, zext_ln23_54_fu_5352_p1, zext_ln23_52_fu_5978_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            SeparableConv2D_1_w_s_address0 <= zext_ln23_52_fu_5978_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_address0 <= zext_ln23_54_fu_5352_p1(7 - 1 downto 0);
        else 
            SeparableConv2D_1_w_s_address0 <= "XXXXXXX";
        end if; 
    end process;

    SeparableConv2D_1_w_s_address1 <= zext_ln23_56_fu_5363_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address10 <= zext_ln23_74_fu_5462_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address11 <= zext_ln23_76_fu_5473_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address12 <= zext_ln23_78_fu_5484_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address13 <= zext_ln23_80_fu_5495_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address14 <= zext_ln23_82_fu_5506_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address2 <= zext_ln23_58_fu_5374_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address3 <= zext_ln23_60_fu_5385_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address4 <= zext_ln23_62_fu_5396_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address5 <= zext_ln23_64_fu_5407_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address6 <= zext_ln23_66_fu_5418_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address7 <= zext_ln23_68_fu_5429_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address8 <= zext_ln23_70_fu_5440_p1(7 - 1 downto 0);
    SeparableConv2D_1_w_s_address9 <= zext_ln23_72_fu_5451_p1(7 - 1 downto 0);

    SeparableConv2D_1_w_s_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            SeparableConv2D_1_w_s_ce0 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce1_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce1 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce10_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce10 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce10 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce11_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce11 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce11 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce12_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce12 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce12 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce13_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce13 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce13 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce14_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce14 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce14 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce2_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce2 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce3_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce3 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce4_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce4 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce5_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce5 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce6_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce6 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce6 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce7_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce7 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce7 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce8_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce8 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce8 <= ap_const_logic_0;
        end if; 
    end process;


    SeparableConv2D_1_w_s_ce9_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            SeparableConv2D_1_w_s_ce9 <= ap_const_logic_1;
        else 
            SeparableConv2D_1_w_s_ce9 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln16_fu_574_p2 <= std_logic_vector(unsigned(reg_489) + unsigned(ap_const_lv11_C4));
    add_ln23_49_fu_557_p2 <= std_logic_vector(unsigned(mul_ln23_fu_3884_p2) + unsigned(sext_ln23_reg_6367));
    add_ln23_52_fu_569_p2 <= std_logic_vector(signed(sext_ln23_118_fu_5622_p1) + signed(ap_const_lv10_188));
    add_ln23_53_fu_560_p2 <= std_logic_vector(signed(sext_ln23_118_reg_6228) + signed(ap_const_lv10_24C));
    add_ln23_54_fu_571_p2 <= std_logic_vector(signed(sext_ln23_117_fu_5642_p1) + signed(ap_const_lv11_310));
    add_ln23_55_fu_564_p2 <= std_logic_vector(signed(sext_ln23_117_reg_6243) + signed(ap_const_lv11_3D4));
    add_ln23_56_fu_545_p2 <= std_logic_vector(signed(sext_ln23_117_reg_6243) + signed(ap_const_lv11_498));
    add_ln23_57_fu_554_p2 <= std_logic_vector(signed(sext_ln23_117_reg_6243) + signed(ap_const_lv11_55C));
    add_ln23_58_fu_552_p2 <= std_logic_vector(signed(sext_ln23_117_reg_6243) + signed(ap_const_lv11_620));
    add_ln23_59_fu_558_p2 <= std_logic_vector(signed(sext_ln23_117_reg_6243) + signed(ap_const_lv11_6E4));
    add_ln23_60_fu_559_p2 <= std_logic_vector(signed(sext_ln23_116_fu_5769_p1) + signed(ap_const_lv12_7A8));
    add_ln23_61_fu_568_p2 <= std_logic_vector(signed(sext_ln23_116_reg_6302) + signed(ap_const_lv12_86C));
    add_ln23_62_fu_565_p2 <= std_logic_vector(signed(sext_ln23_116_reg_6302) + signed(ap_const_lv12_930));
    add_ln23_63_fu_561_p2 <= std_logic_vector(signed(sext_ln23_116_reg_6302) + signed(ap_const_lv12_9F4));
    add_ln23_64_fu_573_p2 <= std_logic_vector(signed(sext_ln23_116_reg_6302) + signed(ap_const_lv12_AB8));
    add_ln23_65_fu_544_p2 <= std_logic_vector(signed(sext_ln23_116_reg_6302) + signed(ap_const_lv12_B7C));
    add_ln23_69_fu_546_p2 <= std_logic_vector(unsigned(trunc_ln23_5_fu_5733_p4) + unsigned(trunc_ln23_4_reg_6272));
    add_ln23_70_fu_553_p2 <= std_logic_vector(unsigned(trunc_ln23_7_fu_5779_p4) + unsigned(trunc_ln23_6_reg_6287));
    add_ln23_71_fu_550_p2 <= std_logic_vector(unsigned(add_ln23_69_reg_1582) + unsigned(add_ln23_70_fu_553_p2));
    add_ln23_75_fu_567_p2 <= std_logic_vector(unsigned(add_ln23_73_reg_2612) + unsigned(grp_fu_555_p2));
    add_ln23_79_fu_570_p2 <= std_logic_vector(unsigned(add_ln23_75_reg_3115) + unsigned(add_ln23_78_reg_2102));
    add_ln23_fu_543_p2 <= std_logic_vector(unsigned(zext_ln23_87_fu_5617_p1) + unsigned(sub_ln23_reg_6220));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln16_fu_5323_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln16_fu_5323_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln16_fu_5323_p2)
    begin
        if (((icmp_ln16_fu_5323_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_547_p0_assign_proc : process(ap_CS_fsm_state5, sext_ln23_118_fu_5622_p1, sext_ln23_116_reg_6302, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_547_p0 <= sext_ln23_116_reg_6302;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_547_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln23_118_fu_5622_p1),12));
        else 
            grp_fu_547_p0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_547_p1_assign_proc : process(ap_CS_fsm_state5, zext_ln16_reg_6044, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_547_p1 <= zext_ln16_reg_6044;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv10_C4),12));
        else 
            grp_fu_547_p1 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_547_p2 <= std_logic_vector(signed(grp_fu_547_p0) + signed(grp_fu_547_p1));

    grp_fu_548_p0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state16, mul_ln23_41_fu_3874_p2, mul_ln23_32_fu_3878_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_548_p0 <= mul_ln23_32_fu_3878_p2(29 downto 14);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_548_p0 <= mul_ln23_41_fu_3874_p2(29 downto 14);
        else 
            grp_fu_548_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_548_p1_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state16, trunc_ln23_1_reg_6252, trunc_ln23_8_reg_6312)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_548_p1 <= trunc_ln23_1_reg_6252;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_548_p1 <= trunc_ln23_8_reg_6312;
        else 
            grp_fu_548_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_548_p2 <= std_logic_vector(unsigned(grp_fu_548_p0) + unsigned(grp_fu_548_p1));

    grp_fu_549_p0_assign_proc : process(add_ln23_67_reg_1810, ap_CS_fsm_state12, ap_CS_fsm_state16, mul_ln23_45_fu_3886_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_549_p0 <= add_ln23_67_reg_1810;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_549_p0 <= mul_ln23_45_fu_3886_p2(29 downto 14);
        else 
            grp_fu_549_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_549_p1_assign_proc : process(ap_CS_fsm_state12, grp_fu_548_p2, ap_CS_fsm_state16, trunc_ln23_12_reg_6342)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_549_p1 <= grp_fu_548_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_549_p1 <= trunc_ln23_12_reg_6342;
        else 
            grp_fu_549_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_549_p2 <= std_logic_vector(unsigned(grp_fu_549_p0) + unsigned(grp_fu_549_p1));

    grp_fu_551_p0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, buffer_0_0_reg_522, mul_ln23_35_fu_3890_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_551_p0 <= buffer_0_0_reg_522;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_551_p0 <= mul_ln23_35_fu_3890_p2(29 downto 14);
        else 
            grp_fu_551_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_551_p1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state17, trunc_ln23_2_reg_6257, grp_fu_562_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_551_p1 <= grp_fu_562_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_551_p1 <= trunc_ln23_2_reg_6257;
        else 
            grp_fu_551_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_551_p2 <= std_logic_vector(unsigned(grp_fu_551_p0) + unsigned(grp_fu_551_p1));

    grp_fu_555_p0_assign_proc : process(add_ln23_71_reg_2105, ap_CS_fsm_state11, ap_CS_fsm_state17, mul_ln23_43_fu_3873_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_555_p0 <= add_ln23_71_reg_2105;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_555_p0 <= mul_ln23_43_fu_3873_p2(29 downto 14);
        else 
            grp_fu_555_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_555_p1_assign_proc : process(ap_CS_fsm_state11, add_ln23_68_reg_3121, ap_CS_fsm_state17, trunc_ln23_10_reg_6327)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_555_p1 <= add_ln23_68_reg_3121;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_555_p1 <= trunc_ln23_10_reg_6327;
        else 
            grp_fu_555_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_555_p2 <= std_logic_vector(unsigned(grp_fu_555_p0) + unsigned(grp_fu_555_p1));

    grp_fu_562_p0_assign_proc : process(ap_CS_fsm_state13, add_ln23_79_reg_2374, ap_CS_fsm_state17, mul_ln23_47_fu_3896_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_562_p0 <= add_ln23_79_reg_2374;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_562_p0 <= mul_ln23_47_fu_3896_p2(29 downto 14);
        else 
            grp_fu_562_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_562_p1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state17, trunc_ln23_14_reg_6357, grp_fu_555_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_562_p1 <= grp_fu_555_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_562_p1 <= trunc_ln23_14_reg_6357;
        else 
            grp_fu_562_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_562_p2 <= std_logic_vector(unsigned(grp_fu_562_p0) + unsigned(grp_fu_562_p1));

    grp_fu_563_p0_assign_proc : process(ap_CS_fsm_state13, add_ln23_76_reg_2609, shl_ln_reg_6057, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_563_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_reg_6057),16));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_563_p0 <= add_ln23_76_reg_2609;
        else 
            grp_fu_563_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_563_p1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, grp_fu_562_p2, zext_ln23_88_fu_5959_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln23_88_fu_5959_p1),16));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_563_p1 <= grp_fu_562_p2;
        else 
            grp_fu_563_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_563_p2 <= std_logic_vector(unsigned(grp_fu_563_p0) + unsigned(grp_fu_563_p1));
    icmp_ln16_fu_5323_p2 <= "1" when (out_d_0_reg_478 = ap_const_lv4_8) else "0";
    icmp_ln17_fu_5575_p2 <= "1" when (out_h_0_reg_500 = ap_const_lv4_E) else "0";
    icmp_ln18_fu_5611_p2 <= "1" when (out_w_0_reg_511 = ap_const_lv4_E) else "0";
    icmp_ln20_fu_5953_p2 <= "1" when (in_d_0_0_reg_532 = ap_const_lv5_10) else "0";

    input_r_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state6, zext_ln23_53_fu_5632_p1, zext_ln23_57_fu_5677_p1, zext_ln23_61_fu_5718_p1, zext_ln23_65_fu_5759_p1, zext_ln23_69_fu_5805_p1, zext_ln23_73_fu_5846_p1, zext_ln23_77_fu_5887_p1, zext_ln23_81_fu_5928_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            input_r_address0 <= zext_ln23_81_fu_5928_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            input_r_address0 <= zext_ln23_77_fu_5887_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            input_r_address0 <= zext_ln23_73_fu_5846_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_r_address0 <= zext_ln23_69_fu_5805_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            input_r_address0 <= zext_ln23_65_fu_5759_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            input_r_address0 <= zext_ln23_61_fu_5718_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_address0 <= zext_ln23_57_fu_5677_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_r_address0 <= zext_ln23_53_fu_5632_p1(14 - 1 downto 0);
        else 
            input_r_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state15, zext_ln23_55_fu_5637_p1, zext_ln23_59_fu_5682_p1, zext_ln23_63_fu_5723_p1, zext_ln23_67_fu_5764_p1, zext_ln23_71_fu_5810_p1, zext_ln23_75_fu_5851_p1, zext_ln23_79_fu_5892_p1, zext_ln23_51_fu_5973_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            input_r_address1 <= zext_ln23_51_fu_5973_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            input_r_address1 <= zext_ln23_79_fu_5892_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            input_r_address1 <= zext_ln23_75_fu_5851_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            input_r_address1 <= zext_ln23_71_fu_5810_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            input_r_address1 <= zext_ln23_67_fu_5764_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            input_r_address1 <= zext_ln23_63_fu_5723_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            input_r_address1 <= zext_ln23_59_fu_5682_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            input_r_address1 <= zext_ln23_55_fu_5637_p1(14 - 1 downto 0);
        else 
            input_r_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state6, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln23_32_fu_3878_p0 <= input_r_q1;
    mul_ln23_32_fu_3878_p1 <= SeparableConv2D_1_w_s_q0;
    mul_ln23_32_fu_3878_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_32_fu_3878_p0) * signed(mul_ln23_32_fu_3878_p1))), 30));
    mul_ln23_33_fu_3904_p0 <= sext_ln23_54_reg_6142(15 - 1 downto 0);
    mul_ln23_33_fu_3904_p1 <= input_r_q0;
    mul_ln23_33_fu_3904_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_33_fu_3904_p0) * signed(mul_ln23_33_fu_3904_p1))), 30));
    mul_ln23_34_fu_3902_p0 <= sext_ln23_56_reg_6147(15 - 1 downto 0);
    mul_ln23_34_fu_3902_p1 <= input_r_q1;
    mul_ln23_34_fu_3902_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_34_fu_3902_p0) * signed(mul_ln23_34_fu_3902_p1))), 30));
    mul_ln23_35_fu_3890_p0 <= sext_ln23_58_reg_6152(15 - 1 downto 0);
    mul_ln23_35_fu_3890_p1 <= input_r_q0;
    mul_ln23_35_fu_3890_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_35_fu_3890_p0) * signed(mul_ln23_35_fu_3890_p1))), 30));
    mul_ln23_36_fu_3901_p0 <= sext_ln23_60_reg_6157(15 - 1 downto 0);
    mul_ln23_36_fu_3901_p1 <= input_r_q1;
    mul_ln23_36_fu_3901_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_36_fu_3901_p0) * signed(mul_ln23_36_fu_3901_p1))), 30));
    mul_ln23_37_fu_3877_p0 <= sext_ln23_62_reg_6162(15 - 1 downto 0);
    mul_ln23_37_fu_3877_p1 <= input_r_q0;
    mul_ln23_37_fu_3877_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_37_fu_3877_p0) * signed(mul_ln23_37_fu_3877_p1))), 30));
    mul_ln23_38_fu_3879_p0 <= sext_ln23_64_reg_6167(15 - 1 downto 0);
    mul_ln23_38_fu_3879_p1 <= input_r_q1;
    mul_ln23_38_fu_3879_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_38_fu_3879_p0) * signed(mul_ln23_38_fu_3879_p1))), 30));
    mul_ln23_39_fu_3885_p0 <= sext_ln23_66_reg_6172(15 - 1 downto 0);
    mul_ln23_39_fu_3885_p1 <= input_r_q0;
    mul_ln23_39_fu_3885_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_39_fu_3885_p0) * signed(mul_ln23_39_fu_3885_p1))), 30));
    mul_ln23_40_fu_3880_p0 <= sext_ln23_68_reg_6177(15 - 1 downto 0);
    mul_ln23_40_fu_3880_p1 <= input_r_q1;
    mul_ln23_40_fu_3880_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_40_fu_3880_p0) * signed(mul_ln23_40_fu_3880_p1))), 30));
    mul_ln23_41_fu_3874_p0 <= sext_ln23_70_reg_6182(15 - 1 downto 0);
    mul_ln23_41_fu_3874_p1 <= input_r_q0;
    mul_ln23_41_fu_3874_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_41_fu_3874_p0) * signed(mul_ln23_41_fu_3874_p1))), 30));
    mul_ln23_42_fu_3893_p0 <= sext_ln23_72_reg_6187(15 - 1 downto 0);
    mul_ln23_42_fu_3893_p1 <= input_r_q1;
    mul_ln23_42_fu_3893_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_42_fu_3893_p0) * signed(mul_ln23_42_fu_3893_p1))), 30));
    mul_ln23_43_fu_3873_p0 <= sext_ln23_74_reg_6192(15 - 1 downto 0);
    mul_ln23_43_fu_3873_p1 <= input_r_q0;
    mul_ln23_43_fu_3873_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_43_fu_3873_p0) * signed(mul_ln23_43_fu_3873_p1))), 30));
    mul_ln23_44_fu_3876_p0 <= sext_ln23_76_reg_6197(15 - 1 downto 0);
    mul_ln23_44_fu_3876_p1 <= input_r_q1;
    mul_ln23_44_fu_3876_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_44_fu_3876_p0) * signed(mul_ln23_44_fu_3876_p1))), 30));
    mul_ln23_45_fu_3886_p0 <= sext_ln23_78_reg_6202(15 - 1 downto 0);
    mul_ln23_45_fu_3886_p1 <= input_r_q0;
    mul_ln23_45_fu_3886_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_45_fu_3886_p0) * signed(mul_ln23_45_fu_3886_p1))), 30));
    mul_ln23_46_fu_3883_p0 <= sext_ln23_80_reg_6207(15 - 1 downto 0);
    mul_ln23_46_fu_3883_p1 <= input_r_q1;
    mul_ln23_46_fu_3883_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_46_fu_3883_p0) * signed(mul_ln23_46_fu_3883_p1))), 30));
    mul_ln23_47_fu_3896_p0 <= sext_ln23_82_reg_6212(15 - 1 downto 0);
    mul_ln23_47_fu_3896_p1 <= input_r_q0;
    mul_ln23_47_fu_3896_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln23_47_fu_3896_p0) * signed(mul_ln23_47_fu_3896_p1))), 30));
    mul_ln23_fu_3884_p0 <= mul_ln23_fu_3884_p00(5 - 1 downto 0);
    mul_ln23_fu_3884_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_d_0_0_reg_532),13));
    mul_ln23_fu_3884_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln23_fu_3884_p0) * unsigned(ap_const_lv13_C4), 13));
    or_ln23_10_fu_5456_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_B);
    or_ln23_11_fu_5467_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_C);
    or_ln23_12_fu_5478_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_D);
    or_ln23_13_fu_5489_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_E);
    or_ln23_14_fu_5500_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_F);
    or_ln23_1_fu_5357_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_2);
    or_ln23_2_fu_5368_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_3);
    or_ln23_3_fu_5379_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_4);
    or_ln23_4_fu_5390_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_5);
    or_ln23_5_fu_5401_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_6);
    or_ln23_6_fu_5412_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_7);
    or_ln23_7_fu_5423_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_8);
    or_ln23_8_fu_5434_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_9);
    or_ln23_9_fu_5445_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_A);
    or_ln23_fu_5346_p2 <= (shl_ln_fu_5338_p3 or ap_const_lv7_1);
    out_d_fu_572_p2 <= std_logic_vector(unsigned(out_d_0_reg_478) + unsigned(ap_const_lv4_1));
    out_h_fu_556_p2 <= std_logic_vector(unsigned(out_h_0_reg_500) + unsigned(ap_const_lv4_1));
    out_w_fu_566_p2 <= std_logic_vector(unsigned(out_w_0_reg_511) + unsigned(ap_const_lv4_1));
    output_r_address0 <= zext_ln30_fu_6018_p1(14 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln27_fu_6001_p3),16));

    output_r_we0_assign_proc : process(ap_CS_fsm_state15, icmp_ln20_fu_5953_p2)
    begin
        if (((icmp_ln20_fu_5953_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln27_fu_6001_p3 <= 
        ap_const_lv15_0 when (tmp_fu_5993_p3(0) = '1') else 
        trunc_ln20_fu_5989_p1;
        sext_ln19_fu_5511_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_b_s_q0),16));

    sext_ln23_116_fu_5769_p0 <= reg_489(9 - 1 downto 0);
        sext_ln23_116_fu_5769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln23_116_fu_5769_p0),12));

    sext_ln23_117_fu_5642_p0 <= reg_489(9 - 1 downto 0);
        sext_ln23_117_fu_5642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln23_117_fu_5642_p0),11));

        sext_ln23_118_fu_5622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_fu_543_p2),10));

        sext_ln23_49_fu_5969_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_49_fu_557_p2),32));

    sext_ln23_52_fu_5628_p0 <= grp_fu_547_p2(10 - 1 downto 0);
        sext_ln23_52_fu_5628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln23_52_fu_5628_p0),32));

        sext_ln23_54_fu_5515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q0),30));

        sext_ln23_56_fu_5519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q1),30));

        sext_ln23_58_fu_5523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q2),30));

        sext_ln23_60_fu_5527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q3),30));

        sext_ln23_62_fu_5531_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q4),30));

        sext_ln23_64_fu_5535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q5),30));

        sext_ln23_66_fu_5539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q6),30));

        sext_ln23_68_fu_5543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q7),30));

        sext_ln23_70_fu_5547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q8),30));

        sext_ln23_72_fu_5551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q9),30));

        sext_ln23_74_fu_5555_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q10),30));

        sext_ln23_76_fu_5559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q11),30));

        sext_ln23_78_fu_5563_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q12),30));

        sext_ln23_80_fu_5567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q13),30));

        sext_ln23_82_fu_5571_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(SeparableConv2D_1_w_s_q14),30));

    sext_ln23_fu_5949_p0 <= reg_489(9 - 1 downto 0);
        sext_ln23_fu_5949_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln23_fu_5949_p0),13));

        sext_ln30_2_fu_6014_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_547_p2),32));

    shl_ln23_2_fu_5581_p3 <= (out_h_0_reg_500 & ap_const_lv4_0);
    shl_ln23_3_fu_5593_p3 <= (out_h_0_reg_500 & ap_const_lv1_0);
    shl_ln_fu_5338_p3 <= (trunc_ln23_fu_5334_p1 & ap_const_lv4_0);
    sub_ln23_fu_5605_p2 <= std_logic_vector(unsigned(zext_ln23_85_fu_5589_p1) - unsigned(zext_ln23_86_fu_5601_p1));
    tmp_fu_5993_p3 <= buffer_0_0_reg_522(15 downto 15);
    trunc_ln20_fu_5989_p1 <= buffer_0_0_reg_522(15 - 1 downto 0);
    trunc_ln23_5_fu_5733_p4 <= mul_ln23_37_fu_3877_p2(29 downto 14);
    trunc_ln23_7_fu_5779_p4 <= mul_ln23_39_fu_3885_p2(29 downto 14);
    trunc_ln23_fu_5334_p1 <= out_d_0_reg_478(3 - 1 downto 0);
    xor_ln20_fu_5983_p2 <= (in_d_0_0_reg_532 xor ap_const_lv5_10);
    zext_ln16_fu_5319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_489),12));
    zext_ln19_fu_5329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_d_0_reg_478),64));
    zext_ln23_51_fu_5973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln23_49_fu_5969_p1),64));
    zext_ln23_52_fu_5978_p0 <= zext_ln23_52_fu_5978_p00(7 - 1 downto 0);
    zext_ln23_52_fu_5978_p00 <= std_logic_vector(unsigned(grp_fu_563_p0) + unsigned(grp_fu_563_p1));
    zext_ln23_52_fu_5978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln23_52_fu_5978_p0),64));
    zext_ln23_53_fu_5632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln23_52_fu_5628_p1),64));
    zext_ln23_54_fu_5352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_fu_5346_p2),64));
    zext_ln23_55_fu_5637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_52_fu_569_p2),64));
    zext_ln23_56_fu_5363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_1_fu_5357_p2),64));
    zext_ln23_57_fu_5677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_53_fu_560_p2),64));
    zext_ln23_58_fu_5374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_2_fu_5368_p2),64));
    zext_ln23_59_fu_5682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_54_fu_571_p2),64));
    zext_ln23_60_fu_5385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_3_fu_5379_p2),64));
    zext_ln23_61_fu_5718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_55_fu_564_p2),64));
    zext_ln23_62_fu_5396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_4_fu_5390_p2),64));
    zext_ln23_63_fu_5723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_56_fu_545_p2),64));
    zext_ln23_64_fu_5407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_5_fu_5401_p2),64));
    zext_ln23_65_fu_5759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_57_fu_554_p2),64));
    zext_ln23_66_fu_5418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_6_fu_5412_p2),64));
    zext_ln23_67_fu_5764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_58_fu_552_p2),64));
    zext_ln23_68_fu_5429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_7_fu_5423_p2),64));
    zext_ln23_69_fu_5805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_59_fu_558_p2),64));
    zext_ln23_70_fu_5440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_8_fu_5434_p2),64));
    zext_ln23_71_fu_5810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_60_fu_559_p2),64));
    zext_ln23_72_fu_5451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_9_fu_5445_p2),64));
    zext_ln23_73_fu_5846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_61_fu_568_p2),64));
    zext_ln23_74_fu_5462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_10_fu_5456_p2),64));
    zext_ln23_75_fu_5851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_62_fu_565_p2),64));
    zext_ln23_76_fu_5473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_11_fu_5467_p2),64));
    zext_ln23_77_fu_5887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_63_fu_561_p2),64));
    zext_ln23_78_fu_5484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_12_fu_5478_p2),64));
    zext_ln23_79_fu_5892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_64_fu_573_p2),64));
    zext_ln23_80_fu_5495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_13_fu_5489_p2),64));
    zext_ln23_81_fu_5928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_65_fu_544_p2),64));
    zext_ln23_82_fu_5506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln23_14_fu_5500_p2),64));
    zext_ln23_85_fu_5589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln23_2_fu_5581_p3),9));
    zext_ln23_86_fu_5601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln23_3_fu_5593_p3),9));
    zext_ln23_87_fu_5617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_w_0_reg_511),9));
    zext_ln23_88_fu_5959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_d_0_0_reg_532),7));
    zext_ln30_fu_6018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln30_2_fu_6014_p1),64));
end behav;
