Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2019.1 (lin64) Build 2552052 Fri May 24 14:47:09 MDT 2019
| Date         : Tue Dec 31 18:00:45 2019
| Host         : shts-server running 64-bit Ubuntu 18.04.3 LTS
| Command      : report_drc -file bd_0_wrapper_drc_routed.rpt -pb bd_0_wrapper_drc_routed.pb -rpx bd_0_wrapper_drc_routed.rpx
| Design       : bd_0_wrapper
| Device       : xc7z020clg400-1
| Speed File   : -1
| Design State : Fully Routed
------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: checkpoint_bd_0_wrapper
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 42
+--------+----------+------------------------+------------+
| Rule   | Severity | Description            | Violations |
+--------+----------+------------------------+------------+
| DPIP-1 | Warning  | Input pipelining       | 13         |
| DPOP-1 | Warning  | PREG Output pipelining | 1          |
| DPOP-2 | Warning  | MREG Output pipelining | 27         |
| ZPS7-1 | Warning  | PS7 block required     | 1          |
+--------+----------+------------------------+------------+

2. REPORT DETAILS
-----------------
DPIP-1#1 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/add_ln40_2_reg_1498_reg input bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/add_ln40_2_reg_1498_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/add_ln40_4_reg_1447_reg input bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/add_ln40_4_reg_1447_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln26_1_reg_830_reg input bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln26_1_reg_830_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln26_2_reg_836_reg input bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln26_2_reg_836_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln26_3_reg_842_reg input bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln26_3_reg_842_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln26_reg_824_reg input bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln26_reg_824_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/mul_ln9_1_reg_713_reg input bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/mul_ln9_1_reg_713_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_1_fu_482/add_ln39_1_reg_1639_reg input bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_1_fu_482/add_ln39_1_reg_1639_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_2_fu_494/add_ln39_1_reg_1324_reg input bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_2_fu_494/add_ln39_1_reg_1324_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_3_fu_488/add_ln39_1_reg_1636_reg input bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_3_fu_488/add_ln39_1_reg_1636_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_4_fu_500/add_ln39_1_reg_1029_reg input bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_4_fu_500/add_ln39_1_reg_1029_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/add_ln18_reg_652_reg input bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/add_ln18_reg_652_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/mul_ln6_1_reg_536_reg input bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/mul_ln6_1_reg_536_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/mul_ln34_reg_900_reg output bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/mul_ln34_reg_900_reg/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/add_ln48_reg_1549_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/add_ln48_reg_1549_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/mul_ln40_12_reg_1589_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/mul_ln40_12_reg_1589_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/mul_ln40_13_reg_1614_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/mul_ln40_13_reg_1614_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/mul_ln40_14_reg_1619_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/mul_ln40_14_reg_1619_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/mul_ln40_17_reg_1664_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_1_fu_450/mul_ln40_17_reg_1664_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/add_ln48_reg_1563_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/add_ln48_reg_1563_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/mul_ln40_10_reg_1678_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/mul_ln40_10_reg_1678_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/mul_ln40_5_reg_1603_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/mul_ln40_5_reg_1603_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/mul_ln40_6_reg_1628_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/mul_ln40_6_reg_1628_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/mul_ln40_7_reg_1633_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_2_fu_426/mul_ln40_7_reg_1633_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_1_reg_1655_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_1_reg_1655_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_2_reg_1690_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_2_reg_1690_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_3_reg_1695_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_3_reg_1695_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_4_reg_1715_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_4_reg_1715_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_5_reg_1720_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_5_reg_1720_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_8_reg_1760_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_8_reg_1760_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_reg_1650_reg multiplier stage bd_0_i/hls_inst/inst/grp_depthwise_conv2d_fix_fu_474/mul_ln40_reg_1650_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln34_reg_937_reg multiplier stage bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/add_ln34_reg_937_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/mul_ln34_1_reg_916_reg multiplier stage bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/mul_ln34_1_reg_916_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/mul_ln9_1_reg_713_reg multiplier stage bd_0_i/hls_inst/inst/grp_max_pooling2d_fix16_fu_506/mul_ln9_1_reg_713_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_1_fu_482/add_ln39_1_reg_1639_reg multiplier stage bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_1_fu_482/add_ln39_1_reg_1639_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_2_fu_494/add_ln39_1_reg_1324_reg multiplier stage bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_2_fu_494/add_ln39_1_reg_1324_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_3_fu_488/add_ln39_1_reg_1636_reg multiplier stage bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_3_fu_488/add_ln39_1_reg_1636_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_4_fu_500/add_ln39_1_reg_1029_reg multiplier stage bd_0_i/hls_inst/inst/grp_pointwise_conv2d_fix_4_fu_500/add_ln39_1_reg_1029_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/add_ln18_1_reg_667_reg multiplier stage bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/add_ln18_1_reg_667_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/add_ln18_reg_652_reg multiplier stage bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/add_ln18_reg_652_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/mul_ln6_1_reg_536_reg multiplier stage bd_0_i/hls_inst/inst/grp_up_sampling2d_fix16_fu_551/mul_ln6_1_reg_536_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

ZPS7-1#1 Warning
PS7 block required  
The PS7 cell must be used in this Zynq design in order to enable correct default configuration.
Related violations: <none>


