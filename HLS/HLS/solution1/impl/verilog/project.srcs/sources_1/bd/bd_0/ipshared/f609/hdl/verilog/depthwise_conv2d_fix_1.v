// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module depthwise_conv2d_fix_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_height,
        input_width,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_height,
        output_width,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        bias_address0,
        bias_ce0,
        bias_q0,
        kernel_address0,
        kernel_ce0,
        kernel_q0,
        kernel1_address0,
        kernel1_ce0,
        kernel1_q0,
        kernel2_address0,
        kernel2_ce0,
        kernel2_q0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state12 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] input_height;
input  [5:0] input_width;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
input  [4:0] output_height;
input  [4:0] output_width;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;
output  [2:0] bias_address0;
output   bias_ce0;
input  [15:0] bias_q0;
output  [4:0] kernel_address0;
output   kernel_ce0;
input  [15:0] kernel_q0;
output  [4:0] kernel1_address0;
output   kernel1_ce0;
input  [15:0] kernel1_q0;
output  [4:0] kernel2_address0;
output   kernel2_ce0;
input  [15:0] kernel2_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg output_r_ce0;
reg output_r_we0;
reg bias_ce0;
reg kernel_ce0;
reg kernel1_ce0;
reg kernel2_ce0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] indvar_flatten39_reg_254;
reg   [3:0] out_d_0_reg_266;
reg   [7:0] indvar_flatten_reg_278;
reg   [3:0] out_h_0_reg_289;
reg   [3:0] out_w_0_reg_300;
reg  signed [15:0] reg_311;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln22_reg_1071;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln22_reg_1071_pp0_iter1_reg;
reg  signed [15:0] reg_316;
wire   [6:0] zext_ln35_fu_321_p1;
reg   [6:0] zext_ln35_reg_1017;
wire   [10:0] zext_ln35_1_cast14_fu_325_p1;
reg   [10:0] zext_ln35_1_cast14_reg_1023;
wire   [6:0] zext_ln41_fu_329_p1;
reg   [6:0] zext_ln41_reg_1030;
wire   [10:0] zext_ln41_1_cast_fu_333_p1;
reg   [10:0] zext_ln41_1_cast_reg_1036;
wire   [3:0] empty_fu_337_p1;
reg   [3:0] empty_reg_1041;
wire   [7:0] mul_ln5_fu_353_p2;
reg   [7:0] mul_ln5_reg_1046;
wire   [10:0] tmp_6_fu_359_p3;
reg   [10:0] tmp_6_reg_1051;
wire   [0:0] icmp_ln24_fu_367_p2;
reg   [0:0] icmp_ln24_reg_1056;
wire   [6:0] zext_ln41_2_fu_373_p1;
reg   [6:0] zext_ln41_2_reg_1061;
wire   [6:0] zext_ln35_3_cast_fu_382_p1;
reg   [6:0] zext_ln35_3_cast_reg_1066;
wire   [0:0] icmp_ln22_fu_392_p2;
wire   [3:0] out_d_fu_397_p2;
reg   [3:0] out_d_reg_1075;
wire   [0:0] icmp_ln23_fu_403_p2;
reg   [0:0] icmp_ln23_reg_1080;
wire   [3:0] select_ln29_fu_408_p3;
reg   [3:0] select_ln29_reg_1088;
wire   [6:0] zext_ln41_4_fu_416_p1;
reg   [6:0] zext_ln41_4_reg_1093;
wire   [0:0] select_ln29_24_fu_446_p3;
reg   [0:0] select_ln29_24_reg_1098;
wire   [3:0] out_h_fu_453_p2;
reg   [3:0] out_h_reg_1104;
wire   [3:0] out_w_0_mid2_fu_465_p3;
reg   [3:0] out_w_0_mid2_reg_1109;
wire   [6:0] zext_ln35_3_cast_mid_fu_473_p1;
reg   [6:0] zext_ln35_3_cast_mid_reg_1116;
wire   [6:0] tmp5_0_0_mid2_v_v_fu_483_p3;
reg   [6:0] tmp5_0_0_mid2_v_v_reg_1121;
wire   [7:0] add_ln23_6_fu_491_p2;
reg   [7:0] add_ln23_6_reg_1128;
wire   [10:0] tmp5_0_0_mid2_fu_500_p2;
reg   [10:0] tmp5_0_0_mid2_reg_1133;
wire   [10:0] tmp5_1_0_mid2_fu_514_p2;
reg   [10:0] tmp5_1_0_mid2_reg_1138;
wire   [10:0] zext_ln35_13_fu_519_p1;
reg   [10:0] zext_ln35_13_reg_1145;
reg   [10:0] zext_ln35_13_reg_1145_pp0_iter1_reg;
reg   [15:0] kernel_load_reg_1157;
reg   [15:0] kernel1_load_reg_1165;
reg   [15:0] kernel2_load_reg_1173;
wire   [3:0] out_w_fu_533_p2;
reg   [3:0] out_w_reg_1181;
wire   [10:0] zext_ln35_15_fu_538_p1;
reg   [10:0] zext_ln35_15_reg_1186;
wire   [6:0] mul_ln41_fu_553_p2;
reg   [6:0] mul_ln41_reg_1197;
wire   [6:0] tmp6_fu_557_p2;
reg   [6:0] tmp6_reg_1202;
wire   [10:0] add_ln22_fu_562_p2;
reg   [10:0] add_ln22_reg_1207;
wire   [3:0] select_ln29_19_fu_568_p3;
reg   [3:0] select_ln29_19_reg_1212;
wire   [1:0] trunc_ln29_fu_574_p1;
reg   [1:0] trunc_ln29_reg_1218;
wire   [1:0] add_ln29_fu_578_p2;
reg   [1:0] add_ln29_reg_1225;
wire   [10:0] tmp5_2_0_mid2_fu_593_p2;
reg   [10:0] tmp5_2_0_mid2_reg_1230;
wire   [10:0] zext_ln35_17_fu_603_p1;
reg   [10:0] zext_ln35_17_reg_1237;
wire   [6:0] tmp7_mid2_v_v_fu_657_p3;
reg   [6:0] tmp7_mid2_v_v_reg_1253;
wire  signed [29:0] sext_ln35_13_fu_676_p1;
reg  signed [29:0] sext_ln35_13_reg_1258;
reg   [15:0] trunc_ln_reg_1264;
wire  signed [29:0] sext_ln35_15_fu_701_p1;
reg  signed [29:0] sext_ln35_15_reg_1269;
reg   [15:0] trunc_ln41_9_reg_1274;
wire   [15:0] tmp_4_fu_714_p5;
reg  signed [15:0] tmp_4_reg_1279;
wire   [15:0] tmp_5_fu_723_p5;
reg  signed [15:0] tmp_5_reg_1284;
wire   [3:0] select_ln23_fu_750_p3;
reg   [3:0] select_ln23_reg_1299;
wire  signed [29:0] sext_ln35_17_fu_759_p1;
reg  signed [29:0] sext_ln35_17_reg_1304;
reg   [15:0] trunc_ln41_s_reg_1309;
wire  signed [29:0] sext_ln35_19_fu_775_p1;
reg  signed [29:0] sext_ln35_19_reg_1314;
reg   [15:0] trunc_ln41_8_reg_1319;
wire   [10:0] add_ln35_20_fu_805_p2;
reg   [10:0] add_ln35_20_reg_1334;
wire   [7:0] select_ln23_2_fu_809_p3;
reg   [7:0] select_ln23_2_reg_1339;
reg   [15:0] trunc_ln41_1_reg_1349;
reg   [15:0] trunc_ln41_2_reg_1354;
wire   [15:0] add_ln41_11_fu_853_p2;
reg   [15:0] add_ln41_11_reg_1364;
reg   [15:0] trunc_ln41_3_reg_1369;
reg   [15:0] trunc_ln41_4_reg_1374;
wire   [15:0] add_ln41_9_fu_884_p2;
reg   [15:0] add_ln41_9_reg_1379;
reg   [15:0] trunc_ln41_5_reg_1384;
wire   [10:0] grp_fu_990_p3;
reg   [10:0] add_ln41_reg_1389;
wire   [15:0] add_ln41_16_fu_918_p2;
reg   [15:0] add_ln41_16_reg_1394;
wire    ap_block_pp0_stage2_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage4_subdone;
reg   [10:0] ap_phi_mux_indvar_flatten39_phi_fu_258_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_out_d_0_phi_fu_270_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_282_p4;
reg   [3:0] ap_phi_mux_out_h_0_phi_fu_293_p4;
reg   [3:0] ap_phi_mux_out_w_0_phi_fu_304_p4;
wire   [63:0] zext_ln35_14_fu_528_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln35_16_fu_548_p1;
wire   [63:0] zext_ln35_18_fu_612_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln35_19_fu_621_p1;
wire   [63:0] zext_ln35_20_fu_736_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln35_21_fu_745_p1;
wire   [63:0] zext_ln35_22_fu_791_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln35_23_fu_800_p1;
wire   [63:0] zext_ln29_fu_815_p1;
wire   [63:0] zext_ln35_24_fu_845_p1;
wire   [63:0] zext_ln41_3_fu_934_p1;
wire   [3:0] empty_50_fu_341_p1;
wire   [3:0] mul_ln5_fu_353_p0;
wire   [3:0] mul_ln5_fu_353_p1;
wire   [3:0] mul_ln35_fu_377_p0;
wire   [5:0] mul_ln35_fu_377_p1;
wire   [6:0] mul_ln35_fu_377_p2;
wire   [5:0] mul_ln35_18_fu_420_p0;
wire   [3:0] mul_ln35_18_fu_420_p1;
wire   [6:0] mul_ln35_18_fu_420_p2;
wire   [6:0] tmp_0_0_fu_386_p2;
wire   [0:0] icmp_ln24_5_fu_441_p2;
wire   [0:0] empty_52_fu_459_p2;
wire   [6:0] select_ln29_20_fu_425_p3;
wire   [6:0] tmp_0_0_mid1_fu_477_p2;
wire   [6:0] select_ln29_22_fu_433_p3;
wire   [5:0] tmp5_0_0_mid2_fu_500_p0;
wire   [6:0] tmp5_0_0_mid2_fu_500_p1;
wire   [6:0] tmp5_1_0_mid2_v_v_fu_505_p2;
wire   [5:0] tmp5_1_0_mid2_fu_514_p0;
wire   [6:0] tmp5_1_0_mid2_fu_514_p1;
wire   [10:0] add_ln35_fu_522_p2;
wire   [10:0] add_ln35_12_fu_542_p2;
wire   [3:0] mul_ln41_fu_553_p0;
wire   [4:0] mul_ln41_fu_553_p1;
wire   [6:0] tmp5_2_0_mid2_v_v_fu_584_p2;
wire   [5:0] tmp5_2_0_mid2_fu_593_p0;
wire   [6:0] tmp5_2_0_mid2_fu_593_p1;
wire   [3:0] add_ln35_13_fu_598_p2;
wire   [10:0] add_ln35_14_fu_607_p2;
wire   [10:0] add_ln35_15_fu_617_p2;
wire   [4:0] mul_ln41_2_fu_626_p0;
wire   [3:0] mul_ln41_2_fu_626_p1;
wire   [6:0] mul_ln41_2_fu_626_p2;
wire   [6:0] select_ln29_21_fu_630_p3;
wire   [6:0] tmp6_mid1_fu_652_p2;
wire   [6:0] select_ln29_23_fu_646_p3;
wire  signed [15:0] tmp_9_fu_668_p5;
wire  signed [29:0] mul_ln35_9_fu_938_p2;
wire  signed [15:0] tmp_s_fu_693_p5;
wire  signed [29:0] mul_ln35_10_fu_945_p2;
wire   [1:0] tmp_4_fu_714_p4;
wire   [1:0] tmp_5_fu_723_p4;
wire   [10:0] add_ln35_16_fu_732_p2;
wire   [10:0] add_ln35_17_fu_741_p2;
wire  signed [29:0] mul_ln35_11_fu_952_p2;
wire  signed [29:0] mul_ln35_12_fu_959_p2;
wire   [10:0] add_ln35_18_fu_787_p2;
wire   [10:0] add_ln35_19_fu_796_p2;
wire  signed [29:0] mul_ln35_13_fu_966_p2;
wire  signed [29:0] mul_ln35_14_fu_972_p2;
wire   [15:0] add_ln41_10_fu_849_p2;
wire  signed [29:0] mul_ln35_15_fu_978_p2;
wire  signed [29:0] mul_ln35_16_fu_984_p2;
wire  signed [29:0] mul_ln35_17_fu_996_p2;
wire   [15:0] add_ln41_14_fu_909_p2;
wire   [15:0] add_ln41_15_fu_913_p2;
wire   [15:0] add_ln41_13_fu_905_p2;
wire   [15:0] add_ln41_12_fu_924_p2;
wire  signed [15:0] mul_ln35_13_fu_966_p1;
wire  signed [15:0] mul_ln35_14_fu_972_p1;
wire  signed [15:0] mul_ln35_15_fu_978_p1;
wire  signed [15:0] mul_ln35_16_fu_984_p1;
wire   [4:0] grp_fu_990_p0;
wire   [6:0] grp_fu_990_p1;
wire   [3:0] grp_fu_990_p2;
wire  signed [15:0] mul_ln35_17_fu_996_p1;
wire    ap_CS_fsm_state12;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [10:0] grp_fu_990_p10;
wire   [6:0] mul_ln35_18_fu_420_p10;
wire   [6:0] mul_ln35_fu_377_p00;
wire   [7:0] mul_ln5_fu_353_p00;
wire   [7:0] mul_ln5_fu_353_p10;
wire   [10:0] tmp5_0_0_mid2_fu_500_p10;
wire   [10:0] tmp5_1_0_mid2_fu_514_p10;
wire   [10:0] tmp5_2_0_mid2_fu_593_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

network_mux_32_16_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
network_mux_32_16_1_1_x_U75(
    .din0(kernel_load_reg_1157),
    .din1(kernel1_load_reg_1165),
    .din2(kernel2_load_reg_1173),
    .din3(trunc_ln29_reg_1218),
    .dout(tmp_9_fu_668_p5)
);

network_mux_32_16_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
network_mux_32_16_1_1_x_U76(
    .din0(kernel_load_reg_1157),
    .din1(kernel1_load_reg_1165),
    .din2(kernel2_load_reg_1173),
    .din3(add_ln29_reg_1225),
    .dout(tmp_s_fu_693_p5)
);

network_mux_32_16_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
network_mux_32_16_1_1_x_U77(
    .din0(kernel_load_reg_1157),
    .din1(kernel1_load_reg_1165),
    .din2(kernel2_load_reg_1173),
    .din3(tmp_4_fu_714_p4),
    .dout(tmp_4_fu_714_p5)
);

network_mux_32_16_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
network_mux_32_16_1_1_x_U78(
    .din0(kernel_load_reg_1157),
    .din1(kernel1_load_reg_1165),
    .din2(kernel2_load_reg_1173),
    .din3(tmp_5_fu_723_p4),
    .dout(tmp_5_fu_723_p5)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U79(
    .din0(reg_311),
    .din1(tmp_9_fu_668_p5),
    .dout(mul_ln35_9_fu_938_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U80(
    .din0(reg_316),
    .din1(tmp_s_fu_693_p5),
    .dout(mul_ln35_10_fu_945_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U81(
    .din0(reg_311),
    .din1(tmp_4_reg_1279),
    .dout(mul_ln35_11_fu_952_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U82(
    .din0(reg_316),
    .din1(tmp_5_reg_1284),
    .dout(mul_ln35_12_fu_959_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U83(
    .din0(reg_311),
    .din1(mul_ln35_13_fu_966_p1),
    .dout(mul_ln35_13_fu_966_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U84(
    .din0(reg_316),
    .din1(mul_ln35_14_fu_972_p1),
    .dout(mul_ln35_14_fu_972_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U85(
    .din0(reg_311),
    .din1(mul_ln35_15_fu_978_p1),
    .dout(mul_ln35_15_fu_978_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U86(
    .din0(reg_316),
    .din1(mul_ln35_16_fu_984_p1),
    .dout(mul_ln35_16_fu_984_p2)
);

network_mac_muladd_5ns_7ns_4ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
network_mac_muladd_5ns_7ns_4ns_11_1_1_U87(
    .din0(grp_fu_990_p0),
    .din1(grp_fu_990_p1),
    .din2(grp_fu_990_p2),
    .dout(grp_fu_990_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U88(
    .din0(reg_311),
    .din1(mul_ln35_17_fu_996_p1),
    .dout(mul_ln35_17_fu_996_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_condition_pp0_exit_iter0_state4))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten39_reg_254 <= add_ln22_reg_1207;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten39_reg_254 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_278 <= select_ln23_2_reg_1339;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_278 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_d_0_reg_266 <= select_ln29_19_reg_1212;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        out_d_0_reg_266 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_h_0_reg_289 <= select_ln23_reg_1299;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        out_h_0_reg_289 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_w_0_reg_300 <= out_w_reg_1181;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        out_w_0_reg_300 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_311 <= input_r_q1;
    end else if ((((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln22_reg_1071_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_311 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_316 <= input_r_q0;
    end else if (((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_316 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln22_reg_1207 <= add_ln22_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_392_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln23_6_reg_1128 <= add_ln23_6_fu_491_p2;
        icmp_ln23_reg_1080 <= icmp_ln23_fu_403_p2;
        out_d_reg_1075 <= out_d_fu_397_p2;
        out_h_reg_1104 <= out_h_fu_453_p2;
        out_w_0_mid2_reg_1109 <= out_w_0_mid2_fu_465_p3;
        select_ln29_24_reg_1098 <= select_ln29_24_fu_446_p3;
        select_ln29_reg_1088 <= select_ln29_fu_408_p3;
        tmp5_0_0_mid2_v_v_reg_1121 <= tmp5_0_0_mid2_v_v_fu_483_p3;
        zext_ln35_3_cast_mid_reg_1116[3 : 0] <= zext_ln35_3_cast_mid_fu_473_p1[3 : 0];
        zext_ln41_4_reg_1093[3 : 0] <= zext_ln41_4_fu_416_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln29_reg_1225 <= add_ln29_fu_578_p2;
        tmp5_2_0_mid2_reg_1230 <= tmp5_2_0_mid2_fu_593_p2;
        trunc_ln29_reg_1218 <= trunc_ln29_fu_574_p1;
        zext_ln35_17_reg_1237[3 : 0] <= zext_ln35_17_fu_603_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln35_20_reg_1334 <= add_ln35_20_fu_805_p2;
        sext_ln35_17_reg_1304 <= sext_ln35_17_fu_759_p1;
        sext_ln35_19_reg_1314 <= sext_ln35_19_fu_775_p1;
        trunc_ln41_8_reg_1319 <= {{mul_ln35_12_fu_959_p2[29:14]}};
        trunc_ln41_s_reg_1309 <= {{mul_ln35_11_fu_952_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln41_11_reg_1364 <= add_ln41_11_fu_853_p2;
        trunc_ln41_1_reg_1349 <= {{mul_ln35_13_fu_966_p2[29:14]}};
        trunc_ln41_2_reg_1354 <= {{mul_ln35_14_fu_972_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln41_16_reg_1394 <= add_ln41_16_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln41_9_reg_1379 <= add_ln41_9_fu_884_p2;
        trunc_ln41_3_reg_1369 <= {{mul_ln35_15_fu_978_p2[29:14]}};
        trunc_ln41_4_reg_1374 <= {{mul_ln35_16_fu_984_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add_ln41_reg_1389 <= grp_fu_990_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_1041 <= empty_fu_337_p1;
        icmp_ln24_reg_1056 <= icmp_ln24_fu_367_p2;
        mul_ln5_reg_1046 <= mul_ln5_fu_353_p2;
        tmp_6_reg_1051[10 : 3] <= tmp_6_fu_359_p3[10 : 3];
        zext_ln35_1_cast14_reg_1023[5 : 0] <= zext_ln35_1_cast14_fu_325_p1[5 : 0];
        zext_ln35_reg_1017[5 : 0] <= zext_ln35_fu_321_p1[5 : 0];
        zext_ln41_1_cast_reg_1036[4 : 0] <= zext_ln41_1_cast_fu_333_p1[4 : 0];
        zext_ln41_reg_1030[4 : 0] <= zext_ln41_fu_329_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln22_reg_1071 <= icmp_ln22_fu_392_p2;
        icmp_ln22_reg_1071_pp0_iter1_reg <= icmp_ln22_reg_1071;
        zext_ln35_3_cast_reg_1066[3 : 0] <= zext_ln35_3_cast_fu_382_p1[3 : 0];
        zext_ln41_2_reg_1061[3 : 0] <= zext_ln41_2_fu_373_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        kernel1_load_reg_1165 <= kernel1_q0;
        kernel2_load_reg_1173 <= kernel2_q0;
        kernel_load_reg_1157 <= kernel_q0;
        tmp5_0_0_mid2_reg_1133 <= tmp5_0_0_mid2_fu_500_p2;
        tmp5_1_0_mid2_reg_1138 <= tmp5_1_0_mid2_fu_514_p2;
        zext_ln35_13_reg_1145[3 : 0] <= zext_ln35_13_fu_519_p1[3 : 0];
        zext_ln35_15_reg_1186[3 : 0] <= zext_ln35_15_fu_538_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln41_reg_1197 <= mul_ln41_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        out_w_reg_1181 <= out_w_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        select_ln23_2_reg_1339 <= select_ln23_2_fu_809_p3;
        select_ln23_reg_1299 <= select_ln23_fu_750_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln29_19_reg_1212 <= select_ln29_19_fu_568_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sext_ln35_13_reg_1258 <= sext_ln35_13_fu_676_p1;
        sext_ln35_15_reg_1269 <= sext_ln35_15_fu_701_p1;
        tmp7_mid2_v_v_reg_1253 <= tmp7_mid2_v_v_fu_657_p3;
        tmp_4_reg_1279 <= tmp_4_fu_714_p5;
        tmp_5_reg_1284 <= tmp_5_fu_723_p5;
        trunc_ln41_9_reg_1274 <= {{mul_ln35_10_fu_945_p2[29:14]}};
        trunc_ln_reg_1264 <= {{mul_ln35_9_fu_938_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln29_24_reg_1098 == 1'd0) & (icmp_ln23_reg_1080 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp6_reg_1202 <= tmp6_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1071_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln41_5_reg_1384 <= {{mul_ln35_17_fu_996_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        zext_ln35_13_reg_1145_pp0_iter1_reg[3 : 0] <= zext_ln35_13_reg_1145[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln22_reg_1071 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten39_phi_fu_258_p4 = add_ln22_reg_1207;
    end else begin
        ap_phi_mux_indvar_flatten39_phi_fu_258_p4 = indvar_flatten39_reg_254;
    end
end

always @ (*) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_282_p4 = select_ln23_2_reg_1339;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_282_p4 = indvar_flatten_reg_278;
    end
end

always @ (*) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_out_d_0_phi_fu_270_p4 = select_ln29_19_reg_1212;
    end else begin
        ap_phi_mux_out_d_0_phi_fu_270_p4 = out_d_0_reg_266;
    end
end

always @ (*) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_out_h_0_phi_fu_293_p4 = select_ln23_reg_1299;
    end else begin
        ap_phi_mux_out_h_0_phi_fu_293_p4 = out_h_0_reg_289;
    end
end

always @ (*) begin
    if (((icmp_ln22_reg_1071 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_out_w_0_phi_fu_304_p4 = out_w_reg_1181;
    end else begin
        ap_phi_mux_out_w_0_phi_fu_304_p4 = out_w_0_reg_300;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_address0 = zext_ln35_24_fu_845_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        input_r_address0 = zext_ln35_23_fu_800_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_r_address0 = zext_ln35_21_fu_745_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_r_address0 = zext_ln35_19_fu_621_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_r_address0 = zext_ln35_14_fu_528_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address1 = zext_ln35_22_fu_791_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address1 = zext_ln35_20_fu_736_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = zext_ln35_18_fu_612_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address1 = zext_ln35_16_fu_548_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel1_ce0 = 1'b1;
    end else begin
        kernel1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel2_ce0 = 1'b1;
    end else begin
        kernel2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln22_reg_1071_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((icmp_ln22_reg_1071 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((icmp_ln22_reg_1071 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln22_fu_562_p2 = (indvar_flatten39_reg_254 + 11'd1);

assign add_ln23_6_fu_491_p2 = (8'd1 + ap_phi_mux_indvar_flatten_phi_fu_282_p4);

assign add_ln29_fu_578_p2 = (2'd1 + trunc_ln29_fu_574_p1);

assign add_ln35_12_fu_542_p2 = (tmp5_0_0_mid2_fu_500_p2 + zext_ln35_15_fu_538_p1);

assign add_ln35_13_fu_598_p2 = (4'd2 + out_w_0_mid2_reg_1109);

assign add_ln35_14_fu_607_p2 = (tmp5_0_0_mid2_reg_1133 + zext_ln35_17_fu_603_p1);

assign add_ln35_15_fu_617_p2 = (tmp5_1_0_mid2_reg_1138 + zext_ln35_13_reg_1145);

assign add_ln35_16_fu_732_p2 = (tmp5_1_0_mid2_reg_1138 + zext_ln35_15_reg_1186);

assign add_ln35_17_fu_741_p2 = (tmp5_1_0_mid2_reg_1138 + zext_ln35_17_reg_1237);

assign add_ln35_18_fu_787_p2 = (tmp5_2_0_mid2_reg_1230 + zext_ln35_13_reg_1145);

assign add_ln35_19_fu_796_p2 = (tmp5_2_0_mid2_reg_1230 + zext_ln35_15_reg_1186);

assign add_ln35_20_fu_805_p2 = (tmp5_2_0_mid2_reg_1230 + zext_ln35_17_reg_1237);

assign add_ln35_fu_522_p2 = (tmp5_0_0_mid2_fu_500_p2 + zext_ln35_13_fu_519_p1);

assign add_ln41_10_fu_849_p2 = (trunc_ln41_s_reg_1309 + trunc_ln41_8_reg_1319);

assign add_ln41_11_fu_853_p2 = (add_ln41_10_fu_849_p2 + trunc_ln41_9_reg_1274);

assign add_ln41_12_fu_924_p2 = (add_ln41_11_reg_1364 + add_ln41_9_reg_1379);

assign add_ln41_13_fu_905_p2 = (trunc_ln41_1_reg_1349 + trunc_ln41_2_reg_1354);

assign add_ln41_14_fu_909_p2 = (trunc_ln41_4_reg_1374 + trunc_ln41_5_reg_1384);

assign add_ln41_15_fu_913_p2 = (add_ln41_14_fu_909_p2 + trunc_ln41_3_reg_1369);

assign add_ln41_16_fu_918_p2 = (add_ln41_15_fu_913_p2 + add_ln41_13_fu_905_p2);

assign add_ln41_9_fu_884_p2 = (bias_q0 + trunc_ln_reg_1264);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bias_address0 = zext_ln29_fu_815_p1;

assign empty_50_fu_341_p1 = output_height[3:0];

assign empty_52_fu_459_p2 = (select_ln29_24_fu_446_p3 | icmp_ln23_fu_403_p2);

assign empty_fu_337_p1 = output_width[3:0];

assign grp_fu_990_p0 = zext_ln41_1_cast_reg_1036;

assign grp_fu_990_p1 = grp_fu_990_p10;

assign grp_fu_990_p10 = tmp7_mid2_v_v_reg_1253;

assign grp_fu_990_p2 = zext_ln35_13_reg_1145_pp0_iter1_reg;

assign icmp_ln22_fu_392_p2 = ((ap_phi_mux_indvar_flatten39_phi_fu_258_p4 == tmp_6_reg_1051) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_403_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_282_p4 == mul_ln5_reg_1046) ? 1'b1 : 1'b0);

assign icmp_ln24_5_fu_441_p2 = ((ap_phi_mux_out_w_0_phi_fu_304_p4 == empty_reg_1041) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_367_p2 = ((empty_fu_337_p1 == 4'd0) ? 1'b1 : 1'b0);

assign kernel1_address0 = 64'd0;

assign kernel2_address0 = 64'd0;

assign kernel_address0 = 64'd0;

assign mul_ln35_13_fu_966_p1 = sext_ln35_13_reg_1258;

assign mul_ln35_14_fu_972_p1 = sext_ln35_15_reg_1269;

assign mul_ln35_15_fu_978_p1 = sext_ln35_17_reg_1304;

assign mul_ln35_16_fu_984_p1 = sext_ln35_19_reg_1314;

assign mul_ln35_17_fu_996_p1 = sext_ln35_13_reg_1258;

assign mul_ln35_18_fu_420_p0 = zext_ln35_reg_1017;

assign mul_ln35_18_fu_420_p1 = mul_ln35_18_fu_420_p10;

assign mul_ln35_18_fu_420_p10 = out_d_fu_397_p2;

assign mul_ln35_18_fu_420_p2 = (mul_ln35_18_fu_420_p0 * mul_ln35_18_fu_420_p1);

assign mul_ln35_fu_377_p0 = mul_ln35_fu_377_p00;

assign mul_ln35_fu_377_p00 = ap_phi_mux_out_d_0_phi_fu_270_p4;

assign mul_ln35_fu_377_p1 = zext_ln35_reg_1017;

assign mul_ln35_fu_377_p2 = (mul_ln35_fu_377_p0 * mul_ln35_fu_377_p1);

assign mul_ln41_2_fu_626_p0 = zext_ln41_reg_1030;

assign mul_ln41_2_fu_626_p1 = zext_ln41_4_reg_1093;

assign mul_ln41_2_fu_626_p2 = (mul_ln41_2_fu_626_p0 * mul_ln41_2_fu_626_p1);

assign mul_ln41_fu_553_p0 = zext_ln41_2_reg_1061;

assign mul_ln41_fu_553_p1 = zext_ln41_reg_1030;

assign mul_ln41_fu_553_p2 = (mul_ln41_fu_553_p0 * mul_ln41_fu_553_p1);

assign mul_ln5_fu_353_p0 = mul_ln5_fu_353_p00;

assign mul_ln5_fu_353_p00 = empty_50_fu_341_p1;

assign mul_ln5_fu_353_p1 = mul_ln5_fu_353_p10;

assign mul_ln5_fu_353_p10 = empty_fu_337_p1;

assign mul_ln5_fu_353_p2 = (mul_ln5_fu_353_p0 * mul_ln5_fu_353_p1);

assign out_d_fu_397_p2 = (4'd1 + ap_phi_mux_out_d_0_phi_fu_270_p4);

assign out_h_fu_453_p2 = (4'd1 + select_ln29_fu_408_p3);

assign out_w_0_mid2_fu_465_p3 = ((empty_52_fu_459_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_out_w_0_phi_fu_304_p4);

assign out_w_fu_533_p2 = (4'd1 + out_w_0_mid2_reg_1109);

assign output_r_address0 = zext_ln41_3_fu_934_p1;

assign output_r_d0 = (add_ln41_16_reg_1394 + add_ln41_12_fu_924_p2);

assign select_ln23_2_fu_809_p3 = ((icmp_ln23_reg_1080[0:0] === 1'b1) ? 8'd1 : add_ln23_6_reg_1128);

assign select_ln23_fu_750_p3 = ((select_ln29_24_reg_1098[0:0] === 1'b1) ? out_h_reg_1104 : select_ln29_reg_1088);

assign select_ln29_19_fu_568_p3 = ((icmp_ln23_reg_1080[0:0] === 1'b1) ? out_d_reg_1075 : out_d_0_reg_266);

assign select_ln29_20_fu_425_p3 = ((icmp_ln23_fu_403_p2[0:0] === 1'b1) ? mul_ln35_18_fu_420_p2 : mul_ln35_fu_377_p2);

assign select_ln29_21_fu_630_p3 = ((icmp_ln23_reg_1080[0:0] === 1'b1) ? mul_ln41_2_fu_626_p2 : mul_ln41_reg_1197);

assign select_ln29_22_fu_433_p3 = ((icmp_ln23_fu_403_p2[0:0] === 1'b1) ? mul_ln35_18_fu_420_p2 : tmp_0_0_fu_386_p2);

assign select_ln29_23_fu_646_p3 = ((icmp_ln23_reg_1080[0:0] === 1'b1) ? mul_ln41_2_fu_626_p2 : tmp6_reg_1202);

assign select_ln29_24_fu_446_p3 = ((icmp_ln23_fu_403_p2[0:0] === 1'b1) ? icmp_ln24_reg_1056 : icmp_ln24_5_fu_441_p2);

assign select_ln29_fu_408_p3 = ((icmp_ln23_fu_403_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_out_h_0_phi_fu_293_p4);

assign sext_ln35_13_fu_676_p1 = tmp_9_fu_668_p5;

assign sext_ln35_15_fu_701_p1 = tmp_s_fu_693_p5;

assign sext_ln35_17_fu_759_p1 = tmp_4_reg_1279;

assign sext_ln35_19_fu_775_p1 = tmp_5_reg_1284;

assign tmp5_0_0_mid2_fu_500_p0 = zext_ln35_1_cast14_reg_1023;

assign tmp5_0_0_mid2_fu_500_p1 = tmp5_0_0_mid2_fu_500_p10;

assign tmp5_0_0_mid2_fu_500_p10 = tmp5_0_0_mid2_v_v_reg_1121;

assign tmp5_0_0_mid2_fu_500_p2 = (tmp5_0_0_mid2_fu_500_p0 * tmp5_0_0_mid2_fu_500_p1);

assign tmp5_0_0_mid2_v_v_fu_483_p3 = ((select_ln29_24_fu_446_p3[0:0] === 1'b1) ? tmp_0_0_mid1_fu_477_p2 : select_ln29_22_fu_433_p3);

assign tmp5_1_0_mid2_fu_514_p0 = zext_ln35_1_cast14_reg_1023;

assign tmp5_1_0_mid2_fu_514_p1 = tmp5_1_0_mid2_fu_514_p10;

assign tmp5_1_0_mid2_fu_514_p10 = tmp5_1_0_mid2_v_v_fu_505_p2;

assign tmp5_1_0_mid2_fu_514_p2 = (tmp5_1_0_mid2_fu_514_p0 * tmp5_1_0_mid2_fu_514_p1);

assign tmp5_1_0_mid2_v_v_fu_505_p2 = (7'd1 + tmp5_0_0_mid2_v_v_reg_1121);

assign tmp5_2_0_mid2_fu_593_p0 = zext_ln35_1_cast14_reg_1023;

assign tmp5_2_0_mid2_fu_593_p1 = tmp5_2_0_mid2_fu_593_p10;

assign tmp5_2_0_mid2_fu_593_p10 = tmp5_2_0_mid2_v_v_fu_584_p2;

assign tmp5_2_0_mid2_fu_593_p2 = (tmp5_2_0_mid2_fu_593_p0 * tmp5_2_0_mid2_fu_593_p1);

assign tmp5_2_0_mid2_v_v_fu_584_p2 = (7'd2 + tmp5_0_0_mid2_v_v_reg_1121);

assign tmp6_fu_557_p2 = (mul_ln41_fu_553_p2 + zext_ln35_3_cast_reg_1066);

assign tmp6_mid1_fu_652_p2 = (zext_ln35_3_cast_mid_reg_1116 + select_ln29_21_fu_630_p3);

assign tmp7_mid2_v_v_fu_657_p3 = ((select_ln29_24_reg_1098[0:0] === 1'b1) ? tmp6_mid1_fu_652_p2 : select_ln29_23_fu_646_p3);

assign tmp_0_0_fu_386_p2 = (mul_ln35_fu_377_p2 + zext_ln35_3_cast_fu_382_p1);

assign tmp_0_0_mid1_fu_477_p2 = (zext_ln35_3_cast_mid_fu_473_p1 + select_ln29_20_fu_425_p3);

assign tmp_4_fu_714_p4 = (trunc_ln29_reg_1218 ^ 2'd2);

assign tmp_5_fu_723_p4 = ($signed(2'd3) + $signed(trunc_ln29_reg_1218));

assign tmp_6_fu_359_p3 = {{mul_ln5_fu_353_p2}, {3'd0}};

assign trunc_ln29_fu_574_p1 = select_ln29_19_fu_568_p3[1:0];

assign zext_ln29_fu_815_p1 = select_ln29_19_reg_1212;

assign zext_ln35_13_fu_519_p1 = out_w_0_mid2_reg_1109;

assign zext_ln35_14_fu_528_p1 = add_ln35_fu_522_p2;

assign zext_ln35_15_fu_538_p1 = out_w_fu_533_p2;

assign zext_ln35_16_fu_548_p1 = add_ln35_12_fu_542_p2;

assign zext_ln35_17_fu_603_p1 = add_ln35_13_fu_598_p2;

assign zext_ln35_18_fu_612_p1 = add_ln35_14_fu_607_p2;

assign zext_ln35_19_fu_621_p1 = add_ln35_15_fu_617_p2;

assign zext_ln35_1_cast14_fu_325_p1 = input_width;

assign zext_ln35_20_fu_736_p1 = add_ln35_16_fu_732_p2;

assign zext_ln35_21_fu_745_p1 = add_ln35_17_fu_741_p2;

assign zext_ln35_22_fu_791_p1 = add_ln35_18_fu_787_p2;

assign zext_ln35_23_fu_800_p1 = add_ln35_19_fu_796_p2;

assign zext_ln35_24_fu_845_p1 = add_ln35_20_reg_1334;

assign zext_ln35_3_cast_fu_382_p1 = ap_phi_mux_out_h_0_phi_fu_293_p4;

assign zext_ln35_3_cast_mid_fu_473_p1 = out_h_fu_453_p2;

assign zext_ln35_fu_321_p1 = input_height;

assign zext_ln41_1_cast_fu_333_p1 = output_width;

assign zext_ln41_2_fu_373_p1 = ap_phi_mux_out_d_0_phi_fu_270_p4;

assign zext_ln41_3_fu_934_p1 = add_ln41_reg_1389;

assign zext_ln41_4_fu_416_p1 = out_d_fu_397_p2;

assign zext_ln41_fu_329_p1 = output_height;

always @ (posedge ap_clk) begin
    zext_ln35_reg_1017[6] <= 1'b0;
    zext_ln35_1_cast14_reg_1023[10:6] <= 5'b00000;
    zext_ln41_reg_1030[6:5] <= 2'b00;
    zext_ln41_1_cast_reg_1036[10:5] <= 6'b000000;
    tmp_6_reg_1051[2:0] <= 3'b000;
    zext_ln41_2_reg_1061[6:4] <= 3'b000;
    zext_ln35_3_cast_reg_1066[6:4] <= 3'b000;
    zext_ln41_4_reg_1093[6:4] <= 3'b000;
    zext_ln35_3_cast_mid_reg_1116[6:4] <= 3'b000;
    zext_ln35_13_reg_1145[10:4] <= 7'b0000000;
    zext_ln35_13_reg_1145_pp0_iter1_reg[10:4] <= 7'b0000000;
    zext_ln35_15_reg_1186[10:4] <= 7'b0000000;
    zext_ln35_17_reg_1237[10:4] <= 7'b0000000;
end

endmodule //depthwise_conv2d_fix_1
