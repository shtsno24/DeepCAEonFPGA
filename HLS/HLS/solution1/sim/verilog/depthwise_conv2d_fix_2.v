// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module depthwise_conv2d_fix_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_height,
        input_width,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_height,
        output_width,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        bias_address0,
        bias_ce0,
        bias_q0,
        kernel_address0,
        kernel_ce0,
        kernel_q0,
        kernel_address1,
        kernel_ce1,
        kernel_q1
);

parameter    ap_ST_fsm_state1 = 46'd1;
parameter    ap_ST_fsm_state2 = 46'd2;
parameter    ap_ST_fsm_state3 = 46'd4;
parameter    ap_ST_fsm_state4 = 46'd8;
parameter    ap_ST_fsm_state5 = 46'd16;
parameter    ap_ST_fsm_state6 = 46'd32;
parameter    ap_ST_fsm_state7 = 46'd64;
parameter    ap_ST_fsm_pp0_stage0 = 46'd128;
parameter    ap_ST_fsm_pp0_stage1 = 46'd256;
parameter    ap_ST_fsm_pp0_stage2 = 46'd512;
parameter    ap_ST_fsm_pp0_stage3 = 46'd1024;
parameter    ap_ST_fsm_pp0_stage4 = 46'd2048;
parameter    ap_ST_fsm_state19 = 46'd4096;
parameter    ap_ST_fsm_state20 = 46'd8192;
parameter    ap_ST_fsm_state21 = 46'd16384;
parameter    ap_ST_fsm_state22 = 46'd32768;
parameter    ap_ST_fsm_state23 = 46'd65536;
parameter    ap_ST_fsm_state24 = 46'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 46'd262144;
parameter    ap_ST_fsm_pp1_stage1 = 46'd524288;
parameter    ap_ST_fsm_pp1_stage2 = 46'd1048576;
parameter    ap_ST_fsm_pp1_stage3 = 46'd2097152;
parameter    ap_ST_fsm_pp1_stage4 = 46'd4194304;
parameter    ap_ST_fsm_state36 = 46'd8388608;
parameter    ap_ST_fsm_state37 = 46'd16777216;
parameter    ap_ST_fsm_state38 = 46'd33554432;
parameter    ap_ST_fsm_state39 = 46'd67108864;
parameter    ap_ST_fsm_state40 = 46'd134217728;
parameter    ap_ST_fsm_state41 = 46'd268435456;
parameter    ap_ST_fsm_pp2_stage0 = 46'd536870912;
parameter    ap_ST_fsm_pp2_stage1 = 46'd1073741824;
parameter    ap_ST_fsm_pp2_stage2 = 46'd2147483648;
parameter    ap_ST_fsm_pp2_stage3 = 46'd4294967296;
parameter    ap_ST_fsm_pp2_stage4 = 46'd8589934592;
parameter    ap_ST_fsm_state53 = 46'd17179869184;
parameter    ap_ST_fsm_state54 = 46'd34359738368;
parameter    ap_ST_fsm_state55 = 46'd68719476736;
parameter    ap_ST_fsm_state56 = 46'd137438953472;
parameter    ap_ST_fsm_state57 = 46'd274877906944;
parameter    ap_ST_fsm_state58 = 46'd549755813888;
parameter    ap_ST_fsm_pp3_stage0 = 46'd1099511627776;
parameter    ap_ST_fsm_pp3_stage1 = 46'd2199023255552;
parameter    ap_ST_fsm_pp3_stage2 = 46'd4398046511104;
parameter    ap_ST_fsm_pp3_stage3 = 46'd8796093022208;
parameter    ap_ST_fsm_pp3_stage4 = 46'd17592186044416;
parameter    ap_ST_fsm_state70 = 46'd35184372088832;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [6:0] input_height;
input  [5:0] input_width;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
input  [5:0] output_height;
input  [5:0] output_width;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;
output  [3:0] bias_address0;
output   bias_ce0;
input  [15:0] bias_q0;
output  [7:0] kernel_address0;
output   kernel_ce0;
input  [15:0] kernel_q0;
output  [7:0] kernel_address1;
output   kernel_ce1;
input  [15:0] kernel_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg[13:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[15:0] output_r_d0;
reg[3:0] bias_address0;
reg bias_ce0;
reg[7:0] kernel_address0;
reg kernel_ce0;
reg[7:0] kernel_address1;
reg kernel_ce1;

(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten_reg_824;
reg   [4:0] out_h_0_0_reg_835;
reg   [4:0] out_w_0_0_reg_847;
reg   [9:0] indvar_flatten34_reg_858;
reg   [4:0] out_h_0_1_reg_869;
reg   [4:0] out_w_0_1_reg_881;
reg   [9:0] indvar_flatten53_reg_892;
reg   [4:0] out_h_0_2_reg_903;
reg   [4:0] out_w_0_2_reg_915;
reg   [9:0] indvar_flatten72_reg_926;
reg   [4:0] out_h_0_3_reg_937;
reg   [4:0] out_w_0_3_reg_949;
reg   [15:0] reg_960;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state54;
reg   [15:0] reg_965;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state55;
reg   [15:0] reg_970;
reg   [15:0] reg_975;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state56;
reg   [15:0] reg_980;
reg   [15:0] reg_985;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state57;
reg   [15:0] reg_990;
reg   [15:0] reg_995;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state58;
reg  signed [15:0] reg_999;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state11_pp0_stage3_iter0;
wire    ap_block_state16_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] icmp_ln33_reg_3607;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state12_pp0_stage4_iter0;
wire    ap_block_state17_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_state18_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state9_pp0_stage1_iter0;
wire    ap_block_state14_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln33_reg_3607_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state10_pp0_stage2_iter0;
wire    ap_block_state15_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp1_stage3;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state28_pp1_stage3_iter0;
wire    ap_block_state33_pp1_stage3_iter1;
wire    ap_block_pp1_stage3_11001;
reg   [0:0] icmp_ln33_1_reg_3942;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_state29_pp1_stage4_iter0;
wire    ap_block_state34_pp1_stage4_iter1;
wire    ap_block_pp1_stage4_11001;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state25_pp1_stage0_iter0;
wire    ap_block_state30_pp1_stage0_iter1;
wire    ap_block_state35_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state26_pp1_stage1_iter0;
wire    ap_block_state31_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln33_1_reg_3942_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state27_pp1_stage2_iter0;
wire    ap_block_state32_pp1_stage2_iter1;
wire    ap_block_pp1_stage2_11001;
wire    ap_CS_fsm_pp2_stage3;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state45_pp2_stage3_iter0;
wire    ap_block_state50_pp2_stage3_iter1;
wire    ap_block_pp2_stage3_11001;
reg   [0:0] icmp_ln33_2_reg_4281;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state46_pp2_stage4_iter0;
wire    ap_block_state51_pp2_stage4_iter1;
wire    ap_block_pp2_stage4_11001;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state42_pp2_stage0_iter0;
wire    ap_block_state47_pp2_stage0_iter1;
wire    ap_block_state52_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state43_pp2_stage1_iter0;
wire    ap_block_state48_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] icmp_ln33_2_reg_4281_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state44_pp2_stage2_iter0;
wire    ap_block_state49_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
wire    ap_CS_fsm_pp3_stage3;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state62_pp3_stage3_iter0;
wire    ap_block_state67_pp3_stage3_iter1;
wire    ap_block_pp3_stage3_11001;
reg   [0:0] icmp_ln33_3_reg_4616;
wire    ap_CS_fsm_pp3_stage4;
wire    ap_block_state63_pp3_stage4_iter0;
wire    ap_block_state68_pp3_stage4_iter1;
wire    ap_block_pp3_stage4_11001;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state59_pp3_stage0_iter0;
wire    ap_block_state64_pp3_stage0_iter1;
wire    ap_block_state69_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state60_pp3_stage1_iter0;
wire    ap_block_state65_pp3_stage1_iter1;
wire    ap_block_pp3_stage1_11001;
reg   [0:0] icmp_ln33_3_reg_4616_pp3_iter1_reg;
wire    ap_CS_fsm_pp3_stage2;
wire    ap_block_state61_pp3_stage2_iter0;
wire    ap_block_state66_pp3_stage2_iter1;
wire    ap_block_pp3_stage2_11001;
reg  signed [15:0] reg_1004;
wire   [4:0] empty_fu_1013_p1;
reg   [4:0] empty_reg_3420;
wire   [8:0] zext_ln41_fu_1021_p1;
reg   [8:0] zext_ln41_reg_3428;
wire   [8:0] zext_ln49_fu_1025_p1;
reg   [8:0] zext_ln49_reg_3436;
wire   [13:0] empty_59_fu_1029_p1;
reg   [13:0] empty_59_reg_3444;
wire   [13:0] empty_60_fu_1033_p1;
reg   [13:0] empty_60_reg_3460;
wire   [9:0] mul_ln4_fu_1045_p2;
reg   [9:0] mul_ln4_reg_3468;
wire   [6:0] tmp_5_fu_1067_p3;
reg   [6:0] tmp_5_reg_3479;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln23_fu_1051_p2;
wire   [7:0] zext_ln28_fu_1116_p1;
reg   [7:0] zext_ln28_reg_3502;
wire   [3:0] trunc_ln23_fu_1193_p1;
reg   [3:0] trunc_ln23_reg_3545;
wire  signed [29:0] sext_ln28_fu_1197_p1;
reg  signed [29:0] sext_ln28_reg_3552;
wire  signed [29:0] sext_ln28_1_fu_1201_p1;
reg  signed [29:0] sext_ln28_1_reg_3557;
wire  signed [29:0] sext_ln28_2_fu_1205_p1;
reg  signed [29:0] sext_ln28_2_reg_3562;
wire  signed [29:0] sext_ln28_3_fu_1209_p1;
reg  signed [29:0] sext_ln28_3_reg_3567;
wire  signed [29:0] sext_ln28_4_fu_1213_p1;
reg  signed [29:0] sext_ln28_4_reg_3572;
wire  signed [29:0] sext_ln28_5_fu_1217_p1;
reg  signed [29:0] sext_ln28_5_reg_3577;
wire  signed [29:0] sext_ln28_6_fu_1221_p1;
reg  signed [29:0] sext_ln28_6_reg_3582;
wire  signed [29:0] sext_ln28_7_fu_1225_p1;
reg  signed [29:0] sext_ln28_7_reg_3587;
wire  signed [29:0] sext_ln31_fu_1229_p1;
reg  signed [29:0] sext_ln31_reg_3592;
wire   [8:0] mul_ln41_fu_1237_p2;
reg   [8:0] mul_ln41_reg_3597;
wire   [8:0] mul_ln49_fu_1242_p2;
reg   [8:0] mul_ln49_reg_3602;
wire   [0:0] icmp_ln33_fu_1247_p2;
wire   [9:0] add_ln33_1_fu_1252_p2;
reg   [9:0] add_ln33_1_reg_3611;
wire   [4:0] add_ln33_fu_1258_p2;
reg   [4:0] add_ln33_reg_3616;
wire   [0:0] icmp_ln34_fu_1264_p2;
reg   [0:0] icmp_ln34_reg_3621;
wire   [4:0] out_w_0_0_mid2_fu_1269_p3;
reg   [4:0] out_w_0_0_mid2_reg_3626;
wire   [4:0] tmp10_0_0_0_cast_mid_fu_1277_p3;
reg   [4:0] tmp10_0_0_0_cast_mid_reg_3633;
wire   [8:0] tmp10_0_0_0_cast_mid_2_fu_1287_p2;
reg   [8:0] tmp10_0_0_0_cast_mid_2_reg_3638;
wire   [13:0] tmp10_0_0_0_cast_mid_4_fu_1296_p2;
reg   [13:0] tmp10_0_0_0_cast_mid_4_reg_3644;
wire   [8:0] tmp12_0_cast_mid2_v_s_fu_1301_p2;
reg   [8:0] tmp12_0_cast_mid2_v_s_reg_3651;
wire   [13:0] tmp10_0_1_0_cast_mid_2_fu_1315_p2;
reg   [13:0] tmp10_0_1_0_cast_mid_2_reg_3656;
wire   [13:0] zext_ln41_3_fu_1320_p1;
reg   [13:0] zext_ln41_3_reg_3663;
wire   [4:0] add_ln41_1_fu_1333_p2;
reg   [4:0] add_ln41_1_reg_3675;
wire   [13:0] zext_ln41_5_fu_1338_p1;
reg   [13:0] zext_ln41_5_reg_3680;
wire   [13:0] tmp10_0_2_0_cast_mid_2_fu_1361_p2;
reg   [13:0] tmp10_0_2_0_cast_mid_2_reg_3691;
wire   [13:0] zext_ln41_7_fu_1374_p1;
reg   [13:0] zext_ln41_7_reg_3698;
wire   [13:0] grp_fu_3180_p3;
reg   [13:0] add_ln49_12_reg_3714;
reg   [13:0] add_ln49_12_reg_3714_pp0_iter1_reg;
reg   [15:0] trunc_ln_reg_3719;
reg   [15:0] trunc_ln49_s_reg_3724;
wire   [13:0] add_ln41_8_fu_1441_p2;
reg   [13:0] add_ln41_8_reg_3739;
wire   [13:0] add_ln41_9_fu_1445_p2;
reg   [13:0] add_ln41_9_reg_3744;
wire   [13:0] add_ln41_10_fu_1449_p2;
reg   [13:0] add_ln41_10_reg_3749;
reg   [15:0] trunc_ln49_1_reg_3754;
reg   [15:0] trunc_ln49_2_reg_3759;
wire   [15:0] add_ln49_fu_1487_p2;
reg   [15:0] add_ln49_reg_3774;
reg   [15:0] trunc_ln49_3_reg_3779;
reg   [15:0] trunc_ln49_4_reg_3784;
wire   [15:0] add_ln49_5_fu_1526_p2;
reg   [15:0] add_ln49_5_reg_3794;
reg   [15:0] trunc_ln49_5_reg_3799;
reg   [15:0] trunc_ln49_6_reg_3804;
reg   [15:0] trunc_ln49_7_reg_3809;
wire   [15:0] add_ln49_10_fu_1583_p2;
reg   [15:0] add_ln49_10_reg_3814;
wire   [3:0] or_ln23_fu_1603_p2;
reg   [3:0] or_ln23_reg_3819;
wire    ap_CS_fsm_state19;
wire   [7:0] add_ln28_5_fu_1624_p2;
reg   [7:0] add_ln28_5_reg_3825;
wire  signed [29:0] sext_ln28_8_fu_1719_p1;
reg  signed [29:0] sext_ln28_8_reg_3887;
wire  signed [29:0] sext_ln28_9_fu_1723_p1;
reg  signed [29:0] sext_ln28_9_reg_3892;
wire  signed [29:0] sext_ln28_10_fu_1727_p1;
reg  signed [29:0] sext_ln28_10_reg_3897;
wire  signed [29:0] sext_ln28_11_fu_1731_p1;
reg  signed [29:0] sext_ln28_11_reg_3902;
wire  signed [29:0] sext_ln28_12_fu_1735_p1;
reg  signed [29:0] sext_ln28_12_reg_3907;
wire  signed [29:0] sext_ln28_13_fu_1739_p1;
reg  signed [29:0] sext_ln28_13_reg_3912;
wire  signed [29:0] sext_ln28_14_fu_1743_p1;
reg  signed [29:0] sext_ln28_14_reg_3917;
wire  signed [29:0] sext_ln28_15_fu_1747_p1;
reg  signed [29:0] sext_ln28_15_reg_3922;
wire  signed [29:0] sext_ln31_1_fu_1751_p1;
reg  signed [29:0] sext_ln31_1_reg_3927;
wire   [8:0] mul_ln41_1_fu_1758_p2;
reg   [8:0] mul_ln41_1_reg_3932;
wire   [8:0] mul_ln49_1_fu_1763_p2;
reg   [8:0] mul_ln49_1_reg_3937;
wire   [0:0] icmp_ln33_1_fu_1768_p2;
wire   [9:0] add_ln33_3_fu_1773_p2;
reg   [9:0] add_ln33_3_reg_3946;
wire   [4:0] add_ln33_2_fu_1779_p2;
reg   [4:0] add_ln33_2_reg_3951;
wire   [0:0] icmp_ln34_1_fu_1785_p2;
reg   [0:0] icmp_ln34_1_reg_3956;
wire   [4:0] out_w_0_1_mid2_fu_1790_p3;
reg   [4:0] out_w_0_1_mid2_reg_3961;
wire   [4:0] tmp10_1_0_0_cast_mid_fu_1798_p3;
reg   [4:0] tmp10_1_0_0_cast_mid_reg_3968;
wire   [8:0] tmp10_1_0_0_cast_mid_2_fu_1808_p2;
reg   [8:0] tmp10_1_0_0_cast_mid_2_reg_3973;
wire   [13:0] tmp10_1_0_0_cast_mid_4_fu_1817_p2;
reg   [13:0] tmp10_1_0_0_cast_mid_4_reg_3979;
wire   [8:0] tmp12_1_cast_mid2_v_s_fu_1822_p2;
reg   [8:0] tmp12_1_cast_mid2_v_s_reg_3986;
wire   [13:0] tmp10_1_1_0_cast_mid_2_fu_1836_p2;
reg   [13:0] tmp10_1_1_0_cast_mid_2_reg_3991;
wire   [13:0] zext_ln41_16_fu_1841_p1;
reg   [13:0] zext_ln41_16_reg_3998;
wire   [4:0] add_ln41_12_fu_1854_p2;
reg   [4:0] add_ln41_12_reg_4010;
wire   [13:0] zext_ln41_18_fu_1859_p1;
reg   [13:0] zext_ln41_18_reg_4015;
wire   [13:0] tmp10_1_2_0_cast_mid_2_fu_1882_p2;
reg   [13:0] tmp10_1_2_0_cast_mid_2_reg_4026;
wire   [13:0] zext_ln41_20_fu_1895_p1;
reg   [13:0] zext_ln41_20_reg_4033;
wire   [13:0] grp_fu_3240_p3;
reg   [13:0] add_ln49_1_reg_4049;
reg   [13:0] add_ln49_1_reg_4049_pp1_iter1_reg;
reg   [15:0] trunc_ln49_8_reg_4054;
reg   [15:0] trunc_ln49_9_reg_4059;
wire   [13:0] add_ln41_19_fu_1962_p2;
reg   [13:0] add_ln41_19_reg_4074;
wire   [13:0] add_ln41_20_fu_1966_p2;
reg   [13:0] add_ln41_20_reg_4079;
wire   [13:0] add_ln41_21_fu_1970_p2;
reg   [13:0] add_ln41_21_reg_4084;
reg   [15:0] trunc_ln49_10_reg_4089;
reg   [15:0] trunc_ln49_11_reg_4094;
wire   [15:0] add_ln49_13_fu_2008_p2;
reg   [15:0] add_ln49_13_reg_4109;
reg   [15:0] trunc_ln49_12_reg_4114;
reg   [15:0] trunc_ln49_13_reg_4119;
wire   [15:0] add_ln49_15_fu_2047_p2;
reg   [15:0] add_ln49_15_reg_4129;
reg   [15:0] trunc_ln49_14_reg_4134;
reg   [15:0] trunc_ln49_15_reg_4139;
reg   [15:0] trunc_ln49_16_reg_4144;
wire   [15:0] add_ln49_20_fu_2104_p2;
reg   [15:0] add_ln49_20_reg_4149;
wire   [3:0] or_ln23_1_fu_2124_p2;
reg   [3:0] or_ln23_1_reg_4154;
wire    ap_CS_fsm_state36;
wire   [6:0] tmp_7_fu_2139_p3;
reg   [6:0] tmp_7_reg_4160;
wire   [7:0] zext_ln28_21_fu_2152_p1;
reg   [7:0] zext_ln28_21_reg_4171;
wire  signed [29:0] sext_ln28_16_fu_2248_p1;
reg  signed [29:0] sext_ln28_16_reg_4226;
wire  signed [29:0] sext_ln28_17_fu_2252_p1;
reg  signed [29:0] sext_ln28_17_reg_4231;
wire  signed [29:0] sext_ln28_18_fu_2256_p1;
reg  signed [29:0] sext_ln28_18_reg_4236;
wire  signed [29:0] sext_ln28_19_fu_2260_p1;
reg  signed [29:0] sext_ln28_19_reg_4241;
wire  signed [29:0] sext_ln28_20_fu_2264_p1;
reg  signed [29:0] sext_ln28_20_reg_4246;
wire  signed [29:0] sext_ln28_21_fu_2268_p1;
reg  signed [29:0] sext_ln28_21_reg_4251;
wire  signed [29:0] sext_ln28_22_fu_2272_p1;
reg  signed [29:0] sext_ln28_22_reg_4256;
wire  signed [29:0] sext_ln28_23_fu_2276_p1;
reg  signed [29:0] sext_ln28_23_reg_4261;
wire  signed [29:0] sext_ln31_2_fu_2280_p1;
reg  signed [29:0] sext_ln31_2_reg_4266;
wire   [8:0] mul_ln41_11_fu_2287_p2;
reg   [8:0] mul_ln41_11_reg_4271;
wire   [8:0] mul_ln49_2_fu_2292_p2;
reg   [8:0] mul_ln49_2_reg_4276;
wire   [0:0] icmp_ln33_2_fu_2297_p2;
wire   [9:0] add_ln33_5_fu_2302_p2;
reg   [9:0] add_ln33_5_reg_4285;
wire   [4:0] add_ln33_4_fu_2308_p2;
reg   [4:0] add_ln33_4_reg_4290;
wire   [0:0] icmp_ln34_2_fu_2314_p2;
reg   [0:0] icmp_ln34_2_reg_4295;
wire   [4:0] out_w_0_2_mid2_fu_2319_p3;
reg   [4:0] out_w_0_2_mid2_reg_4300;
wire   [4:0] tmp10_2_0_0_cast_mid_fu_2327_p3;
reg   [4:0] tmp10_2_0_0_cast_mid_reg_4307;
wire   [8:0] tmp10_2_0_0_cast_mid_2_fu_2337_p2;
reg   [8:0] tmp10_2_0_0_cast_mid_2_reg_4312;
wire   [13:0] tmp10_2_0_0_cast_mid_4_fu_2346_p2;
reg   [13:0] tmp10_2_0_0_cast_mid_4_reg_4318;
wire   [8:0] tmp12_2_cast_mid2_v_s_fu_2351_p2;
reg   [8:0] tmp12_2_cast_mid2_v_s_reg_4325;
wire   [13:0] tmp10_2_1_0_cast_mid_2_fu_2365_p2;
reg   [13:0] tmp10_2_1_0_cast_mid_2_reg_4330;
wire   [13:0] zext_ln41_29_fu_2370_p1;
reg   [13:0] zext_ln41_29_reg_4337;
wire   [4:0] add_ln41_23_fu_2383_p2;
reg   [4:0] add_ln41_23_reg_4349;
wire   [13:0] zext_ln41_31_fu_2388_p1;
reg   [13:0] zext_ln41_31_reg_4354;
wire   [13:0] tmp10_2_2_0_cast_mid_2_fu_2411_p2;
reg   [13:0] tmp10_2_2_0_cast_mid_2_reg_4365;
wire   [13:0] zext_ln41_33_fu_2424_p1;
reg   [13:0] zext_ln41_33_reg_4372;
wire   [13:0] grp_fu_3300_p3;
reg   [13:0] add_ln49_2_reg_4388;
reg   [13:0] add_ln49_2_reg_4388_pp2_iter1_reg;
reg   [15:0] trunc_ln49_17_reg_4393;
reg   [15:0] trunc_ln49_18_reg_4398;
wire   [13:0] add_ln41_30_fu_2491_p2;
reg   [13:0] add_ln41_30_reg_4413;
wire   [13:0] add_ln41_31_fu_2495_p2;
reg   [13:0] add_ln41_31_reg_4418;
wire   [13:0] add_ln41_32_fu_2499_p2;
reg   [13:0] add_ln41_32_reg_4423;
reg   [15:0] trunc_ln49_19_reg_4428;
reg   [15:0] trunc_ln49_20_reg_4433;
wire   [15:0] add_ln49_22_fu_2537_p2;
reg   [15:0] add_ln49_22_reg_4448;
reg   [15:0] trunc_ln49_21_reg_4453;
reg   [15:0] trunc_ln49_22_reg_4458;
wire   [15:0] add_ln49_24_fu_2576_p2;
reg   [15:0] add_ln49_24_reg_4468;
reg   [15:0] trunc_ln49_23_reg_4473;
reg   [15:0] trunc_ln49_24_reg_4478;
reg   [15:0] trunc_ln49_25_reg_4483;
wire   [15:0] add_ln49_29_fu_2633_p2;
reg   [15:0] add_ln49_29_reg_4488;
wire   [3:0] or_ln23_2_fu_2653_p2;
reg   [3:0] or_ln23_2_reg_4493;
wire    ap_CS_fsm_state53;
wire   [7:0] add_ln28_20_fu_2674_p2;
reg   [7:0] add_ln28_20_reg_4499;
wire   [8:0] mul_ln41_21_fu_2772_p2;
reg   [8:0] mul_ln41_21_reg_4561;
wire   [8:0] mul_ln49_3_fu_2777_p2;
reg   [8:0] mul_ln49_3_reg_4566;
wire  signed [29:0] sext_ln28_24_fu_2782_p1;
reg  signed [29:0] sext_ln28_24_reg_4571;
wire  signed [29:0] sext_ln28_25_fu_2786_p1;
reg  signed [29:0] sext_ln28_25_reg_4576;
wire  signed [29:0] sext_ln28_26_fu_2790_p1;
reg  signed [29:0] sext_ln28_26_reg_4581;
wire  signed [29:0] sext_ln28_27_fu_2794_p1;
reg  signed [29:0] sext_ln28_27_reg_4586;
wire  signed [29:0] sext_ln28_28_fu_2798_p1;
reg  signed [29:0] sext_ln28_28_reg_4591;
wire  signed [29:0] sext_ln28_29_fu_2802_p1;
reg  signed [29:0] sext_ln28_29_reg_4596;
wire  signed [29:0] sext_ln28_30_fu_2806_p1;
reg  signed [29:0] sext_ln28_30_reg_4601;
wire  signed [29:0] sext_ln28_31_fu_2810_p1;
reg  signed [29:0] sext_ln28_31_reg_4606;
wire  signed [29:0] sext_ln31_3_fu_2814_p1;
reg  signed [29:0] sext_ln31_3_reg_4611;
wire   [0:0] icmp_ln33_3_fu_2818_p2;
wire   [9:0] add_ln33_7_fu_2823_p2;
reg   [9:0] add_ln33_7_reg_4620;
wire   [4:0] add_ln33_6_fu_2829_p2;
reg   [4:0] add_ln33_6_reg_4625;
wire   [0:0] icmp_ln34_3_fu_2835_p2;
reg   [0:0] icmp_ln34_3_reg_4630;
wire   [4:0] out_w_0_3_mid2_fu_2840_p3;
reg   [4:0] out_w_0_3_mid2_reg_4635;
wire   [4:0] tmp10_3_0_0_cast_mid_fu_2848_p3;
reg   [4:0] tmp10_3_0_0_cast_mid_reg_4642;
wire   [8:0] tmp10_3_0_0_cast_mid_2_fu_2858_p2;
reg   [8:0] tmp10_3_0_0_cast_mid_2_reg_4647;
wire   [13:0] tmp10_3_0_0_cast_mid_4_fu_2867_p2;
reg   [13:0] tmp10_3_0_0_cast_mid_4_reg_4653;
wire   [8:0] tmp12_3_cast_mid2_v_s_fu_2872_p2;
reg   [8:0] tmp12_3_cast_mid2_v_s_reg_4660;
wire   [13:0] tmp10_3_1_0_cast_mid_2_fu_2886_p2;
reg   [13:0] tmp10_3_1_0_cast_mid_2_reg_4665;
wire   [13:0] zext_ln41_41_fu_2891_p1;
reg   [13:0] zext_ln41_41_reg_4672;
wire   [4:0] add_ln41_34_fu_2904_p2;
reg   [4:0] add_ln41_34_reg_4684;
wire   [13:0] zext_ln41_43_fu_2909_p1;
reg   [13:0] zext_ln41_43_reg_4689;
wire   [13:0] tmp10_3_2_0_cast_mid_2_fu_2932_p2;
reg   [13:0] tmp10_3_2_0_cast_mid_2_reg_4700;
wire   [13:0] zext_ln41_45_fu_2945_p1;
reg   [13:0] zext_ln41_45_reg_4707;
wire   [13:0] grp_fu_3360_p3;
reg   [13:0] add_ln49_3_reg_4723;
reg   [13:0] add_ln49_3_reg_4723_pp3_iter1_reg;
reg   [15:0] trunc_ln49_26_reg_4728;
reg   [15:0] trunc_ln49_27_reg_4733;
wire   [13:0] add_ln41_41_fu_3012_p2;
reg   [13:0] add_ln41_41_reg_4748;
wire   [13:0] add_ln41_42_fu_3016_p2;
reg   [13:0] add_ln41_42_reg_4753;
wire   [13:0] add_ln41_43_fu_3020_p2;
reg   [13:0] add_ln41_43_reg_4758;
reg   [15:0] trunc_ln49_28_reg_4763;
reg   [15:0] trunc_ln49_29_reg_4768;
wire   [15:0] add_ln49_31_fu_3058_p2;
reg   [15:0] add_ln49_31_reg_4783;
reg   [15:0] trunc_ln49_30_reg_4788;
reg   [15:0] trunc_ln49_31_reg_4793;
wire   [15:0] add_ln49_33_fu_3097_p2;
reg   [15:0] add_ln49_33_reg_4803;
reg   [15:0] trunc_ln49_32_reg_4808;
reg   [15:0] trunc_ln49_33_reg_4813;
reg   [15:0] trunc_ln49_34_reg_4818;
wire   [15:0] add_ln49_38_fu_3154_p2;
reg   [15:0] add_ln49_38_reg_4823;
wire   [4:0] add_ln23_fu_3174_p2;
wire    ap_CS_fsm_state70;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
wire    ap_block_pp0_stage4_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state25;
wire    ap_block_pp1_stage4_subdone;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state42;
wire    ap_block_pp2_stage4_subdone;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state59;
wire    ap_block_pp3_stage4_subdone;
reg    ap_enable_reg_pp3_iter2;
reg   [4:0] out_d_0_0_reg_812;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_828_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_out_h_0_0_phi_fu_839_p4;
reg   [4:0] ap_phi_mux_out_w_0_0_phi_fu_851_p4;
reg   [9:0] ap_phi_mux_indvar_flatten34_phi_fu_862_p4;
wire    ap_block_pp1_stage0;
reg   [4:0] ap_phi_mux_out_h_0_1_phi_fu_873_p4;
reg   [4:0] ap_phi_mux_out_w_0_1_phi_fu_885_p4;
reg   [9:0] ap_phi_mux_indvar_flatten53_phi_fu_896_p4;
wire    ap_block_pp2_stage0;
reg   [4:0] ap_phi_mux_out_h_0_2_phi_fu_907_p4;
reg   [4:0] ap_phi_mux_out_w_0_2_phi_fu_919_p4;
reg   [9:0] ap_phi_mux_indvar_flatten72_phi_fu_930_p4;
wire    ap_block_pp3_stage0;
reg   [4:0] ap_phi_mux_out_h_0_3_phi_fu_941_p4;
reg   [4:0] ap_phi_mux_out_w_0_3_phi_fu_953_p4;
wire   [63:0] zext_ln28_1_fu_1075_p1;
wire   [63:0] zext_ln28_2_fu_1093_p1;
wire   [63:0] zext_ln28_3_fu_1111_p1;
wire   [63:0] zext_ln28_4_fu_1132_p1;
wire   [63:0] zext_ln28_5_fu_1143_p1;
wire   [63:0] zext_ln28_6_fu_1153_p1;
wire   [63:0] zext_ln28_7_fu_1163_p1;
wire   [63:0] zext_ln28_8_fu_1173_p1;
wire   [63:0] zext_ln28_9_fu_1183_p1;
wire   [63:0] zext_ln31_fu_1188_p1;
wire   [63:0] zext_ln41_4_fu_1328_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln41_6_fu_1347_p1;
wire   [63:0] zext_ln41_8_fu_1383_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln41_9_fu_1392_p1;
wire   [63:0] zext_ln41_10_fu_1427_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln41_11_fu_1436_p1;
wire   [63:0] zext_ln41_12_fu_1479_p1;
wire   [63:0] zext_ln41_13_fu_1483_p1;
wire   [63:0] zext_ln41_14_fu_1518_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln49_1_fu_1599_p1;
wire   [63:0] zext_ln28_12_fu_1630_p1;
wire   [63:0] zext_ln28_13_fu_1640_p1;
wire   [63:0] zext_ln28_14_fu_1650_p1;
wire   [63:0] zext_ln28_15_fu_1660_p1;
wire   [63:0] zext_ln28_16_fu_1670_p1;
wire   [63:0] zext_ln28_17_fu_1680_p1;
wire   [63:0] zext_ln28_18_fu_1690_p1;
wire   [63:0] zext_ln28_19_fu_1700_p1;
wire   [63:0] zext_ln28_20_fu_1710_p1;
wire   [63:0] zext_ln31_1_fu_1715_p1;
wire   [63:0] zext_ln41_17_fu_1849_p1;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln41_19_fu_1868_p1;
wire   [63:0] zext_ln41_21_fu_1904_p1;
wire    ap_block_pp1_stage3;
wire   [63:0] zext_ln41_22_fu_1913_p1;
wire   [63:0] zext_ln41_23_fu_1948_p1;
wire    ap_block_pp1_stage4;
wire   [63:0] zext_ln41_24_fu_1957_p1;
wire   [63:0] zext_ln41_25_fu_2000_p1;
wire   [63:0] zext_ln41_26_fu_2004_p1;
wire   [63:0] zext_ln41_27_fu_2039_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln49_2_fu_2120_p1;
wire   [63:0] zext_ln28_22_fu_2147_p1;
wire   [63:0] zext_ln28_23_fu_2168_p1;
wire   [63:0] zext_ln28_24_fu_2179_p1;
wire   [63:0] zext_ln28_25_fu_2189_p1;
wire   [63:0] zext_ln28_26_fu_2199_p1;
wire   [63:0] zext_ln28_27_fu_2209_p1;
wire   [63:0] zext_ln28_28_fu_2219_p1;
wire   [63:0] zext_ln28_29_fu_2229_p1;
wire   [63:0] zext_ln28_30_fu_2239_p1;
wire   [63:0] zext_ln31_2_fu_2244_p1;
wire   [63:0] zext_ln41_30_fu_2378_p1;
wire    ap_block_pp2_stage2;
wire   [63:0] zext_ln41_32_fu_2397_p1;
wire   [63:0] zext_ln41_34_fu_2433_p1;
wire    ap_block_pp2_stage3;
wire   [63:0] zext_ln41_35_fu_2442_p1;
wire   [63:0] zext_ln41_36_fu_2477_p1;
wire    ap_block_pp2_stage4;
wire   [63:0] zext_ln41_37_fu_2486_p1;
wire   [63:0] zext_ln41_38_fu_2529_p1;
wire   [63:0] zext_ln41_39_fu_2533_p1;
wire   [63:0] zext_ln41_40_fu_2568_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln49_3_fu_2649_p1;
wire   [63:0] zext_ln28_33_fu_2680_p1;
wire   [63:0] zext_ln28_34_fu_2690_p1;
wire   [63:0] zext_ln28_35_fu_2700_p1;
wire   [63:0] zext_ln28_36_fu_2710_p1;
wire   [63:0] zext_ln28_37_fu_2720_p1;
wire   [63:0] zext_ln28_38_fu_2730_p1;
wire   [63:0] zext_ln28_39_fu_2740_p1;
wire   [63:0] zext_ln28_40_fu_2750_p1;
wire   [63:0] zext_ln28_41_fu_2760_p1;
wire   [63:0] zext_ln31_3_fu_2765_p1;
wire   [63:0] zext_ln41_42_fu_2899_p1;
wire    ap_block_pp3_stage2;
wire   [63:0] zext_ln41_44_fu_2918_p1;
wire   [63:0] zext_ln41_46_fu_2954_p1;
wire    ap_block_pp3_stage3;
wire   [63:0] zext_ln41_47_fu_2963_p1;
wire   [63:0] zext_ln41_48_fu_2998_p1;
wire    ap_block_pp3_stage4;
wire   [63:0] zext_ln41_49_fu_3007_p1;
wire   [63:0] zext_ln41_50_fu_3050_p1;
wire   [63:0] zext_ln41_51_fu_3054_p1;
wire   [63:0] zext_ln41_52_fu_3089_p1;
wire    ap_block_pp3_stage1;
wire   [63:0] zext_ln49_4_fu_3170_p1;
wire   [15:0] add_ln49_11_fu_1593_p2;
wire   [15:0] add_ln49_21_fu_2114_p2;
wire   [15:0] add_ln49_30_fu_2643_p2;
wire   [15:0] add_ln49_39_fu_3164_p2;
wire  signed [6:0] sext_ln4_fu_1009_p1;
wire   [4:0] empty_58_fu_1017_p1;
wire   [4:0] mul_ln4_fu_1045_p0;
wire   [4:0] mul_ln4_fu_1045_p1;
wire   [1:0] tmp_4_fu_1057_p4;
wire   [6:0] or_ln28_1_fu_1080_p2;
wire   [7:0] or_ln_fu_1085_p3;
wire   [6:0] or_ln28_fu_1098_p2;
wire   [7:0] or_ln28_9_fu_1103_p3;
wire   [6:0] or_ln28_2_fu_1119_p2;
wire   [7:0] or_ln28_s_fu_1124_p3;
wire   [7:0] add_ln28_fu_1137_p2;
wire   [7:0] add_ln28_1_fu_1148_p2;
wire   [7:0] add_ln28_2_fu_1158_p2;
wire   [7:0] add_ln28_3_fu_1168_p2;
wire   [7:0] add_ln28_4_fu_1178_p2;
wire   [4:0] mul_ln41_fu_1237_p0;
wire   [8:0] zext_ln41_1_fu_1233_p1;
wire   [6:0] mul_ln41_fu_1237_p1;
wire   [4:0] mul_ln49_fu_1242_p0;
wire   [5:0] mul_ln49_fu_1242_p1;
wire   [8:0] tmp10_0_0_0_cast_mid_1_fu_1283_p1;
wire   [6:0] tmp10_0_0_0_cast_mid_4_fu_1296_p0;
wire   [8:0] tmp10_0_0_0_cast_mid_4_fu_1296_p1;
wire   [8:0] tmp10_0_1_0_cast_mid_fu_1306_p2;
wire   [6:0] tmp10_0_1_0_cast_mid_2_fu_1315_p0;
wire   [8:0] tmp10_0_1_0_cast_mid_2_fu_1315_p1;
wire   [13:0] add_ln41_fu_1323_p2;
wire   [13:0] add_ln41_2_fu_1342_p2;
wire   [8:0] tmp10_0_2_0_cast_mid_fu_1352_p2;
wire   [6:0] tmp10_0_2_0_cast_mid_2_fu_1361_p0;
wire   [8:0] tmp10_0_2_0_cast_mid_2_fu_1361_p1;
wire   [4:0] add_ln41_3_fu_1369_p2;
wire   [13:0] add_ln41_4_fu_1378_p2;
wire   [13:0] add_ln41_5_fu_1388_p2;
wire  signed [29:0] mul_ln41_2_fu_3186_p2;
wire  signed [29:0] mul_ln41_3_fu_3192_p2;
wire   [13:0] add_ln41_6_fu_1423_p2;
wire   [13:0] add_ln41_7_fu_1432_p2;
wire  signed [29:0] mul_ln41_4_fu_3198_p2;
wire  signed [29:0] mul_ln41_5_fu_3204_p2;
wire  signed [29:0] mul_ln41_6_fu_3210_p2;
wire  signed [29:0] mul_ln41_7_fu_3216_p2;
wire   [15:0] add_ln49_4_fu_1522_p2;
wire  signed [29:0] mul_ln41_8_fu_3222_p2;
wire  signed [29:0] mul_ln41_9_fu_3228_p2;
wire  signed [29:0] mul_ln41_10_fu_3234_p2;
wire   [15:0] add_ln49_8_fu_1574_p2;
wire   [15:0] add_ln49_9_fu_1578_p2;
wire   [15:0] add_ln49_7_fu_1570_p2;
wire   [15:0] add_ln49_6_fu_1589_p2;
wire   [6:0] shl_ln_fu_1612_p3;
wire   [7:0] zext_ln28_11_fu_1620_p1;
wire   [7:0] zext_ln28_10_fu_1608_p1;
wire   [7:0] add_ln28_6_fu_1635_p2;
wire   [7:0] or_ln28_3_fu_1645_p2;
wire   [7:0] add_ln28_7_fu_1655_p2;
wire   [7:0] add_ln28_8_fu_1665_p2;
wire   [7:0] add_ln28_9_fu_1675_p2;
wire   [7:0] add_ln28_10_fu_1685_p2;
wire   [7:0] add_ln28_11_fu_1695_p2;
wire   [7:0] add_ln28_12_fu_1705_p2;
wire   [6:0] mul_ln41_1_fu_1758_p0;
wire   [3:0] mul_ln41_1_fu_1758_p1;
wire   [8:0] zext_ln41_2_fu_1755_p1;
wire   [5:0] mul_ln49_1_fu_1763_p0;
wire   [3:0] mul_ln49_1_fu_1763_p1;
wire   [8:0] tmp10_1_0_0_cast_mid_1_fu_1804_p1;
wire   [6:0] tmp10_1_0_0_cast_mid_4_fu_1817_p0;
wire   [8:0] tmp10_1_0_0_cast_mid_4_fu_1817_p1;
wire   [8:0] tmp10_1_1_0_cast_mid_fu_1827_p2;
wire   [6:0] tmp10_1_1_0_cast_mid_2_fu_1836_p0;
wire   [8:0] tmp10_1_1_0_cast_mid_2_fu_1836_p1;
wire   [13:0] add_ln41_11_fu_1844_p2;
wire   [13:0] add_ln41_13_fu_1863_p2;
wire   [8:0] tmp10_1_2_0_cast_mid_fu_1873_p2;
wire   [6:0] tmp10_1_2_0_cast_mid_2_fu_1882_p0;
wire   [8:0] tmp10_1_2_0_cast_mid_2_fu_1882_p1;
wire   [4:0] add_ln41_14_fu_1890_p2;
wire   [13:0] add_ln41_15_fu_1899_p2;
wire   [13:0] add_ln41_16_fu_1909_p2;
wire  signed [29:0] mul_ln41_12_fu_3246_p2;
wire  signed [29:0] mul_ln41_13_fu_3252_p2;
wire   [13:0] add_ln41_17_fu_1944_p2;
wire   [13:0] add_ln41_18_fu_1953_p2;
wire  signed [29:0] mul_ln41_14_fu_3258_p2;
wire  signed [29:0] mul_ln41_15_fu_3264_p2;
wire  signed [29:0] mul_ln41_16_fu_3270_p2;
wire  signed [29:0] mul_ln41_17_fu_3276_p2;
wire   [15:0] add_ln49_14_fu_2043_p2;
wire  signed [29:0] mul_ln41_18_fu_3282_p2;
wire  signed [29:0] mul_ln41_19_fu_3288_p2;
wire  signed [29:0] mul_ln41_20_fu_3294_p2;
wire   [15:0] add_ln49_18_fu_2095_p2;
wire   [15:0] add_ln49_19_fu_2099_p2;
wire   [15:0] add_ln49_17_fu_2091_p2;
wire   [15:0] add_ln49_16_fu_2110_p2;
wire   [2:0] tmp_6_fu_2129_p4;
wire   [6:0] or_ln28_4_fu_2155_p2;
wire   [7:0] or_ln28_5_fu_2160_p3;
wire   [7:0] add_ln28_13_fu_2173_p2;
wire   [7:0] add_ln28_14_fu_2184_p2;
wire   [7:0] add_ln28_15_fu_2194_p2;
wire   [7:0] add_ln28_16_fu_2204_p2;
wire   [7:0] add_ln28_17_fu_2214_p2;
wire   [7:0] add_ln28_18_fu_2224_p2;
wire   [7:0] add_ln28_19_fu_2234_p2;
wire   [6:0] mul_ln41_11_fu_2287_p0;
wire   [3:0] mul_ln41_11_fu_2287_p1;
wire   [8:0] zext_ln41_15_fu_2284_p1;
wire   [5:0] mul_ln49_2_fu_2292_p0;
wire   [3:0] mul_ln49_2_fu_2292_p1;
wire   [8:0] tmp10_2_0_0_cast_mid_1_fu_2333_p1;
wire   [6:0] tmp10_2_0_0_cast_mid_4_fu_2346_p0;
wire   [8:0] tmp10_2_0_0_cast_mid_4_fu_2346_p1;
wire   [8:0] tmp10_2_1_0_cast_mid_fu_2356_p2;
wire   [6:0] tmp10_2_1_0_cast_mid_2_fu_2365_p0;
wire   [8:0] tmp10_2_1_0_cast_mid_2_fu_2365_p1;
wire   [13:0] add_ln41_22_fu_2373_p2;
wire   [13:0] add_ln41_24_fu_2392_p2;
wire   [8:0] tmp10_2_2_0_cast_mid_fu_2402_p2;
wire   [6:0] tmp10_2_2_0_cast_mid_2_fu_2411_p0;
wire   [8:0] tmp10_2_2_0_cast_mid_2_fu_2411_p1;
wire   [4:0] add_ln41_25_fu_2419_p2;
wire   [13:0] add_ln41_26_fu_2428_p2;
wire   [13:0] add_ln41_27_fu_2438_p2;
wire  signed [29:0] mul_ln41_22_fu_3306_p2;
wire  signed [29:0] mul_ln41_23_fu_3312_p2;
wire   [13:0] add_ln41_28_fu_2473_p2;
wire   [13:0] add_ln41_29_fu_2482_p2;
wire  signed [29:0] mul_ln41_24_fu_3318_p2;
wire  signed [29:0] mul_ln41_25_fu_3324_p2;
wire  signed [29:0] mul_ln41_26_fu_3330_p2;
wire  signed [29:0] mul_ln41_27_fu_3336_p2;
wire   [15:0] add_ln49_23_fu_2572_p2;
wire  signed [29:0] mul_ln41_28_fu_3342_p2;
wire  signed [29:0] mul_ln41_29_fu_3348_p2;
wire  signed [29:0] mul_ln41_30_fu_3354_p2;
wire   [15:0] add_ln49_27_fu_2624_p2;
wire   [15:0] add_ln49_28_fu_2628_p2;
wire   [15:0] add_ln49_26_fu_2620_p2;
wire   [15:0] add_ln49_25_fu_2639_p2;
wire   [6:0] shl_ln28_4_fu_2662_p3;
wire   [7:0] zext_ln28_32_fu_2670_p1;
wire   [7:0] zext_ln28_31_fu_2658_p1;
wire   [7:0] add_ln28_21_fu_2685_p2;
wire   [7:0] add_ln28_22_fu_2695_p2;
wire   [7:0] add_ln28_23_fu_2705_p2;
wire   [7:0] add_ln28_24_fu_2715_p2;
wire   [7:0] add_ln28_25_fu_2725_p2;
wire   [7:0] add_ln28_26_fu_2735_p2;
wire   [7:0] add_ln28_27_fu_2745_p2;
wire   [7:0] add_ln28_28_fu_2755_p2;
wire   [6:0] mul_ln41_21_fu_2772_p0;
wire   [3:0] mul_ln41_21_fu_2772_p1;
wire   [8:0] zext_ln41_28_fu_2769_p1;
wire   [5:0] mul_ln49_3_fu_2777_p0;
wire   [3:0] mul_ln49_3_fu_2777_p1;
wire   [8:0] tmp10_3_0_0_cast_mid_1_fu_2854_p1;
wire   [6:0] tmp10_3_0_0_cast_mid_4_fu_2867_p0;
wire   [8:0] tmp10_3_0_0_cast_mid_4_fu_2867_p1;
wire   [8:0] tmp10_3_1_0_cast_mid_fu_2877_p2;
wire   [6:0] tmp10_3_1_0_cast_mid_2_fu_2886_p0;
wire   [8:0] tmp10_3_1_0_cast_mid_2_fu_2886_p1;
wire   [13:0] add_ln41_33_fu_2894_p2;
wire   [13:0] add_ln41_35_fu_2913_p2;
wire   [8:0] tmp10_3_2_0_cast_mid_fu_2923_p2;
wire   [6:0] tmp10_3_2_0_cast_mid_2_fu_2932_p0;
wire   [8:0] tmp10_3_2_0_cast_mid_2_fu_2932_p1;
wire   [4:0] add_ln41_36_fu_2940_p2;
wire   [13:0] add_ln41_37_fu_2949_p2;
wire   [13:0] add_ln41_38_fu_2959_p2;
wire  signed [29:0] mul_ln41_31_fu_3366_p2;
wire  signed [29:0] mul_ln41_32_fu_3372_p2;
wire   [13:0] add_ln41_39_fu_2994_p2;
wire   [13:0] add_ln41_40_fu_3003_p2;
wire  signed [29:0] mul_ln41_33_fu_3378_p2;
wire  signed [29:0] mul_ln41_34_fu_3384_p2;
wire  signed [29:0] mul_ln41_35_fu_3390_p2;
wire  signed [29:0] mul_ln41_36_fu_3396_p2;
wire   [15:0] add_ln49_32_fu_3093_p2;
wire  signed [29:0] mul_ln41_37_fu_3402_p2;
wire  signed [29:0] mul_ln41_38_fu_3408_p2;
wire  signed [29:0] mul_ln41_39_fu_3414_p2;
wire   [15:0] add_ln49_36_fu_3145_p2;
wire   [15:0] add_ln49_37_fu_3149_p2;
wire   [15:0] add_ln49_35_fu_3141_p2;
wire   [15:0] add_ln49_34_fu_3160_p2;
wire   [5:0] grp_fu_3180_p0;
wire   [8:0] grp_fu_3180_p1;
wire   [4:0] grp_fu_3180_p2;
wire  signed [15:0] mul_ln41_2_fu_3186_p0;
wire  signed [15:0] mul_ln41_3_fu_3192_p0;
wire  signed [15:0] mul_ln41_4_fu_3198_p0;
wire  signed [15:0] mul_ln41_5_fu_3204_p0;
wire  signed [15:0] mul_ln41_6_fu_3210_p0;
wire  signed [15:0] mul_ln41_7_fu_3216_p0;
wire  signed [15:0] mul_ln41_8_fu_3222_p0;
wire  signed [15:0] mul_ln41_9_fu_3228_p0;
wire  signed [15:0] mul_ln41_10_fu_3234_p0;
wire   [5:0] grp_fu_3240_p0;
wire   [8:0] grp_fu_3240_p1;
wire   [4:0] grp_fu_3240_p2;
wire  signed [15:0] mul_ln41_12_fu_3246_p0;
wire  signed [15:0] mul_ln41_13_fu_3252_p0;
wire  signed [15:0] mul_ln41_14_fu_3258_p0;
wire  signed [15:0] mul_ln41_15_fu_3264_p0;
wire  signed [15:0] mul_ln41_16_fu_3270_p0;
wire  signed [15:0] mul_ln41_17_fu_3276_p0;
wire  signed [15:0] mul_ln41_18_fu_3282_p0;
wire  signed [15:0] mul_ln41_19_fu_3288_p0;
wire  signed [15:0] mul_ln41_20_fu_3294_p0;
wire   [5:0] grp_fu_3300_p0;
wire   [8:0] grp_fu_3300_p1;
wire   [4:0] grp_fu_3300_p2;
wire  signed [15:0] mul_ln41_22_fu_3306_p0;
wire  signed [15:0] mul_ln41_23_fu_3312_p0;
wire  signed [15:0] mul_ln41_24_fu_3318_p0;
wire  signed [15:0] mul_ln41_25_fu_3324_p0;
wire  signed [15:0] mul_ln41_26_fu_3330_p0;
wire  signed [15:0] mul_ln41_27_fu_3336_p0;
wire  signed [15:0] mul_ln41_28_fu_3342_p0;
wire  signed [15:0] mul_ln41_29_fu_3348_p0;
wire  signed [15:0] mul_ln41_30_fu_3354_p0;
wire   [5:0] grp_fu_3360_p0;
wire   [8:0] grp_fu_3360_p1;
wire   [4:0] grp_fu_3360_p2;
wire  signed [15:0] mul_ln41_31_fu_3366_p0;
wire  signed [15:0] mul_ln41_32_fu_3372_p0;
wire  signed [15:0] mul_ln41_33_fu_3378_p0;
wire  signed [15:0] mul_ln41_34_fu_3384_p0;
wire  signed [15:0] mul_ln41_35_fu_3390_p0;
wire  signed [15:0] mul_ln41_36_fu_3396_p0;
wire  signed [15:0] mul_ln41_37_fu_3402_p0;
wire  signed [15:0] mul_ln41_38_fu_3408_p0;
wire  signed [15:0] mul_ln41_39_fu_3414_p0;
reg   [45:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage3_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp3_stage2_subdone;
wire    ap_block_pp3_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [13:0] grp_fu_3180_p10;
wire   [13:0] grp_fu_3240_p10;
wire   [13:0] grp_fu_3300_p10;
wire   [13:0] grp_fu_3360_p10;
wire   [9:0] mul_ln4_fu_1045_p00;
wire   [9:0] mul_ln4_fu_1045_p10;
wire   [13:0] tmp10_0_0_0_cast_mid_4_fu_1296_p10;
wire   [13:0] tmp10_0_1_0_cast_mid_2_fu_1315_p10;
wire   [13:0] tmp10_0_2_0_cast_mid_2_fu_1361_p10;
wire   [13:0] tmp10_1_0_0_cast_mid_4_fu_1817_p10;
wire   [13:0] tmp10_1_1_0_cast_mid_2_fu_1836_p10;
wire   [13:0] tmp10_1_2_0_cast_mid_2_fu_1882_p10;
wire   [13:0] tmp10_2_0_0_cast_mid_4_fu_2346_p10;
wire   [13:0] tmp10_2_1_0_cast_mid_2_fu_2365_p10;
wire   [13:0] tmp10_2_2_0_cast_mid_2_fu_2411_p10;
wire   [13:0] tmp10_3_0_0_cast_mid_4_fu_2867_p10;
wire   [13:0] tmp10_3_1_0_cast_mid_2_fu_2886_p10;
wire   [13:0] tmp10_3_2_0_cast_mid_2_fu_2932_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 46'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
end

network_mac_muladd_6ns_9ns_5ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 14 ))
network_mac_muladd_6ns_9ns_5ns_14_1_1_U61(
    .din0(grp_fu_3180_p0),
    .din1(grp_fu_3180_p1),
    .din2(grp_fu_3180_p2),
    .dout(grp_fu_3180_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U62(
    .din0(mul_ln41_2_fu_3186_p0),
    .din1(reg_999),
    .dout(mul_ln41_2_fu_3186_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U63(
    .din0(mul_ln41_3_fu_3192_p0),
    .din1(reg_1004),
    .dout(mul_ln41_3_fu_3192_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U64(
    .din0(mul_ln41_4_fu_3198_p0),
    .din1(reg_999),
    .dout(mul_ln41_4_fu_3198_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U65(
    .din0(mul_ln41_5_fu_3204_p0),
    .din1(reg_1004),
    .dout(mul_ln41_5_fu_3204_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U66(
    .din0(mul_ln41_6_fu_3210_p0),
    .din1(reg_999),
    .dout(mul_ln41_6_fu_3210_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U67(
    .din0(mul_ln41_7_fu_3216_p0),
    .din1(reg_1004),
    .dout(mul_ln41_7_fu_3216_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U68(
    .din0(mul_ln41_8_fu_3222_p0),
    .din1(reg_999),
    .dout(mul_ln41_8_fu_3222_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U69(
    .din0(mul_ln41_9_fu_3228_p0),
    .din1(reg_1004),
    .dout(mul_ln41_9_fu_3228_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U70(
    .din0(mul_ln41_10_fu_3234_p0),
    .din1(reg_999),
    .dout(mul_ln41_10_fu_3234_p2)
);

network_mac_muladd_6ns_9ns_5ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 14 ))
network_mac_muladd_6ns_9ns_5ns_14_1_1_U71(
    .din0(grp_fu_3240_p0),
    .din1(grp_fu_3240_p1),
    .din2(grp_fu_3240_p2),
    .dout(grp_fu_3240_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U72(
    .din0(mul_ln41_12_fu_3246_p0),
    .din1(reg_999),
    .dout(mul_ln41_12_fu_3246_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U73(
    .din0(mul_ln41_13_fu_3252_p0),
    .din1(reg_1004),
    .dout(mul_ln41_13_fu_3252_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U74(
    .din0(mul_ln41_14_fu_3258_p0),
    .din1(reg_999),
    .dout(mul_ln41_14_fu_3258_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U75(
    .din0(mul_ln41_15_fu_3264_p0),
    .din1(reg_1004),
    .dout(mul_ln41_15_fu_3264_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U76(
    .din0(mul_ln41_16_fu_3270_p0),
    .din1(reg_999),
    .dout(mul_ln41_16_fu_3270_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U77(
    .din0(mul_ln41_17_fu_3276_p0),
    .din1(reg_1004),
    .dout(mul_ln41_17_fu_3276_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U78(
    .din0(mul_ln41_18_fu_3282_p0),
    .din1(reg_999),
    .dout(mul_ln41_18_fu_3282_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U79(
    .din0(mul_ln41_19_fu_3288_p0),
    .din1(reg_1004),
    .dout(mul_ln41_19_fu_3288_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U80(
    .din0(mul_ln41_20_fu_3294_p0),
    .din1(reg_999),
    .dout(mul_ln41_20_fu_3294_p2)
);

network_mac_muladd_6ns_9ns_5ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 14 ))
network_mac_muladd_6ns_9ns_5ns_14_1_1_U81(
    .din0(grp_fu_3300_p0),
    .din1(grp_fu_3300_p1),
    .din2(grp_fu_3300_p2),
    .dout(grp_fu_3300_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U82(
    .din0(mul_ln41_22_fu_3306_p0),
    .din1(reg_999),
    .dout(mul_ln41_22_fu_3306_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U83(
    .din0(mul_ln41_23_fu_3312_p0),
    .din1(reg_1004),
    .dout(mul_ln41_23_fu_3312_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U84(
    .din0(mul_ln41_24_fu_3318_p0),
    .din1(reg_999),
    .dout(mul_ln41_24_fu_3318_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U85(
    .din0(mul_ln41_25_fu_3324_p0),
    .din1(reg_1004),
    .dout(mul_ln41_25_fu_3324_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U86(
    .din0(mul_ln41_26_fu_3330_p0),
    .din1(reg_999),
    .dout(mul_ln41_26_fu_3330_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U87(
    .din0(mul_ln41_27_fu_3336_p0),
    .din1(reg_1004),
    .dout(mul_ln41_27_fu_3336_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U88(
    .din0(mul_ln41_28_fu_3342_p0),
    .din1(reg_999),
    .dout(mul_ln41_28_fu_3342_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U89(
    .din0(mul_ln41_29_fu_3348_p0),
    .din1(reg_1004),
    .dout(mul_ln41_29_fu_3348_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U90(
    .din0(mul_ln41_30_fu_3354_p0),
    .din1(reg_999),
    .dout(mul_ln41_30_fu_3354_p2)
);

network_mac_muladd_6ns_9ns_5ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 14 ))
network_mac_muladd_6ns_9ns_5ns_14_1_1_U91(
    .din0(grp_fu_3360_p0),
    .din1(grp_fu_3360_p1),
    .din2(grp_fu_3360_p2),
    .dout(grp_fu_3360_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U92(
    .din0(mul_ln41_31_fu_3366_p0),
    .din1(reg_999),
    .dout(mul_ln41_31_fu_3366_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U93(
    .din0(mul_ln41_32_fu_3372_p0),
    .din1(reg_1004),
    .dout(mul_ln41_32_fu_3372_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U94(
    .din0(mul_ln41_33_fu_3378_p0),
    .din1(reg_999),
    .dout(mul_ln41_33_fu_3378_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U95(
    .din0(mul_ln41_34_fu_3384_p0),
    .din1(reg_1004),
    .dout(mul_ln41_34_fu_3384_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U96(
    .din0(mul_ln41_35_fu_3390_p0),
    .din1(reg_999),
    .dout(mul_ln41_35_fu_3390_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U97(
    .din0(mul_ln41_36_fu_3396_p0),
    .din1(reg_1004),
    .dout(mul_ln41_36_fu_3396_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U98(
    .din0(mul_ln41_37_fu_3402_p0),
    .din1(reg_999),
    .dout(mul_ln41_37_fu_3402_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U99(
    .din0(mul_ln41_38_fu_3408_p0),
    .din1(reg_1004),
    .dout(mul_ln41_38_fu_3408_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U100(
    .din0(mul_ln41_39_fu_3414_p0),
    .din1(reg_999),
    .dout(mul_ln41_39_fu_3414_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state25) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_subdone))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_subdone)))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state42) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_subdone))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_subdone)))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state59) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone)))) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten34_reg_858 <= add_ln33_3_reg_3946;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        indvar_flatten34_reg_858 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten53_reg_892 <= add_ln33_5_reg_4285;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        indvar_flatten53_reg_892 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten72_reg_926 <= add_ln33_7_reg_4620;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        indvar_flatten72_reg_926 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3607 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_824 <= add_ln33_1_reg_3611;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_824 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        out_d_0_0_reg_812 <= add_ln23_fu_3174_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_d_0_0_reg_812 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3607 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_h_0_0_reg_835 <= tmp10_0_0_0_cast_mid_reg_3633;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_h_0_0_reg_835 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_h_0_1_reg_869 <= tmp10_1_0_0_cast_mid_reg_3968;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        out_h_0_1_reg_869 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        out_h_0_2_reg_903 <= tmp10_2_0_0_cast_mid_reg_4307;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        out_h_0_2_reg_903 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        out_h_0_3_reg_937 <= tmp10_3_0_0_cast_mid_reg_4642;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        out_h_0_3_reg_937 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3607 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_w_0_0_reg_847 <= add_ln41_1_reg_3675;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_w_0_0_reg_847 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_w_0_1_reg_881 <= add_ln41_12_reg_4010;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        out_w_0_1_reg_881 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        out_w_0_2_reg_915 <= add_ln41_23_reg_4349;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        out_w_0_2_reg_915 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        out_w_0_3_reg_949 <= add_ln41_34_reg_4684;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        out_w_0_3_reg_949 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage4_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_2_reg_4281_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3607_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_1004 <= input_r_q1;
    end else if ((((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_3_reg_4616_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_1_reg_3942_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3607 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln33_reg_3607 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln33_reg_3607 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_1004 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_960 <= kernel_q1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_960 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        reg_965 <= kernel_q1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_965 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        reg_970 <= kernel_q0;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_970 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_975 <= kernel_q0;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_975 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_980 <= kernel_q1;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_980 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_985 <= kernel_q0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_985 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_990 <= kernel_q1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_990 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage4_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_2_reg_4281_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_2_reg_4281_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln33_reg_3607_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3607_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_999 <= input_r_q0;
    end else if ((((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_3_reg_4616_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_3_reg_4616_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_1_reg_3942_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_1_reg_3942_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3607 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln33_reg_3607 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln33_reg_3607 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_999 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        add_ln28_20_reg_4499[7 : 2] <= add_ln28_20_fu_2674_p2[7 : 2];
        or_ln23_2_reg_4493[3 : 2] <= or_ln23_2_fu_2653_p2[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln28_5_reg_3825[7 : 1] <= add_ln28_5_fu_1624_p2[7 : 1];
        or_ln23_reg_3819[3 : 1] <= or_ln23_fu_1603_p2[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln33_1_reg_3611 <= add_ln33_1_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_1_fu_1768_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln33_2_reg_3951 <= add_ln33_2_fu_1779_p2;
        icmp_ln34_1_reg_3956 <= icmp_ln34_1_fu_1785_p2;
        out_w_0_1_mid2_reg_3961 <= out_w_0_1_mid2_fu_1790_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln33_3_reg_3946 <= add_ln33_3_fu_1773_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_2_fu_2297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln33_4_reg_4290 <= add_ln33_4_fu_2308_p2;
        icmp_ln34_2_reg_4295 <= icmp_ln34_2_fu_2314_p2;
        out_w_0_2_mid2_reg_4300 <= out_w_0_2_mid2_fu_2319_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln33_5_reg_4285 <= add_ln33_5_fu_2302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_3_fu_2818_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln33_6_reg_4625 <= add_ln33_6_fu_2829_p2;
        icmp_ln34_3_reg_4630 <= icmp_ln34_3_fu_2835_p2;
        out_w_0_3_mid2_reg_4635 <= out_w_0_3_mid2_fu_2840_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln33_7_reg_4620 <= add_ln33_7_fu_2823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_fu_1247_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln33_reg_3616 <= add_ln33_fu_1258_p2;
        icmp_ln34_reg_3621 <= icmp_ln34_fu_1264_p2;
        out_w_0_0_mid2_reg_3626 <= out_w_0_0_mid2_fu_1269_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln33_reg_3607 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln41_10_reg_3749 <= add_ln41_10_fu_1449_p2;
        add_ln41_8_reg_3739 <= add_ln41_8_fu_1441_p2;
        add_ln41_9_reg_3744 <= add_ln41_9_fu_1445_p2;
        trunc_ln49_s_reg_3724 <= {{mul_ln41_3_fu_3192_p2[29:14]}};
        trunc_ln_reg_3719 <= {{mul_ln41_2_fu_3186_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln41_12_reg_4010 <= add_ln41_12_fu_1854_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
        add_ln41_19_reg_4074 <= add_ln41_19_fu_1962_p2;
        add_ln41_20_reg_4079 <= add_ln41_20_fu_1966_p2;
        add_ln41_21_reg_4084 <= add_ln41_21_fu_1970_p2;
        trunc_ln49_8_reg_4054 <= {{mul_ln41_12_fu_3246_p2[29:14]}};
        trunc_ln49_9_reg_4059 <= {{mul_ln41_13_fu_3252_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln33_reg_3607 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln41_1_reg_3675 <= add_ln41_1_fu_1333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln41_23_reg_4349 <= add_ln41_23_fu_2383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        add_ln41_30_reg_4413 <= add_ln41_30_fu_2491_p2;
        add_ln41_31_reg_4418 <= add_ln41_31_fu_2495_p2;
        add_ln41_32_reg_4423 <= add_ln41_32_fu_2499_p2;
        trunc_ln49_17_reg_4393 <= {{mul_ln41_22_fu_3306_p2[29:14]}};
        trunc_ln49_18_reg_4398 <= {{mul_ln41_23_fu_3312_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln41_34_reg_4684 <= add_ln41_34_fu_2904_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage4_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4))) begin
        add_ln41_41_reg_4748 <= add_ln41_41_fu_3012_p2;
        add_ln41_42_reg_4753 <= add_ln41_42_fu_3016_p2;
        add_ln41_43_reg_4758 <= add_ln41_43_fu_3020_p2;
        trunc_ln49_26_reg_4728 <= {{mul_ln41_31_fu_3366_p2[29:14]}};
        trunc_ln49_27_reg_4733 <= {{mul_ln41_32_fu_3372_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln33_reg_3607_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln49_10_reg_3814 <= add_ln49_10_fu_1583_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_reg_3607 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln49_12_reg_3714 <= grp_fu_3180_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln49_12_reg_3714_pp0_iter1_reg <= add_ln49_12_reg_3714;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln49_13_reg_4109 <= add_ln49_13_fu_2008_p2;
        trunc_ln49_10_reg_4089 <= {{mul_ln41_14_fu_3258_p2[29:14]}};
        trunc_ln49_11_reg_4094 <= {{mul_ln41_15_fu_3264_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_1_reg_3942_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        add_ln49_15_reg_4129 <= add_ln49_15_fu_2047_p2;
        trunc_ln49_12_reg_4114 <= {{mul_ln41_16_fu_3270_p2[29:14]}};
        trunc_ln49_13_reg_4119 <= {{mul_ln41_17_fu_3276_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        add_ln49_1_reg_4049 <= grp_fu_3240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        add_ln49_1_reg_4049_pp1_iter1_reg <= add_ln49_1_reg_4049;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (icmp_ln33_1_reg_3942_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
        add_ln49_20_reg_4149 <= add_ln49_20_fu_2104_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln49_22_reg_4448 <= add_ln49_22_fu_2537_p2;
        trunc_ln49_19_reg_4428 <= {{mul_ln41_24_fu_3318_p2[29:14]}};
        trunc_ln49_20_reg_4433 <= {{mul_ln41_25_fu_3324_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_2_reg_4281_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        add_ln49_24_reg_4468 <= add_ln49_24_fu_2576_p2;
        trunc_ln49_21_reg_4453 <= {{mul_ln41_26_fu_3330_p2[29:14]}};
        trunc_ln49_22_reg_4458 <= {{mul_ln41_27_fu_3336_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln33_2_reg_4281_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        add_ln49_29_reg_4488 <= add_ln49_29_fu_2633_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        add_ln49_2_reg_4388 <= grp_fu_3300_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        add_ln49_2_reg_4388_pp2_iter1_reg <= add_ln49_2_reg_4388;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln49_31_reg_4783 <= add_ln49_31_fu_3058_p2;
        trunc_ln49_28_reg_4763 <= {{mul_ln41_33_fu_3378_p2[29:14]}};
        trunc_ln49_29_reg_4768 <= {{mul_ln41_34_fu_3384_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_3_reg_4616_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        add_ln49_33_reg_4803 <= add_ln49_33_fu_3097_p2;
        trunc_ln49_30_reg_4788 <= {{mul_ln41_35_fu_3390_p2[29:14]}};
        trunc_ln49_31_reg_4793 <= {{mul_ln41_36_fu_3396_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage4_11001) & (icmp_ln33_3_reg_4616_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4))) begin
        add_ln49_38_reg_4823 <= add_ln49_38_fu_3154_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3))) begin
        add_ln49_3_reg_4723 <= grp_fu_3360_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage3_11001) & (1'b1 == ap_CS_fsm_pp3_stage3))) begin
        add_ln49_3_reg_4723_pp3_iter1_reg <= add_ln49_3_reg_4723;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3607_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln49_5_reg_3794 <= add_ln49_5_fu_1526_p2;
        trunc_ln49_3_reg_3779 <= {{mul_ln41_6_fu_3210_p2[29:14]}};
        trunc_ln49_4_reg_3784 <= {{mul_ln41_7_fu_3216_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3607 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_reg_3774 <= add_ln49_fu_1487_p2;
        trunc_ln49_1_reg_3754 <= {{mul_ln41_4_fu_3198_p2[29:14]}};
        trunc_ln49_2_reg_3759 <= {{mul_ln41_5_fu_3204_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_59_reg_3444[6 : 0] <= empty_59_fu_1029_p1[6 : 0];
        empty_60_reg_3460[5 : 0] <= empty_60_fu_1033_p1[5 : 0];
        empty_reg_3420 <= empty_fu_1013_p1;
        mul_ln4_reg_3468 <= mul_ln4_fu_1045_p2;
        zext_ln41_reg_3428[6 : 0] <= zext_ln41_fu_1021_p1[6 : 0];
        zext_ln49_reg_3436[5 : 0] <= zext_ln49_fu_1025_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln33_1_reg_3942 <= icmp_ln33_1_fu_1768_p2;
        icmp_ln33_1_reg_3942_pp1_iter1_reg <= icmp_ln33_1_reg_3942;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln33_2_reg_4281 <= icmp_ln33_2_fu_2297_p2;
        icmp_ln33_2_reg_4281_pp2_iter1_reg <= icmp_ln33_2_reg_4281;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln33_3_reg_4616 <= icmp_ln33_3_fu_2818_p2;
        icmp_ln33_3_reg_4616_pp3_iter1_reg <= icmp_ln33_3_reg_4616;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln33_reg_3607 <= icmp_ln33_fu_1247_p2;
        icmp_ln33_reg_3607_pp0_iter1_reg <= icmp_ln33_reg_3607;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        mul_ln41_11_reg_4271 <= mul_ln41_11_fu_2287_p2;
        mul_ln49_2_reg_4276 <= mul_ln49_2_fu_2292_p2;
        sext_ln28_16_reg_4226 <= sext_ln28_16_fu_2248_p1;
        sext_ln28_17_reg_4231 <= sext_ln28_17_fu_2252_p1;
        sext_ln28_18_reg_4236 <= sext_ln28_18_fu_2256_p1;
        sext_ln28_19_reg_4241 <= sext_ln28_19_fu_2260_p1;
        sext_ln28_20_reg_4246 <= sext_ln28_20_fu_2264_p1;
        sext_ln28_21_reg_4251 <= sext_ln28_21_fu_2268_p1;
        sext_ln28_22_reg_4256 <= sext_ln28_22_fu_2272_p1;
        sext_ln28_23_reg_4261 <= sext_ln28_23_fu_2276_p1;
        sext_ln31_2_reg_4266 <= sext_ln31_2_fu_2280_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        mul_ln41_1_reg_3932 <= mul_ln41_1_fu_1758_p2;
        mul_ln49_1_reg_3937 <= mul_ln49_1_fu_1763_p2;
        sext_ln28_10_reg_3897 <= sext_ln28_10_fu_1727_p1;
        sext_ln28_11_reg_3902 <= sext_ln28_11_fu_1731_p1;
        sext_ln28_12_reg_3907 <= sext_ln28_12_fu_1735_p1;
        sext_ln28_13_reg_3912 <= sext_ln28_13_fu_1739_p1;
        sext_ln28_14_reg_3917 <= sext_ln28_14_fu_1743_p1;
        sext_ln28_15_reg_3922 <= sext_ln28_15_fu_1747_p1;
        sext_ln28_8_reg_3887 <= sext_ln28_8_fu_1719_p1;
        sext_ln28_9_reg_3892 <= sext_ln28_9_fu_1723_p1;
        sext_ln31_1_reg_3927 <= sext_ln31_1_fu_1751_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        mul_ln41_21_reg_4561 <= mul_ln41_21_fu_2772_p2;
        mul_ln49_3_reg_4566 <= mul_ln49_3_fu_2777_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mul_ln41_reg_3597 <= mul_ln41_fu_1237_p2;
        mul_ln49_reg_3602 <= mul_ln49_fu_1242_p2;
        sext_ln28_1_reg_3557 <= sext_ln28_1_fu_1201_p1;
        sext_ln28_2_reg_3562 <= sext_ln28_2_fu_1205_p1;
        sext_ln28_3_reg_3567 <= sext_ln28_3_fu_1209_p1;
        sext_ln28_4_reg_3572 <= sext_ln28_4_fu_1213_p1;
        sext_ln28_5_reg_3577 <= sext_ln28_5_fu_1217_p1;
        sext_ln28_6_reg_3582 <= sext_ln28_6_fu_1221_p1;
        sext_ln28_7_reg_3587 <= sext_ln28_7_fu_1225_p1;
        sext_ln28_reg_3552 <= sext_ln28_fu_1197_p1;
        sext_ln31_reg_3592 <= sext_ln31_fu_1229_p1;
        trunc_ln23_reg_3545 <= trunc_ln23_fu_1193_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        or_ln23_1_reg_4154[0] <= or_ln23_1_fu_2124_p2[0];
or_ln23_1_reg_4154[3 : 2] <= or_ln23_1_fu_2124_p2[3 : 2];
        tmp_7_reg_4160[0] <= tmp_7_fu_2139_p3[0];
tmp_7_reg_4160[3 : 2] <= tmp_7_fu_2139_p3[3 : 2];
tmp_7_reg_4160[6 : 5] <= tmp_7_fu_2139_p3[6 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_995 <= bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        sext_ln28_24_reg_4571 <= sext_ln28_24_fu_2782_p1;
        sext_ln28_25_reg_4576 <= sext_ln28_25_fu_2786_p1;
        sext_ln28_26_reg_4581 <= sext_ln28_26_fu_2790_p1;
        sext_ln28_27_reg_4586 <= sext_ln28_27_fu_2794_p1;
        sext_ln28_28_reg_4591 <= sext_ln28_28_fu_2798_p1;
        sext_ln28_29_reg_4596 <= sext_ln28_29_fu_2802_p1;
        sext_ln28_30_reg_4601 <= sext_ln28_30_fu_2806_p1;
        sext_ln28_31_reg_4606 <= sext_ln28_31_fu_2810_p1;
        sext_ln31_3_reg_4611 <= sext_ln31_3_fu_2814_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3607 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp10_0_0_0_cast_mid_2_reg_3638 <= tmp10_0_0_0_cast_mid_2_fu_1287_p2;
        tmp10_0_0_0_cast_mid_4_reg_3644 <= tmp10_0_0_0_cast_mid_4_fu_1296_p2;
        tmp12_0_cast_mid2_v_s_reg_3651 <= tmp12_0_cast_mid2_v_s_fu_1301_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3607 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp10_0_0_0_cast_mid_reg_3633 <= tmp10_0_0_0_cast_mid_fu_1277_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln33_reg_3607 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp10_0_1_0_cast_mid_2_reg_3656 <= tmp10_0_1_0_cast_mid_2_fu_1315_p2;
        zext_ln41_3_reg_3663[4 : 0] <= zext_ln41_3_fu_1320_p1[4 : 0];
        zext_ln41_5_reg_3680[4 : 0] <= zext_ln41_5_fu_1338_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_reg_3607 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp10_0_2_0_cast_mid_2_reg_3691 <= tmp10_0_2_0_cast_mid_2_fu_1361_p2;
        zext_ln41_7_reg_3698[4 : 0] <= zext_ln41_7_fu_1374_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        tmp10_1_0_0_cast_mid_2_reg_3973 <= tmp10_1_0_0_cast_mid_2_fu_1808_p2;
        tmp10_1_0_0_cast_mid_4_reg_3979 <= tmp10_1_0_0_cast_mid_4_fu_1817_p2;
        tmp12_1_cast_mid2_v_s_reg_3986 <= tmp12_1_cast_mid2_v_s_fu_1822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        tmp10_1_0_0_cast_mid_reg_3968 <= tmp10_1_0_0_cast_mid_fu_1798_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        tmp10_1_1_0_cast_mid_2_reg_3991 <= tmp10_1_1_0_cast_mid_2_fu_1836_p2;
        zext_ln41_16_reg_3998[4 : 0] <= zext_ln41_16_fu_1841_p1[4 : 0];
        zext_ln41_18_reg_4015[4 : 0] <= zext_ln41_18_fu_1859_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_1_reg_3942 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        tmp10_1_2_0_cast_mid_2_reg_4026 <= tmp10_1_2_0_cast_mid_2_fu_1882_p2;
        zext_ln41_20_reg_4033[4 : 0] <= zext_ln41_20_fu_1895_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp10_2_0_0_cast_mid_2_reg_4312 <= tmp10_2_0_0_cast_mid_2_fu_2337_p2;
        tmp10_2_0_0_cast_mid_4_reg_4318 <= tmp10_2_0_0_cast_mid_4_fu_2346_p2;
        tmp12_2_cast_mid2_v_s_reg_4325 <= tmp12_2_cast_mid2_v_s_fu_2351_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        tmp10_2_0_0_cast_mid_reg_4307 <= tmp10_2_0_0_cast_mid_fu_2327_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        tmp10_2_1_0_cast_mid_2_reg_4330 <= tmp10_2_1_0_cast_mid_2_fu_2365_p2;
        zext_ln41_29_reg_4337[4 : 0] <= zext_ln41_29_fu_2370_p1[4 : 0];
        zext_ln41_31_reg_4354[4 : 0] <= zext_ln41_31_fu_2388_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_2_reg_4281 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        tmp10_2_2_0_cast_mid_2_reg_4365 <= tmp10_2_2_0_cast_mid_2_fu_2411_p2;
        zext_ln41_33_reg_4372[4 : 0] <= zext_ln41_33_fu_2424_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        tmp10_3_0_0_cast_mid_2_reg_4647 <= tmp10_3_0_0_cast_mid_2_fu_2858_p2;
        tmp10_3_0_0_cast_mid_4_reg_4653 <= tmp10_3_0_0_cast_mid_4_fu_2867_p2;
        tmp12_3_cast_mid2_v_s_reg_4660 <= tmp12_3_cast_mid2_v_s_fu_2872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        tmp10_3_0_0_cast_mid_reg_4642 <= tmp10_3_0_0_cast_mid_fu_2848_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        tmp10_3_1_0_cast_mid_2_reg_4665 <= tmp10_3_1_0_cast_mid_2_fu_2886_p2;
        zext_ln41_41_reg_4672[4 : 0] <= zext_ln41_41_fu_2891_p1[4 : 0];
        zext_ln41_43_reg_4689[4 : 0] <= zext_ln41_43_fu_2909_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_3_reg_4616 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3))) begin
        tmp10_3_2_0_cast_mid_2_reg_4700 <= tmp10_3_2_0_cast_mid_2_fu_2932_p2;
        zext_ln41_45_reg_4707[4 : 0] <= zext_ln41_45_fu_2945_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_1051_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_5_reg_3479 <= tmp_5_fu_1067_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_1_reg_3942_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        trunc_ln49_14_reg_4134 <= {{mul_ln41_18_fu_3282_p2[29:14]}};
        trunc_ln49_15_reg_4139 <= {{mul_ln41_19_fu_3288_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_1_reg_3942_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        trunc_ln49_16_reg_4144 <= {{mul_ln41_20_fu_3294_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_2_reg_4281_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        trunc_ln49_23_reg_4473 <= {{mul_ln41_28_fu_3342_p2[29:14]}};
        trunc_ln49_24_reg_4478 <= {{mul_ln41_29_fu_3348_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_2_reg_4281_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        trunc_ln49_25_reg_4483 <= {{mul_ln41_30_fu_3354_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_3_reg_4616_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        trunc_ln49_32_reg_4808 <= {{mul_ln41_37_fu_3402_p2[29:14]}};
        trunc_ln49_33_reg_4813 <= {{mul_ln41_38_fu_3408_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_3_reg_4616_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3))) begin
        trunc_ln49_34_reg_4818 <= {{mul_ln41_39_fu_3414_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln33_reg_3607_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln49_5_reg_3799 <= {{mul_ln41_8_fu_3222_p2[29:14]}};
        trunc_ln49_6_reg_3804 <= {{mul_ln41_9_fu_3228_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_reg_3607_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        trunc_ln49_7_reg_3809 <= {{mul_ln41_10_fu_3234_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        zext_ln28_21_reg_4171[0] <= zext_ln28_21_fu_2152_p1[0];
zext_ln28_21_reg_4171[3 : 2] <= zext_ln28_21_fu_2152_p1[3 : 2];
zext_ln28_21_reg_4171[6 : 5] <= zext_ln28_21_fu_2152_p1[6 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        zext_ln28_reg_3502[6 : 0] <= zext_ln28_fu_1116_p1[6 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln33_fu_1247_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln33_1_fu_1768_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln33_2_fu_2297_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state42 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state42 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln33_3_fu_2818_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state59 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state59 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln23_fu_1051_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten34_phi_fu_862_p4 = add_ln33_3_reg_3946;
    end else begin
        ap_phi_mux_indvar_flatten34_phi_fu_862_p4 = indvar_flatten34_reg_858;
    end
end

always @ (*) begin
    if (((icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_indvar_flatten53_phi_fu_896_p4 = add_ln33_5_reg_4285;
    end else begin
        ap_phi_mux_indvar_flatten53_phi_fu_896_p4 = indvar_flatten53_reg_892;
    end
end

always @ (*) begin
    if (((icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_indvar_flatten72_phi_fu_930_p4 = add_ln33_7_reg_4620;
    end else begin
        ap_phi_mux_indvar_flatten72_phi_fu_930_p4 = indvar_flatten72_reg_926;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_3607 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_828_p4 = add_ln33_1_reg_3611;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_828_p4 = indvar_flatten_reg_824;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_3607 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_out_h_0_0_phi_fu_839_p4 = tmp10_0_0_0_cast_mid_reg_3633;
    end else begin
        ap_phi_mux_out_h_0_0_phi_fu_839_p4 = out_h_0_0_reg_835;
    end
end

always @ (*) begin
    if (((icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_out_h_0_1_phi_fu_873_p4 = tmp10_1_0_0_cast_mid_reg_3968;
    end else begin
        ap_phi_mux_out_h_0_1_phi_fu_873_p4 = out_h_0_1_reg_869;
    end
end

always @ (*) begin
    if (((icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_out_h_0_2_phi_fu_907_p4 = tmp10_2_0_0_cast_mid_reg_4307;
    end else begin
        ap_phi_mux_out_h_0_2_phi_fu_907_p4 = out_h_0_2_reg_903;
    end
end

always @ (*) begin
    if (((icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_out_h_0_3_phi_fu_941_p4 = tmp10_3_0_0_cast_mid_reg_4642;
    end else begin
        ap_phi_mux_out_h_0_3_phi_fu_941_p4 = out_h_0_3_reg_937;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_3607 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_out_w_0_0_phi_fu_851_p4 = add_ln41_1_reg_3675;
    end else begin
        ap_phi_mux_out_w_0_0_phi_fu_851_p4 = out_w_0_0_reg_847;
    end
end

always @ (*) begin
    if (((icmp_ln33_1_reg_3942 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_out_w_0_1_phi_fu_885_p4 = add_ln41_12_reg_4010;
    end else begin
        ap_phi_mux_out_w_0_1_phi_fu_885_p4 = out_w_0_1_reg_881;
    end
end

always @ (*) begin
    if (((icmp_ln33_2_reg_4281 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_out_w_0_2_phi_fu_919_p4 = add_ln41_23_reg_4349;
    end else begin
        ap_phi_mux_out_w_0_2_phi_fu_919_p4 = out_w_0_2_reg_915;
    end
end

always @ (*) begin
    if (((icmp_ln33_3_reg_4616 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_out_w_0_3_phi_fu_953_p4 = add_ln41_34_reg_4684;
    end else begin
        ap_phi_mux_out_w_0_3_phi_fu_953_p4 = out_w_0_3_reg_949;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_1051_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        bias_address0 = zext_ln31_3_fu_2765_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        bias_address0 = zext_ln31_2_fu_2244_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        bias_address0 = zext_ln31_1_fu_1715_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bias_address0 = zext_ln31_fu_1188_p1;
    end else begin
        bias_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state6))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        input_r_address0 = zext_ln41_51_fu_3054_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage4))) begin
        input_r_address0 = zext_ln41_48_fu_2998_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3))) begin
        input_r_address0 = zext_ln41_46_fu_2954_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2))) begin
        input_r_address0 = zext_ln41_42_fu_2899_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage1))) begin
        input_r_address0 = zext_ln41_40_fu_2568_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        input_r_address0 = zext_ln41_38_fu_2529_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4))) begin
        input_r_address0 = zext_ln41_37_fu_2486_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
        input_r_address0 = zext_ln41_35_fu_2442_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        input_r_address0 = zext_ln41_32_fu_2397_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        input_r_address0 = zext_ln41_26_fu_2004_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4))) begin
        input_r_address0 = zext_ln41_23_fu_1948_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3))) begin
        input_r_address0 = zext_ln41_21_fu_1904_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2))) begin
        input_r_address0 = zext_ln41_17_fu_1849_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        input_r_address0 = zext_ln41_14_fu_1518_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        input_r_address0 = zext_ln41_12_fu_1479_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        input_r_address0 = zext_ln41_11_fu_1436_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        input_r_address0 = zext_ln41_9_fu_1392_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        input_r_address0 = zext_ln41_6_fu_1347_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        input_r_address1 = zext_ln41_52_fu_3089_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        input_r_address1 = zext_ln41_50_fu_3050_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage4))) begin
        input_r_address1 = zext_ln41_49_fu_3007_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3))) begin
        input_r_address1 = zext_ln41_47_fu_2963_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage2))) begin
        input_r_address1 = zext_ln41_44_fu_2918_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        input_r_address1 = zext_ln41_39_fu_2533_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4))) begin
        input_r_address1 = zext_ln41_36_fu_2477_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3))) begin
        input_r_address1 = zext_ln41_34_fu_2433_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage2))) begin
        input_r_address1 = zext_ln41_30_fu_2378_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        input_r_address1 = zext_ln41_27_fu_2039_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        input_r_address1 = zext_ln41_25_fu_2000_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4))) begin
        input_r_address1 = zext_ln41_24_fu_1957_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3))) begin
        input_r_address1 = zext_ln41_22_fu_1913_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2))) begin
        input_r_address1 = zext_ln41_19_fu_1868_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        input_r_address1 = zext_ln41_13_fu_1483_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        input_r_address1 = zext_ln41_10_fu_1427_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        input_r_address1 = zext_ln41_8_fu_1383_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        input_r_address1 = zext_ln41_4_fu_1328_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage4_11001) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage4_11001) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage3)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        kernel_address0 = zext_ln28_40_fu_2750_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        kernel_address0 = zext_ln28_38_fu_2730_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        kernel_address0 = zext_ln28_36_fu_2710_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        kernel_address0 = zext_ln28_34_fu_2690_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        kernel_address0 = zext_ln28_30_fu_2239_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        kernel_address0 = zext_ln28_28_fu_2219_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        kernel_address0 = zext_ln28_26_fu_2199_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        kernel_address0 = zext_ln28_24_fu_2179_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        kernel_address0 = zext_ln28_22_fu_2147_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        kernel_address0 = zext_ln28_19_fu_1700_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        kernel_address0 = zext_ln28_17_fu_1680_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        kernel_address0 = zext_ln28_15_fu_1660_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_address0 = zext_ln28_13_fu_1640_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_address0 = zext_ln28_9_fu_1183_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        kernel_address0 = zext_ln28_7_fu_1163_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_address0 = zext_ln28_5_fu_1143_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_address0 = zext_ln28_2_fu_1093_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_address0 = zext_ln28_1_fu_1075_p1;
    end else begin
        kernel_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        kernel_address1 = zext_ln28_41_fu_2760_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        kernel_address1 = zext_ln28_39_fu_2740_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        kernel_address1 = zext_ln28_37_fu_2720_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        kernel_address1 = zext_ln28_35_fu_2700_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        kernel_address1 = zext_ln28_33_fu_2680_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        kernel_address1 = zext_ln28_29_fu_2229_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        kernel_address1 = zext_ln28_27_fu_2209_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        kernel_address1 = zext_ln28_25_fu_2189_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        kernel_address1 = zext_ln28_23_fu_2168_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        kernel_address1 = zext_ln28_20_fu_1710_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        kernel_address1 = zext_ln28_18_fu_1690_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        kernel_address1 = zext_ln28_16_fu_1670_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_address1 = zext_ln28_14_fu_1650_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        kernel_address1 = zext_ln28_12_fu_1630_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_address1 = zext_ln28_8_fu_1173_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        kernel_address1 = zext_ln28_6_fu_1153_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_address1 = zext_ln28_4_fu_1132_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_address1 = zext_ln28_3_fu_1111_p1;
    end else begin
        kernel_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state3))) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state53))) begin
        kernel_ce1 = 1'b1;
    end else begin
        kernel_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_r_address0 = zext_ln49_4_fu_3170_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        output_r_address0 = zext_ln49_3_fu_2649_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_r_address0 = zext_ln49_2_fu_2120_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_r_address0 = zext_ln49_1_fu_1599_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        output_r_d0 = add_ln49_39_fu_3164_p2;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        output_r_d0 = add_ln49_30_fu_2643_p2;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        output_r_d0 = add_ln49_21_fu_2114_p2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        output_r_d0 = add_ln49_11_fu_1593_p2;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_3_reg_4616_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_2_reg_4281_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_1_reg_3942_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3607_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_1051_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln33_fu_1247_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln33_fu_1247_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln33_1_fu_1768_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((icmp_ln33_1_fu_1768_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln33_2_fu_2297_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((icmp_ln33_2_fu_2297_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((1'b0 == ap_block_pp2_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln33_3_fu_2818_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln33_3_fu_2818_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_pp3_stage4 : begin
            if ((1'b0 == ap_block_pp3_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_fu_3174_p2 = (out_d_0_0_reg_812 + 5'd4);

assign add_ln28_10_fu_1685_p2 = (add_ln28_5_reg_3825 + 8'd6);

assign add_ln28_11_fu_1695_p2 = (add_ln28_5_reg_3825 + 8'd7);

assign add_ln28_12_fu_1705_p2 = (add_ln28_5_reg_3825 + 8'd8);

assign add_ln28_13_fu_2173_p2 = (zext_ln28_21_fu_2152_p1 + 8'd2);

assign add_ln28_14_fu_2184_p2 = (zext_ln28_21_reg_4171 + 8'd3);

assign add_ln28_15_fu_2194_p2 = (zext_ln28_21_reg_4171 + 8'd4);

assign add_ln28_16_fu_2204_p2 = (zext_ln28_21_reg_4171 + 8'd5);

assign add_ln28_17_fu_2214_p2 = (zext_ln28_21_reg_4171 + 8'd6);

assign add_ln28_18_fu_2224_p2 = (zext_ln28_21_reg_4171 + 8'd7);

assign add_ln28_19_fu_2234_p2 = (zext_ln28_21_reg_4171 + 8'd8);

assign add_ln28_1_fu_1148_p2 = (8'd5 + zext_ln28_reg_3502);

assign add_ln28_20_fu_2674_p2 = (zext_ln28_32_fu_2670_p1 + zext_ln28_31_fu_2658_p1);

assign add_ln28_21_fu_2685_p2 = (add_ln28_20_reg_4499 + 8'd1);

assign add_ln28_22_fu_2695_p2 = (add_ln28_20_reg_4499 + 8'd2);

assign add_ln28_23_fu_2705_p2 = (add_ln28_20_reg_4499 + 8'd3);

assign add_ln28_24_fu_2715_p2 = (add_ln28_20_reg_4499 + 8'd4);

assign add_ln28_25_fu_2725_p2 = (add_ln28_20_reg_4499 + 8'd5);

assign add_ln28_26_fu_2735_p2 = (add_ln28_20_reg_4499 + 8'd6);

assign add_ln28_27_fu_2745_p2 = (add_ln28_20_reg_4499 + 8'd7);

assign add_ln28_28_fu_2755_p2 = (add_ln28_20_reg_4499 + 8'd8);

assign add_ln28_2_fu_1158_p2 = (8'd6 + zext_ln28_reg_3502);

assign add_ln28_3_fu_1168_p2 = (8'd7 + zext_ln28_reg_3502);

assign add_ln28_4_fu_1178_p2 = (8'd8 + zext_ln28_reg_3502);

assign add_ln28_5_fu_1624_p2 = (zext_ln28_11_fu_1620_p1 + zext_ln28_10_fu_1608_p1);

assign add_ln28_6_fu_1635_p2 = (add_ln28_5_reg_3825 + 8'd1);

assign add_ln28_7_fu_1655_p2 = (add_ln28_5_reg_3825 + 8'd3);

assign add_ln28_8_fu_1665_p2 = (add_ln28_5_reg_3825 + 8'd4);

assign add_ln28_9_fu_1675_p2 = (add_ln28_5_reg_3825 + 8'd5);

assign add_ln28_fu_1137_p2 = (8'd4 + zext_ln28_fu_1116_p1);

assign add_ln33_1_fu_1252_p2 = (ap_phi_mux_indvar_flatten_phi_fu_828_p4 + 10'd1);

assign add_ln33_2_fu_1779_p2 = (ap_phi_mux_out_h_0_1_phi_fu_873_p4 + 5'd1);

assign add_ln33_3_fu_1773_p2 = (ap_phi_mux_indvar_flatten34_phi_fu_862_p4 + 10'd1);

assign add_ln33_4_fu_2308_p2 = (ap_phi_mux_out_h_0_2_phi_fu_907_p4 + 5'd1);

assign add_ln33_5_fu_2302_p2 = (ap_phi_mux_indvar_flatten53_phi_fu_896_p4 + 10'd1);

assign add_ln33_6_fu_2829_p2 = (ap_phi_mux_out_h_0_3_phi_fu_941_p4 + 5'd1);

assign add_ln33_7_fu_2823_p2 = (ap_phi_mux_indvar_flatten72_phi_fu_930_p4 + 10'd1);

assign add_ln33_fu_1258_p2 = (ap_phi_mux_out_h_0_0_phi_fu_839_p4 + 5'd1);

assign add_ln41_10_fu_1449_p2 = (zext_ln41_7_reg_3698 + tmp10_0_2_0_cast_mid_2_reg_3691);

assign add_ln41_11_fu_1844_p2 = (tmp10_1_0_0_cast_mid_4_reg_3979 + zext_ln41_16_fu_1841_p1);

assign add_ln41_12_fu_1854_p2 = (out_w_0_1_mid2_reg_3961 + 5'd1);

assign add_ln41_13_fu_1863_p2 = (zext_ln41_18_fu_1859_p1 + tmp10_1_0_0_cast_mid_4_reg_3979);

assign add_ln41_14_fu_1890_p2 = (out_w_0_1_mid2_reg_3961 + 5'd2);

assign add_ln41_15_fu_1899_p2 = (zext_ln41_20_fu_1895_p1 + tmp10_1_0_0_cast_mid_4_reg_3979);

assign add_ln41_16_fu_1909_p2 = (tmp10_1_1_0_cast_mid_2_reg_3991 + zext_ln41_16_reg_3998);

assign add_ln41_17_fu_1944_p2 = (zext_ln41_18_reg_4015 + tmp10_1_1_0_cast_mid_2_reg_3991);

assign add_ln41_18_fu_1953_p2 = (zext_ln41_20_reg_4033 + tmp10_1_1_0_cast_mid_2_reg_3991);

assign add_ln41_19_fu_1962_p2 = (tmp10_1_2_0_cast_mid_2_reg_4026 + zext_ln41_16_reg_3998);

assign add_ln41_1_fu_1333_p2 = (out_w_0_0_mid2_reg_3626 + 5'd1);

assign add_ln41_20_fu_1966_p2 = (zext_ln41_18_reg_4015 + tmp10_1_2_0_cast_mid_2_reg_4026);

assign add_ln41_21_fu_1970_p2 = (zext_ln41_20_reg_4033 + tmp10_1_2_0_cast_mid_2_reg_4026);

assign add_ln41_22_fu_2373_p2 = (tmp10_2_0_0_cast_mid_4_reg_4318 + zext_ln41_29_fu_2370_p1);

assign add_ln41_23_fu_2383_p2 = (out_w_0_2_mid2_reg_4300 + 5'd1);

assign add_ln41_24_fu_2392_p2 = (zext_ln41_31_fu_2388_p1 + tmp10_2_0_0_cast_mid_4_reg_4318);

assign add_ln41_25_fu_2419_p2 = (out_w_0_2_mid2_reg_4300 + 5'd2);

assign add_ln41_26_fu_2428_p2 = (zext_ln41_33_fu_2424_p1 + tmp10_2_0_0_cast_mid_4_reg_4318);

assign add_ln41_27_fu_2438_p2 = (tmp10_2_1_0_cast_mid_2_reg_4330 + zext_ln41_29_reg_4337);

assign add_ln41_28_fu_2473_p2 = (zext_ln41_31_reg_4354 + tmp10_2_1_0_cast_mid_2_reg_4330);

assign add_ln41_29_fu_2482_p2 = (zext_ln41_33_reg_4372 + tmp10_2_1_0_cast_mid_2_reg_4330);

assign add_ln41_2_fu_1342_p2 = (zext_ln41_5_fu_1338_p1 + tmp10_0_0_0_cast_mid_4_reg_3644);

assign add_ln41_30_fu_2491_p2 = (tmp10_2_2_0_cast_mid_2_reg_4365 + zext_ln41_29_reg_4337);

assign add_ln41_31_fu_2495_p2 = (zext_ln41_31_reg_4354 + tmp10_2_2_0_cast_mid_2_reg_4365);

assign add_ln41_32_fu_2499_p2 = (zext_ln41_33_reg_4372 + tmp10_2_2_0_cast_mid_2_reg_4365);

assign add_ln41_33_fu_2894_p2 = (tmp10_3_0_0_cast_mid_4_reg_4653 + zext_ln41_41_fu_2891_p1);

assign add_ln41_34_fu_2904_p2 = (out_w_0_3_mid2_reg_4635 + 5'd1);

assign add_ln41_35_fu_2913_p2 = (zext_ln41_43_fu_2909_p1 + tmp10_3_0_0_cast_mid_4_reg_4653);

assign add_ln41_36_fu_2940_p2 = (out_w_0_3_mid2_reg_4635 + 5'd2);

assign add_ln41_37_fu_2949_p2 = (zext_ln41_45_fu_2945_p1 + tmp10_3_0_0_cast_mid_4_reg_4653);

assign add_ln41_38_fu_2959_p2 = (tmp10_3_1_0_cast_mid_2_reg_4665 + zext_ln41_41_reg_4672);

assign add_ln41_39_fu_2994_p2 = (zext_ln41_43_reg_4689 + tmp10_3_1_0_cast_mid_2_reg_4665);

assign add_ln41_3_fu_1369_p2 = (out_w_0_0_mid2_reg_3626 + 5'd2);

assign add_ln41_40_fu_3003_p2 = (zext_ln41_45_reg_4707 + tmp10_3_1_0_cast_mid_2_reg_4665);

assign add_ln41_41_fu_3012_p2 = (tmp10_3_2_0_cast_mid_2_reg_4700 + zext_ln41_41_reg_4672);

assign add_ln41_42_fu_3016_p2 = (zext_ln41_43_reg_4689 + tmp10_3_2_0_cast_mid_2_reg_4700);

assign add_ln41_43_fu_3020_p2 = (zext_ln41_45_reg_4707 + tmp10_3_2_0_cast_mid_2_reg_4700);

assign add_ln41_4_fu_1378_p2 = (zext_ln41_7_fu_1374_p1 + tmp10_0_0_0_cast_mid_4_reg_3644);

assign add_ln41_5_fu_1388_p2 = (tmp10_0_1_0_cast_mid_2_reg_3656 + zext_ln41_3_reg_3663);

assign add_ln41_6_fu_1423_p2 = (zext_ln41_5_reg_3680 + tmp10_0_1_0_cast_mid_2_reg_3656);

assign add_ln41_7_fu_1432_p2 = (zext_ln41_7_reg_3698 + tmp10_0_1_0_cast_mid_2_reg_3656);

assign add_ln41_8_fu_1441_p2 = (tmp10_0_2_0_cast_mid_2_reg_3691 + zext_ln41_3_reg_3663);

assign add_ln41_9_fu_1445_p2 = (zext_ln41_5_reg_3680 + tmp10_0_2_0_cast_mid_2_reg_3691);

assign add_ln41_fu_1323_p2 = (tmp10_0_0_0_cast_mid_4_reg_3644 + zext_ln41_3_fu_1320_p1);

assign add_ln49_10_fu_1583_p2 = (add_ln49_9_fu_1578_p2 + add_ln49_7_fu_1570_p2);

assign add_ln49_11_fu_1593_p2 = (add_ln49_10_reg_3814 + add_ln49_6_fu_1589_p2);

assign add_ln49_13_fu_2008_p2 = (reg_995 + trunc_ln49_8_reg_4054);

assign add_ln49_14_fu_2043_p2 = (trunc_ln49_10_reg_4089 + trunc_ln49_11_reg_4094);

assign add_ln49_15_fu_2047_p2 = (add_ln49_14_fu_2043_p2 + trunc_ln49_9_reg_4059);

assign add_ln49_16_fu_2110_p2 = (add_ln49_15_reg_4129 + add_ln49_13_reg_4109);

assign add_ln49_17_fu_2091_p2 = (trunc_ln49_12_reg_4114 + trunc_ln49_13_reg_4119);

assign add_ln49_18_fu_2095_p2 = (trunc_ln49_15_reg_4139 + trunc_ln49_16_reg_4144);

assign add_ln49_19_fu_2099_p2 = (add_ln49_18_fu_2095_p2 + trunc_ln49_14_reg_4134);

assign add_ln49_20_fu_2104_p2 = (add_ln49_19_fu_2099_p2 + add_ln49_17_fu_2091_p2);

assign add_ln49_21_fu_2114_p2 = (add_ln49_20_reg_4149 + add_ln49_16_fu_2110_p2);

assign add_ln49_22_fu_2537_p2 = (reg_995 + trunc_ln49_17_reg_4393);

assign add_ln49_23_fu_2572_p2 = (trunc_ln49_19_reg_4428 + trunc_ln49_20_reg_4433);

assign add_ln49_24_fu_2576_p2 = (add_ln49_23_fu_2572_p2 + trunc_ln49_18_reg_4398);

assign add_ln49_25_fu_2639_p2 = (add_ln49_24_reg_4468 + add_ln49_22_reg_4448);

assign add_ln49_26_fu_2620_p2 = (trunc_ln49_21_reg_4453 + trunc_ln49_22_reg_4458);

assign add_ln49_27_fu_2624_p2 = (trunc_ln49_24_reg_4478 + trunc_ln49_25_reg_4483);

assign add_ln49_28_fu_2628_p2 = (add_ln49_27_fu_2624_p2 + trunc_ln49_23_reg_4473);

assign add_ln49_29_fu_2633_p2 = (add_ln49_28_fu_2628_p2 + add_ln49_26_fu_2620_p2);

assign add_ln49_30_fu_2643_p2 = (add_ln49_29_reg_4488 + add_ln49_25_fu_2639_p2);

assign add_ln49_31_fu_3058_p2 = (reg_995 + trunc_ln49_26_reg_4728);

assign add_ln49_32_fu_3093_p2 = (trunc_ln49_28_reg_4763 + trunc_ln49_29_reg_4768);

assign add_ln49_33_fu_3097_p2 = (add_ln49_32_fu_3093_p2 + trunc_ln49_27_reg_4733);

assign add_ln49_34_fu_3160_p2 = (add_ln49_33_reg_4803 + add_ln49_31_reg_4783);

assign add_ln49_35_fu_3141_p2 = (trunc_ln49_30_reg_4788 + trunc_ln49_31_reg_4793);

assign add_ln49_36_fu_3145_p2 = (trunc_ln49_33_reg_4813 + trunc_ln49_34_reg_4818);

assign add_ln49_37_fu_3149_p2 = (add_ln49_36_fu_3145_p2 + trunc_ln49_32_reg_4808);

assign add_ln49_38_fu_3154_p2 = (add_ln49_37_fu_3149_p2 + add_ln49_35_fu_3141_p2);

assign add_ln49_39_fu_3164_p2 = (add_ln49_38_reg_4823 + add_ln49_34_fu_3160_p2);

assign add_ln49_4_fu_1522_p2 = (trunc_ln49_1_reg_3754 + trunc_ln49_2_reg_3759);

assign add_ln49_5_fu_1526_p2 = (add_ln49_4_fu_1522_p2 + trunc_ln49_s_reg_3724);

assign add_ln49_6_fu_1589_p2 = (add_ln49_5_reg_3794 + add_ln49_reg_3774);

assign add_ln49_7_fu_1570_p2 = (trunc_ln49_3_reg_3779 + trunc_ln49_4_reg_3784);

assign add_ln49_8_fu_1574_p2 = (trunc_ln49_6_reg_3804 + trunc_ln49_7_reg_3809);

assign add_ln49_9_fu_1578_p2 = (add_ln49_8_fu_1574_p2 + trunc_ln49_5_reg_3799);

assign add_ln49_fu_1487_p2 = (reg_995 + trunc_ln_reg_3719);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp3_stage4 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd45];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp3_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp3_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp3_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp3_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign empty_58_fu_1017_p1 = output_height[4:0];

assign empty_59_fu_1029_p1 = $unsigned(sext_ln4_fu_1009_p1);

assign empty_60_fu_1033_p1 = output_width;

assign empty_fu_1013_p1 = output_width[4:0];

assign grp_fu_3180_p0 = empty_60_reg_3460;

assign grp_fu_3180_p1 = grp_fu_3180_p10;

assign grp_fu_3180_p10 = tmp12_0_cast_mid2_v_s_reg_3651;

assign grp_fu_3180_p2 = zext_ln41_3_reg_3663;

assign grp_fu_3240_p0 = empty_60_reg_3460;

assign grp_fu_3240_p1 = grp_fu_3240_p10;

assign grp_fu_3240_p10 = tmp12_1_cast_mid2_v_s_reg_3986;

assign grp_fu_3240_p2 = zext_ln41_16_reg_3998;

assign grp_fu_3300_p0 = empty_60_reg_3460;

assign grp_fu_3300_p1 = grp_fu_3300_p10;

assign grp_fu_3300_p10 = tmp12_2_cast_mid2_v_s_reg_4325;

assign grp_fu_3300_p2 = zext_ln41_29_reg_4337;

assign grp_fu_3360_p0 = empty_60_reg_3460;

assign grp_fu_3360_p1 = grp_fu_3360_p10;

assign grp_fu_3360_p10 = tmp12_3_cast_mid2_v_s_reg_4660;

assign grp_fu_3360_p2 = zext_ln41_41_reg_4672;

assign icmp_ln23_fu_1051_p2 = ((out_d_0_0_reg_812 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln33_1_fu_1768_p2 = ((ap_phi_mux_indvar_flatten34_phi_fu_862_p4 == mul_ln4_reg_3468) ? 1'b1 : 1'b0);

assign icmp_ln33_2_fu_2297_p2 = ((ap_phi_mux_indvar_flatten53_phi_fu_896_p4 == mul_ln4_reg_3468) ? 1'b1 : 1'b0);

assign icmp_ln33_3_fu_2818_p2 = ((ap_phi_mux_indvar_flatten72_phi_fu_930_p4 == mul_ln4_reg_3468) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1247_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_828_p4 == mul_ln4_reg_3468) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1785_p2 = ((ap_phi_mux_out_w_0_1_phi_fu_885_p4 == empty_reg_3420) ? 1'b1 : 1'b0);

assign icmp_ln34_2_fu_2314_p2 = ((ap_phi_mux_out_w_0_2_phi_fu_919_p4 == empty_reg_3420) ? 1'b1 : 1'b0);

assign icmp_ln34_3_fu_2835_p2 = ((ap_phi_mux_out_w_0_3_phi_fu_953_p4 == empty_reg_3420) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1264_p2 = ((ap_phi_mux_out_w_0_0_phi_fu_851_p4 == empty_reg_3420) ? 1'b1 : 1'b0);

assign mul_ln41_10_fu_3234_p0 = sext_ln31_reg_3592;

assign mul_ln41_11_fu_2287_p0 = zext_ln41_reg_3428;

assign mul_ln41_11_fu_2287_p1 = zext_ln41_15_fu_2284_p1;

assign mul_ln41_11_fu_2287_p2 = (mul_ln41_11_fu_2287_p0 * mul_ln41_11_fu_2287_p1);

assign mul_ln41_12_fu_3246_p0 = sext_ln28_8_reg_3887;

assign mul_ln41_13_fu_3252_p0 = sext_ln28_9_reg_3892;

assign mul_ln41_14_fu_3258_p0 = sext_ln28_10_reg_3897;

assign mul_ln41_15_fu_3264_p0 = sext_ln28_11_reg_3902;

assign mul_ln41_16_fu_3270_p0 = sext_ln28_12_reg_3907;

assign mul_ln41_17_fu_3276_p0 = sext_ln28_13_reg_3912;

assign mul_ln41_18_fu_3282_p0 = sext_ln28_14_reg_3917;

assign mul_ln41_19_fu_3288_p0 = sext_ln28_15_reg_3922;

assign mul_ln41_1_fu_1758_p0 = zext_ln41_reg_3428;

assign mul_ln41_1_fu_1758_p1 = zext_ln41_2_fu_1755_p1;

assign mul_ln41_1_fu_1758_p2 = (mul_ln41_1_fu_1758_p0 * mul_ln41_1_fu_1758_p1);

assign mul_ln41_20_fu_3294_p0 = sext_ln31_1_reg_3927;

assign mul_ln41_21_fu_2772_p0 = zext_ln41_reg_3428;

assign mul_ln41_21_fu_2772_p1 = zext_ln41_28_fu_2769_p1;

assign mul_ln41_21_fu_2772_p2 = (mul_ln41_21_fu_2772_p0 * mul_ln41_21_fu_2772_p1);

assign mul_ln41_22_fu_3306_p0 = sext_ln28_16_reg_4226;

assign mul_ln41_23_fu_3312_p0 = sext_ln28_17_reg_4231;

assign mul_ln41_24_fu_3318_p0 = sext_ln28_18_reg_4236;

assign mul_ln41_25_fu_3324_p0 = sext_ln28_19_reg_4241;

assign mul_ln41_26_fu_3330_p0 = sext_ln28_20_reg_4246;

assign mul_ln41_27_fu_3336_p0 = sext_ln28_21_reg_4251;

assign mul_ln41_28_fu_3342_p0 = sext_ln28_22_reg_4256;

assign mul_ln41_29_fu_3348_p0 = sext_ln28_23_reg_4261;

assign mul_ln41_2_fu_3186_p0 = sext_ln28_reg_3552;

assign mul_ln41_30_fu_3354_p0 = sext_ln31_2_reg_4266;

assign mul_ln41_31_fu_3366_p0 = sext_ln28_24_reg_4571;

assign mul_ln41_32_fu_3372_p0 = sext_ln28_25_reg_4576;

assign mul_ln41_33_fu_3378_p0 = sext_ln28_26_reg_4581;

assign mul_ln41_34_fu_3384_p0 = sext_ln28_27_reg_4586;

assign mul_ln41_35_fu_3390_p0 = sext_ln28_28_reg_4591;

assign mul_ln41_36_fu_3396_p0 = sext_ln28_29_reg_4596;

assign mul_ln41_37_fu_3402_p0 = sext_ln28_30_reg_4601;

assign mul_ln41_38_fu_3408_p0 = sext_ln28_31_reg_4606;

assign mul_ln41_39_fu_3414_p0 = sext_ln31_3_reg_4611;

assign mul_ln41_3_fu_3192_p0 = sext_ln28_1_reg_3557;

assign mul_ln41_4_fu_3198_p0 = sext_ln28_2_reg_3562;

assign mul_ln41_5_fu_3204_p0 = sext_ln28_3_reg_3567;

assign mul_ln41_6_fu_3210_p0 = sext_ln28_4_reg_3572;

assign mul_ln41_7_fu_3216_p0 = sext_ln28_5_reg_3577;

assign mul_ln41_8_fu_3222_p0 = sext_ln28_6_reg_3582;

assign mul_ln41_9_fu_3228_p0 = sext_ln28_7_reg_3587;

assign mul_ln41_fu_1237_p0 = zext_ln41_1_fu_1233_p1;

assign mul_ln41_fu_1237_p1 = zext_ln41_reg_3428;

assign mul_ln41_fu_1237_p2 = (mul_ln41_fu_1237_p0 * mul_ln41_fu_1237_p1);

assign mul_ln49_1_fu_1763_p0 = zext_ln49_reg_3436;

assign mul_ln49_1_fu_1763_p1 = zext_ln41_2_fu_1755_p1;

assign mul_ln49_1_fu_1763_p2 = (mul_ln49_1_fu_1763_p0 * mul_ln49_1_fu_1763_p1);

assign mul_ln49_2_fu_2292_p0 = zext_ln49_reg_3436;

assign mul_ln49_2_fu_2292_p1 = zext_ln41_15_fu_2284_p1;

assign mul_ln49_2_fu_2292_p2 = (mul_ln49_2_fu_2292_p0 * mul_ln49_2_fu_2292_p1);

assign mul_ln49_3_fu_2777_p0 = zext_ln49_reg_3436;

assign mul_ln49_3_fu_2777_p1 = zext_ln41_28_fu_2769_p1;

assign mul_ln49_3_fu_2777_p2 = (mul_ln49_3_fu_2777_p0 * mul_ln49_3_fu_2777_p1);

assign mul_ln49_fu_1242_p0 = zext_ln41_1_fu_1233_p1;

assign mul_ln49_fu_1242_p1 = zext_ln49_reg_3436;

assign mul_ln49_fu_1242_p2 = (mul_ln49_fu_1242_p0 * mul_ln49_fu_1242_p1);

assign mul_ln4_fu_1045_p0 = mul_ln4_fu_1045_p00;

assign mul_ln4_fu_1045_p00 = empty_fu_1013_p1;

assign mul_ln4_fu_1045_p1 = mul_ln4_fu_1045_p10;

assign mul_ln4_fu_1045_p10 = empty_58_fu_1017_p1;

assign mul_ln4_fu_1045_p2 = (mul_ln4_fu_1045_p0 * mul_ln4_fu_1045_p1);

assign or_ln23_1_fu_2124_p2 = (trunc_ln23_reg_3545 | 4'd2);

assign or_ln23_2_fu_2653_p2 = (trunc_ln23_reg_3545 | 4'd3);

assign or_ln23_fu_1603_p2 = (trunc_ln23_reg_3545 | 4'd1);

assign or_ln28_1_fu_1080_p2 = (tmp_5_reg_3479 | 7'd1);

assign or_ln28_2_fu_1119_p2 = (tmp_5_reg_3479 | 7'd3);

assign or_ln28_3_fu_1645_p2 = (8'd2 | add_ln28_5_reg_3825);

assign or_ln28_4_fu_2155_p2 = (tmp_7_reg_4160 | 7'd1);

assign or_ln28_5_fu_2160_p3 = {{1'd0}, {or_ln28_4_fu_2155_p2}};

assign or_ln28_9_fu_1103_p3 = {{1'd0}, {or_ln28_fu_1098_p2}};

assign or_ln28_fu_1098_p2 = (tmp_5_reg_3479 | 7'd2);

assign or_ln28_s_fu_1124_p3 = {{1'd0}, {or_ln28_2_fu_1119_p2}};

assign or_ln_fu_1085_p3 = {{1'd0}, {or_ln28_1_fu_1080_p2}};

assign out_w_0_0_mid2_fu_1269_p3 = ((icmp_ln34_fu_1264_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_out_w_0_0_phi_fu_851_p4);

assign out_w_0_1_mid2_fu_1790_p3 = ((icmp_ln34_1_fu_1785_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_out_w_0_1_phi_fu_885_p4);

assign out_w_0_2_mid2_fu_2319_p3 = ((icmp_ln34_2_fu_2314_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_out_w_0_2_phi_fu_919_p4);

assign out_w_0_3_mid2_fu_2840_p3 = ((icmp_ln34_3_fu_2835_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_out_w_0_3_phi_fu_953_p4);

assign sext_ln28_10_fu_1727_p1 = $signed(reg_970);

assign sext_ln28_11_fu_1731_p1 = $signed(reg_975);

assign sext_ln28_12_fu_1735_p1 = $signed(reg_980);

assign sext_ln28_13_fu_1739_p1 = $signed(reg_985);

assign sext_ln28_14_fu_1743_p1 = $signed(reg_990);

assign sext_ln28_15_fu_1747_p1 = $signed(kernel_q0);

assign sext_ln28_16_fu_2248_p1 = $signed(reg_960);

assign sext_ln28_17_fu_2252_p1 = $signed(reg_965);

assign sext_ln28_18_fu_2256_p1 = $signed(reg_970);

assign sext_ln28_19_fu_2260_p1 = $signed(reg_975);

assign sext_ln28_1_fu_1201_p1 = $signed(reg_965);

assign sext_ln28_20_fu_2264_p1 = $signed(reg_980);

assign sext_ln28_21_fu_2268_p1 = $signed(reg_985);

assign sext_ln28_22_fu_2272_p1 = $signed(reg_990);

assign sext_ln28_23_fu_2276_p1 = $signed(kernel_q1);

assign sext_ln28_24_fu_2782_p1 = $signed(reg_960);

assign sext_ln28_25_fu_2786_p1 = $signed(reg_965);

assign sext_ln28_26_fu_2790_p1 = $signed(reg_970);

assign sext_ln28_27_fu_2794_p1 = $signed(reg_975);

assign sext_ln28_28_fu_2798_p1 = $signed(reg_980);

assign sext_ln28_29_fu_2802_p1 = $signed(reg_985);

assign sext_ln28_2_fu_1205_p1 = $signed(reg_970);

assign sext_ln28_30_fu_2806_p1 = $signed(reg_990);

assign sext_ln28_31_fu_2810_p1 = $signed(kernel_q0);

assign sext_ln28_3_fu_1209_p1 = $signed(reg_975);

assign sext_ln28_4_fu_1213_p1 = $signed(reg_980);

assign sext_ln28_5_fu_1217_p1 = $signed(reg_985);

assign sext_ln28_6_fu_1221_p1 = $signed(reg_990);

assign sext_ln28_7_fu_1225_p1 = $signed(kernel_q1);

assign sext_ln28_8_fu_1719_p1 = $signed(reg_960);

assign sext_ln28_9_fu_1723_p1 = $signed(reg_965);

assign sext_ln28_fu_1197_p1 = $signed(reg_960);

assign sext_ln31_1_fu_1751_p1 = $signed(kernel_q1);

assign sext_ln31_2_fu_2280_p1 = $signed(kernel_q0);

assign sext_ln31_3_fu_2814_p1 = $signed(kernel_q1);

assign sext_ln31_fu_1229_p1 = $signed(kernel_q0);

assign sext_ln4_fu_1009_p1 = $signed(input_width);

assign shl_ln28_4_fu_2662_p3 = {{or_ln23_2_fu_2653_p2}, {3'd0}};

assign shl_ln_fu_1612_p3 = {{or_ln23_fu_1603_p2}, {3'd0}};

assign tmp10_0_0_0_cast_mid_1_fu_1283_p1 = tmp10_0_0_0_cast_mid_fu_1277_p3;

assign tmp10_0_0_0_cast_mid_2_fu_1287_p2 = (tmp10_0_0_0_cast_mid_1_fu_1283_p1 + mul_ln41_reg_3597);

assign tmp10_0_0_0_cast_mid_4_fu_1296_p0 = empty_59_reg_3444;

assign tmp10_0_0_0_cast_mid_4_fu_1296_p1 = tmp10_0_0_0_cast_mid_4_fu_1296_p10;

assign tmp10_0_0_0_cast_mid_4_fu_1296_p10 = tmp10_0_0_0_cast_mid_2_fu_1287_p2;

assign tmp10_0_0_0_cast_mid_4_fu_1296_p2 = (tmp10_0_0_0_cast_mid_4_fu_1296_p0 * tmp10_0_0_0_cast_mid_4_fu_1296_p1);

assign tmp10_0_0_0_cast_mid_fu_1277_p3 = ((icmp_ln34_reg_3621[0:0] === 1'b1) ? add_ln33_reg_3616 : out_h_0_0_reg_835);

assign tmp10_0_1_0_cast_mid_2_fu_1315_p0 = empty_59_reg_3444;

assign tmp10_0_1_0_cast_mid_2_fu_1315_p1 = tmp10_0_1_0_cast_mid_2_fu_1315_p10;

assign tmp10_0_1_0_cast_mid_2_fu_1315_p10 = tmp10_0_1_0_cast_mid_fu_1306_p2;

assign tmp10_0_1_0_cast_mid_2_fu_1315_p2 = (tmp10_0_1_0_cast_mid_2_fu_1315_p0 * tmp10_0_1_0_cast_mid_2_fu_1315_p1);

assign tmp10_0_1_0_cast_mid_fu_1306_p2 = (tmp10_0_0_0_cast_mid_2_reg_3638 + 9'd1);

assign tmp10_0_2_0_cast_mid_2_fu_1361_p0 = empty_59_reg_3444;

assign tmp10_0_2_0_cast_mid_2_fu_1361_p1 = tmp10_0_2_0_cast_mid_2_fu_1361_p10;

assign tmp10_0_2_0_cast_mid_2_fu_1361_p10 = tmp10_0_2_0_cast_mid_fu_1352_p2;

assign tmp10_0_2_0_cast_mid_2_fu_1361_p2 = (tmp10_0_2_0_cast_mid_2_fu_1361_p0 * tmp10_0_2_0_cast_mid_2_fu_1361_p1);

assign tmp10_0_2_0_cast_mid_fu_1352_p2 = (tmp10_0_0_0_cast_mid_2_reg_3638 + 9'd2);

assign tmp10_1_0_0_cast_mid_1_fu_1804_p1 = tmp10_1_0_0_cast_mid_fu_1798_p3;

assign tmp10_1_0_0_cast_mid_2_fu_1808_p2 = (tmp10_1_0_0_cast_mid_1_fu_1804_p1 + mul_ln41_1_reg_3932);

assign tmp10_1_0_0_cast_mid_4_fu_1817_p0 = empty_59_reg_3444;

assign tmp10_1_0_0_cast_mid_4_fu_1817_p1 = tmp10_1_0_0_cast_mid_4_fu_1817_p10;

assign tmp10_1_0_0_cast_mid_4_fu_1817_p10 = tmp10_1_0_0_cast_mid_2_fu_1808_p2;

assign tmp10_1_0_0_cast_mid_4_fu_1817_p2 = (tmp10_1_0_0_cast_mid_4_fu_1817_p0 * tmp10_1_0_0_cast_mid_4_fu_1817_p1);

assign tmp10_1_0_0_cast_mid_fu_1798_p3 = ((icmp_ln34_1_reg_3956[0:0] === 1'b1) ? add_ln33_2_reg_3951 : out_h_0_1_reg_869);

assign tmp10_1_1_0_cast_mid_2_fu_1836_p0 = empty_59_reg_3444;

assign tmp10_1_1_0_cast_mid_2_fu_1836_p1 = tmp10_1_1_0_cast_mid_2_fu_1836_p10;

assign tmp10_1_1_0_cast_mid_2_fu_1836_p10 = tmp10_1_1_0_cast_mid_fu_1827_p2;

assign tmp10_1_1_0_cast_mid_2_fu_1836_p2 = (tmp10_1_1_0_cast_mid_2_fu_1836_p0 * tmp10_1_1_0_cast_mid_2_fu_1836_p1);

assign tmp10_1_1_0_cast_mid_fu_1827_p2 = (tmp10_1_0_0_cast_mid_2_reg_3973 + 9'd1);

assign tmp10_1_2_0_cast_mid_2_fu_1882_p0 = empty_59_reg_3444;

assign tmp10_1_2_0_cast_mid_2_fu_1882_p1 = tmp10_1_2_0_cast_mid_2_fu_1882_p10;

assign tmp10_1_2_0_cast_mid_2_fu_1882_p10 = tmp10_1_2_0_cast_mid_fu_1873_p2;

assign tmp10_1_2_0_cast_mid_2_fu_1882_p2 = (tmp10_1_2_0_cast_mid_2_fu_1882_p0 * tmp10_1_2_0_cast_mid_2_fu_1882_p1);

assign tmp10_1_2_0_cast_mid_fu_1873_p2 = (tmp10_1_0_0_cast_mid_2_reg_3973 + 9'd2);

assign tmp10_2_0_0_cast_mid_1_fu_2333_p1 = tmp10_2_0_0_cast_mid_fu_2327_p3;

assign tmp10_2_0_0_cast_mid_2_fu_2337_p2 = (tmp10_2_0_0_cast_mid_1_fu_2333_p1 + mul_ln41_11_reg_4271);

assign tmp10_2_0_0_cast_mid_4_fu_2346_p0 = empty_59_reg_3444;

assign tmp10_2_0_0_cast_mid_4_fu_2346_p1 = tmp10_2_0_0_cast_mid_4_fu_2346_p10;

assign tmp10_2_0_0_cast_mid_4_fu_2346_p10 = tmp10_2_0_0_cast_mid_2_fu_2337_p2;

assign tmp10_2_0_0_cast_mid_4_fu_2346_p2 = (tmp10_2_0_0_cast_mid_4_fu_2346_p0 * tmp10_2_0_0_cast_mid_4_fu_2346_p1);

assign tmp10_2_0_0_cast_mid_fu_2327_p3 = ((icmp_ln34_2_reg_4295[0:0] === 1'b1) ? add_ln33_4_reg_4290 : out_h_0_2_reg_903);

assign tmp10_2_1_0_cast_mid_2_fu_2365_p0 = empty_59_reg_3444;

assign tmp10_2_1_0_cast_mid_2_fu_2365_p1 = tmp10_2_1_0_cast_mid_2_fu_2365_p10;

assign tmp10_2_1_0_cast_mid_2_fu_2365_p10 = tmp10_2_1_0_cast_mid_fu_2356_p2;

assign tmp10_2_1_0_cast_mid_2_fu_2365_p2 = (tmp10_2_1_0_cast_mid_2_fu_2365_p0 * tmp10_2_1_0_cast_mid_2_fu_2365_p1);

assign tmp10_2_1_0_cast_mid_fu_2356_p2 = (tmp10_2_0_0_cast_mid_2_reg_4312 + 9'd1);

assign tmp10_2_2_0_cast_mid_2_fu_2411_p0 = empty_59_reg_3444;

assign tmp10_2_2_0_cast_mid_2_fu_2411_p1 = tmp10_2_2_0_cast_mid_2_fu_2411_p10;

assign tmp10_2_2_0_cast_mid_2_fu_2411_p10 = tmp10_2_2_0_cast_mid_fu_2402_p2;

assign tmp10_2_2_0_cast_mid_2_fu_2411_p2 = (tmp10_2_2_0_cast_mid_2_fu_2411_p0 * tmp10_2_2_0_cast_mid_2_fu_2411_p1);

assign tmp10_2_2_0_cast_mid_fu_2402_p2 = (tmp10_2_0_0_cast_mid_2_reg_4312 + 9'd2);

assign tmp10_3_0_0_cast_mid_1_fu_2854_p1 = tmp10_3_0_0_cast_mid_fu_2848_p3;

assign tmp10_3_0_0_cast_mid_2_fu_2858_p2 = (tmp10_3_0_0_cast_mid_1_fu_2854_p1 + mul_ln41_21_reg_4561);

assign tmp10_3_0_0_cast_mid_4_fu_2867_p0 = empty_59_reg_3444;

assign tmp10_3_0_0_cast_mid_4_fu_2867_p1 = tmp10_3_0_0_cast_mid_4_fu_2867_p10;

assign tmp10_3_0_0_cast_mid_4_fu_2867_p10 = tmp10_3_0_0_cast_mid_2_fu_2858_p2;

assign tmp10_3_0_0_cast_mid_4_fu_2867_p2 = (tmp10_3_0_0_cast_mid_4_fu_2867_p0 * tmp10_3_0_0_cast_mid_4_fu_2867_p1);

assign tmp10_3_0_0_cast_mid_fu_2848_p3 = ((icmp_ln34_3_reg_4630[0:0] === 1'b1) ? add_ln33_6_reg_4625 : out_h_0_3_reg_937);

assign tmp10_3_1_0_cast_mid_2_fu_2886_p0 = empty_59_reg_3444;

assign tmp10_3_1_0_cast_mid_2_fu_2886_p1 = tmp10_3_1_0_cast_mid_2_fu_2886_p10;

assign tmp10_3_1_0_cast_mid_2_fu_2886_p10 = tmp10_3_1_0_cast_mid_fu_2877_p2;

assign tmp10_3_1_0_cast_mid_2_fu_2886_p2 = (tmp10_3_1_0_cast_mid_2_fu_2886_p0 * tmp10_3_1_0_cast_mid_2_fu_2886_p1);

assign tmp10_3_1_0_cast_mid_fu_2877_p2 = (tmp10_3_0_0_cast_mid_2_reg_4647 + 9'd1);

assign tmp10_3_2_0_cast_mid_2_fu_2932_p0 = empty_59_reg_3444;

assign tmp10_3_2_0_cast_mid_2_fu_2932_p1 = tmp10_3_2_0_cast_mid_2_fu_2932_p10;

assign tmp10_3_2_0_cast_mid_2_fu_2932_p10 = tmp10_3_2_0_cast_mid_fu_2923_p2;

assign tmp10_3_2_0_cast_mid_2_fu_2932_p2 = (tmp10_3_2_0_cast_mid_2_fu_2932_p0 * tmp10_3_2_0_cast_mid_2_fu_2932_p1);

assign tmp10_3_2_0_cast_mid_fu_2923_p2 = (tmp10_3_0_0_cast_mid_2_reg_4647 + 9'd2);

assign tmp12_0_cast_mid2_v_s_fu_1301_p2 = (tmp10_0_0_0_cast_mid_1_fu_1283_p1 + mul_ln49_reg_3602);

assign tmp12_1_cast_mid2_v_s_fu_1822_p2 = (tmp10_1_0_0_cast_mid_1_fu_1804_p1 + mul_ln49_1_reg_3937);

assign tmp12_2_cast_mid2_v_s_fu_2351_p2 = (tmp10_2_0_0_cast_mid_1_fu_2333_p1 + mul_ln49_2_reg_4276);

assign tmp12_3_cast_mid2_v_s_fu_2872_p2 = (tmp10_3_0_0_cast_mid_1_fu_2854_p1 + mul_ln49_3_reg_4566);

assign tmp_4_fu_1057_p4 = {{out_d_0_0_reg_812[3:2]}};

assign tmp_5_fu_1067_p3 = {{tmp_4_fu_1057_p4}, {out_d_0_0_reg_812}};

assign tmp_6_fu_2129_p4 = {{or_ln23_1_fu_2124_p2[3:1]}};

assign tmp_7_fu_2139_p3 = {{tmp_6_fu_2129_p4}, {or_ln23_1_fu_2124_p2}};

assign trunc_ln23_fu_1193_p1 = out_d_0_0_reg_812[3:0];

assign zext_ln28_10_fu_1608_p1 = or_ln23_fu_1603_p2;

assign zext_ln28_11_fu_1620_p1 = shl_ln_fu_1612_p3;

assign zext_ln28_12_fu_1630_p1 = add_ln28_5_fu_1624_p2;

assign zext_ln28_13_fu_1640_p1 = add_ln28_6_fu_1635_p2;

assign zext_ln28_14_fu_1650_p1 = or_ln28_3_fu_1645_p2;

assign zext_ln28_15_fu_1660_p1 = add_ln28_7_fu_1655_p2;

assign zext_ln28_16_fu_1670_p1 = add_ln28_8_fu_1665_p2;

assign zext_ln28_17_fu_1680_p1 = add_ln28_9_fu_1675_p2;

assign zext_ln28_18_fu_1690_p1 = add_ln28_10_fu_1685_p2;

assign zext_ln28_19_fu_1700_p1 = add_ln28_11_fu_1695_p2;

assign zext_ln28_1_fu_1075_p1 = tmp_5_fu_1067_p3;

assign zext_ln28_20_fu_1710_p1 = add_ln28_12_fu_1705_p2;

assign zext_ln28_21_fu_2152_p1 = tmp_7_reg_4160;

assign zext_ln28_22_fu_2147_p1 = tmp_7_fu_2139_p3;

assign zext_ln28_23_fu_2168_p1 = or_ln28_5_fu_2160_p3;

assign zext_ln28_24_fu_2179_p1 = add_ln28_13_fu_2173_p2;

assign zext_ln28_25_fu_2189_p1 = add_ln28_14_fu_2184_p2;

assign zext_ln28_26_fu_2199_p1 = add_ln28_15_fu_2194_p2;

assign zext_ln28_27_fu_2209_p1 = add_ln28_16_fu_2204_p2;

assign zext_ln28_28_fu_2219_p1 = add_ln28_17_fu_2214_p2;

assign zext_ln28_29_fu_2229_p1 = add_ln28_18_fu_2224_p2;

assign zext_ln28_2_fu_1093_p1 = or_ln_fu_1085_p3;

assign zext_ln28_30_fu_2239_p1 = add_ln28_19_fu_2234_p2;

assign zext_ln28_31_fu_2658_p1 = or_ln23_2_fu_2653_p2;

assign zext_ln28_32_fu_2670_p1 = shl_ln28_4_fu_2662_p3;

assign zext_ln28_33_fu_2680_p1 = add_ln28_20_fu_2674_p2;

assign zext_ln28_34_fu_2690_p1 = add_ln28_21_fu_2685_p2;

assign zext_ln28_35_fu_2700_p1 = add_ln28_22_fu_2695_p2;

assign zext_ln28_36_fu_2710_p1 = add_ln28_23_fu_2705_p2;

assign zext_ln28_37_fu_2720_p1 = add_ln28_24_fu_2715_p2;

assign zext_ln28_38_fu_2730_p1 = add_ln28_25_fu_2725_p2;

assign zext_ln28_39_fu_2740_p1 = add_ln28_26_fu_2735_p2;

assign zext_ln28_3_fu_1111_p1 = or_ln28_9_fu_1103_p3;

assign zext_ln28_40_fu_2750_p1 = add_ln28_27_fu_2745_p2;

assign zext_ln28_41_fu_2760_p1 = add_ln28_28_fu_2755_p2;

assign zext_ln28_4_fu_1132_p1 = or_ln28_s_fu_1124_p3;

assign zext_ln28_5_fu_1143_p1 = add_ln28_fu_1137_p2;

assign zext_ln28_6_fu_1153_p1 = add_ln28_1_fu_1148_p2;

assign zext_ln28_7_fu_1163_p1 = add_ln28_2_fu_1158_p2;

assign zext_ln28_8_fu_1173_p1 = add_ln28_3_fu_1168_p2;

assign zext_ln28_9_fu_1183_p1 = add_ln28_4_fu_1178_p2;

assign zext_ln28_fu_1116_p1 = tmp_5_reg_3479;

assign zext_ln31_1_fu_1715_p1 = or_ln23_reg_3819;

assign zext_ln31_2_fu_2244_p1 = or_ln23_1_reg_4154;

assign zext_ln31_3_fu_2765_p1 = or_ln23_2_reg_4493;

assign zext_ln31_fu_1188_p1 = out_d_0_0_reg_812;

assign zext_ln41_10_fu_1427_p1 = add_ln41_6_fu_1423_p2;

assign zext_ln41_11_fu_1436_p1 = add_ln41_7_fu_1432_p2;

assign zext_ln41_12_fu_1479_p1 = add_ln41_8_reg_3739;

assign zext_ln41_13_fu_1483_p1 = add_ln41_9_reg_3744;

assign zext_ln41_14_fu_1518_p1 = add_ln41_10_reg_3749;

assign zext_ln41_15_fu_2284_p1 = or_ln23_1_reg_4154;

assign zext_ln41_16_fu_1841_p1 = out_w_0_1_mid2_reg_3961;

assign zext_ln41_17_fu_1849_p1 = add_ln41_11_fu_1844_p2;

assign zext_ln41_18_fu_1859_p1 = add_ln41_12_fu_1854_p2;

assign zext_ln41_19_fu_1868_p1 = add_ln41_13_fu_1863_p2;

assign zext_ln41_1_fu_1233_p1 = out_d_0_0_reg_812;

assign zext_ln41_20_fu_1895_p1 = add_ln41_14_fu_1890_p2;

assign zext_ln41_21_fu_1904_p1 = add_ln41_15_fu_1899_p2;

assign zext_ln41_22_fu_1913_p1 = add_ln41_16_fu_1909_p2;

assign zext_ln41_23_fu_1948_p1 = add_ln41_17_fu_1944_p2;

assign zext_ln41_24_fu_1957_p1 = add_ln41_18_fu_1953_p2;

assign zext_ln41_25_fu_2000_p1 = add_ln41_19_reg_4074;

assign zext_ln41_26_fu_2004_p1 = add_ln41_20_reg_4079;

assign zext_ln41_27_fu_2039_p1 = add_ln41_21_reg_4084;

assign zext_ln41_28_fu_2769_p1 = or_ln23_2_reg_4493;

assign zext_ln41_29_fu_2370_p1 = out_w_0_2_mid2_reg_4300;

assign zext_ln41_2_fu_1755_p1 = or_ln23_reg_3819;

assign zext_ln41_30_fu_2378_p1 = add_ln41_22_fu_2373_p2;

assign zext_ln41_31_fu_2388_p1 = add_ln41_23_fu_2383_p2;

assign zext_ln41_32_fu_2397_p1 = add_ln41_24_fu_2392_p2;

assign zext_ln41_33_fu_2424_p1 = add_ln41_25_fu_2419_p2;

assign zext_ln41_34_fu_2433_p1 = add_ln41_26_fu_2428_p2;

assign zext_ln41_35_fu_2442_p1 = add_ln41_27_fu_2438_p2;

assign zext_ln41_36_fu_2477_p1 = add_ln41_28_fu_2473_p2;

assign zext_ln41_37_fu_2486_p1 = add_ln41_29_fu_2482_p2;

assign zext_ln41_38_fu_2529_p1 = add_ln41_30_reg_4413;

assign zext_ln41_39_fu_2533_p1 = add_ln41_31_reg_4418;

assign zext_ln41_3_fu_1320_p1 = out_w_0_0_mid2_reg_3626;

assign zext_ln41_40_fu_2568_p1 = add_ln41_32_reg_4423;

assign zext_ln41_41_fu_2891_p1 = out_w_0_3_mid2_reg_4635;

assign zext_ln41_42_fu_2899_p1 = add_ln41_33_fu_2894_p2;

assign zext_ln41_43_fu_2909_p1 = add_ln41_34_fu_2904_p2;

assign zext_ln41_44_fu_2918_p1 = add_ln41_35_fu_2913_p2;

assign zext_ln41_45_fu_2945_p1 = add_ln41_36_fu_2940_p2;

assign zext_ln41_46_fu_2954_p1 = add_ln41_37_fu_2949_p2;

assign zext_ln41_47_fu_2963_p1 = add_ln41_38_fu_2959_p2;

assign zext_ln41_48_fu_2998_p1 = add_ln41_39_fu_2994_p2;

assign zext_ln41_49_fu_3007_p1 = add_ln41_40_fu_3003_p2;

assign zext_ln41_4_fu_1328_p1 = add_ln41_fu_1323_p2;

assign zext_ln41_50_fu_3050_p1 = add_ln41_41_reg_4748;

assign zext_ln41_51_fu_3054_p1 = add_ln41_42_reg_4753;

assign zext_ln41_52_fu_3089_p1 = add_ln41_43_reg_4758;

assign zext_ln41_5_fu_1338_p1 = add_ln41_1_fu_1333_p2;

assign zext_ln41_6_fu_1347_p1 = add_ln41_2_fu_1342_p2;

assign zext_ln41_7_fu_1374_p1 = add_ln41_3_fu_1369_p2;

assign zext_ln41_8_fu_1383_p1 = add_ln41_4_fu_1378_p2;

assign zext_ln41_9_fu_1392_p1 = add_ln41_5_fu_1388_p2;

assign zext_ln41_fu_1021_p1 = input_height;

assign zext_ln49_1_fu_1599_p1 = add_ln49_12_reg_3714_pp0_iter1_reg;

assign zext_ln49_2_fu_2120_p1 = add_ln49_1_reg_4049_pp1_iter1_reg;

assign zext_ln49_3_fu_2649_p1 = add_ln49_2_reg_4388_pp2_iter1_reg;

assign zext_ln49_4_fu_3170_p1 = add_ln49_3_reg_4723_pp3_iter1_reg;

assign zext_ln49_fu_1025_p1 = output_height;

always @ (posedge ap_clk) begin
    zext_ln41_reg_3428[8:7] <= 2'b00;
    zext_ln49_reg_3436[8:6] <= 3'b000;
    empty_59_reg_3444[13:7] <= 7'b0000000;
    empty_60_reg_3460[13:6] <= 8'b00000000;
    zext_ln28_reg_3502[7] <= 1'b0;
    zext_ln41_3_reg_3663[13:5] <= 9'b000000000;
    zext_ln41_5_reg_3680[13:5] <= 9'b000000000;
    zext_ln41_7_reg_3698[13:5] <= 9'b000000000;
    or_ln23_reg_3819[0] <= 1'b1;
    add_ln28_5_reg_3825[0] <= 1'b1;
    zext_ln41_16_reg_3998[13:5] <= 9'b000000000;
    zext_ln41_18_reg_4015[13:5] <= 9'b000000000;
    zext_ln41_20_reg_4033[13:5] <= 9'b000000000;
    or_ln23_1_reg_4154[1] <= 1'b1;
    tmp_7_reg_4160[1] <= 1'b1;
    tmp_7_reg_4160[4] <= 1'b1;
    zext_ln28_21_reg_4171[1] <= 1'b1;
    zext_ln28_21_reg_4171[4:4] <= 1'b1;
    zext_ln28_21_reg_4171[7] <= 1'b0;
    zext_ln41_29_reg_4337[13:5] <= 9'b000000000;
    zext_ln41_31_reg_4354[13:5] <= 9'b000000000;
    zext_ln41_33_reg_4372[13:5] <= 9'b000000000;
    or_ln23_2_reg_4493[1:0] <= 2'b11;
    add_ln28_20_reg_4499[1:0] <= 2'b11;
    zext_ln41_41_reg_4672[13:5] <= 9'b000000000;
    zext_ln41_43_reg_4689[13:5] <= 9'b000000000;
    zext_ln41_45_reg_4707[13:5] <= 9'b000000000;
end

endmodule //depthwise_conv2d_fix_2
