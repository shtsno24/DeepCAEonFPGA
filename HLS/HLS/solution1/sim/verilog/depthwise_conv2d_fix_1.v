// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module depthwise_conv2d_fix_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_height,
        input_width,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_height,
        output_width,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0,
        bias_address0,
        bias_ce0,
        bias_q0,
        kernel_address0,
        kernel_ce0,
        kernel_q0,
        kernel_address1,
        kernel_ce1,
        kernel_q1
);

parameter    ap_ST_fsm_state1 = 46'd1;
parameter    ap_ST_fsm_state2 = 46'd2;
parameter    ap_ST_fsm_state3 = 46'd4;
parameter    ap_ST_fsm_state4 = 46'd8;
parameter    ap_ST_fsm_state5 = 46'd16;
parameter    ap_ST_fsm_state6 = 46'd32;
parameter    ap_ST_fsm_state7 = 46'd64;
parameter    ap_ST_fsm_pp0_stage0 = 46'd128;
parameter    ap_ST_fsm_pp0_stage1 = 46'd256;
parameter    ap_ST_fsm_pp0_stage2 = 46'd512;
parameter    ap_ST_fsm_pp0_stage3 = 46'd1024;
parameter    ap_ST_fsm_pp0_stage4 = 46'd2048;
parameter    ap_ST_fsm_state18 = 46'd4096;
parameter    ap_ST_fsm_state19 = 46'd8192;
parameter    ap_ST_fsm_state20 = 46'd16384;
parameter    ap_ST_fsm_state21 = 46'd32768;
parameter    ap_ST_fsm_state22 = 46'd65536;
parameter    ap_ST_fsm_state23 = 46'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 46'd262144;
parameter    ap_ST_fsm_pp1_stage1 = 46'd524288;
parameter    ap_ST_fsm_pp1_stage2 = 46'd1048576;
parameter    ap_ST_fsm_pp1_stage3 = 46'd2097152;
parameter    ap_ST_fsm_pp1_stage4 = 46'd4194304;
parameter    ap_ST_fsm_state34 = 46'd8388608;
parameter    ap_ST_fsm_state35 = 46'd16777216;
parameter    ap_ST_fsm_state36 = 46'd33554432;
parameter    ap_ST_fsm_state37 = 46'd67108864;
parameter    ap_ST_fsm_state38 = 46'd134217728;
parameter    ap_ST_fsm_state39 = 46'd268435456;
parameter    ap_ST_fsm_pp2_stage0 = 46'd536870912;
parameter    ap_ST_fsm_pp2_stage1 = 46'd1073741824;
parameter    ap_ST_fsm_pp2_stage2 = 46'd2147483648;
parameter    ap_ST_fsm_pp2_stage3 = 46'd4294967296;
parameter    ap_ST_fsm_pp2_stage4 = 46'd8589934592;
parameter    ap_ST_fsm_state50 = 46'd17179869184;
parameter    ap_ST_fsm_state51 = 46'd34359738368;
parameter    ap_ST_fsm_state52 = 46'd68719476736;
parameter    ap_ST_fsm_state53 = 46'd137438953472;
parameter    ap_ST_fsm_state54 = 46'd274877906944;
parameter    ap_ST_fsm_state55 = 46'd549755813888;
parameter    ap_ST_fsm_pp3_stage0 = 46'd1099511627776;
parameter    ap_ST_fsm_pp3_stage1 = 46'd2199023255552;
parameter    ap_ST_fsm_pp3_stage2 = 46'd4398046511104;
parameter    ap_ST_fsm_pp3_stage3 = 46'd8796093022208;
parameter    ap_ST_fsm_pp3_stage4 = 46'd17592186044416;
parameter    ap_ST_fsm_state66 = 46'd35184372088832;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] input_height;
input  [5:0] input_width;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
input  [4:0] output_height;
input  [4:0] output_width;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;
output  [2:0] bias_address0;
output   bias_ce0;
input  [15:0] bias_q0;
output  [6:0] kernel_address0;
output   kernel_ce0;
input  [15:0] kernel_q0;
output  [6:0] kernel_address1;
output   kernel_ce1;
input  [15:0] kernel_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg[13:0] output_r_address0;
reg output_r_ce0;
reg output_r_we0;
reg[15:0] output_r_d0;
reg[2:0] bias_address0;
reg bias_ce0;
reg[6:0] kernel_address0;
reg kernel_ce0;
reg[6:0] kernel_address1;
reg kernel_ce1;

(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] indvar_flatten_reg_808;
reg   [3:0] out_h_0_0_reg_819;
reg   [3:0] out_w_0_0_reg_830;
reg   [7:0] indvar_flatten34_reg_841;
reg   [3:0] out_h_0_1_reg_852;
reg   [3:0] out_w_0_1_reg_863;
reg   [7:0] indvar_flatten53_reg_874;
reg   [3:0] out_h_0_2_reg_885;
reg   [3:0] out_w_0_2_reg_896;
reg   [7:0] indvar_flatten72_reg_907;
reg   [3:0] out_h_0_3_reg_918;
reg   [3:0] out_w_0_3_reg_929;
reg   [15:0] reg_940;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state51;
reg   [15:0] reg_945;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state52;
reg   [15:0] reg_950;
reg   [15:0] reg_955;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state53;
reg   [15:0] reg_960;
reg   [15:0] reg_965;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state54;
reg   [15:0] reg_970;
reg   [15:0] reg_975;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state55;
reg  signed [15:0] reg_979;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state10_pp0_stage2_iter0;
wire    ap_block_state15_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln33_reg_3530;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state11_pp0_stage3_iter0;
wire    ap_block_state16_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state12_pp0_stage4_iter0;
wire    ap_block_state17_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state9_pp0_stage1_iter0;
wire    ap_block_state14_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln33_reg_3530_pp0_iter1_reg;
wire    ap_CS_fsm_pp1_stage2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state26_pp1_stage2_iter0;
wire    ap_block_state31_pp1_stage2_iter1;
wire    ap_block_pp1_stage2_11001;
reg   [0:0] icmp_ln33_4_reg_3859;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_state27_pp1_stage3_iter0;
wire    ap_block_state32_pp1_stage3_iter1;
wire    ap_block_pp1_stage3_11001;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_state28_pp1_stage4_iter0;
wire    ap_block_state33_pp1_stage4_iter1;
wire    ap_block_pp1_stage4_11001;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state24_pp1_stage0_iter0;
wire    ap_block_state29_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state25_pp1_stage1_iter0;
wire    ap_block_state30_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln33_4_reg_3859_pp1_iter1_reg;
wire    ap_CS_fsm_pp2_stage2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state42_pp2_stage2_iter0;
wire    ap_block_state47_pp2_stage2_iter1;
wire    ap_block_pp2_stage2_11001;
reg   [0:0] icmp_ln33_5_reg_4188;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_state43_pp2_stage3_iter0;
wire    ap_block_state48_pp2_stage3_iter1;
wire    ap_block_pp2_stage3_11001;
wire    ap_CS_fsm_pp2_stage4;
wire    ap_block_state44_pp2_stage4_iter0;
wire    ap_block_state49_pp2_stage4_iter1;
wire    ap_block_pp2_stage4_11001;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state40_pp2_stage0_iter0;
wire    ap_block_state45_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state41_pp2_stage1_iter0;
wire    ap_block_state46_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] icmp_ln33_5_reg_4188_pp2_iter1_reg;
wire    ap_CS_fsm_pp3_stage2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state58_pp3_stage2_iter0;
wire    ap_block_state63_pp3_stage2_iter1;
wire    ap_block_pp3_stage2_11001;
reg   [0:0] icmp_ln33_6_reg_4516;
wire    ap_CS_fsm_pp3_stage3;
wire    ap_block_state59_pp3_stage3_iter0;
wire    ap_block_state64_pp3_stage3_iter1;
wire    ap_block_pp3_stage3_11001;
wire    ap_CS_fsm_pp3_stage4;
wire    ap_block_state60_pp3_stage4_iter0;
wire    ap_block_state65_pp3_stage4_iter1;
wire    ap_block_pp3_stage4_11001;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_state56_pp3_stage0_iter0;
wire    ap_block_state61_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state57_pp3_stage1_iter0;
wire    ap_block_state62_pp3_stage1_iter1;
wire    ap_block_pp3_stage1_11001;
reg   [0:0] icmp_ln33_6_reg_4516_pp3_iter1_reg;
reg  signed [15:0] reg_984;
wire   [3:0] empty_fu_989_p1;
reg   [3:0] empty_reg_3343;
wire   [6:0] zext_ln41_fu_997_p1;
reg   [6:0] zext_ln41_reg_3351;
wire   [6:0] zext_ln49_fu_1001_p1;
reg   [6:0] zext_ln49_reg_3359;
wire   [10:0] empty_72_fu_1005_p1;
reg   [10:0] empty_72_reg_3367;
wire   [10:0] empty_73_fu_1009_p1;
reg   [10:0] empty_73_reg_3383;
wire   [7:0] mul_ln4_fu_1021_p2;
reg   [7:0] mul_ln4_reg_3391;
wire   [5:0] add_ln_fu_1043_p3;
reg   [5:0] add_ln_reg_3402;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln23_fu_1027_p2;
wire   [6:0] zext_ln28_fu_1076_p1;
reg   [6:0] zext_ln28_reg_3425;
wire   [2:0] trunc_ln23_fu_1145_p1;
reg   [2:0] trunc_ln23_reg_3468;
wire  signed [29:0] sext_ln28_fu_1149_p1;
reg  signed [29:0] sext_ln28_reg_3475;
wire  signed [29:0] sext_ln28_32_fu_1153_p1;
reg  signed [29:0] sext_ln28_32_reg_3480;
wire  signed [29:0] sext_ln28_33_fu_1157_p1;
reg  signed [29:0] sext_ln28_33_reg_3485;
wire  signed [29:0] sext_ln28_34_fu_1161_p1;
reg  signed [29:0] sext_ln28_34_reg_3490;
wire  signed [29:0] sext_ln28_35_fu_1165_p1;
reg  signed [29:0] sext_ln28_35_reg_3495;
wire  signed [29:0] sext_ln28_36_fu_1169_p1;
reg  signed [29:0] sext_ln28_36_reg_3500;
wire  signed [29:0] sext_ln28_37_fu_1173_p1;
reg  signed [29:0] sext_ln28_37_reg_3505;
wire  signed [29:0] sext_ln28_38_fu_1177_p1;
reg  signed [29:0] sext_ln28_38_reg_3510;
wire  signed [29:0] sext_ln31_fu_1181_p1;
reg  signed [29:0] sext_ln31_reg_3515;
wire   [6:0] mul_ln41_fu_1189_p2;
reg   [6:0] mul_ln41_reg_3520;
wire   [6:0] mul_ln49_fu_1194_p2;
reg   [6:0] mul_ln49_reg_3525;
wire   [0:0] icmp_ln33_fu_1199_p2;
wire   [7:0] add_ln33_8_fu_1204_p2;
reg   [7:0] add_ln33_8_reg_3534;
wire   [3:0] out_w_0_0_mid2_fu_1221_p3;
reg   [3:0] out_w_0_0_mid2_reg_3539;
wire   [3:0] tmp10_0_0_0_cast_mid_fu_1229_p3;
reg   [3:0] tmp10_0_0_0_cast_mid_reg_3546;
wire   [6:0] tmp10_0_0_0_cast_mid_6_fu_1241_p2;
reg   [6:0] tmp10_0_0_0_cast_mid_6_reg_3551;
wire   [10:0] tmp10_0_0_0_cast_mid_8_fu_1250_p2;
reg   [10:0] tmp10_0_0_0_cast_mid_8_reg_3557;
wire   [6:0] tmp12_0_cast_mid2_v_s_fu_1255_p2;
reg   [6:0] tmp12_0_cast_mid2_v_s_reg_3564;
wire   [10:0] tmp10_0_1_0_cast_mid_4_fu_1269_p2;
reg   [10:0] tmp10_0_1_0_cast_mid_4_reg_3569;
wire   [10:0] zext_ln41_55_fu_1274_p1;
reg   [10:0] zext_ln41_55_reg_3576;
wire   [3:0] add_ln41_44_fu_1287_p2;
reg   [3:0] add_ln41_44_reg_3588;
wire   [10:0] zext_ln41_57_fu_1292_p1;
reg   [10:0] zext_ln41_57_reg_3593;
wire   [10:0] tmp10_0_2_0_cast_mid_4_fu_1315_p2;
reg   [10:0] tmp10_0_2_0_cast_mid_4_reg_3604;
wire   [10:0] zext_ln41_59_fu_1328_p1;
reg   [10:0] zext_ln41_59_reg_3611;
wire   [10:0] grp_fu_3103_p3;
reg   [10:0] add_ln49_44_reg_3627;
reg   [10:0] add_ln49_44_reg_3627_pp0_iter1_reg;
reg   [15:0] trunc_ln_reg_3632;
reg   [15:0] trunc_ln49_s_reg_3637;
wire   [10:0] add_ln41_51_fu_1395_p2;
reg   [10:0] add_ln41_51_reg_3652;
wire   [10:0] add_ln41_52_fu_1399_p2;
reg   [10:0] add_ln41_52_reg_3657;
wire   [10:0] add_ln41_53_fu_1403_p2;
reg   [10:0] add_ln41_53_reg_3662;
reg   [15:0] trunc_ln49_35_reg_3667;
reg   [15:0] trunc_ln49_36_reg_3672;
wire   [15:0] add_ln49_fu_1441_p2;
reg   [15:0] add_ln49_reg_3687;
reg   [15:0] trunc_ln49_37_reg_3692;
reg   [15:0] trunc_ln49_38_reg_3697;
wire   [15:0] add_ln49_37_fu_1480_p2;
reg   [15:0] add_ln49_37_reg_3707;
reg   [15:0] trunc_ln49_39_reg_3712;
reg   [15:0] trunc_ln49_40_reg_3717;
reg   [15:0] trunc_ln49_41_reg_3722;
wire   [15:0] add_ln49_42_fu_1537_p2;
reg   [15:0] add_ln49_42_reg_3727;
wire   [2:0] or_ln23_fu_1557_p2;
reg   [2:0] or_ln23_reg_3732;
wire    ap_CS_fsm_state18;
wire   [5:0] add_ln28_s_fu_1562_p3;
reg   [5:0] add_ln28_s_reg_3738;
wire   [6:0] zext_ln28_76_fu_1575_p1;
reg   [6:0] zext_ln28_76_reg_3749;
wire  signed [29:0] sext_ln28_39_fu_1663_p1;
reg  signed [29:0] sext_ln28_39_reg_3804;
wire  signed [29:0] sext_ln28_40_fu_1667_p1;
reg  signed [29:0] sext_ln28_40_reg_3809;
wire  signed [29:0] sext_ln28_41_fu_1671_p1;
reg  signed [29:0] sext_ln28_41_reg_3814;
wire  signed [29:0] sext_ln28_42_fu_1675_p1;
reg  signed [29:0] sext_ln28_42_reg_3819;
wire  signed [29:0] sext_ln28_43_fu_1679_p1;
reg  signed [29:0] sext_ln28_43_reg_3824;
wire  signed [29:0] sext_ln28_44_fu_1683_p1;
reg  signed [29:0] sext_ln28_44_reg_3829;
wire  signed [29:0] sext_ln28_45_fu_1687_p1;
reg  signed [29:0] sext_ln28_45_reg_3834;
wire  signed [29:0] sext_ln28_46_fu_1691_p1;
reg  signed [29:0] sext_ln28_46_reg_3839;
wire  signed [29:0] sext_ln31_1_fu_1695_p1;
reg  signed [29:0] sext_ln31_1_reg_3844;
wire   [6:0] mul_ln41_36_fu_1702_p2;
reg   [6:0] mul_ln41_36_reg_3849;
wire   [6:0] mul_ln49_1_fu_1707_p2;
reg   [6:0] mul_ln49_1_reg_3854;
wire   [0:0] icmp_ln33_4_fu_1712_p2;
wire   [7:0] add_ln33_9_fu_1717_p2;
reg   [7:0] add_ln33_9_reg_3863;
wire   [3:0] out_w_0_1_mid2_fu_1734_p3;
reg   [3:0] out_w_0_1_mid2_reg_3868;
wire   [3:0] tmp10_1_0_0_cast_mid_fu_1742_p3;
reg   [3:0] tmp10_1_0_0_cast_mid_reg_3875;
wire   [6:0] tmp10_1_0_0_cast_mid_6_fu_1754_p2;
reg   [6:0] tmp10_1_0_0_cast_mid_6_reg_3880;
wire   [10:0] tmp10_1_0_0_cast_mid_8_fu_1763_p2;
reg   [10:0] tmp10_1_0_0_cast_mid_8_reg_3886;
wire   [6:0] tmp12_1_cast_mid2_v_s_fu_1768_p2;
reg   [6:0] tmp12_1_cast_mid2_v_s_reg_3893;
wire   [10:0] tmp10_1_1_0_cast_mid_4_fu_1782_p2;
reg   [10:0] tmp10_1_1_0_cast_mid_4_reg_3898;
wire   [10:0] zext_ln41_68_fu_1787_p1;
reg   [10:0] zext_ln41_68_reg_3905;
wire   [3:0] add_ln41_55_fu_1800_p2;
reg   [3:0] add_ln41_55_reg_3917;
wire   [10:0] zext_ln41_70_fu_1805_p1;
reg   [10:0] zext_ln41_70_reg_3922;
wire   [10:0] tmp10_1_2_0_cast_mid_4_fu_1828_p2;
reg   [10:0] tmp10_1_2_0_cast_mid_4_reg_3933;
wire   [10:0] zext_ln41_72_fu_1841_p1;
reg   [10:0] zext_ln41_72_reg_3940;
wire   [10:0] grp_fu_3163_p3;
reg   [10:0] add_ln49_1_reg_3956;
reg   [10:0] add_ln49_1_reg_3956_pp1_iter1_reg;
reg   [15:0] trunc_ln49_42_reg_3961;
reg   [15:0] trunc_ln49_43_reg_3966;
wire   [10:0] add_ln41_62_fu_1908_p2;
reg   [10:0] add_ln41_62_reg_3981;
wire   [10:0] add_ln41_63_fu_1912_p2;
reg   [10:0] add_ln41_63_reg_3986;
wire   [10:0] add_ln41_64_fu_1916_p2;
reg   [10:0] add_ln41_64_reg_3991;
reg   [15:0] trunc_ln49_44_reg_3996;
reg   [15:0] trunc_ln49_45_reg_4001;
wire   [15:0] add_ln49_45_fu_1954_p2;
reg   [15:0] add_ln49_45_reg_4016;
reg   [15:0] trunc_ln49_46_reg_4021;
reg   [15:0] trunc_ln49_47_reg_4026;
wire   [15:0] add_ln49_47_fu_1993_p2;
reg   [15:0] add_ln49_47_reg_4036;
reg   [15:0] trunc_ln49_48_reg_4041;
reg   [15:0] trunc_ln49_49_reg_4046;
reg   [15:0] trunc_ln49_50_reg_4051;
wire   [15:0] add_ln49_52_fu_2050_p2;
reg   [15:0] add_ln49_52_reg_4056;
wire   [2:0] or_ln23_3_fu_2070_p2;
reg   [2:0] or_ln23_3_reg_4061;
wire    ap_CS_fsm_state34;
wire   [5:0] add_ln28_1_fu_2075_p3;
reg   [5:0] add_ln28_1_reg_4067;
wire   [6:0] zext_ln28_77_fu_2088_p1;
reg   [6:0] zext_ln28_77_reg_4078;
wire  signed [29:0] sext_ln28_47_fu_2176_p1;
reg  signed [29:0] sext_ln28_47_reg_4133;
wire  signed [29:0] sext_ln28_48_fu_2180_p1;
reg  signed [29:0] sext_ln28_48_reg_4138;
wire  signed [29:0] sext_ln28_49_fu_2184_p1;
reg  signed [29:0] sext_ln28_49_reg_4143;
wire  signed [29:0] sext_ln28_50_fu_2188_p1;
reg  signed [29:0] sext_ln28_50_reg_4148;
wire  signed [29:0] sext_ln28_51_fu_2192_p1;
reg  signed [29:0] sext_ln28_51_reg_4153;
wire  signed [29:0] sext_ln28_52_fu_2196_p1;
reg  signed [29:0] sext_ln28_52_reg_4158;
wire  signed [29:0] sext_ln28_53_fu_2200_p1;
reg  signed [29:0] sext_ln28_53_reg_4163;
wire  signed [29:0] sext_ln28_54_fu_2204_p1;
reg  signed [29:0] sext_ln28_54_reg_4168;
wire  signed [29:0] sext_ln31_2_fu_2208_p1;
reg  signed [29:0] sext_ln31_2_reg_4173;
wire   [6:0] mul_ln41_37_fu_2215_p2;
reg   [6:0] mul_ln41_37_reg_4178;
wire   [6:0] mul_ln49_2_fu_2220_p2;
reg   [6:0] mul_ln49_2_reg_4183;
wire   [0:0] icmp_ln33_5_fu_2225_p2;
wire   [7:0] add_ln33_10_fu_2230_p2;
reg   [7:0] add_ln33_10_reg_4192;
wire   [3:0] out_w_0_2_mid2_fu_2247_p3;
reg   [3:0] out_w_0_2_mid2_reg_4197;
wire   [3:0] tmp10_2_0_0_cast_mid_fu_2255_p3;
reg   [3:0] tmp10_2_0_0_cast_mid_reg_4204;
wire   [6:0] tmp10_2_0_0_cast_mid_6_fu_2267_p2;
reg   [6:0] tmp10_2_0_0_cast_mid_6_reg_4209;
wire   [10:0] tmp10_2_0_0_cast_mid_8_fu_2276_p2;
reg   [10:0] tmp10_2_0_0_cast_mid_8_reg_4215;
wire   [6:0] tmp12_2_cast_mid2_v_s_fu_2281_p2;
reg   [6:0] tmp12_2_cast_mid2_v_s_reg_4222;
wire   [10:0] tmp10_2_1_0_cast_mid_4_fu_2295_p2;
reg   [10:0] tmp10_2_1_0_cast_mid_4_reg_4227;
wire   [10:0] zext_ln41_81_fu_2300_p1;
reg   [10:0] zext_ln41_81_reg_4234;
wire   [3:0] add_ln41_66_fu_2313_p2;
reg   [3:0] add_ln41_66_reg_4246;
wire   [10:0] zext_ln41_83_fu_2318_p1;
reg   [10:0] zext_ln41_83_reg_4251;
wire   [10:0] tmp10_2_2_0_cast_mid_4_fu_2341_p2;
reg   [10:0] tmp10_2_2_0_cast_mid_4_reg_4262;
wire   [10:0] zext_ln41_85_fu_2354_p1;
reg   [10:0] zext_ln41_85_reg_4269;
wire   [10:0] grp_fu_3223_p3;
reg   [10:0] add_ln49_2_reg_4285;
reg   [10:0] add_ln49_2_reg_4285_pp2_iter1_reg;
reg   [15:0] trunc_ln49_51_reg_4290;
reg   [15:0] trunc_ln49_52_reg_4295;
wire   [10:0] add_ln41_73_fu_2421_p2;
reg   [10:0] add_ln41_73_reg_4310;
wire   [10:0] add_ln41_74_fu_2425_p2;
reg   [10:0] add_ln41_74_reg_4315;
wire   [10:0] add_ln41_75_fu_2429_p2;
reg   [10:0] add_ln41_75_reg_4320;
reg   [15:0] trunc_ln49_53_reg_4325;
reg   [15:0] trunc_ln49_54_reg_4330;
wire   [15:0] add_ln49_54_fu_2467_p2;
reg   [15:0] add_ln49_54_reg_4345;
reg   [15:0] trunc_ln49_55_reg_4350;
reg   [15:0] trunc_ln49_56_reg_4355;
wire   [15:0] add_ln49_56_fu_2506_p2;
reg   [15:0] add_ln49_56_reg_4365;
reg   [15:0] trunc_ln49_57_reg_4370;
reg   [15:0] trunc_ln49_58_reg_4375;
reg   [15:0] trunc_ln49_59_reg_4380;
wire   [15:0] add_ln49_61_fu_2563_p2;
reg   [15:0] add_ln49_61_reg_4385;
wire   [2:0] or_ln23_4_fu_2583_p2;
reg   [2:0] or_ln23_4_reg_4390;
wire    ap_CS_fsm_state50;
wire   [5:0] add_ln28_2_fu_2588_p3;
reg   [5:0] add_ln28_2_reg_4396;
wire   [6:0] zext_ln28_78_fu_2601_p1;
reg   [6:0] zext_ln28_78_reg_4406;
wire   [6:0] mul_ln41_47_fu_2693_p2;
reg   [6:0] mul_ln41_47_reg_4461;
wire   [6:0] mul_ln49_3_fu_2698_p2;
reg   [6:0] mul_ln49_3_reg_4466;
wire  signed [29:0] sext_ln28_55_fu_2703_p1;
reg  signed [29:0] sext_ln28_55_reg_4471;
wire  signed [29:0] sext_ln28_56_fu_2707_p1;
reg  signed [29:0] sext_ln28_56_reg_4476;
wire  signed [29:0] sext_ln28_57_fu_2711_p1;
reg  signed [29:0] sext_ln28_57_reg_4481;
wire  signed [29:0] sext_ln28_58_fu_2715_p1;
reg  signed [29:0] sext_ln28_58_reg_4486;
wire  signed [29:0] sext_ln28_59_fu_2719_p1;
reg  signed [29:0] sext_ln28_59_reg_4491;
wire  signed [29:0] sext_ln28_60_fu_2723_p1;
reg  signed [29:0] sext_ln28_60_reg_4496;
wire  signed [29:0] sext_ln28_61_fu_2727_p1;
reg  signed [29:0] sext_ln28_61_reg_4501;
wire  signed [29:0] sext_ln28_62_fu_2731_p1;
reg  signed [29:0] sext_ln28_62_reg_4506;
wire  signed [29:0] sext_ln31_3_fu_2735_p1;
reg  signed [29:0] sext_ln31_3_reg_4511;
wire   [0:0] icmp_ln33_6_fu_2739_p2;
wire   [7:0] add_ln33_11_fu_2744_p2;
reg   [7:0] add_ln33_11_reg_4520;
wire   [3:0] out_w_0_3_mid2_fu_2761_p3;
reg   [3:0] out_w_0_3_mid2_reg_4525;
wire   [3:0] tmp10_3_0_0_cast_mid_fu_2769_p3;
reg   [3:0] tmp10_3_0_0_cast_mid_reg_4532;
wire   [6:0] tmp10_3_0_0_cast_mid_6_fu_2781_p2;
reg   [6:0] tmp10_3_0_0_cast_mid_6_reg_4537;
wire   [10:0] tmp10_3_0_0_cast_mid_8_fu_2790_p2;
reg   [10:0] tmp10_3_0_0_cast_mid_8_reg_4543;
wire   [6:0] tmp12_3_cast_mid2_v_s_fu_2795_p2;
reg   [6:0] tmp12_3_cast_mid2_v_s_reg_4550;
wire   [10:0] tmp10_3_1_0_cast_mid_4_fu_2809_p2;
reg   [10:0] tmp10_3_1_0_cast_mid_4_reg_4555;
wire   [10:0] zext_ln41_93_fu_2814_p1;
reg   [10:0] zext_ln41_93_reg_4562;
wire   [3:0] add_ln41_77_fu_2827_p2;
reg   [3:0] add_ln41_77_reg_4574;
wire   [10:0] zext_ln41_95_fu_2832_p1;
reg   [10:0] zext_ln41_95_reg_4579;
wire   [10:0] tmp10_3_2_0_cast_mid_4_fu_2855_p2;
reg   [10:0] tmp10_3_2_0_cast_mid_4_reg_4590;
wire   [10:0] zext_ln41_97_fu_2868_p1;
reg   [10:0] zext_ln41_97_reg_4597;
wire   [10:0] grp_fu_3283_p3;
reg   [10:0] add_ln49_3_reg_4613;
reg   [10:0] add_ln49_3_reg_4613_pp3_iter1_reg;
reg   [15:0] trunc_ln49_60_reg_4618;
reg   [15:0] trunc_ln49_61_reg_4623;
wire   [10:0] add_ln41_84_fu_2935_p2;
reg   [10:0] add_ln41_84_reg_4638;
wire   [10:0] add_ln41_85_fu_2939_p2;
reg   [10:0] add_ln41_85_reg_4643;
wire   [10:0] add_ln41_86_fu_2943_p2;
reg   [10:0] add_ln41_86_reg_4648;
reg   [15:0] trunc_ln49_62_reg_4653;
reg   [15:0] trunc_ln49_63_reg_4658;
wire   [15:0] add_ln49_63_fu_2981_p2;
reg   [15:0] add_ln49_63_reg_4673;
reg   [15:0] trunc_ln49_64_reg_4678;
reg   [15:0] trunc_ln49_65_reg_4683;
wire   [15:0] add_ln49_65_fu_3020_p2;
reg   [15:0] add_ln49_65_reg_4693;
reg   [15:0] trunc_ln49_66_reg_4698;
reg   [15:0] trunc_ln49_67_reg_4703;
reg   [15:0] trunc_ln49_68_reg_4708;
wire   [15:0] add_ln49_70_fu_3077_p2;
reg   [15:0] add_ln49_70_reg_4713;
wire   [3:0] add_ln23_fu_3097_p2;
wire    ap_CS_fsm_state66;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state8;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state24;
wire    ap_block_pp1_stage4_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state40;
wire    ap_block_pp2_stage4_subdone;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state56;
wire    ap_block_pp3_stage4_subdone;
reg   [3:0] out_d_0_0_reg_796;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_812_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_out_h_0_0_phi_fu_823_p4;
reg   [3:0] ap_phi_mux_out_w_0_0_phi_fu_834_p4;
reg   [7:0] ap_phi_mux_indvar_flatten34_phi_fu_845_p4;
wire    ap_block_pp1_stage0;
reg   [3:0] ap_phi_mux_out_h_0_1_phi_fu_856_p4;
reg   [3:0] ap_phi_mux_out_w_0_1_phi_fu_867_p4;
reg   [7:0] ap_phi_mux_indvar_flatten53_phi_fu_878_p4;
wire    ap_block_pp2_stage0;
reg   [3:0] ap_phi_mux_out_h_0_2_phi_fu_889_p4;
reg   [3:0] ap_phi_mux_out_w_0_2_phi_fu_900_p4;
reg   [7:0] ap_phi_mux_indvar_flatten72_phi_fu_911_p4;
wire    ap_block_pp3_stage0;
reg   [3:0] ap_phi_mux_out_h_0_3_phi_fu_922_p4;
reg   [3:0] ap_phi_mux_out_w_0_3_phi_fu_933_p4;
wire   [63:0] zext_ln28_40_fu_1051_p1;
wire   [63:0] zext_ln28_41_fu_1061_p1;
wire   [63:0] zext_ln28_42_fu_1071_p1;
wire   [63:0] zext_ln28_43_fu_1084_p1;
wire   [63:0] zext_ln28_44_fu_1095_p1;
wire   [63:0] zext_ln28_45_fu_1105_p1;
wire   [63:0] zext_ln28_46_fu_1115_p1;
wire   [63:0] zext_ln28_47_fu_1125_p1;
wire   [63:0] zext_ln28_48_fu_1135_p1;
wire   [63:0] zext_ln31_fu_1140_p1;
wire   [63:0] zext_ln41_56_fu_1282_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln41_58_fu_1301_p1;
wire   [63:0] zext_ln41_61_fu_1337_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln41_62_fu_1346_p1;
wire   [63:0] zext_ln41_63_fu_1381_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln41_64_fu_1390_p1;
wire   [63:0] zext_ln41_65_fu_1433_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln41_66_fu_1437_p1;
wire   [63:0] zext_ln41_67_fu_1472_p1;
wire   [63:0] zext_ln49_5_fu_1553_p1;
wire   [63:0] zext_ln28_49_fu_1570_p1;
wire   [63:0] zext_ln28_50_fu_1584_p1;
wire   [63:0] zext_ln28_51_fu_1594_p1;
wire   [63:0] zext_ln28_52_fu_1604_p1;
wire   [63:0] zext_ln28_53_fu_1614_p1;
wire   [63:0] zext_ln28_54_fu_1624_p1;
wire   [63:0] zext_ln28_55_fu_1634_p1;
wire   [63:0] zext_ln28_56_fu_1644_p1;
wire   [63:0] zext_ln28_57_fu_1654_p1;
wire   [63:0] zext_ln31_1_fu_1659_p1;
wire   [63:0] zext_ln41_69_fu_1795_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln41_71_fu_1814_p1;
wire   [63:0] zext_ln41_73_fu_1850_p1;
wire    ap_block_pp1_stage2;
wire   [63:0] zext_ln41_75_fu_1859_p1;
wire   [63:0] zext_ln41_76_fu_1894_p1;
wire    ap_block_pp1_stage3;
wire   [63:0] zext_ln41_77_fu_1903_p1;
wire   [63:0] zext_ln41_78_fu_1946_p1;
wire    ap_block_pp1_stage4;
wire   [63:0] zext_ln41_79_fu_1950_p1;
wire   [63:0] zext_ln41_80_fu_1985_p1;
wire   [63:0] zext_ln49_6_fu_2066_p1;
wire   [63:0] zext_ln28_58_fu_2083_p1;
wire   [63:0] zext_ln28_59_fu_2096_p1;
wire   [63:0] zext_ln28_60_fu_2107_p1;
wire   [63:0] zext_ln28_61_fu_2117_p1;
wire   [63:0] zext_ln28_62_fu_2127_p1;
wire   [63:0] zext_ln28_63_fu_2137_p1;
wire   [63:0] zext_ln28_64_fu_2147_p1;
wire   [63:0] zext_ln28_65_fu_2157_p1;
wire   [63:0] zext_ln28_66_fu_2167_p1;
wire   [63:0] zext_ln31_2_fu_2172_p1;
wire   [63:0] zext_ln41_82_fu_2308_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln41_84_fu_2327_p1;
wire   [63:0] zext_ln41_86_fu_2363_p1;
wire    ap_block_pp2_stage2;
wire   [63:0] zext_ln41_87_fu_2372_p1;
wire   [63:0] zext_ln41_88_fu_2407_p1;
wire    ap_block_pp2_stage3;
wire   [63:0] zext_ln41_89_fu_2416_p1;
wire   [63:0] zext_ln41_90_fu_2459_p1;
wire    ap_block_pp2_stage4;
wire   [63:0] zext_ln41_91_fu_2463_p1;
wire   [63:0] zext_ln41_92_fu_2498_p1;
wire   [63:0] zext_ln49_7_fu_2579_p1;
wire   [63:0] zext_ln28_67_fu_2596_p1;
wire   [63:0] zext_ln28_68_fu_2610_p1;
wire   [63:0] zext_ln28_69_fu_2621_p1;
wire   [63:0] zext_ln28_70_fu_2631_p1;
wire   [63:0] zext_ln28_71_fu_2641_p1;
wire   [63:0] zext_ln28_72_fu_2651_p1;
wire   [63:0] zext_ln28_73_fu_2661_p1;
wire   [63:0] zext_ln28_74_fu_2671_p1;
wire   [63:0] zext_ln28_75_fu_2681_p1;
wire   [63:0] zext_ln31_3_fu_2686_p1;
wire   [63:0] zext_ln41_94_fu_2822_p1;
wire    ap_block_pp3_stage1;
wire   [63:0] zext_ln41_96_fu_2841_p1;
wire   [63:0] zext_ln41_98_fu_2877_p1;
wire    ap_block_pp3_stage2;
wire   [63:0] zext_ln41_99_fu_2886_p1;
wire   [63:0] zext_ln41_100_fu_2921_p1;
wire    ap_block_pp3_stage3;
wire   [63:0] zext_ln41_101_fu_2930_p1;
wire   [63:0] zext_ln41_102_fu_2973_p1;
wire    ap_block_pp3_stage4;
wire   [63:0] zext_ln41_103_fu_2977_p1;
wire   [63:0] zext_ln41_104_fu_3012_p1;
wire   [63:0] zext_ln49_8_fu_3093_p1;
wire   [15:0] add_ln49_43_fu_1547_p2;
wire   [15:0] add_ln49_53_fu_2060_p2;
wire   [15:0] add_ln49_62_fu_2573_p2;
wire   [15:0] add_ln49_71_fu_3087_p2;
wire   [3:0] empty_71_fu_993_p1;
wire   [3:0] mul_ln4_fu_1021_p0;
wire   [3:0] mul_ln4_fu_1021_p1;
wire   [1:0] tmp_2_fu_1033_p4;
wire   [5:0] or_ln28_fu_1056_p2;
wire   [5:0] or_ln28_5_fu_1066_p2;
wire   [5:0] or_ln28_6_fu_1079_p2;
wire   [6:0] add_ln28_fu_1089_p2;
wire   [6:0] add_ln28_29_fu_1100_p2;
wire   [6:0] add_ln28_30_fu_1110_p2;
wire   [6:0] add_ln28_31_fu_1120_p2;
wire   [6:0] add_ln28_32_fu_1130_p2;
wire   [3:0] mul_ln41_fu_1189_p0;
wire   [6:0] zext_ln41_53_fu_1185_p1;
wire   [5:0] mul_ln41_fu_1189_p1;
wire   [3:0] mul_ln49_fu_1194_p0;
wire   [4:0] mul_ln49_fu_1194_p1;
wire   [0:0] icmp_ln34_fu_1216_p2;
wire   [3:0] add_ln33_fu_1210_p2;
wire   [6:0] tmp10_0_0_0_cast_mid_5_fu_1237_p1;
wire   [5:0] tmp10_0_0_0_cast_mid_8_fu_1250_p0;
wire   [6:0] tmp10_0_0_0_cast_mid_8_fu_1250_p1;
wire   [6:0] tmp10_0_1_0_cast_mid_fu_1260_p2;
wire   [5:0] tmp10_0_1_0_cast_mid_4_fu_1269_p0;
wire   [6:0] tmp10_0_1_0_cast_mid_4_fu_1269_p1;
wire   [10:0] add_ln41_fu_1277_p2;
wire   [10:0] add_ln41_45_fu_1296_p2;
wire   [6:0] tmp10_0_2_0_cast_mid_fu_1306_p2;
wire   [5:0] tmp10_0_2_0_cast_mid_4_fu_1315_p0;
wire   [6:0] tmp10_0_2_0_cast_mid_4_fu_1315_p1;
wire   [3:0] add_ln41_46_fu_1323_p2;
wire   [10:0] add_ln41_47_fu_1332_p2;
wire   [10:0] add_ln41_48_fu_1342_p2;
wire  signed [29:0] mul_ln41_38_fu_3109_p2;
wire  signed [29:0] mul_ln41_39_fu_3115_p2;
wire   [10:0] add_ln41_49_fu_1377_p2;
wire   [10:0] add_ln41_50_fu_1386_p2;
wire  signed [29:0] mul_ln41_40_fu_3121_p2;
wire  signed [29:0] mul_ln41_41_fu_3127_p2;
wire  signed [29:0] mul_ln41_42_fu_3133_p2;
wire  signed [29:0] mul_ln41_43_fu_3139_p2;
wire   [15:0] add_ln49_36_fu_1476_p2;
wire  signed [29:0] mul_ln41_44_fu_3145_p2;
wire  signed [29:0] mul_ln41_45_fu_3151_p2;
wire  signed [29:0] mul_ln41_46_fu_3157_p2;
wire   [15:0] add_ln49_40_fu_1528_p2;
wire   [15:0] add_ln49_41_fu_1532_p2;
wire   [15:0] add_ln49_39_fu_1524_p2;
wire   [15:0] add_ln49_38_fu_1543_p2;
wire   [6:0] add_ln28_33_fu_1578_p2;
wire   [5:0] or_ln28_7_fu_1589_p2;
wire   [6:0] add_ln28_34_fu_1599_p2;
wire   [6:0] add_ln28_35_fu_1609_p2;
wire   [6:0] add_ln28_36_fu_1619_p2;
wire   [6:0] add_ln28_37_fu_1629_p2;
wire   [6:0] add_ln28_38_fu_1639_p2;
wire   [6:0] add_ln28_39_fu_1649_p2;
wire   [5:0] mul_ln41_36_fu_1702_p0;
wire   [2:0] mul_ln41_36_fu_1702_p1;
wire   [6:0] zext_ln41_54_fu_1699_p1;
wire   [4:0] mul_ln49_1_fu_1707_p0;
wire   [2:0] mul_ln49_1_fu_1707_p1;
wire   [0:0] icmp_ln34_4_fu_1729_p2;
wire   [3:0] add_ln33_4_fu_1723_p2;
wire   [6:0] tmp10_1_0_0_cast_mid_5_fu_1750_p1;
wire   [5:0] tmp10_1_0_0_cast_mid_8_fu_1763_p0;
wire   [6:0] tmp10_1_0_0_cast_mid_8_fu_1763_p1;
wire   [6:0] tmp10_1_1_0_cast_mid_fu_1773_p2;
wire   [5:0] tmp10_1_1_0_cast_mid_4_fu_1782_p0;
wire   [6:0] tmp10_1_1_0_cast_mid_4_fu_1782_p1;
wire   [10:0] add_ln41_54_fu_1790_p2;
wire   [10:0] add_ln41_56_fu_1809_p2;
wire   [6:0] tmp10_1_2_0_cast_mid_fu_1819_p2;
wire   [5:0] tmp10_1_2_0_cast_mid_4_fu_1828_p0;
wire   [6:0] tmp10_1_2_0_cast_mid_4_fu_1828_p1;
wire   [3:0] add_ln41_57_fu_1836_p2;
wire   [10:0] add_ln41_58_fu_1845_p2;
wire   [10:0] add_ln41_59_fu_1855_p2;
wire  signed [29:0] mul_ln41_48_fu_3169_p2;
wire  signed [29:0] mul_ln41_49_fu_3175_p2;
wire   [10:0] add_ln41_60_fu_1890_p2;
wire   [10:0] add_ln41_61_fu_1899_p2;
wire  signed [29:0] mul_ln41_50_fu_3181_p2;
wire  signed [29:0] mul_ln41_51_fu_3187_p2;
wire  signed [29:0] mul_ln41_52_fu_3193_p2;
wire  signed [29:0] mul_ln41_53_fu_3199_p2;
wire   [15:0] add_ln49_46_fu_1989_p2;
wire  signed [29:0] mul_ln41_54_fu_3205_p2;
wire  signed [29:0] mul_ln41_55_fu_3211_p2;
wire  signed [29:0] mul_ln41_56_fu_3217_p2;
wire   [15:0] add_ln49_50_fu_2041_p2;
wire   [15:0] add_ln49_51_fu_2045_p2;
wire   [15:0] add_ln49_49_fu_2037_p2;
wire   [15:0] add_ln49_48_fu_2056_p2;
wire   [5:0] or_ln28_8_fu_2091_p2;
wire   [6:0] add_ln28_40_fu_2101_p2;
wire   [6:0] add_ln28_41_fu_2112_p2;
wire   [6:0] add_ln28_42_fu_2122_p2;
wire   [6:0] add_ln28_43_fu_2132_p2;
wire   [6:0] add_ln28_44_fu_2142_p2;
wire   [6:0] add_ln28_45_fu_2152_p2;
wire   [6:0] add_ln28_46_fu_2162_p2;
wire   [5:0] mul_ln41_37_fu_2215_p0;
wire   [2:0] mul_ln41_37_fu_2215_p1;
wire   [6:0] zext_ln41_60_fu_2212_p1;
wire   [4:0] mul_ln49_2_fu_2220_p0;
wire   [2:0] mul_ln49_2_fu_2220_p1;
wire   [0:0] icmp_ln34_5_fu_2242_p2;
wire   [3:0] add_ln33_5_fu_2236_p2;
wire   [6:0] tmp10_2_0_0_cast_mid_5_fu_2263_p1;
wire   [5:0] tmp10_2_0_0_cast_mid_8_fu_2276_p0;
wire   [6:0] tmp10_2_0_0_cast_mid_8_fu_2276_p1;
wire   [6:0] tmp10_2_1_0_cast_mid_fu_2286_p2;
wire   [5:0] tmp10_2_1_0_cast_mid_4_fu_2295_p0;
wire   [6:0] tmp10_2_1_0_cast_mid_4_fu_2295_p1;
wire   [10:0] add_ln41_65_fu_2303_p2;
wire   [10:0] add_ln41_67_fu_2322_p2;
wire   [6:0] tmp10_2_2_0_cast_mid_fu_2332_p2;
wire   [5:0] tmp10_2_2_0_cast_mid_4_fu_2341_p0;
wire   [6:0] tmp10_2_2_0_cast_mid_4_fu_2341_p1;
wire   [3:0] add_ln41_68_fu_2349_p2;
wire   [10:0] add_ln41_69_fu_2358_p2;
wire   [10:0] add_ln41_70_fu_2368_p2;
wire  signed [29:0] mul_ln41_57_fu_3229_p2;
wire  signed [29:0] mul_ln41_58_fu_3235_p2;
wire   [10:0] add_ln41_71_fu_2403_p2;
wire   [10:0] add_ln41_72_fu_2412_p2;
wire  signed [29:0] mul_ln41_59_fu_3241_p2;
wire  signed [29:0] mul_ln41_60_fu_3247_p2;
wire  signed [29:0] mul_ln41_61_fu_3253_p2;
wire  signed [29:0] mul_ln41_62_fu_3259_p2;
wire   [15:0] add_ln49_55_fu_2502_p2;
wire  signed [29:0] mul_ln41_63_fu_3265_p2;
wire  signed [29:0] mul_ln41_64_fu_3271_p2;
wire  signed [29:0] mul_ln41_65_fu_3277_p2;
wire   [15:0] add_ln49_59_fu_2554_p2;
wire   [15:0] add_ln49_60_fu_2558_p2;
wire   [15:0] add_ln49_58_fu_2550_p2;
wire   [15:0] add_ln49_57_fu_2569_p2;
wire   [6:0] add_ln28_47_fu_2604_p2;
wire   [6:0] add_ln28_48_fu_2615_p2;
wire   [6:0] add_ln28_49_fu_2626_p2;
wire   [6:0] add_ln28_50_fu_2636_p2;
wire   [6:0] add_ln28_51_fu_2646_p2;
wire   [6:0] add_ln28_52_fu_2656_p2;
wire   [6:0] add_ln28_53_fu_2666_p2;
wire   [6:0] add_ln28_54_fu_2676_p2;
wire   [5:0] mul_ln41_47_fu_2693_p0;
wire   [2:0] mul_ln41_47_fu_2693_p1;
wire   [6:0] zext_ln41_74_fu_2690_p1;
wire   [4:0] mul_ln49_3_fu_2698_p0;
wire   [2:0] mul_ln49_3_fu_2698_p1;
wire   [0:0] icmp_ln34_6_fu_2756_p2;
wire   [3:0] add_ln33_6_fu_2750_p2;
wire   [6:0] tmp10_3_0_0_cast_mid_5_fu_2777_p1;
wire   [5:0] tmp10_3_0_0_cast_mid_8_fu_2790_p0;
wire   [6:0] tmp10_3_0_0_cast_mid_8_fu_2790_p1;
wire   [6:0] tmp10_3_1_0_cast_mid_fu_2800_p2;
wire   [5:0] tmp10_3_1_0_cast_mid_4_fu_2809_p0;
wire   [6:0] tmp10_3_1_0_cast_mid_4_fu_2809_p1;
wire   [10:0] add_ln41_76_fu_2817_p2;
wire   [10:0] add_ln41_78_fu_2836_p2;
wire   [6:0] tmp10_3_2_0_cast_mid_fu_2846_p2;
wire   [5:0] tmp10_3_2_0_cast_mid_4_fu_2855_p0;
wire   [6:0] tmp10_3_2_0_cast_mid_4_fu_2855_p1;
wire   [3:0] add_ln41_79_fu_2863_p2;
wire   [10:0] add_ln41_80_fu_2872_p2;
wire   [10:0] add_ln41_81_fu_2882_p2;
wire  signed [29:0] mul_ln41_66_fu_3289_p2;
wire  signed [29:0] mul_ln41_67_fu_3295_p2;
wire   [10:0] add_ln41_82_fu_2917_p2;
wire   [10:0] add_ln41_83_fu_2926_p2;
wire  signed [29:0] mul_ln41_68_fu_3301_p2;
wire  signed [29:0] mul_ln41_69_fu_3307_p2;
wire  signed [29:0] mul_ln41_70_fu_3313_p2;
wire  signed [29:0] mul_ln41_71_fu_3319_p2;
wire   [15:0] add_ln49_64_fu_3016_p2;
wire  signed [29:0] mul_ln41_72_fu_3325_p2;
wire  signed [29:0] mul_ln41_73_fu_3331_p2;
wire  signed [29:0] mul_ln41_74_fu_3337_p2;
wire   [15:0] add_ln49_68_fu_3068_p2;
wire   [15:0] add_ln49_69_fu_3072_p2;
wire   [15:0] add_ln49_67_fu_3064_p2;
wire   [15:0] add_ln49_66_fu_3083_p2;
wire   [4:0] grp_fu_3103_p0;
wire   [6:0] grp_fu_3103_p1;
wire   [3:0] grp_fu_3103_p2;
wire  signed [15:0] mul_ln41_38_fu_3109_p0;
wire  signed [15:0] mul_ln41_39_fu_3115_p0;
wire  signed [15:0] mul_ln41_40_fu_3121_p0;
wire  signed [15:0] mul_ln41_41_fu_3127_p0;
wire  signed [15:0] mul_ln41_42_fu_3133_p0;
wire  signed [15:0] mul_ln41_43_fu_3139_p0;
wire  signed [15:0] mul_ln41_44_fu_3145_p0;
wire  signed [15:0] mul_ln41_45_fu_3151_p0;
wire  signed [15:0] mul_ln41_46_fu_3157_p0;
wire   [4:0] grp_fu_3163_p0;
wire   [6:0] grp_fu_3163_p1;
wire   [3:0] grp_fu_3163_p2;
wire  signed [15:0] mul_ln41_48_fu_3169_p0;
wire  signed [15:0] mul_ln41_49_fu_3175_p0;
wire  signed [15:0] mul_ln41_50_fu_3181_p0;
wire  signed [15:0] mul_ln41_51_fu_3187_p0;
wire  signed [15:0] mul_ln41_52_fu_3193_p0;
wire  signed [15:0] mul_ln41_53_fu_3199_p0;
wire  signed [15:0] mul_ln41_54_fu_3205_p0;
wire  signed [15:0] mul_ln41_55_fu_3211_p0;
wire  signed [15:0] mul_ln41_56_fu_3217_p0;
wire   [4:0] grp_fu_3223_p0;
wire   [6:0] grp_fu_3223_p1;
wire   [3:0] grp_fu_3223_p2;
wire  signed [15:0] mul_ln41_57_fu_3229_p0;
wire  signed [15:0] mul_ln41_58_fu_3235_p0;
wire  signed [15:0] mul_ln41_59_fu_3241_p0;
wire  signed [15:0] mul_ln41_60_fu_3247_p0;
wire  signed [15:0] mul_ln41_61_fu_3253_p0;
wire  signed [15:0] mul_ln41_62_fu_3259_p0;
wire  signed [15:0] mul_ln41_63_fu_3265_p0;
wire  signed [15:0] mul_ln41_64_fu_3271_p0;
wire  signed [15:0] mul_ln41_65_fu_3277_p0;
wire   [4:0] grp_fu_3283_p0;
wire   [6:0] grp_fu_3283_p1;
wire   [3:0] grp_fu_3283_p2;
wire  signed [15:0] mul_ln41_66_fu_3289_p0;
wire  signed [15:0] mul_ln41_67_fu_3295_p0;
wire  signed [15:0] mul_ln41_68_fu_3301_p0;
wire  signed [15:0] mul_ln41_69_fu_3307_p0;
wire  signed [15:0] mul_ln41_70_fu_3313_p0;
wire  signed [15:0] mul_ln41_71_fu_3319_p0;
wire  signed [15:0] mul_ln41_72_fu_3325_p0;
wire  signed [15:0] mul_ln41_73_fu_3331_p0;
wire  signed [15:0] mul_ln41_74_fu_3337_p0;
reg   [45:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage3_subdone;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp2_stage2_subdone;
wire    ap_block_pp2_stage3_subdone;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp3_stage2_subdone;
wire    ap_block_pp3_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [10:0] grp_fu_3103_p10;
wire   [10:0] grp_fu_3163_p10;
wire   [10:0] grp_fu_3223_p10;
wire   [10:0] grp_fu_3283_p10;
wire   [7:0] mul_ln4_fu_1021_p00;
wire   [7:0] mul_ln4_fu_1021_p10;
wire   [10:0] tmp10_0_0_0_cast_mid_8_fu_1250_p10;
wire   [10:0] tmp10_0_1_0_cast_mid_4_fu_1269_p10;
wire   [10:0] tmp10_0_2_0_cast_mid_4_fu_1315_p10;
wire   [10:0] tmp10_1_0_0_cast_mid_8_fu_1763_p10;
wire   [10:0] tmp10_1_1_0_cast_mid_4_fu_1782_p10;
wire   [10:0] tmp10_1_2_0_cast_mid_4_fu_1828_p10;
wire   [10:0] tmp10_2_0_0_cast_mid_8_fu_2276_p10;
wire   [10:0] tmp10_2_1_0_cast_mid_4_fu_2295_p10;
wire   [10:0] tmp10_2_2_0_cast_mid_4_fu_2341_p10;
wire   [10:0] tmp10_3_0_0_cast_mid_8_fu_2790_p10;
wire   [10:0] tmp10_3_1_0_cast_mid_4_fu_2809_p10;
wire   [10:0] tmp10_3_2_0_cast_mid_4_fu_2855_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 46'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
end

network_mac_muladd_5ns_7ns_4ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
network_mac_muladd_5ns_7ns_4ns_11_1_1_U121(
    .din0(grp_fu_3103_p0),
    .din1(grp_fu_3103_p1),
    .din2(grp_fu_3103_p2),
    .dout(grp_fu_3103_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U122(
    .din0(mul_ln41_38_fu_3109_p0),
    .din1(reg_979),
    .dout(mul_ln41_38_fu_3109_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U123(
    .din0(mul_ln41_39_fu_3115_p0),
    .din1(reg_984),
    .dout(mul_ln41_39_fu_3115_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U124(
    .din0(mul_ln41_40_fu_3121_p0),
    .din1(reg_979),
    .dout(mul_ln41_40_fu_3121_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U125(
    .din0(mul_ln41_41_fu_3127_p0),
    .din1(reg_984),
    .dout(mul_ln41_41_fu_3127_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U126(
    .din0(mul_ln41_42_fu_3133_p0),
    .din1(reg_979),
    .dout(mul_ln41_42_fu_3133_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U127(
    .din0(mul_ln41_43_fu_3139_p0),
    .din1(reg_984),
    .dout(mul_ln41_43_fu_3139_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U128(
    .din0(mul_ln41_44_fu_3145_p0),
    .din1(reg_979),
    .dout(mul_ln41_44_fu_3145_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U129(
    .din0(mul_ln41_45_fu_3151_p0),
    .din1(reg_984),
    .dout(mul_ln41_45_fu_3151_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U130(
    .din0(mul_ln41_46_fu_3157_p0),
    .din1(reg_979),
    .dout(mul_ln41_46_fu_3157_p2)
);

network_mac_muladd_5ns_7ns_4ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
network_mac_muladd_5ns_7ns_4ns_11_1_1_U131(
    .din0(grp_fu_3163_p0),
    .din1(grp_fu_3163_p1),
    .din2(grp_fu_3163_p2),
    .dout(grp_fu_3163_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U132(
    .din0(mul_ln41_48_fu_3169_p0),
    .din1(reg_979),
    .dout(mul_ln41_48_fu_3169_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U133(
    .din0(mul_ln41_49_fu_3175_p0),
    .din1(reg_984),
    .dout(mul_ln41_49_fu_3175_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U134(
    .din0(mul_ln41_50_fu_3181_p0),
    .din1(reg_979),
    .dout(mul_ln41_50_fu_3181_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U135(
    .din0(mul_ln41_51_fu_3187_p0),
    .din1(reg_984),
    .dout(mul_ln41_51_fu_3187_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U136(
    .din0(mul_ln41_52_fu_3193_p0),
    .din1(reg_979),
    .dout(mul_ln41_52_fu_3193_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U137(
    .din0(mul_ln41_53_fu_3199_p0),
    .din1(reg_984),
    .dout(mul_ln41_53_fu_3199_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U138(
    .din0(mul_ln41_54_fu_3205_p0),
    .din1(reg_979),
    .dout(mul_ln41_54_fu_3205_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U139(
    .din0(mul_ln41_55_fu_3211_p0),
    .din1(reg_984),
    .dout(mul_ln41_55_fu_3211_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U140(
    .din0(mul_ln41_56_fu_3217_p0),
    .din1(reg_979),
    .dout(mul_ln41_56_fu_3217_p2)
);

network_mac_muladd_5ns_7ns_4ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
network_mac_muladd_5ns_7ns_4ns_11_1_1_U141(
    .din0(grp_fu_3223_p0),
    .din1(grp_fu_3223_p1),
    .din2(grp_fu_3223_p2),
    .dout(grp_fu_3223_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U142(
    .din0(mul_ln41_57_fu_3229_p0),
    .din1(reg_979),
    .dout(mul_ln41_57_fu_3229_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U143(
    .din0(mul_ln41_58_fu_3235_p0),
    .din1(reg_984),
    .dout(mul_ln41_58_fu_3235_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U144(
    .din0(mul_ln41_59_fu_3241_p0),
    .din1(reg_979),
    .dout(mul_ln41_59_fu_3241_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U145(
    .din0(mul_ln41_60_fu_3247_p0),
    .din1(reg_984),
    .dout(mul_ln41_60_fu_3247_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U146(
    .din0(mul_ln41_61_fu_3253_p0),
    .din1(reg_979),
    .dout(mul_ln41_61_fu_3253_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U147(
    .din0(mul_ln41_62_fu_3259_p0),
    .din1(reg_984),
    .dout(mul_ln41_62_fu_3259_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U148(
    .din0(mul_ln41_63_fu_3265_p0),
    .din1(reg_979),
    .dout(mul_ln41_63_fu_3265_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U149(
    .din0(mul_ln41_64_fu_3271_p0),
    .din1(reg_984),
    .dout(mul_ln41_64_fu_3271_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U150(
    .din0(mul_ln41_65_fu_3277_p0),
    .din1(reg_979),
    .dout(mul_ln41_65_fu_3277_p2)
);

network_mac_muladd_5ns_7ns_4ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 11 ))
network_mac_muladd_5ns_7ns_4ns_11_1_1_U151(
    .din0(grp_fu_3283_p0),
    .din1(grp_fu_3283_p1),
    .din2(grp_fu_3283_p2),
    .dout(grp_fu_3283_p3)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U152(
    .din0(mul_ln41_66_fu_3289_p0),
    .din1(reg_979),
    .dout(mul_ln41_66_fu_3289_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U153(
    .din0(mul_ln41_67_fu_3295_p0),
    .din1(reg_984),
    .dout(mul_ln41_67_fu_3295_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U154(
    .din0(mul_ln41_68_fu_3301_p0),
    .din1(reg_979),
    .dout(mul_ln41_68_fu_3301_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U155(
    .din0(mul_ln41_69_fu_3307_p0),
    .din1(reg_984),
    .dout(mul_ln41_69_fu_3307_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U156(
    .din0(mul_ln41_70_fu_3313_p0),
    .din1(reg_979),
    .dout(mul_ln41_70_fu_3313_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U157(
    .din0(mul_ln41_71_fu_3319_p0),
    .din1(reg_984),
    .dout(mul_ln41_71_fu_3319_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U158(
    .din0(mul_ln41_72_fu_3325_p0),
    .din1(reg_979),
    .dout(mul_ln41_72_fu_3325_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U159(
    .din0(mul_ln41_73_fu_3331_p0),
    .din1(reg_984),
    .dout(mul_ln41_73_fu_3331_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U160(
    .din0(mul_ln41_74_fu_3337_p0),
    .din1(reg_979),
    .dout(mul_ln41_74_fu_3337_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state8) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state24) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_subdone))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state40) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_subdone))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state56) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten34_reg_841 <= add_ln33_9_reg_3863;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        indvar_flatten34_reg_841 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten53_reg_874 <= add_ln33_10_reg_4192;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        indvar_flatten53_reg_874 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten72_reg_907 <= add_ln33_11_reg_4520;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        indvar_flatten72_reg_907 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_808 <= add_ln33_8_reg_3534;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_808 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        out_d_0_0_reg_796 <= add_ln23_fu_3097_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        out_d_0_0_reg_796 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_h_0_0_reg_819 <= tmp10_0_0_0_cast_mid_reg_3546;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_h_0_0_reg_819 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_h_0_1_reg_852 <= tmp10_1_0_0_cast_mid_reg_3875;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        out_h_0_1_reg_852 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        out_h_0_2_reg_885 <= tmp10_2_0_0_cast_mid_reg_4204;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        out_h_0_2_reg_885 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        out_h_0_3_reg_918 <= tmp10_3_0_0_cast_mid_reg_4532;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        out_h_0_3_reg_918 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_w_0_0_reg_830 <= add_ln41_44_reg_3588;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        out_w_0_0_reg_830 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_w_0_1_reg_863 <= add_ln41_55_reg_3917;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        out_w_0_1_reg_863 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        out_w_0_2_reg_896 <= add_ln41_66_reg_4246;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        out_w_0_2_reg_896 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        out_w_0_3_reg_929 <= add_ln41_77_reg_4574;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        out_w_0_3_reg_929 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_940 <= kernel_q1;
    end else if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_940 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        reg_945 <= kernel_q1;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_945 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        reg_950 <= kernel_q0;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_950 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_955 <= kernel_q0;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_955 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_960 <= kernel_q1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_960 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_965 <= kernel_q0;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_965 <= kernel_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_970 <= kernel_q1;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_970 <= kernel_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_6_reg_4516_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_4_reg_3859_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_979 <= input_r_q1;
    end else if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage4_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2)) | ((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_5_reg_4188_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln33_reg_3530 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_979 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_984 <= input_r_q0;
    end else if ((((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage4_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage4_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((icmp_ln33_reg_3530 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_984 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln28_1_reg_4067[0] <= add_ln28_1_fu_2075_p3[0];
add_ln28_1_reg_4067[3 : 2] <= add_ln28_1_fu_2075_p3[3 : 2];
add_ln28_1_reg_4067[5] <= add_ln28_1_fu_2075_p3[5];
        or_ln23_3_reg_4061[0] <= or_ln23_3_fu_2070_p2[0];
or_ln23_3_reg_4061[2] <= or_ln23_3_fu_2070_p2[2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        add_ln28_2_reg_4396[2] <= add_ln28_2_fu_2588_p3[2];
add_ln28_2_reg_4396[5] <= add_ln28_2_fu_2588_p3[5];
        or_ln23_4_reg_4390[2] <= or_ln23_4_fu_2583_p2[2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln28_s_reg_3738[2 : 1] <= add_ln28_s_fu_1562_p3[2 : 1];
add_ln28_s_reg_3738[5 : 4] <= add_ln28_s_fu_1562_p3[5 : 4];
        or_ln23_reg_3732[2 : 1] <= or_ln23_fu_1557_p2[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln33_10_reg_4192 <= add_ln33_10_fu_2230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln33_11_reg_4520 <= add_ln33_11_fu_2744_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln33_8_reg_3534 <= add_ln33_8_fu_1204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln33_9_reg_3863 <= add_ln33_9_fu_1717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln41_44_reg_3588 <= add_ln41_44_fu_1287_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln41_51_reg_3652 <= add_ln41_51_fu_1395_p2;
        add_ln41_52_reg_3657 <= add_ln41_52_fu_1399_p2;
        add_ln41_53_reg_3662 <= add_ln41_53_fu_1403_p2;
        trunc_ln49_s_reg_3637 <= {{mul_ln41_39_fu_3115_p2[29:14]}};
        trunc_ln_reg_3632 <= {{mul_ln41_38_fu_3109_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln41_55_reg_3917 <= add_ln41_55_fu_1800_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        add_ln41_62_reg_3981 <= add_ln41_62_fu_1908_p2;
        add_ln41_63_reg_3986 <= add_ln41_63_fu_1912_p2;
        add_ln41_64_reg_3991 <= add_ln41_64_fu_1916_p2;
        trunc_ln49_42_reg_3961 <= {{mul_ln41_48_fu_3169_p2[29:14]}};
        trunc_ln49_43_reg_3966 <= {{mul_ln41_49_fu_3175_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln41_66_reg_4246 <= add_ln41_66_fu_2313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        add_ln41_73_reg_4310 <= add_ln41_73_fu_2421_p2;
        add_ln41_74_reg_4315 <= add_ln41_74_fu_2425_p2;
        add_ln41_75_reg_4320 <= add_ln41_75_fu_2429_p2;
        trunc_ln49_51_reg_4290 <= {{mul_ln41_57_fu_3229_p2[29:14]}};
        trunc_ln49_52_reg_4295 <= {{mul_ln41_58_fu_3235_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln41_77_reg_4574 <= add_ln41_77_fu_2827_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3))) begin
        add_ln41_84_reg_4638 <= add_ln41_84_fu_2935_p2;
        add_ln41_85_reg_4643 <= add_ln41_85_fu_2939_p2;
        add_ln41_86_reg_4648 <= add_ln41_86_fu_2943_p2;
        trunc_ln49_60_reg_4618 <= {{mul_ln41_66_fu_3289_p2[29:14]}};
        trunc_ln49_61_reg_4623 <= {{mul_ln41_67_fu_3295_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        add_ln49_1_reg_3956 <= grp_fu_3163_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        add_ln49_1_reg_3956_pp1_iter1_reg <= add_ln49_1_reg_3956;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        add_ln49_2_reg_4285 <= grp_fu_3223_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        add_ln49_2_reg_4285_pp2_iter1_reg <= add_ln49_2_reg_4285;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln49_37_reg_3707 <= add_ln49_37_fu_1480_p2;
        trunc_ln49_37_reg_3692 <= {{mul_ln41_42_fu_3133_p2[29:14]}};
        trunc_ln49_38_reg_3697 <= {{mul_ln41_43_fu_3139_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        add_ln49_3_reg_4613 <= grp_fu_3283_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        add_ln49_3_reg_4613_pp3_iter1_reg <= add_ln49_3_reg_4613;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln33_reg_3530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln49_42_reg_3727 <= add_ln49_42_fu_1537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_reg_3530 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln49_44_reg_3627 <= grp_fu_3103_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln49_44_reg_3627_pp0_iter1_reg <= add_ln49_44_reg_3627;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage4_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage4))) begin
        add_ln49_45_reg_4016 <= add_ln49_45_fu_1954_p2;
        trunc_ln49_44_reg_3996 <= {{mul_ln41_50_fu_3181_p2[29:14]}};
        trunc_ln49_45_reg_4001 <= {{mul_ln41_51_fu_3187_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln49_47_reg_4036 <= add_ln49_47_fu_1993_p2;
        trunc_ln49_46_reg_4021 <= {{mul_ln41_52_fu_3193_p2[29:14]}};
        trunc_ln49_47_reg_4026 <= {{mul_ln41_53_fu_3199_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage3_11001) & (icmp_ln33_4_reg_3859_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
        add_ln49_52_reg_4056 <= add_ln49_52_fu_2050_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage4))) begin
        add_ln49_54_reg_4345 <= add_ln49_54_fu_2467_p2;
        trunc_ln49_53_reg_4325 <= {{mul_ln41_59_fu_3241_p2[29:14]}};
        trunc_ln49_54_reg_4330 <= {{mul_ln41_60_fu_3247_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln49_56_reg_4365 <= add_ln49_56_fu_2506_p2;
        trunc_ln49_55_reg_4350 <= {{mul_ln41_61_fu_3253_p2[29:14]}};
        trunc_ln49_56_reg_4355 <= {{mul_ln41_62_fu_3259_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage3_11001) & (icmp_ln33_5_reg_4188_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3))) begin
        add_ln49_61_reg_4385 <= add_ln49_61_fu_2563_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage4_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage4))) begin
        add_ln49_63_reg_4673 <= add_ln49_63_fu_2981_p2;
        trunc_ln49_62_reg_4653 <= {{mul_ln41_68_fu_3301_p2[29:14]}};
        trunc_ln49_63_reg_4658 <= {{mul_ln41_69_fu_3307_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln49_65_reg_4693 <= add_ln49_65_fu_3020_p2;
        trunc_ln49_64_reg_4678 <= {{mul_ln41_70_fu_3313_p2[29:14]}};
        trunc_ln49_65_reg_4683 <= {{mul_ln41_71_fu_3319_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage3_11001) & (icmp_ln33_6_reg_4516_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage3))) begin
        add_ln49_70_reg_4713 <= add_ln49_70_fu_3077_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln49_reg_3687 <= add_ln49_fu_1441_p2;
        trunc_ln49_35_reg_3667 <= {{mul_ln41_40_fu_3121_p2[29:14]}};
        trunc_ln49_36_reg_3672 <= {{mul_ln41_41_fu_3127_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_1027_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln_reg_3402 <= add_ln_fu_1043_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_72_reg_3367[5 : 0] <= empty_72_fu_1005_p1[5 : 0];
        empty_73_reg_3383[4 : 0] <= empty_73_fu_1009_p1[4 : 0];
        empty_reg_3343 <= empty_fu_989_p1;
        mul_ln4_reg_3391 <= mul_ln4_fu_1021_p2;
        zext_ln41_reg_3351[5 : 0] <= zext_ln41_fu_997_p1[5 : 0];
        zext_ln49_reg_3359[4 : 0] <= zext_ln49_fu_1001_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln33_4_reg_3859 <= icmp_ln33_4_fu_1712_p2;
        icmp_ln33_4_reg_3859_pp1_iter1_reg <= icmp_ln33_4_reg_3859;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln33_5_reg_4188 <= icmp_ln33_5_fu_2225_p2;
        icmp_ln33_5_reg_4188_pp2_iter1_reg <= icmp_ln33_5_reg_4188;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln33_6_reg_4516 <= icmp_ln33_6_fu_2739_p2;
        icmp_ln33_6_reg_4516_pp3_iter1_reg <= icmp_ln33_6_reg_4516;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln33_reg_3530 <= icmp_ln33_fu_1199_p2;
        icmp_ln33_reg_3530_pp0_iter1_reg <= icmp_ln33_reg_3530;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        mul_ln41_36_reg_3849 <= mul_ln41_36_fu_1702_p2;
        mul_ln49_1_reg_3854 <= mul_ln49_1_fu_1707_p2;
        sext_ln28_39_reg_3804 <= sext_ln28_39_fu_1663_p1;
        sext_ln28_40_reg_3809 <= sext_ln28_40_fu_1667_p1;
        sext_ln28_41_reg_3814 <= sext_ln28_41_fu_1671_p1;
        sext_ln28_42_reg_3819 <= sext_ln28_42_fu_1675_p1;
        sext_ln28_43_reg_3824 <= sext_ln28_43_fu_1679_p1;
        sext_ln28_44_reg_3829 <= sext_ln28_44_fu_1683_p1;
        sext_ln28_45_reg_3834 <= sext_ln28_45_fu_1687_p1;
        sext_ln28_46_reg_3839 <= sext_ln28_46_fu_1691_p1;
        sext_ln31_1_reg_3844 <= sext_ln31_1_fu_1695_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        mul_ln41_37_reg_4178 <= mul_ln41_37_fu_2215_p2;
        mul_ln49_2_reg_4183 <= mul_ln49_2_fu_2220_p2;
        sext_ln28_47_reg_4133 <= sext_ln28_47_fu_2176_p1;
        sext_ln28_48_reg_4138 <= sext_ln28_48_fu_2180_p1;
        sext_ln28_49_reg_4143 <= sext_ln28_49_fu_2184_p1;
        sext_ln28_50_reg_4148 <= sext_ln28_50_fu_2188_p1;
        sext_ln28_51_reg_4153 <= sext_ln28_51_fu_2192_p1;
        sext_ln28_52_reg_4158 <= sext_ln28_52_fu_2196_p1;
        sext_ln28_53_reg_4163 <= sext_ln28_53_fu_2200_p1;
        sext_ln28_54_reg_4168 <= sext_ln28_54_fu_2204_p1;
        sext_ln31_2_reg_4173 <= sext_ln31_2_fu_2208_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        mul_ln41_47_reg_4461 <= mul_ln41_47_fu_2693_p2;
        mul_ln49_3_reg_4466 <= mul_ln49_3_fu_2698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mul_ln41_reg_3520 <= mul_ln41_fu_1189_p2;
        mul_ln49_reg_3525 <= mul_ln49_fu_1194_p2;
        sext_ln28_32_reg_3480 <= sext_ln28_32_fu_1153_p1;
        sext_ln28_33_reg_3485 <= sext_ln28_33_fu_1157_p1;
        sext_ln28_34_reg_3490 <= sext_ln28_34_fu_1161_p1;
        sext_ln28_35_reg_3495 <= sext_ln28_35_fu_1165_p1;
        sext_ln28_36_reg_3500 <= sext_ln28_36_fu_1169_p1;
        sext_ln28_37_reg_3505 <= sext_ln28_37_fu_1173_p1;
        sext_ln28_38_reg_3510 <= sext_ln28_38_fu_1177_p1;
        sext_ln28_reg_3475 <= sext_ln28_fu_1149_p1;
        sext_ln31_reg_3515 <= sext_ln31_fu_1181_p1;
        trunc_ln23_reg_3468 <= trunc_ln23_fu_1145_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_fu_1199_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_w_0_0_mid2_reg_3539 <= out_w_0_0_mid2_fu_1221_p3;
        tmp10_0_0_0_cast_mid_6_reg_3551 <= tmp10_0_0_0_cast_mid_6_fu_1241_p2;
        tmp10_0_0_0_cast_mid_8_reg_3557 <= tmp10_0_0_0_cast_mid_8_fu_1250_p2;
        tmp12_0_cast_mid2_v_s_reg_3564 <= tmp12_0_cast_mid2_v_s_fu_1255_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_4_fu_1712_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        out_w_0_1_mid2_reg_3868 <= out_w_0_1_mid2_fu_1734_p3;
        tmp10_1_0_0_cast_mid_6_reg_3880 <= tmp10_1_0_0_cast_mid_6_fu_1754_p2;
        tmp10_1_0_0_cast_mid_8_reg_3886 <= tmp10_1_0_0_cast_mid_8_fu_1763_p2;
        tmp12_1_cast_mid2_v_s_reg_3893 <= tmp12_1_cast_mid2_v_s_fu_1768_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_5_fu_2225_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        out_w_0_2_mid2_reg_4197 <= out_w_0_2_mid2_fu_2247_p3;
        tmp10_2_0_0_cast_mid_6_reg_4209 <= tmp10_2_0_0_cast_mid_6_fu_2267_p2;
        tmp10_2_0_0_cast_mid_8_reg_4215 <= tmp10_2_0_0_cast_mid_8_fu_2276_p2;
        tmp12_2_cast_mid2_v_s_reg_4222 <= tmp12_2_cast_mid2_v_s_fu_2281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_6_fu_2739_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        out_w_0_3_mid2_reg_4525 <= out_w_0_3_mid2_fu_2761_p3;
        tmp10_3_0_0_cast_mid_6_reg_4537 <= tmp10_3_0_0_cast_mid_6_fu_2781_p2;
        tmp10_3_0_0_cast_mid_8_reg_4543 <= tmp10_3_0_0_cast_mid_8_fu_2790_p2;
        tmp12_3_cast_mid2_v_s_reg_4550 <= tmp12_3_cast_mid2_v_s_fu_2795_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_975 <= bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        sext_ln28_55_reg_4471 <= sext_ln28_55_fu_2703_p1;
        sext_ln28_56_reg_4476 <= sext_ln28_56_fu_2707_p1;
        sext_ln28_57_reg_4481 <= sext_ln28_57_fu_2711_p1;
        sext_ln28_58_reg_4486 <= sext_ln28_58_fu_2715_p1;
        sext_ln28_59_reg_4491 <= sext_ln28_59_fu_2719_p1;
        sext_ln28_60_reg_4496 <= sext_ln28_60_fu_2723_p1;
        sext_ln28_61_reg_4501 <= sext_ln28_61_fu_2727_p1;
        sext_ln28_62_reg_4506 <= sext_ln28_62_fu_2731_p1;
        sext_ln31_3_reg_4511 <= sext_ln31_3_fu_2735_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln33_fu_1199_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp10_0_0_0_cast_mid_reg_3546 <= tmp10_0_0_0_cast_mid_fu_1229_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3530 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp10_0_1_0_cast_mid_4_reg_3569 <= tmp10_0_1_0_cast_mid_4_fu_1269_p2;
        zext_ln41_55_reg_3576[3 : 0] <= zext_ln41_55_fu_1274_p1[3 : 0];
        zext_ln41_57_reg_3593[3 : 0] <= zext_ln41_57_fu_1292_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_reg_3530 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp10_0_2_0_cast_mid_4_reg_3604 <= tmp10_0_2_0_cast_mid_4_fu_1315_p2;
        zext_ln41_59_reg_3611[3 : 0] <= zext_ln41_59_fu_1328_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln33_4_fu_1712_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        tmp10_1_0_0_cast_mid_reg_3875 <= tmp10_1_0_0_cast_mid_fu_1742_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        tmp10_1_1_0_cast_mid_4_reg_3898 <= tmp10_1_1_0_cast_mid_4_fu_1782_p2;
        zext_ln41_68_reg_3905[3 : 0] <= zext_ln41_68_fu_1787_p1[3 : 0];
        zext_ln41_70_reg_3922[3 : 0] <= zext_ln41_70_fu_1805_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_4_reg_3859 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        tmp10_1_2_0_cast_mid_4_reg_3933 <= tmp10_1_2_0_cast_mid_4_fu_1828_p2;
        zext_ln41_72_reg_3940[3 : 0] <= zext_ln41_72_fu_1841_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln33_5_fu_2225_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        tmp10_2_0_0_cast_mid_reg_4204 <= tmp10_2_0_0_cast_mid_fu_2255_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        tmp10_2_1_0_cast_mid_4_reg_4227 <= tmp10_2_1_0_cast_mid_4_fu_2295_p2;
        zext_ln41_81_reg_4234[3 : 0] <= zext_ln41_81_fu_2300_p1[3 : 0];
        zext_ln41_83_reg_4251[3 : 0] <= zext_ln41_83_fu_2318_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_5_reg_4188 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        tmp10_2_2_0_cast_mid_4_reg_4262 <= tmp10_2_2_0_cast_mid_4_fu_2341_p2;
        zext_ln41_85_reg_4269[3 : 0] <= zext_ln41_85_fu_2354_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln33_6_fu_2739_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        tmp10_3_0_0_cast_mid_reg_4532 <= tmp10_3_0_0_cast_mid_fu_2769_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        tmp10_3_1_0_cast_mid_4_reg_4555 <= tmp10_3_1_0_cast_mid_4_fu_2809_p2;
        zext_ln41_93_reg_4562[3 : 0] <= zext_ln41_93_fu_2814_p1[3 : 0];
        zext_ln41_95_reg_4579[3 : 0] <= zext_ln41_95_fu_2832_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_6_reg_4516 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        tmp10_3_2_0_cast_mid_4_reg_4590 <= tmp10_3_2_0_cast_mid_4_fu_2855_p2;
        zext_ln41_97_reg_4597[3 : 0] <= zext_ln41_97_fu_2868_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln33_reg_3530_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln49_39_reg_3712 <= {{mul_ln41_44_fu_3145_p2[29:14]}};
        trunc_ln49_40_reg_3717 <= {{mul_ln41_45_fu_3151_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_reg_3530_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln49_41_reg_3722 <= {{mul_ln41_46_fu_3157_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln33_4_reg_3859_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        trunc_ln49_48_reg_4041 <= {{mul_ln41_54_fu_3205_p2[29:14]}};
        trunc_ln49_49_reg_4046 <= {{mul_ln41_55_fu_3211_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln33_4_reg_3859_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        trunc_ln49_50_reg_4051 <= {{mul_ln41_56_fu_3217_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (icmp_ln33_5_reg_4188_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        trunc_ln49_57_reg_4370 <= {{mul_ln41_63_fu_3265_p2[29:14]}};
        trunc_ln49_58_reg_4375 <= {{mul_ln41_64_fu_3271_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage2_11001) & (icmp_ln33_5_reg_4188_pp2_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2))) begin
        trunc_ln49_59_reg_4380 <= {{mul_ln41_65_fu_3277_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln33_6_reg_4516_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        trunc_ln49_66_reg_4698 <= {{mul_ln41_72_fu_3325_p2[29:14]}};
        trunc_ln49_67_reg_4703 <= {{mul_ln41_73_fu_3331_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage2_11001) & (icmp_ln33_6_reg_4516_pp3_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage2))) begin
        trunc_ln49_68_reg_4708 <= {{mul_ln41_74_fu_3337_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        zext_ln28_76_reg_3749[2 : 1] <= zext_ln28_76_fu_1575_p1[2 : 1];
zext_ln28_76_reg_3749[5 : 4] <= zext_ln28_76_fu_1575_p1[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        zext_ln28_77_reg_4078[0] <= zext_ln28_77_fu_2088_p1[0];
zext_ln28_77_reg_4078[3 : 2] <= zext_ln28_77_fu_2088_p1[3 : 2];
zext_ln28_77_reg_4078[5] <= zext_ln28_77_fu_2088_p1[5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        zext_ln28_78_reg_4406[2] <= zext_ln28_78_fu_2601_p1[2];
zext_ln28_78_reg_4406[5] <= zext_ln28_78_fu_2601_p1[5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        zext_ln28_reg_3425[5 : 0] <= zext_ln28_fu_1076_p1[5 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln33_fu_1199_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln33_4_fu_1712_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln33_5_fu_2225_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state40 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state40 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln33_6_fu_2739_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state56 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state56 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln23_fu_1027_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten34_phi_fu_845_p4 = add_ln33_9_reg_3863;
    end else begin
        ap_phi_mux_indvar_flatten34_phi_fu_845_p4 = indvar_flatten34_reg_841;
    end
end

always @ (*) begin
    if (((icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_indvar_flatten53_phi_fu_878_p4 = add_ln33_10_reg_4192;
    end else begin
        ap_phi_mux_indvar_flatten53_phi_fu_878_p4 = indvar_flatten53_reg_874;
    end
end

always @ (*) begin
    if (((icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_indvar_flatten72_phi_fu_911_p4 = add_ln33_11_reg_4520;
    end else begin
        ap_phi_mux_indvar_flatten72_phi_fu_911_p4 = indvar_flatten72_reg_907;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_3530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_812_p4 = add_ln33_8_reg_3534;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_812_p4 = indvar_flatten_reg_808;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_3530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_out_h_0_0_phi_fu_823_p4 = tmp10_0_0_0_cast_mid_reg_3546;
    end else begin
        ap_phi_mux_out_h_0_0_phi_fu_823_p4 = out_h_0_0_reg_819;
    end
end

always @ (*) begin
    if (((icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_out_h_0_1_phi_fu_856_p4 = tmp10_1_0_0_cast_mid_reg_3875;
    end else begin
        ap_phi_mux_out_h_0_1_phi_fu_856_p4 = out_h_0_1_reg_852;
    end
end

always @ (*) begin
    if (((icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_out_h_0_2_phi_fu_889_p4 = tmp10_2_0_0_cast_mid_reg_4204;
    end else begin
        ap_phi_mux_out_h_0_2_phi_fu_889_p4 = out_h_0_2_reg_885;
    end
end

always @ (*) begin
    if (((icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_out_h_0_3_phi_fu_922_p4 = tmp10_3_0_0_cast_mid_reg_4532;
    end else begin
        ap_phi_mux_out_h_0_3_phi_fu_922_p4 = out_h_0_3_reg_918;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_3530 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_out_w_0_0_phi_fu_834_p4 = add_ln41_44_reg_3588;
    end else begin
        ap_phi_mux_out_w_0_0_phi_fu_834_p4 = out_w_0_0_reg_830;
    end
end

always @ (*) begin
    if (((icmp_ln33_4_reg_3859 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_out_w_0_1_phi_fu_867_p4 = add_ln41_55_reg_3917;
    end else begin
        ap_phi_mux_out_w_0_1_phi_fu_867_p4 = out_w_0_1_reg_863;
    end
end

always @ (*) begin
    if (((icmp_ln33_5_reg_4188 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_out_w_0_2_phi_fu_900_p4 = add_ln41_66_reg_4246;
    end else begin
        ap_phi_mux_out_w_0_2_phi_fu_900_p4 = out_w_0_2_reg_896;
    end
end

always @ (*) begin
    if (((icmp_ln33_6_reg_4516 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_out_w_0_3_phi_fu_933_p4 = add_ln41_77_reg_4574;
    end else begin
        ap_phi_mux_out_w_0_3_phi_fu_933_p4 = out_w_0_3_reg_929;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_1027_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        bias_address0 = zext_ln31_3_fu_2686_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        bias_address0 = zext_ln31_2_fu_2172_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        bias_address0 = zext_ln31_1_fu_1659_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        bias_address0 = zext_ln31_fu_1140_p1;
    end else begin
        bias_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6))) begin
        bias_ce0 = 1'b1;
    end else begin
        bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage4))) begin
        input_r_address0 = zext_ln41_102_fu_2973_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3))) begin
        input_r_address0 = zext_ln41_100_fu_2921_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2))) begin
        input_r_address0 = zext_ln41_98_fu_2877_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        input_r_address0 = zext_ln41_94_fu_2822_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        input_r_address0 = zext_ln41_92_fu_2498_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4))) begin
        input_r_address0 = zext_ln41_91_fu_2463_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3))) begin
        input_r_address0 = zext_ln41_89_fu_2416_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        input_r_address0 = zext_ln41_87_fu_2372_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1))) begin
        input_r_address0 = zext_ln41_84_fu_2327_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4))) begin
        input_r_address0 = zext_ln41_78_fu_1946_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3))) begin
        input_r_address0 = zext_ln41_76_fu_1894_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        input_r_address0 = zext_ln41_73_fu_1850_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        input_r_address0 = zext_ln41_69_fu_1795_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        input_r_address0 = zext_ln41_67_fu_1472_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        input_r_address0 = zext_ln41_66_fu_1437_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        input_r_address0 = zext_ln41_64_fu_1390_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        input_r_address0 = zext_ln41_62_fu_1346_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        input_r_address0 = zext_ln41_56_fu_1282_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        input_r_address1 = zext_ln41_104_fu_3012_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage4))) begin
        input_r_address1 = zext_ln41_103_fu_2977_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage3))) begin
        input_r_address1 = zext_ln41_101_fu_2930_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2))) begin
        input_r_address1 = zext_ln41_99_fu_2886_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage1))) begin
        input_r_address1 = zext_ln41_96_fu_2841_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage4))) begin
        input_r_address1 = zext_ln41_90_fu_2459_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3))) begin
        input_r_address1 = zext_ln41_88_fu_2407_p1;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (1'b0 == ap_block_pp2_stage2))) begin
        input_r_address1 = zext_ln41_86_fu_2363_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1))) begin
        input_r_address1 = zext_ln41_82_fu_2308_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        input_r_address1 = zext_ln41_80_fu_1985_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage4))) begin
        input_r_address1 = zext_ln41_79_fu_1950_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage3))) begin
        input_r_address1 = zext_ln41_77_fu_1903_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        input_r_address1 = zext_ln41_75_fu_1859_p1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        input_r_address1 = zext_ln41_71_fu_1814_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4))) begin
        input_r_address1 = zext_ln41_65_fu_1433_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3))) begin
        input_r_address1 = zext_ln41_63_fu_1381_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        input_r_address1 = zext_ln41_61_fu_1337_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        input_r_address1 = zext_ln41_58_fu_1301_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage4_11001) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage2_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage4_11001) & (1'b1 == ap_CS_fsm_pp3_stage4) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage3_11001) & (1'b1 == ap_CS_fsm_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp3_stage2_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage2)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage4_11001) & (1'b1 == ap_CS_fsm_pp2_stage4) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage3_11001) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage4_11001) & (1'b1 == ap_CS_fsm_pp1_stage4) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        kernel_address0 = zext_ln28_74_fu_2671_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        kernel_address0 = zext_ln28_72_fu_2651_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        kernel_address0 = zext_ln28_70_fu_2631_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        kernel_address0 = zext_ln28_68_fu_2610_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        kernel_address0 = zext_ln28_66_fu_2167_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        kernel_address0 = zext_ln28_64_fu_2147_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        kernel_address0 = zext_ln28_62_fu_2127_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        kernel_address0 = zext_ln28_60_fu_2107_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        kernel_address0 = zext_ln28_58_fu_2083_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        kernel_address0 = zext_ln28_56_fu_1644_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        kernel_address0 = zext_ln28_54_fu_1624_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_address0 = zext_ln28_52_fu_1604_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        kernel_address0 = zext_ln28_50_fu_1584_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_address0 = zext_ln28_48_fu_1135_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        kernel_address0 = zext_ln28_46_fu_1115_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_address0 = zext_ln28_44_fu_1095_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_address0 = zext_ln28_41_fu_1061_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        kernel_address0 = zext_ln28_40_fu_1051_p1;
    end else begin
        kernel_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        kernel_address1 = zext_ln28_75_fu_2681_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        kernel_address1 = zext_ln28_73_fu_2661_p1;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        kernel_address1 = zext_ln28_71_fu_2641_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        kernel_address1 = zext_ln28_69_fu_2621_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        kernel_address1 = zext_ln28_67_fu_2596_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        kernel_address1 = zext_ln28_65_fu_2157_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        kernel_address1 = zext_ln28_63_fu_2137_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        kernel_address1 = zext_ln28_61_fu_2117_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        kernel_address1 = zext_ln28_59_fu_2096_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        kernel_address1 = zext_ln28_57_fu_1654_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        kernel_address1 = zext_ln28_55_fu_1634_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        kernel_address1 = zext_ln28_53_fu_1614_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        kernel_address1 = zext_ln28_51_fu_1594_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        kernel_address1 = zext_ln28_49_fu_1570_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        kernel_address1 = zext_ln28_47_fu_1125_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        kernel_address1 = zext_ln28_45_fu_1105_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        kernel_address1 = zext_ln28_43_fu_1084_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        kernel_address1 = zext_ln28_42_fu_1071_p1;
    end else begin
        kernel_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state3))) begin
        kernel_ce0 = 1'b1;
    end else begin
        kernel_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state50))) begin
        kernel_ce1 = 1'b1;
    end else begin
        kernel_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        output_r_address0 = zext_ln49_8_fu_3093_p1;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
        output_r_address0 = zext_ln49_7_fu_2579_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4))) begin
        output_r_address0 = zext_ln49_6_fu_2066_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        output_r_address0 = zext_ln49_5_fu_1553_p1;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage4_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4)) | ((1'b0 == ap_block_pp2_stage4_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp1_stage4_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4))) begin
        output_r_d0 = add_ln49_71_fu_3087_p2;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4))) begin
        output_r_d0 = add_ln49_62_fu_2573_p2;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4))) begin
        output_r_d0 = add_ln49_53_fu_2060_p2;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        output_r_d0 = add_ln49_43_fu_1547_p2;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage4_11001) & (icmp_ln33_6_reg_4516_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4)) | ((1'b0 == ap_block_pp2_stage4_11001) & (icmp_ln33_5_reg_4188_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b0 == ap_block_pp1_stage4_11001) & (icmp_ln33_4_reg_3859_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln33_reg_3530_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_1027_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln33_fu_1199_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln33_fu_1199_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln33_4_fu_1712_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((icmp_ln33_4_fu_1712_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_subdone)) & (1'b0 == ap_block_pp1_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((icmp_ln33_5_fu_2225_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((icmp_ln33_5_fu_2225_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_subdone)) & (1'b0 == ap_block_pp2_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage4) & (1'b0 == ap_block_pp2_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln33_6_fu_2739_p2 == 1'd1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln33_6_fu_2739_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_pp3_stage4 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone)) & (1'b0 == ap_block_pp3_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage4) & (1'b0 == ap_block_pp3_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage4;
            end
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_fu_3097_p2 = (out_d_0_0_reg_796 + 4'd4);

assign add_ln28_1_fu_2075_p3 = {{or_ln23_3_fu_2070_p2}, {or_ln23_3_fu_2070_p2}};

assign add_ln28_29_fu_1100_p2 = (7'd5 + zext_ln28_reg_3425);

assign add_ln28_2_fu_2588_p3 = {{or_ln23_4_fu_2583_p2}, {or_ln23_4_fu_2583_p2}};

assign add_ln28_30_fu_1110_p2 = (7'd6 + zext_ln28_reg_3425);

assign add_ln28_31_fu_1120_p2 = (7'd7 + zext_ln28_reg_3425);

assign add_ln28_32_fu_1130_p2 = (7'd8 + zext_ln28_reg_3425);

assign add_ln28_33_fu_1578_p2 = (zext_ln28_76_fu_1575_p1 + 7'd1);

assign add_ln28_34_fu_1599_p2 = (zext_ln28_76_reg_3749 + 7'd3);

assign add_ln28_35_fu_1609_p2 = (zext_ln28_76_reg_3749 + 7'd4);

assign add_ln28_36_fu_1619_p2 = (zext_ln28_76_reg_3749 + 7'd5);

assign add_ln28_37_fu_1629_p2 = (zext_ln28_76_reg_3749 + 7'd6);

assign add_ln28_38_fu_1639_p2 = (zext_ln28_76_reg_3749 + 7'd7);

assign add_ln28_39_fu_1649_p2 = (zext_ln28_76_reg_3749 + 7'd8);

assign add_ln28_40_fu_2101_p2 = (zext_ln28_77_fu_2088_p1 + 7'd2);

assign add_ln28_41_fu_2112_p2 = (zext_ln28_77_reg_4078 + 7'd3);

assign add_ln28_42_fu_2122_p2 = (zext_ln28_77_reg_4078 + 7'd4);

assign add_ln28_43_fu_2132_p2 = (zext_ln28_77_reg_4078 + 7'd5);

assign add_ln28_44_fu_2142_p2 = (zext_ln28_77_reg_4078 + 7'd6);

assign add_ln28_45_fu_2152_p2 = (zext_ln28_77_reg_4078 + 7'd7);

assign add_ln28_46_fu_2162_p2 = (zext_ln28_77_reg_4078 + 7'd8);

assign add_ln28_47_fu_2604_p2 = (zext_ln28_78_fu_2601_p1 + 7'd1);

assign add_ln28_48_fu_2615_p2 = (zext_ln28_78_fu_2601_p1 + 7'd2);

assign add_ln28_49_fu_2626_p2 = (zext_ln28_78_reg_4406 + 7'd3);

assign add_ln28_50_fu_2636_p2 = (zext_ln28_78_reg_4406 + 7'd4);

assign add_ln28_51_fu_2646_p2 = (zext_ln28_78_reg_4406 + 7'd5);

assign add_ln28_52_fu_2656_p2 = (zext_ln28_78_reg_4406 + 7'd6);

assign add_ln28_53_fu_2666_p2 = (zext_ln28_78_reg_4406 + 7'd7);

assign add_ln28_54_fu_2676_p2 = (zext_ln28_78_reg_4406 + 7'd8);

assign add_ln28_fu_1089_p2 = (7'd4 + zext_ln28_fu_1076_p1);

assign add_ln28_s_fu_1562_p3 = {{or_ln23_fu_1557_p2}, {or_ln23_fu_1557_p2}};

assign add_ln33_10_fu_2230_p2 = (ap_phi_mux_indvar_flatten53_phi_fu_878_p4 + 8'd1);

assign add_ln33_11_fu_2744_p2 = (ap_phi_mux_indvar_flatten72_phi_fu_911_p4 + 8'd1);

assign add_ln33_4_fu_1723_p2 = (ap_phi_mux_out_h_0_1_phi_fu_856_p4 + 4'd1);

assign add_ln33_5_fu_2236_p2 = (ap_phi_mux_out_h_0_2_phi_fu_889_p4 + 4'd1);

assign add_ln33_6_fu_2750_p2 = (ap_phi_mux_out_h_0_3_phi_fu_922_p4 + 4'd1);

assign add_ln33_8_fu_1204_p2 = (ap_phi_mux_indvar_flatten_phi_fu_812_p4 + 8'd1);

assign add_ln33_9_fu_1717_p2 = (ap_phi_mux_indvar_flatten34_phi_fu_845_p4 + 8'd1);

assign add_ln33_fu_1210_p2 = (ap_phi_mux_out_h_0_0_phi_fu_823_p4 + 4'd1);

assign add_ln41_44_fu_1287_p2 = (out_w_0_0_mid2_reg_3539 + 4'd1);

assign add_ln41_45_fu_1296_p2 = (zext_ln41_57_fu_1292_p1 + tmp10_0_0_0_cast_mid_8_reg_3557);

assign add_ln41_46_fu_1323_p2 = (out_w_0_0_mid2_reg_3539 + 4'd2);

assign add_ln41_47_fu_1332_p2 = (zext_ln41_59_fu_1328_p1 + tmp10_0_0_0_cast_mid_8_reg_3557);

assign add_ln41_48_fu_1342_p2 = (tmp10_0_1_0_cast_mid_4_reg_3569 + zext_ln41_55_reg_3576);

assign add_ln41_49_fu_1377_p2 = (zext_ln41_57_reg_3593 + tmp10_0_1_0_cast_mid_4_reg_3569);

assign add_ln41_50_fu_1386_p2 = (zext_ln41_59_reg_3611 + tmp10_0_1_0_cast_mid_4_reg_3569);

assign add_ln41_51_fu_1395_p2 = (tmp10_0_2_0_cast_mid_4_reg_3604 + zext_ln41_55_reg_3576);

assign add_ln41_52_fu_1399_p2 = (zext_ln41_57_reg_3593 + tmp10_0_2_0_cast_mid_4_reg_3604);

assign add_ln41_53_fu_1403_p2 = (zext_ln41_59_reg_3611 + tmp10_0_2_0_cast_mid_4_reg_3604);

assign add_ln41_54_fu_1790_p2 = (tmp10_1_0_0_cast_mid_8_reg_3886 + zext_ln41_68_fu_1787_p1);

assign add_ln41_55_fu_1800_p2 = (out_w_0_1_mid2_reg_3868 + 4'd1);

assign add_ln41_56_fu_1809_p2 = (zext_ln41_70_fu_1805_p1 + tmp10_1_0_0_cast_mid_8_reg_3886);

assign add_ln41_57_fu_1836_p2 = (out_w_0_1_mid2_reg_3868 + 4'd2);

assign add_ln41_58_fu_1845_p2 = (zext_ln41_72_fu_1841_p1 + tmp10_1_0_0_cast_mid_8_reg_3886);

assign add_ln41_59_fu_1855_p2 = (tmp10_1_1_0_cast_mid_4_reg_3898 + zext_ln41_68_reg_3905);

assign add_ln41_60_fu_1890_p2 = (zext_ln41_70_reg_3922 + tmp10_1_1_0_cast_mid_4_reg_3898);

assign add_ln41_61_fu_1899_p2 = (zext_ln41_72_reg_3940 + tmp10_1_1_0_cast_mid_4_reg_3898);

assign add_ln41_62_fu_1908_p2 = (tmp10_1_2_0_cast_mid_4_reg_3933 + zext_ln41_68_reg_3905);

assign add_ln41_63_fu_1912_p2 = (zext_ln41_70_reg_3922 + tmp10_1_2_0_cast_mid_4_reg_3933);

assign add_ln41_64_fu_1916_p2 = (zext_ln41_72_reg_3940 + tmp10_1_2_0_cast_mid_4_reg_3933);

assign add_ln41_65_fu_2303_p2 = (tmp10_2_0_0_cast_mid_8_reg_4215 + zext_ln41_81_fu_2300_p1);

assign add_ln41_66_fu_2313_p2 = (out_w_0_2_mid2_reg_4197 + 4'd1);

assign add_ln41_67_fu_2322_p2 = (zext_ln41_83_fu_2318_p1 + tmp10_2_0_0_cast_mid_8_reg_4215);

assign add_ln41_68_fu_2349_p2 = (out_w_0_2_mid2_reg_4197 + 4'd2);

assign add_ln41_69_fu_2358_p2 = (zext_ln41_85_fu_2354_p1 + tmp10_2_0_0_cast_mid_8_reg_4215);

assign add_ln41_70_fu_2368_p2 = (tmp10_2_1_0_cast_mid_4_reg_4227 + zext_ln41_81_reg_4234);

assign add_ln41_71_fu_2403_p2 = (zext_ln41_83_reg_4251 + tmp10_2_1_0_cast_mid_4_reg_4227);

assign add_ln41_72_fu_2412_p2 = (zext_ln41_85_reg_4269 + tmp10_2_1_0_cast_mid_4_reg_4227);

assign add_ln41_73_fu_2421_p2 = (tmp10_2_2_0_cast_mid_4_reg_4262 + zext_ln41_81_reg_4234);

assign add_ln41_74_fu_2425_p2 = (zext_ln41_83_reg_4251 + tmp10_2_2_0_cast_mid_4_reg_4262);

assign add_ln41_75_fu_2429_p2 = (zext_ln41_85_reg_4269 + tmp10_2_2_0_cast_mid_4_reg_4262);

assign add_ln41_76_fu_2817_p2 = (tmp10_3_0_0_cast_mid_8_reg_4543 + zext_ln41_93_fu_2814_p1);

assign add_ln41_77_fu_2827_p2 = (out_w_0_3_mid2_reg_4525 + 4'd1);

assign add_ln41_78_fu_2836_p2 = (zext_ln41_95_fu_2832_p1 + tmp10_3_0_0_cast_mid_8_reg_4543);

assign add_ln41_79_fu_2863_p2 = (out_w_0_3_mid2_reg_4525 + 4'd2);

assign add_ln41_80_fu_2872_p2 = (zext_ln41_97_fu_2868_p1 + tmp10_3_0_0_cast_mid_8_reg_4543);

assign add_ln41_81_fu_2882_p2 = (tmp10_3_1_0_cast_mid_4_reg_4555 + zext_ln41_93_reg_4562);

assign add_ln41_82_fu_2917_p2 = (zext_ln41_95_reg_4579 + tmp10_3_1_0_cast_mid_4_reg_4555);

assign add_ln41_83_fu_2926_p2 = (zext_ln41_97_reg_4597 + tmp10_3_1_0_cast_mid_4_reg_4555);

assign add_ln41_84_fu_2935_p2 = (tmp10_3_2_0_cast_mid_4_reg_4590 + zext_ln41_93_reg_4562);

assign add_ln41_85_fu_2939_p2 = (zext_ln41_95_reg_4579 + tmp10_3_2_0_cast_mid_4_reg_4590);

assign add_ln41_86_fu_2943_p2 = (zext_ln41_97_reg_4597 + tmp10_3_2_0_cast_mid_4_reg_4590);

assign add_ln41_fu_1277_p2 = (tmp10_0_0_0_cast_mid_8_reg_3557 + zext_ln41_55_fu_1274_p1);

assign add_ln49_36_fu_1476_p2 = (trunc_ln49_35_reg_3667 + trunc_ln49_36_reg_3672);

assign add_ln49_37_fu_1480_p2 = (add_ln49_36_fu_1476_p2 + trunc_ln49_s_reg_3637);

assign add_ln49_38_fu_1543_p2 = (add_ln49_37_reg_3707 + add_ln49_reg_3687);

assign add_ln49_39_fu_1524_p2 = (trunc_ln49_37_reg_3692 + trunc_ln49_38_reg_3697);

assign add_ln49_40_fu_1528_p2 = (trunc_ln49_40_reg_3717 + trunc_ln49_41_reg_3722);

assign add_ln49_41_fu_1532_p2 = (add_ln49_40_fu_1528_p2 + trunc_ln49_39_reg_3712);

assign add_ln49_42_fu_1537_p2 = (add_ln49_41_fu_1532_p2 + add_ln49_39_fu_1524_p2);

assign add_ln49_43_fu_1547_p2 = (add_ln49_42_reg_3727 + add_ln49_38_fu_1543_p2);

assign add_ln49_45_fu_1954_p2 = (reg_975 + trunc_ln49_42_reg_3961);

assign add_ln49_46_fu_1989_p2 = (trunc_ln49_44_reg_3996 + trunc_ln49_45_reg_4001);

assign add_ln49_47_fu_1993_p2 = (add_ln49_46_fu_1989_p2 + trunc_ln49_43_reg_3966);

assign add_ln49_48_fu_2056_p2 = (add_ln49_47_reg_4036 + add_ln49_45_reg_4016);

assign add_ln49_49_fu_2037_p2 = (trunc_ln49_46_reg_4021 + trunc_ln49_47_reg_4026);

assign add_ln49_50_fu_2041_p2 = (trunc_ln49_49_reg_4046 + trunc_ln49_50_reg_4051);

assign add_ln49_51_fu_2045_p2 = (add_ln49_50_fu_2041_p2 + trunc_ln49_48_reg_4041);

assign add_ln49_52_fu_2050_p2 = (add_ln49_51_fu_2045_p2 + add_ln49_49_fu_2037_p2);

assign add_ln49_53_fu_2060_p2 = (add_ln49_52_reg_4056 + add_ln49_48_fu_2056_p2);

assign add_ln49_54_fu_2467_p2 = (reg_975 + trunc_ln49_51_reg_4290);

assign add_ln49_55_fu_2502_p2 = (trunc_ln49_53_reg_4325 + trunc_ln49_54_reg_4330);

assign add_ln49_56_fu_2506_p2 = (add_ln49_55_fu_2502_p2 + trunc_ln49_52_reg_4295);

assign add_ln49_57_fu_2569_p2 = (add_ln49_56_reg_4365 + add_ln49_54_reg_4345);

assign add_ln49_58_fu_2550_p2 = (trunc_ln49_55_reg_4350 + trunc_ln49_56_reg_4355);

assign add_ln49_59_fu_2554_p2 = (trunc_ln49_58_reg_4375 + trunc_ln49_59_reg_4380);

assign add_ln49_60_fu_2558_p2 = (add_ln49_59_fu_2554_p2 + trunc_ln49_57_reg_4370);

assign add_ln49_61_fu_2563_p2 = (add_ln49_60_fu_2558_p2 + add_ln49_58_fu_2550_p2);

assign add_ln49_62_fu_2573_p2 = (add_ln49_61_reg_4385 + add_ln49_57_fu_2569_p2);

assign add_ln49_63_fu_2981_p2 = (reg_975 + trunc_ln49_60_reg_4618);

assign add_ln49_64_fu_3016_p2 = (trunc_ln49_62_reg_4653 + trunc_ln49_63_reg_4658);

assign add_ln49_65_fu_3020_p2 = (add_ln49_64_fu_3016_p2 + trunc_ln49_61_reg_4623);

assign add_ln49_66_fu_3083_p2 = (add_ln49_65_reg_4693 + add_ln49_63_reg_4673);

assign add_ln49_67_fu_3064_p2 = (trunc_ln49_64_reg_4678 + trunc_ln49_65_reg_4683);

assign add_ln49_68_fu_3068_p2 = (trunc_ln49_67_reg_4703 + trunc_ln49_68_reg_4708);

assign add_ln49_69_fu_3072_p2 = (add_ln49_68_fu_3068_p2 + trunc_ln49_66_reg_4698);

assign add_ln49_70_fu_3077_p2 = (add_ln49_69_fu_3072_p2 + add_ln49_67_fu_3064_p2);

assign add_ln49_71_fu_3087_p2 = (add_ln49_70_reg_4713 + add_ln49_66_fu_3083_p2);

assign add_ln49_fu_1441_p2 = (reg_975 + trunc_ln_reg_3632);

assign add_ln_fu_1043_p3 = {{tmp_2_fu_1033_p4}, {out_d_0_0_reg_796}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp3_stage4 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp3_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp3_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp3_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp3_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign empty_71_fu_993_p1 = output_height[3:0];

assign empty_72_fu_1005_p1 = input_width;

assign empty_73_fu_1009_p1 = output_width;

assign empty_fu_989_p1 = output_width[3:0];

assign grp_fu_3103_p0 = empty_73_reg_3383;

assign grp_fu_3103_p1 = grp_fu_3103_p10;

assign grp_fu_3103_p10 = tmp12_0_cast_mid2_v_s_reg_3564;

assign grp_fu_3103_p2 = zext_ln41_55_reg_3576;

assign grp_fu_3163_p0 = empty_73_reg_3383;

assign grp_fu_3163_p1 = grp_fu_3163_p10;

assign grp_fu_3163_p10 = tmp12_1_cast_mid2_v_s_reg_3893;

assign grp_fu_3163_p2 = zext_ln41_68_reg_3905;

assign grp_fu_3223_p0 = empty_73_reg_3383;

assign grp_fu_3223_p1 = grp_fu_3223_p10;

assign grp_fu_3223_p10 = tmp12_2_cast_mid2_v_s_reg_4222;

assign grp_fu_3223_p2 = zext_ln41_81_reg_4234;

assign grp_fu_3283_p0 = empty_73_reg_3383;

assign grp_fu_3283_p1 = grp_fu_3283_p10;

assign grp_fu_3283_p10 = tmp12_3_cast_mid2_v_s_reg_4550;

assign grp_fu_3283_p2 = zext_ln41_93_reg_4562;

assign icmp_ln23_fu_1027_p2 = ((out_d_0_0_reg_796 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln33_4_fu_1712_p2 = ((ap_phi_mux_indvar_flatten34_phi_fu_845_p4 == mul_ln4_reg_3391) ? 1'b1 : 1'b0);

assign icmp_ln33_5_fu_2225_p2 = ((ap_phi_mux_indvar_flatten53_phi_fu_878_p4 == mul_ln4_reg_3391) ? 1'b1 : 1'b0);

assign icmp_ln33_6_fu_2739_p2 = ((ap_phi_mux_indvar_flatten72_phi_fu_911_p4 == mul_ln4_reg_3391) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_1199_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_812_p4 == mul_ln4_reg_3391) ? 1'b1 : 1'b0);

assign icmp_ln34_4_fu_1729_p2 = ((ap_phi_mux_out_w_0_1_phi_fu_867_p4 == empty_reg_3343) ? 1'b1 : 1'b0);

assign icmp_ln34_5_fu_2242_p2 = ((ap_phi_mux_out_w_0_2_phi_fu_900_p4 == empty_reg_3343) ? 1'b1 : 1'b0);

assign icmp_ln34_6_fu_2756_p2 = ((ap_phi_mux_out_w_0_3_phi_fu_933_p4 == empty_reg_3343) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1216_p2 = ((ap_phi_mux_out_w_0_0_phi_fu_834_p4 == empty_reg_3343) ? 1'b1 : 1'b0);

assign mul_ln41_36_fu_1702_p0 = zext_ln41_reg_3351;

assign mul_ln41_36_fu_1702_p1 = zext_ln41_54_fu_1699_p1;

assign mul_ln41_36_fu_1702_p2 = (mul_ln41_36_fu_1702_p0 * mul_ln41_36_fu_1702_p1);

assign mul_ln41_37_fu_2215_p0 = zext_ln41_reg_3351;

assign mul_ln41_37_fu_2215_p1 = zext_ln41_60_fu_2212_p1;

assign mul_ln41_37_fu_2215_p2 = (mul_ln41_37_fu_2215_p0 * mul_ln41_37_fu_2215_p1);

assign mul_ln41_38_fu_3109_p0 = sext_ln28_reg_3475;

assign mul_ln41_39_fu_3115_p0 = sext_ln28_32_reg_3480;

assign mul_ln41_40_fu_3121_p0 = sext_ln28_33_reg_3485;

assign mul_ln41_41_fu_3127_p0 = sext_ln28_34_reg_3490;

assign mul_ln41_42_fu_3133_p0 = sext_ln28_35_reg_3495;

assign mul_ln41_43_fu_3139_p0 = sext_ln28_36_reg_3500;

assign mul_ln41_44_fu_3145_p0 = sext_ln28_37_reg_3505;

assign mul_ln41_45_fu_3151_p0 = sext_ln28_38_reg_3510;

assign mul_ln41_46_fu_3157_p0 = sext_ln31_reg_3515;

assign mul_ln41_47_fu_2693_p0 = zext_ln41_reg_3351;

assign mul_ln41_47_fu_2693_p1 = zext_ln41_74_fu_2690_p1;

assign mul_ln41_47_fu_2693_p2 = (mul_ln41_47_fu_2693_p0 * mul_ln41_47_fu_2693_p1);

assign mul_ln41_48_fu_3169_p0 = sext_ln28_39_reg_3804;

assign mul_ln41_49_fu_3175_p0 = sext_ln28_40_reg_3809;

assign mul_ln41_50_fu_3181_p0 = sext_ln28_41_reg_3814;

assign mul_ln41_51_fu_3187_p0 = sext_ln28_42_reg_3819;

assign mul_ln41_52_fu_3193_p0 = sext_ln28_43_reg_3824;

assign mul_ln41_53_fu_3199_p0 = sext_ln28_44_reg_3829;

assign mul_ln41_54_fu_3205_p0 = sext_ln28_45_reg_3834;

assign mul_ln41_55_fu_3211_p0 = sext_ln28_46_reg_3839;

assign mul_ln41_56_fu_3217_p0 = sext_ln31_1_reg_3844;

assign mul_ln41_57_fu_3229_p0 = sext_ln28_47_reg_4133;

assign mul_ln41_58_fu_3235_p0 = sext_ln28_48_reg_4138;

assign mul_ln41_59_fu_3241_p0 = sext_ln28_49_reg_4143;

assign mul_ln41_60_fu_3247_p0 = sext_ln28_50_reg_4148;

assign mul_ln41_61_fu_3253_p0 = sext_ln28_51_reg_4153;

assign mul_ln41_62_fu_3259_p0 = sext_ln28_52_reg_4158;

assign mul_ln41_63_fu_3265_p0 = sext_ln28_53_reg_4163;

assign mul_ln41_64_fu_3271_p0 = sext_ln28_54_reg_4168;

assign mul_ln41_65_fu_3277_p0 = sext_ln31_2_reg_4173;

assign mul_ln41_66_fu_3289_p0 = sext_ln28_55_reg_4471;

assign mul_ln41_67_fu_3295_p0 = sext_ln28_56_reg_4476;

assign mul_ln41_68_fu_3301_p0 = sext_ln28_57_reg_4481;

assign mul_ln41_69_fu_3307_p0 = sext_ln28_58_reg_4486;

assign mul_ln41_70_fu_3313_p0 = sext_ln28_59_reg_4491;

assign mul_ln41_71_fu_3319_p0 = sext_ln28_60_reg_4496;

assign mul_ln41_72_fu_3325_p0 = sext_ln28_61_reg_4501;

assign mul_ln41_73_fu_3331_p0 = sext_ln28_62_reg_4506;

assign mul_ln41_74_fu_3337_p0 = sext_ln31_3_reg_4511;

assign mul_ln41_fu_1189_p0 = zext_ln41_53_fu_1185_p1;

assign mul_ln41_fu_1189_p1 = zext_ln41_reg_3351;

assign mul_ln41_fu_1189_p2 = (mul_ln41_fu_1189_p0 * mul_ln41_fu_1189_p1);

assign mul_ln49_1_fu_1707_p0 = zext_ln49_reg_3359;

assign mul_ln49_1_fu_1707_p1 = zext_ln41_54_fu_1699_p1;

assign mul_ln49_1_fu_1707_p2 = (mul_ln49_1_fu_1707_p0 * mul_ln49_1_fu_1707_p1);

assign mul_ln49_2_fu_2220_p0 = zext_ln49_reg_3359;

assign mul_ln49_2_fu_2220_p1 = zext_ln41_60_fu_2212_p1;

assign mul_ln49_2_fu_2220_p2 = (mul_ln49_2_fu_2220_p0 * mul_ln49_2_fu_2220_p1);

assign mul_ln49_3_fu_2698_p0 = zext_ln49_reg_3359;

assign mul_ln49_3_fu_2698_p1 = zext_ln41_74_fu_2690_p1;

assign mul_ln49_3_fu_2698_p2 = (mul_ln49_3_fu_2698_p0 * mul_ln49_3_fu_2698_p1);

assign mul_ln49_fu_1194_p0 = zext_ln41_53_fu_1185_p1;

assign mul_ln49_fu_1194_p1 = zext_ln49_reg_3359;

assign mul_ln49_fu_1194_p2 = (mul_ln49_fu_1194_p0 * mul_ln49_fu_1194_p1);

assign mul_ln4_fu_1021_p0 = mul_ln4_fu_1021_p00;

assign mul_ln4_fu_1021_p00 = empty_fu_989_p1;

assign mul_ln4_fu_1021_p1 = mul_ln4_fu_1021_p10;

assign mul_ln4_fu_1021_p10 = empty_71_fu_993_p1;

assign mul_ln4_fu_1021_p2 = (mul_ln4_fu_1021_p0 * mul_ln4_fu_1021_p1);

assign or_ln23_3_fu_2070_p2 = (trunc_ln23_reg_3468 | 3'd2);

assign or_ln23_4_fu_2583_p2 = (trunc_ln23_reg_3468 | 3'd3);

assign or_ln23_fu_1557_p2 = (trunc_ln23_reg_3468 | 3'd1);

assign or_ln28_5_fu_1066_p2 = (6'd2 | add_ln_reg_3402);

assign or_ln28_6_fu_1079_p2 = (6'd3 | add_ln_reg_3402);

assign or_ln28_7_fu_1589_p2 = (6'd2 | add_ln28_s_reg_3738);

assign or_ln28_8_fu_2091_p2 = (6'd1 | add_ln28_1_reg_4067);

assign or_ln28_fu_1056_p2 = (6'd1 | add_ln_reg_3402);

assign out_w_0_0_mid2_fu_1221_p3 = ((icmp_ln34_fu_1216_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_out_w_0_0_phi_fu_834_p4);

assign out_w_0_1_mid2_fu_1734_p3 = ((icmp_ln34_4_fu_1729_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_out_w_0_1_phi_fu_867_p4);

assign out_w_0_2_mid2_fu_2247_p3 = ((icmp_ln34_5_fu_2242_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_out_w_0_2_phi_fu_900_p4);

assign out_w_0_3_mid2_fu_2761_p3 = ((icmp_ln34_6_fu_2756_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_out_w_0_3_phi_fu_933_p4);

assign sext_ln28_32_fu_1153_p1 = $signed(reg_945);

assign sext_ln28_33_fu_1157_p1 = $signed(reg_950);

assign sext_ln28_34_fu_1161_p1 = $signed(reg_955);

assign sext_ln28_35_fu_1165_p1 = $signed(reg_960);

assign sext_ln28_36_fu_1169_p1 = $signed(reg_965);

assign sext_ln28_37_fu_1173_p1 = $signed(reg_970);

assign sext_ln28_38_fu_1177_p1 = $signed(kernel_q1);

assign sext_ln28_39_fu_1663_p1 = $signed(reg_940);

assign sext_ln28_40_fu_1667_p1 = $signed(reg_945);

assign sext_ln28_41_fu_1671_p1 = $signed(reg_950);

assign sext_ln28_42_fu_1675_p1 = $signed(reg_955);

assign sext_ln28_43_fu_1679_p1 = $signed(reg_960);

assign sext_ln28_44_fu_1683_p1 = $signed(reg_965);

assign sext_ln28_45_fu_1687_p1 = $signed(reg_970);

assign sext_ln28_46_fu_1691_p1 = $signed(kernel_q0);

assign sext_ln28_47_fu_2176_p1 = $signed(reg_940);

assign sext_ln28_48_fu_2180_p1 = $signed(reg_945);

assign sext_ln28_49_fu_2184_p1 = $signed(reg_950);

assign sext_ln28_50_fu_2188_p1 = $signed(reg_955);

assign sext_ln28_51_fu_2192_p1 = $signed(reg_960);

assign sext_ln28_52_fu_2196_p1 = $signed(reg_965);

assign sext_ln28_53_fu_2200_p1 = $signed(reg_970);

assign sext_ln28_54_fu_2204_p1 = $signed(kernel_q1);

assign sext_ln28_55_fu_2703_p1 = $signed(reg_940);

assign sext_ln28_56_fu_2707_p1 = $signed(reg_945);

assign sext_ln28_57_fu_2711_p1 = $signed(reg_950);

assign sext_ln28_58_fu_2715_p1 = $signed(reg_955);

assign sext_ln28_59_fu_2719_p1 = $signed(reg_960);

assign sext_ln28_60_fu_2723_p1 = $signed(reg_965);

assign sext_ln28_61_fu_2727_p1 = $signed(reg_970);

assign sext_ln28_62_fu_2731_p1 = $signed(kernel_q0);

assign sext_ln28_fu_1149_p1 = $signed(reg_940);

assign sext_ln31_1_fu_1695_p1 = $signed(kernel_q1);

assign sext_ln31_2_fu_2208_p1 = $signed(kernel_q0);

assign sext_ln31_3_fu_2735_p1 = $signed(kernel_q1);

assign sext_ln31_fu_1181_p1 = $signed(kernel_q0);

assign tmp10_0_0_0_cast_mid_5_fu_1237_p1 = tmp10_0_0_0_cast_mid_fu_1229_p3;

assign tmp10_0_0_0_cast_mid_6_fu_1241_p2 = (tmp10_0_0_0_cast_mid_5_fu_1237_p1 + mul_ln41_reg_3520);

assign tmp10_0_0_0_cast_mid_8_fu_1250_p0 = empty_72_reg_3367;

assign tmp10_0_0_0_cast_mid_8_fu_1250_p1 = tmp10_0_0_0_cast_mid_8_fu_1250_p10;

assign tmp10_0_0_0_cast_mid_8_fu_1250_p10 = tmp10_0_0_0_cast_mid_6_fu_1241_p2;

assign tmp10_0_0_0_cast_mid_8_fu_1250_p2 = (tmp10_0_0_0_cast_mid_8_fu_1250_p0 * tmp10_0_0_0_cast_mid_8_fu_1250_p1);

assign tmp10_0_0_0_cast_mid_fu_1229_p3 = ((icmp_ln34_fu_1216_p2[0:0] === 1'b1) ? add_ln33_fu_1210_p2 : ap_phi_mux_out_h_0_0_phi_fu_823_p4);

assign tmp10_0_1_0_cast_mid_4_fu_1269_p0 = empty_72_reg_3367;

assign tmp10_0_1_0_cast_mid_4_fu_1269_p1 = tmp10_0_1_0_cast_mid_4_fu_1269_p10;

assign tmp10_0_1_0_cast_mid_4_fu_1269_p10 = tmp10_0_1_0_cast_mid_fu_1260_p2;

assign tmp10_0_1_0_cast_mid_4_fu_1269_p2 = (tmp10_0_1_0_cast_mid_4_fu_1269_p0 * tmp10_0_1_0_cast_mid_4_fu_1269_p1);

assign tmp10_0_1_0_cast_mid_fu_1260_p2 = (tmp10_0_0_0_cast_mid_6_reg_3551 + 7'd1);

assign tmp10_0_2_0_cast_mid_4_fu_1315_p0 = empty_72_reg_3367;

assign tmp10_0_2_0_cast_mid_4_fu_1315_p1 = tmp10_0_2_0_cast_mid_4_fu_1315_p10;

assign tmp10_0_2_0_cast_mid_4_fu_1315_p10 = tmp10_0_2_0_cast_mid_fu_1306_p2;

assign tmp10_0_2_0_cast_mid_4_fu_1315_p2 = (tmp10_0_2_0_cast_mid_4_fu_1315_p0 * tmp10_0_2_0_cast_mid_4_fu_1315_p1);

assign tmp10_0_2_0_cast_mid_fu_1306_p2 = (tmp10_0_0_0_cast_mid_6_reg_3551 + 7'd2);

assign tmp10_1_0_0_cast_mid_5_fu_1750_p1 = tmp10_1_0_0_cast_mid_fu_1742_p3;

assign tmp10_1_0_0_cast_mid_6_fu_1754_p2 = (tmp10_1_0_0_cast_mid_5_fu_1750_p1 + mul_ln41_36_reg_3849);

assign tmp10_1_0_0_cast_mid_8_fu_1763_p0 = empty_72_reg_3367;

assign tmp10_1_0_0_cast_mid_8_fu_1763_p1 = tmp10_1_0_0_cast_mid_8_fu_1763_p10;

assign tmp10_1_0_0_cast_mid_8_fu_1763_p10 = tmp10_1_0_0_cast_mid_6_fu_1754_p2;

assign tmp10_1_0_0_cast_mid_8_fu_1763_p2 = (tmp10_1_0_0_cast_mid_8_fu_1763_p0 * tmp10_1_0_0_cast_mid_8_fu_1763_p1);

assign tmp10_1_0_0_cast_mid_fu_1742_p3 = ((icmp_ln34_4_fu_1729_p2[0:0] === 1'b1) ? add_ln33_4_fu_1723_p2 : ap_phi_mux_out_h_0_1_phi_fu_856_p4);

assign tmp10_1_1_0_cast_mid_4_fu_1782_p0 = empty_72_reg_3367;

assign tmp10_1_1_0_cast_mid_4_fu_1782_p1 = tmp10_1_1_0_cast_mid_4_fu_1782_p10;

assign tmp10_1_1_0_cast_mid_4_fu_1782_p10 = tmp10_1_1_0_cast_mid_fu_1773_p2;

assign tmp10_1_1_0_cast_mid_4_fu_1782_p2 = (tmp10_1_1_0_cast_mid_4_fu_1782_p0 * tmp10_1_1_0_cast_mid_4_fu_1782_p1);

assign tmp10_1_1_0_cast_mid_fu_1773_p2 = (tmp10_1_0_0_cast_mid_6_reg_3880 + 7'd1);

assign tmp10_1_2_0_cast_mid_4_fu_1828_p0 = empty_72_reg_3367;

assign tmp10_1_2_0_cast_mid_4_fu_1828_p1 = tmp10_1_2_0_cast_mid_4_fu_1828_p10;

assign tmp10_1_2_0_cast_mid_4_fu_1828_p10 = tmp10_1_2_0_cast_mid_fu_1819_p2;

assign tmp10_1_2_0_cast_mid_4_fu_1828_p2 = (tmp10_1_2_0_cast_mid_4_fu_1828_p0 * tmp10_1_2_0_cast_mid_4_fu_1828_p1);

assign tmp10_1_2_0_cast_mid_fu_1819_p2 = (tmp10_1_0_0_cast_mid_6_reg_3880 + 7'd2);

assign tmp10_2_0_0_cast_mid_5_fu_2263_p1 = tmp10_2_0_0_cast_mid_fu_2255_p3;

assign tmp10_2_0_0_cast_mid_6_fu_2267_p2 = (tmp10_2_0_0_cast_mid_5_fu_2263_p1 + mul_ln41_37_reg_4178);

assign tmp10_2_0_0_cast_mid_8_fu_2276_p0 = empty_72_reg_3367;

assign tmp10_2_0_0_cast_mid_8_fu_2276_p1 = tmp10_2_0_0_cast_mid_8_fu_2276_p10;

assign tmp10_2_0_0_cast_mid_8_fu_2276_p10 = tmp10_2_0_0_cast_mid_6_fu_2267_p2;

assign tmp10_2_0_0_cast_mid_8_fu_2276_p2 = (tmp10_2_0_0_cast_mid_8_fu_2276_p0 * tmp10_2_0_0_cast_mid_8_fu_2276_p1);

assign tmp10_2_0_0_cast_mid_fu_2255_p3 = ((icmp_ln34_5_fu_2242_p2[0:0] === 1'b1) ? add_ln33_5_fu_2236_p2 : ap_phi_mux_out_h_0_2_phi_fu_889_p4);

assign tmp10_2_1_0_cast_mid_4_fu_2295_p0 = empty_72_reg_3367;

assign tmp10_2_1_0_cast_mid_4_fu_2295_p1 = tmp10_2_1_0_cast_mid_4_fu_2295_p10;

assign tmp10_2_1_0_cast_mid_4_fu_2295_p10 = tmp10_2_1_0_cast_mid_fu_2286_p2;

assign tmp10_2_1_0_cast_mid_4_fu_2295_p2 = (tmp10_2_1_0_cast_mid_4_fu_2295_p0 * tmp10_2_1_0_cast_mid_4_fu_2295_p1);

assign tmp10_2_1_0_cast_mid_fu_2286_p2 = (tmp10_2_0_0_cast_mid_6_reg_4209 + 7'd1);

assign tmp10_2_2_0_cast_mid_4_fu_2341_p0 = empty_72_reg_3367;

assign tmp10_2_2_0_cast_mid_4_fu_2341_p1 = tmp10_2_2_0_cast_mid_4_fu_2341_p10;

assign tmp10_2_2_0_cast_mid_4_fu_2341_p10 = tmp10_2_2_0_cast_mid_fu_2332_p2;

assign tmp10_2_2_0_cast_mid_4_fu_2341_p2 = (tmp10_2_2_0_cast_mid_4_fu_2341_p0 * tmp10_2_2_0_cast_mid_4_fu_2341_p1);

assign tmp10_2_2_0_cast_mid_fu_2332_p2 = (tmp10_2_0_0_cast_mid_6_reg_4209 + 7'd2);

assign tmp10_3_0_0_cast_mid_5_fu_2777_p1 = tmp10_3_0_0_cast_mid_fu_2769_p3;

assign tmp10_3_0_0_cast_mid_6_fu_2781_p2 = (tmp10_3_0_0_cast_mid_5_fu_2777_p1 + mul_ln41_47_reg_4461);

assign tmp10_3_0_0_cast_mid_8_fu_2790_p0 = empty_72_reg_3367;

assign tmp10_3_0_0_cast_mid_8_fu_2790_p1 = tmp10_3_0_0_cast_mid_8_fu_2790_p10;

assign tmp10_3_0_0_cast_mid_8_fu_2790_p10 = tmp10_3_0_0_cast_mid_6_fu_2781_p2;

assign tmp10_3_0_0_cast_mid_8_fu_2790_p2 = (tmp10_3_0_0_cast_mid_8_fu_2790_p0 * tmp10_3_0_0_cast_mid_8_fu_2790_p1);

assign tmp10_3_0_0_cast_mid_fu_2769_p3 = ((icmp_ln34_6_fu_2756_p2[0:0] === 1'b1) ? add_ln33_6_fu_2750_p2 : ap_phi_mux_out_h_0_3_phi_fu_922_p4);

assign tmp10_3_1_0_cast_mid_4_fu_2809_p0 = empty_72_reg_3367;

assign tmp10_3_1_0_cast_mid_4_fu_2809_p1 = tmp10_3_1_0_cast_mid_4_fu_2809_p10;

assign tmp10_3_1_0_cast_mid_4_fu_2809_p10 = tmp10_3_1_0_cast_mid_fu_2800_p2;

assign tmp10_3_1_0_cast_mid_4_fu_2809_p2 = (tmp10_3_1_0_cast_mid_4_fu_2809_p0 * tmp10_3_1_0_cast_mid_4_fu_2809_p1);

assign tmp10_3_1_0_cast_mid_fu_2800_p2 = (tmp10_3_0_0_cast_mid_6_reg_4537 + 7'd1);

assign tmp10_3_2_0_cast_mid_4_fu_2855_p0 = empty_72_reg_3367;

assign tmp10_3_2_0_cast_mid_4_fu_2855_p1 = tmp10_3_2_0_cast_mid_4_fu_2855_p10;

assign tmp10_3_2_0_cast_mid_4_fu_2855_p10 = tmp10_3_2_0_cast_mid_fu_2846_p2;

assign tmp10_3_2_0_cast_mid_4_fu_2855_p2 = (tmp10_3_2_0_cast_mid_4_fu_2855_p0 * tmp10_3_2_0_cast_mid_4_fu_2855_p1);

assign tmp10_3_2_0_cast_mid_fu_2846_p2 = (tmp10_3_0_0_cast_mid_6_reg_4537 + 7'd2);

assign tmp12_0_cast_mid2_v_s_fu_1255_p2 = (tmp10_0_0_0_cast_mid_5_fu_1237_p1 + mul_ln49_reg_3525);

assign tmp12_1_cast_mid2_v_s_fu_1768_p2 = (tmp10_1_0_0_cast_mid_5_fu_1750_p1 + mul_ln49_1_reg_3854);

assign tmp12_2_cast_mid2_v_s_fu_2281_p2 = (tmp10_2_0_0_cast_mid_5_fu_2263_p1 + mul_ln49_2_reg_4183);

assign tmp12_3_cast_mid2_v_s_fu_2795_p2 = (tmp10_3_0_0_cast_mid_5_fu_2777_p1 + mul_ln49_3_reg_4466);

assign tmp_2_fu_1033_p4 = {{out_d_0_0_reg_796[2:1]}};

assign trunc_ln23_fu_1145_p1 = out_d_0_0_reg_796[2:0];

assign zext_ln28_40_fu_1051_p1 = add_ln_fu_1043_p3;

assign zext_ln28_41_fu_1061_p1 = or_ln28_fu_1056_p2;

assign zext_ln28_42_fu_1071_p1 = or_ln28_5_fu_1066_p2;

assign zext_ln28_43_fu_1084_p1 = or_ln28_6_fu_1079_p2;

assign zext_ln28_44_fu_1095_p1 = add_ln28_fu_1089_p2;

assign zext_ln28_45_fu_1105_p1 = add_ln28_29_fu_1100_p2;

assign zext_ln28_46_fu_1115_p1 = add_ln28_30_fu_1110_p2;

assign zext_ln28_47_fu_1125_p1 = add_ln28_31_fu_1120_p2;

assign zext_ln28_48_fu_1135_p1 = add_ln28_32_fu_1130_p2;

assign zext_ln28_49_fu_1570_p1 = add_ln28_s_fu_1562_p3;

assign zext_ln28_50_fu_1584_p1 = add_ln28_33_fu_1578_p2;

assign zext_ln28_51_fu_1594_p1 = or_ln28_7_fu_1589_p2;

assign zext_ln28_52_fu_1604_p1 = add_ln28_34_fu_1599_p2;

assign zext_ln28_53_fu_1614_p1 = add_ln28_35_fu_1609_p2;

assign zext_ln28_54_fu_1624_p1 = add_ln28_36_fu_1619_p2;

assign zext_ln28_55_fu_1634_p1 = add_ln28_37_fu_1629_p2;

assign zext_ln28_56_fu_1644_p1 = add_ln28_38_fu_1639_p2;

assign zext_ln28_57_fu_1654_p1 = add_ln28_39_fu_1649_p2;

assign zext_ln28_58_fu_2083_p1 = add_ln28_1_fu_2075_p3;

assign zext_ln28_59_fu_2096_p1 = or_ln28_8_fu_2091_p2;

assign zext_ln28_60_fu_2107_p1 = add_ln28_40_fu_2101_p2;

assign zext_ln28_61_fu_2117_p1 = add_ln28_41_fu_2112_p2;

assign zext_ln28_62_fu_2127_p1 = add_ln28_42_fu_2122_p2;

assign zext_ln28_63_fu_2137_p1 = add_ln28_43_fu_2132_p2;

assign zext_ln28_64_fu_2147_p1 = add_ln28_44_fu_2142_p2;

assign zext_ln28_65_fu_2157_p1 = add_ln28_45_fu_2152_p2;

assign zext_ln28_66_fu_2167_p1 = add_ln28_46_fu_2162_p2;

assign zext_ln28_67_fu_2596_p1 = add_ln28_2_fu_2588_p3;

assign zext_ln28_68_fu_2610_p1 = add_ln28_47_fu_2604_p2;

assign zext_ln28_69_fu_2621_p1 = add_ln28_48_fu_2615_p2;

assign zext_ln28_70_fu_2631_p1 = add_ln28_49_fu_2626_p2;

assign zext_ln28_71_fu_2641_p1 = add_ln28_50_fu_2636_p2;

assign zext_ln28_72_fu_2651_p1 = add_ln28_51_fu_2646_p2;

assign zext_ln28_73_fu_2661_p1 = add_ln28_52_fu_2656_p2;

assign zext_ln28_74_fu_2671_p1 = add_ln28_53_fu_2666_p2;

assign zext_ln28_75_fu_2681_p1 = add_ln28_54_fu_2676_p2;

assign zext_ln28_76_fu_1575_p1 = add_ln28_s_reg_3738;

assign zext_ln28_77_fu_2088_p1 = add_ln28_1_reg_4067;

assign zext_ln28_78_fu_2601_p1 = add_ln28_2_reg_4396;

assign zext_ln28_fu_1076_p1 = add_ln_reg_3402;

assign zext_ln31_1_fu_1659_p1 = or_ln23_reg_3732;

assign zext_ln31_2_fu_2172_p1 = or_ln23_3_reg_4061;

assign zext_ln31_3_fu_2686_p1 = or_ln23_4_reg_4390;

assign zext_ln31_fu_1140_p1 = out_d_0_0_reg_796;

assign zext_ln41_100_fu_2921_p1 = add_ln41_82_fu_2917_p2;

assign zext_ln41_101_fu_2930_p1 = add_ln41_83_fu_2926_p2;

assign zext_ln41_102_fu_2973_p1 = add_ln41_84_reg_4638;

assign zext_ln41_103_fu_2977_p1 = add_ln41_85_reg_4643;

assign zext_ln41_104_fu_3012_p1 = add_ln41_86_reg_4648;

assign zext_ln41_53_fu_1185_p1 = out_d_0_0_reg_796;

assign zext_ln41_54_fu_1699_p1 = or_ln23_reg_3732;

assign zext_ln41_55_fu_1274_p1 = out_w_0_0_mid2_reg_3539;

assign zext_ln41_56_fu_1282_p1 = add_ln41_fu_1277_p2;

assign zext_ln41_57_fu_1292_p1 = add_ln41_44_fu_1287_p2;

assign zext_ln41_58_fu_1301_p1 = add_ln41_45_fu_1296_p2;

assign zext_ln41_59_fu_1328_p1 = add_ln41_46_fu_1323_p2;

assign zext_ln41_60_fu_2212_p1 = or_ln23_3_reg_4061;

assign zext_ln41_61_fu_1337_p1 = add_ln41_47_fu_1332_p2;

assign zext_ln41_62_fu_1346_p1 = add_ln41_48_fu_1342_p2;

assign zext_ln41_63_fu_1381_p1 = add_ln41_49_fu_1377_p2;

assign zext_ln41_64_fu_1390_p1 = add_ln41_50_fu_1386_p2;

assign zext_ln41_65_fu_1433_p1 = add_ln41_51_reg_3652;

assign zext_ln41_66_fu_1437_p1 = add_ln41_52_reg_3657;

assign zext_ln41_67_fu_1472_p1 = add_ln41_53_reg_3662;

assign zext_ln41_68_fu_1787_p1 = out_w_0_1_mid2_reg_3868;

assign zext_ln41_69_fu_1795_p1 = add_ln41_54_fu_1790_p2;

assign zext_ln41_70_fu_1805_p1 = add_ln41_55_fu_1800_p2;

assign zext_ln41_71_fu_1814_p1 = add_ln41_56_fu_1809_p2;

assign zext_ln41_72_fu_1841_p1 = add_ln41_57_fu_1836_p2;

assign zext_ln41_73_fu_1850_p1 = add_ln41_58_fu_1845_p2;

assign zext_ln41_74_fu_2690_p1 = or_ln23_4_reg_4390;

assign zext_ln41_75_fu_1859_p1 = add_ln41_59_fu_1855_p2;

assign zext_ln41_76_fu_1894_p1 = add_ln41_60_fu_1890_p2;

assign zext_ln41_77_fu_1903_p1 = add_ln41_61_fu_1899_p2;

assign zext_ln41_78_fu_1946_p1 = add_ln41_62_reg_3981;

assign zext_ln41_79_fu_1950_p1 = add_ln41_63_reg_3986;

assign zext_ln41_80_fu_1985_p1 = add_ln41_64_reg_3991;

assign zext_ln41_81_fu_2300_p1 = out_w_0_2_mid2_reg_4197;

assign zext_ln41_82_fu_2308_p1 = add_ln41_65_fu_2303_p2;

assign zext_ln41_83_fu_2318_p1 = add_ln41_66_fu_2313_p2;

assign zext_ln41_84_fu_2327_p1 = add_ln41_67_fu_2322_p2;

assign zext_ln41_85_fu_2354_p1 = add_ln41_68_fu_2349_p2;

assign zext_ln41_86_fu_2363_p1 = add_ln41_69_fu_2358_p2;

assign zext_ln41_87_fu_2372_p1 = add_ln41_70_fu_2368_p2;

assign zext_ln41_88_fu_2407_p1 = add_ln41_71_fu_2403_p2;

assign zext_ln41_89_fu_2416_p1 = add_ln41_72_fu_2412_p2;

assign zext_ln41_90_fu_2459_p1 = add_ln41_73_reg_4310;

assign zext_ln41_91_fu_2463_p1 = add_ln41_74_reg_4315;

assign zext_ln41_92_fu_2498_p1 = add_ln41_75_reg_4320;

assign zext_ln41_93_fu_2814_p1 = out_w_0_3_mid2_reg_4525;

assign zext_ln41_94_fu_2822_p1 = add_ln41_76_fu_2817_p2;

assign zext_ln41_95_fu_2832_p1 = add_ln41_77_fu_2827_p2;

assign zext_ln41_96_fu_2841_p1 = add_ln41_78_fu_2836_p2;

assign zext_ln41_97_fu_2868_p1 = add_ln41_79_fu_2863_p2;

assign zext_ln41_98_fu_2877_p1 = add_ln41_80_fu_2872_p2;

assign zext_ln41_99_fu_2886_p1 = add_ln41_81_fu_2882_p2;

assign zext_ln41_fu_997_p1 = input_height;

assign zext_ln49_5_fu_1553_p1 = add_ln49_44_reg_3627_pp0_iter1_reg;

assign zext_ln49_6_fu_2066_p1 = add_ln49_1_reg_3956_pp1_iter1_reg;

assign zext_ln49_7_fu_2579_p1 = add_ln49_2_reg_4285_pp2_iter1_reg;

assign zext_ln49_8_fu_3093_p1 = add_ln49_3_reg_4613_pp3_iter1_reg;

assign zext_ln49_fu_1001_p1 = output_height;

always @ (posedge ap_clk) begin
    zext_ln41_reg_3351[6] <= 1'b0;
    zext_ln49_reg_3359[6:5] <= 2'b00;
    empty_72_reg_3367[10:6] <= 5'b00000;
    empty_73_reg_3383[10:5] <= 6'b000000;
    zext_ln28_reg_3425[6] <= 1'b0;
    zext_ln41_55_reg_3576[10:4] <= 7'b0000000;
    zext_ln41_57_reg_3593[10:4] <= 7'b0000000;
    zext_ln41_59_reg_3611[10:4] <= 7'b0000000;
    or_ln23_reg_3732[0] <= 1'b1;
    add_ln28_s_reg_3738[0] <= 1'b1;
    add_ln28_s_reg_3738[3] <= 1'b1;
    zext_ln28_76_reg_3749[0] <= 1'b1;
    zext_ln28_76_reg_3749[3:3] <= 1'b1;
    zext_ln28_76_reg_3749[6] <= 1'b0;
    zext_ln41_68_reg_3905[10:4] <= 7'b0000000;
    zext_ln41_70_reg_3922[10:4] <= 7'b0000000;
    zext_ln41_72_reg_3940[10:4] <= 7'b0000000;
    or_ln23_3_reg_4061[1] <= 1'b1;
    add_ln28_1_reg_4067[1] <= 1'b1;
    add_ln28_1_reg_4067[4] <= 1'b1;
    zext_ln28_77_reg_4078[1] <= 1'b1;
    zext_ln28_77_reg_4078[4:4] <= 1'b1;
    zext_ln28_77_reg_4078[6] <= 1'b0;
    zext_ln41_81_reg_4234[10:4] <= 7'b0000000;
    zext_ln41_83_reg_4251[10:4] <= 7'b0000000;
    zext_ln41_85_reg_4269[10:4] <= 7'b0000000;
    or_ln23_4_reg_4390[1:0] <= 2'b11;
    add_ln28_2_reg_4396[1:0] <= 2'b11;
    add_ln28_2_reg_4396[4:3] <= 2'b11;
    zext_ln28_78_reg_4406[1:0] <= 2'b11;
    zext_ln28_78_reg_4406[4:3] <= 2'b11;
    zext_ln28_78_reg_4406[6] <= 1'b0;
    zext_ln41_93_reg_4562[10:4] <= 7'b0000000;
    zext_ln41_95_reg_4579[10:4] <= 7'b0000000;
    zext_ln41_97_reg_4597[10:4] <= 7'b0000000;
end

endmodule //depthwise_conv2d_fix_1
