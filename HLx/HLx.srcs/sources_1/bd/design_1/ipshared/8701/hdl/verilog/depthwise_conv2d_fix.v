// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module depthwise_conv2d_fix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state19 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten71_reg_176;
reg   [0:0] out_d_0_reg_188;
reg   [9:0] indvar_flatten_reg_200;
reg   [4:0] out_h_0_reg_211;
reg   [4:0] out_w_0_reg_223;
reg  signed [15:0] reg_235;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] icmp_ln34_reg_1125;
reg   [0:0] icmp_ln34_reg_1125_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln34_reg_1125_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg  signed [15:0] reg_240;
wire   [4:0] tmp_1_0_fu_249_p2;
reg   [4:0] tmp_1_0_reg_1107;
wire   [4:0] tmp_2_0_fu_255_p2;
reg   [4:0] tmp_2_0_reg_1113;
wire   [4:0] tmp6_fu_261_p2;
reg   [4:0] tmp6_reg_1119;
wire   [0:0] icmp_ln34_fu_267_p2;
reg   [0:0] icmp_ln34_reg_1125_pp0_iter3_reg;
wire   [0:0] icmp_ln22_fu_273_p2;
reg   [0:0] icmp_ln22_reg_1129;
wire   [9:0] add_ln22_3_fu_279_p2;
reg   [9:0] add_ln22_3_reg_1143;
wire   [0:0] out_d_fu_285_p2;
reg   [0:0] out_d_reg_1148;
wire   [10:0] tmp5_0_0_fu_315_p2;
reg   [10:0] tmp5_0_0_reg_1156;
wire   [10:0] tmp5_1_0_fu_343_p2;
reg   [10:0] tmp5_1_0_reg_1161;
wire   [9:0] tmp5_2_0_fu_367_p2;
reg   [9:0] tmp5_2_0_reg_1166;
wire   [10:0] tmp7_fu_395_p2;
reg   [10:0] tmp7_reg_1171;
wire   [9:0] add_ln34_23_fu_401_p2;
reg   [9:0] add_ln34_23_reg_1176;
reg    ap_enable_reg_pp0_iter0;
wire   [4:0] select_ln34_fu_407_p3;
reg   [4:0] select_ln34_reg_1181;
wire   [0:0] icmp_ln23_fu_414_p2;
reg   [0:0] icmp_ln23_reg_1189;
wire   [0:0] select_ln34_13_fu_420_p3;
reg   [0:0] select_ln34_13_reg_1194;
wire   [0:0] select_ln34_14_fu_426_p3;
reg   [0:0] select_ln34_14_reg_1202;
wire   [0:0] and_ln34_fu_437_p2;
reg   [0:0] and_ln34_reg_1208;
wire   [4:0] out_h_fu_442_p2;
reg   [4:0] out_h_reg_1218;
wire   [4:0] out_w_0_mid2_fu_454_p3;
reg   [4:0] out_w_0_mid2_reg_1226;
wire   [10:0] tmp5_0_0_mid1_fu_484_p2;
reg   [10:0] tmp5_0_0_mid1_reg_1234;
wire   [4:0] tmp_1_0_mid1_fu_490_p2;
reg   [4:0] tmp_1_0_mid1_reg_1239;
wire   [4:0] tmp_2_0_mid1_fu_495_p2;
reg   [4:0] tmp_2_0_mid1_reg_1245;
wire   [4:0] tmp6_mid1_fu_500_p2;
reg   [4:0] tmp6_mid1_reg_1251;
wire   [4:0] select_ln22_fu_505_p3;
reg   [4:0] select_ln22_reg_1257;
wire   [6:0] tmp7_mid167_fu_538_p2;
reg   [6:0] tmp7_mid167_reg_1262;
wire   [10:0] tmp5_0_0_mid2_fu_544_p3;
reg   [10:0] tmp5_0_0_mid2_reg_1267;
wire   [10:0] tmp5_1_0_mid1_fu_572_p2;
reg   [10:0] tmp5_1_0_mid1_reg_1274;
wire   [9:0] tmp5_2_0_mid1_fu_596_p2;
reg   [9:0] tmp5_2_0_mid1_reg_1279;
wire   [10:0] tmp7_mid1_fu_624_p2;
reg   [10:0] tmp7_mid1_reg_1284;
wire   [4:0] out_w_fu_630_p2;
reg   [4:0] out_w_reg_1289;
wire   [9:0] select_ln22_3_fu_635_p3;
reg   [9:0] select_ln22_3_reg_1296;
wire   [10:0] tmp5_1_0_mid2_fu_662_p3;
reg   [10:0] tmp5_1_0_mid2_reg_1301;
wire   [9:0] tmp5_2_0_mid2_fu_668_p3;
reg   [9:0] tmp5_2_0_mid2_reg_1308;
wire   [10:0] zext_ln34_15_fu_680_p1;
reg   [10:0] zext_ln34_15_reg_1315;
wire   [10:0] add_ln34_fu_683_p2;
reg   [10:0] add_ln34_reg_1320;
wire   [10:0] zext_ln34_17_fu_688_p1;
reg   [10:0] zext_ln34_17_reg_1325;
wire   [10:0] add_ln34_3_fu_691_p2;
reg   [10:0] add_ln34_3_reg_1330;
wire   [4:0] add_ln34_4_fu_696_p2;
reg   [4:0] add_ln34_4_reg_1335;
wire   [10:0] add_ln40_fu_701_p2;
reg   [10:0] add_ln40_reg_1341;
reg   [10:0] add_ln40_reg_1341_pp0_iter2_reg;
reg   [10:0] add_ln40_reg_1341_pp0_iter3_reg;
wire   [1:0] select_ln34_15_fu_713_p3;
reg   [1:0] select_ln34_15_reg_1356;
wire   [10:0] add_ln34_5_fu_763_p2;
reg   [10:0] add_ln34_5_reg_1371;
wire   [10:0] add_ln34_6_fu_768_p2;
reg   [10:0] add_ln34_6_reg_1376;
wire   [10:0] add_ln34_7_fu_772_p2;
reg   [10:0] add_ln34_7_reg_1381;
wire   [10:0] add_ln34_8_fu_776_p2;
reg   [10:0] add_ln34_8_reg_1386;
wire   [15:0] grp_fu_728_p5;
reg  signed [15:0] tmp_5_reg_1406;
wire   [15:0] grp_fu_748_p5;
reg  signed [15:0] tmp_6_reg_1411;
wire   [9:0] add_ln34_9_fu_852_p2;
reg   [9:0] add_ln34_9_reg_1426;
wire   [9:0] add_ln34_10_fu_857_p2;
reg   [9:0] add_ln34_10_reg_1431;
wire   [9:0] add_ln34_11_fu_862_p2;
reg   [9:0] add_ln34_11_reg_1436;
wire  signed [29:0] sext_ln34_3_fu_871_p1;
reg  signed [29:0] sext_ln34_3_reg_1441;
wire  signed [29:0] mul_ln34_fu_1058_p2;
reg  signed [29:0] mul_ln34_reg_1447;
wire  signed [29:0] sext_ln34_6_fu_878_p1;
reg  signed [29:0] sext_ln34_6_reg_1452;
wire  signed [29:0] mul_ln34_1_fu_1064_p2;
reg  signed [29:0] mul_ln34_1_reg_1457;
wire   [15:0] grp_fu_796_p5;
reg  signed [15:0] tmp_7_reg_1462;
wire   [15:0] grp_fu_816_p5;
reg  signed [15:0] tmp_8_reg_1467;
wire  signed [29:0] sext_ln34_9_fu_911_p1;
reg  signed [29:0] sext_ln34_9_reg_1482;
wire  signed [29:0] mul_ln34_2_fu_1070_p2;
reg  signed [29:0] mul_ln34_2_reg_1487;
wire  signed [29:0] sext_ln34_12_fu_918_p1;
reg  signed [29:0] sext_ln34_12_reg_1492;
wire  signed [29:0] mul_ln34_3_fu_1076_p2;
reg  signed [29:0] mul_ln34_3_reg_1497;
wire   [15:0] add_ln40_1_fu_925_p2;
reg   [15:0] add_ln40_1_reg_1507;
wire  signed [29:0] mul_ln34_4_fu_1082_p2;
reg  signed [29:0] mul_ln34_4_reg_1512;
wire  signed [29:0] mul_ln34_5_fu_1087_p2;
reg  signed [29:0] mul_ln34_5_reg_1517;
wire   [15:0] add_ln40_3_fu_963_p2;
reg   [15:0] add_ln40_3_reg_1522;
wire  signed [29:0] mul_ln34_6_fu_1092_p2;
reg  signed [29:0] mul_ln34_6_reg_1527;
wire  signed [29:0] mul_ln34_7_fu_1097_p2;
reg  signed [29:0] mul_ln34_7_reg_1532;
wire   [15:0] add_ln40_4_fu_994_p2;
reg   [15:0] add_ln40_4_reg_1537;
reg   [15:0] trunc_ln40_6_reg_1542;
reg   [15:0] trunc_ln40_7_reg_1547;
wire  signed [29:0] mul_ln34_8_fu_1102_p2;
reg  signed [29:0] mul_ln34_8_reg_1552;
wire   [15:0] add_ln40_6_fu_1036_p2;
reg   [15:0] add_ln40_6_reg_1557;
wire   [15:0] add_ln40_8_fu_1045_p2;
reg   [15:0] add_ln40_8_reg_1562;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage4_subdone;
reg    ap_enable_reg_pp0_iter3;
reg   [9:0] ap_phi_mux_indvar_flatten71_phi_fu_180_p4;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_out_d_0_phi_fu_192_p4;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_204_p4;
reg   [4:0] ap_phi_mux_out_h_0_phi_fu_215_p4;
reg   [4:0] ap_phi_mux_out_w_0_phi_fu_227_p4;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln34_4_fu_723_p1;
wire   [63:0] zext_ln34_5_fu_743_p1;
wire   [63:0] zext_ln34_6_fu_791_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln34_7_fu_811_p1;
wire   [63:0] zext_ln34_8_fu_839_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln34_9_fu_847_p1;
wire   [63:0] zext_ln34_10_fu_881_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln34_11_fu_885_p1;
wire   [63:0] zext_ln34_12_fu_921_p1;
wire   [63:0] zext_ln40_fu_1053_p1;
wire   [4:0] zext_ln40_1_fu_245_p1;
wire   [9:0] p_shl_fu_291_p3;
wire   [5:0] p_shl1_fu_303_p3;
wire   [10:0] p_shl10_cast_fu_299_p1;
wire   [10:0] p_shl11_cast_fu_311_p1;
wire   [9:0] p_shl8_fu_321_p3;
wire   [5:0] p_shl9_fu_332_p3;
wire   [10:0] p_shl8_cast_fu_328_p1;
wire   [10:0] p_shl9_cast_fu_339_p1;
wire   [5:0] p_shl7_fu_356_p3;
wire   [9:0] p_shl6_fu_349_p3;
wire   [9:0] p_shl7_cast_fu_363_p1;
wire   [9:0] p_shl4_fu_373_p3;
wire   [6:0] p_shl5_fu_384_p3;
wire   [10:0] p_shl4_cast_fu_380_p1;
wire   [10:0] p_shl5_cast_fu_391_p1;
wire   [0:0] xor_ln34_fu_432_p2;
wire   [0:0] empty_54_fu_450_p2;
wire   [9:0] p_shl10_mid1_fu_462_p3;
wire   [5:0] p_shl11_mid1_fu_473_p3;
wire   [10:0] p_shl10_cast_mid1_fu_469_p1;
wire   [10:0] p_shl11_cast_mid1_fu_480_p1;
wire   [4:0] zext_ln34_33_fu_447_p1;
wire   [5:0] tmp_s_fu_516_p3;
wire   [2:0] tmp_9_fu_527_p3;
wire   [6:0] p_shl4_cast_mid161_ca_fu_523_p1;
wire   [6:0] p_shl5_cast_mid165_ca_fu_534_p1;
wire   [10:0] select_ln34_16_fu_510_p3;
wire   [9:0] p_shl8_mid1_fu_550_p3;
wire   [5:0] p_shl9_mid1_fu_561_p3;
wire   [10:0] p_shl8_cast_mid1_fu_557_p1;
wire   [10:0] p_shl9_cast_mid1_fu_568_p1;
wire   [5:0] p_shl7_mid1_fu_585_p3;
wire   [9:0] p_shl6_mid1_fu_578_p3;
wire   [9:0] p_shl7_cast_mid1_fu_592_p1;
wire   [9:0] p_shl4_mid1_fu_602_p3;
wire   [6:0] p_shl5_mid1_fu_613_p3;
wire   [10:0] p_shl4_cast_mid1_fu_609_p1;
wire   [10:0] p_shl5_cast_mid1_fu_620_p1;
wire  signed [10:0] tmp7_mid167_cast_fu_653_p1;
wire   [10:0] select_ln34_17_fu_641_p3;
wire   [9:0] select_ln34_18_fu_647_p3;
wire   [10:0] select_ln34_19_fu_656_p3;
wire   [10:0] tmp7_mid2_fu_674_p3;
wire  signed [31:0] sext_ln34_1_fu_720_p1;
wire   [1:0] grp_fu_728_p4;
wire  signed [31:0] sext_ln34_4_fu_740_p1;
wire   [1:0] grp_fu_748_p4;
wire   [10:0] zext_ln34_19_fu_760_p1;
wire  signed [31:0] sext_ln34_7_fu_788_p1;
wire   [1:0] grp_fu_796_p4;
wire  signed [31:0] sext_ln34_10_fu_808_p1;
wire  signed [31:0] sext_ln34_13_fu_836_p1;
wire  signed [31:0] sext_ln34_15_fu_844_p1;
wire   [9:0] zext_ln34_14_fu_827_p1;
wire   [9:0] zext_ln34_16_fu_830_p1;
wire   [9:0] zext_ln34_18_fu_833_p1;
wire   [15:0] trunc_ln40_1_fu_898_p4;
wire   [15:0] trunc_ln_fu_889_p4;
wire   [15:0] trunc_ln40_3_fu_940_p4;
wire   [15:0] trunc_ln40_2_fu_931_p4;
wire   [15:0] add_ln40_2_fu_957_p2;
wire   [15:0] trunc_ln40_5_fu_977_p4;
wire   [15:0] trunc_ln40_4_fu_968_p4;
wire   [15:0] trunc_ln40_8_fu_1022_p4;
wire   [15:0] add_ln40_5_fu_1031_p2;
wire   [15:0] add_ln40_7_fu_1041_p2;
wire  signed [31:0] sext_ln40_fu_1050_p1;
wire  signed [15:0] mul_ln34_4_fu_1082_p0;
wire  signed [15:0] mul_ln34_5_fu_1087_p0;
wire  signed [15:0] mul_ln34_6_fu_1092_p0;
wire  signed [15:0] mul_ln34_7_fu_1097_p0;
wire  signed [15:0] mul_ln34_8_fu_1102_p0;
wire    ap_CS_fsm_state19;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

network_mux_32_16_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
network_mux_32_16_3_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(16'd52982),
    .din1(16'd52851),
    .din2(16'd1933),
    .din3(grp_fu_728_p4),
    .ce(1'b1),
    .dout(grp_fu_728_p5)
);

network_mux_32_16_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
network_mux_32_16_3_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(16'd52982),
    .din1(16'd52851),
    .din2(16'd1933),
    .din3(grp_fu_748_p4),
    .ce(1'b1),
    .dout(grp_fu_748_p5)
);

network_mux_32_16_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
network_mux_32_16_3_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(16'd52982),
    .din1(16'd52851),
    .din2(16'd1933),
    .din3(grp_fu_796_p4),
    .ce(1'b1),
    .dout(grp_fu_796_p5)
);

network_mux_32_16_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
network_mux_32_16_3_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(16'd52982),
    .din1(16'd52851),
    .din2(16'd1933),
    .din3(select_ln34_15_reg_1356),
    .ce(1'b1),
    .dout(grp_fu_816_p5)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U10(
    .din0(tmp_5_reg_1406),
    .din1(reg_235),
    .dout(mul_ln34_fu_1058_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U11(
    .din0(tmp_6_reg_1411),
    .din1(reg_240),
    .dout(mul_ln34_1_fu_1064_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U12(
    .din0(tmp_7_reg_1462),
    .din1(reg_235),
    .dout(mul_ln34_2_fu_1070_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U13(
    .din0(tmp_8_reg_1467),
    .din1(reg_240),
    .dout(mul_ln34_3_fu_1076_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U14(
    .din0(mul_ln34_4_fu_1082_p0),
    .din1(reg_235),
    .dout(mul_ln34_4_fu_1082_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U15(
    .din0(mul_ln34_5_fu_1087_p0),
    .din1(reg_240),
    .dout(mul_ln34_5_fu_1087_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U16(
    .din0(mul_ln34_6_fu_1092_p0),
    .din1(reg_235),
    .dout(mul_ln34_6_fu_1092_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U17(
    .din0(mul_ln34_7_fu_1097_p0),
    .din1(reg_240),
    .dout(mul_ln34_7_fu_1097_p2)
);

network_mul_mul_16s_16s_30_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_mul_16s_16s_30_1_1_U18(
    .din0(mul_ln34_8_fu_1102_p0),
    .din1(reg_235),
    .dout(mul_ln34_8_fu_1102_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten71_reg_176 <= add_ln34_23_reg_1176;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten71_reg_176 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_200 <= select_ln22_3_reg_1296;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_200 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_d_0_reg_188 <= select_ln34_13_reg_1194;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        out_d_0_reg_188 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_h_0_reg_211 <= select_ln22_reg_1257;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        out_h_0_reg_211 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        out_w_0_reg_223 <= out_w_reg_1289;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        out_w_0_reg_223 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln34_reg_1125_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_235 <= input_r_q1;
    end else if ((((icmp_ln34_reg_1125_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_235 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln34_reg_1125_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_240 <= input_r_q0;
    end else if (((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_240 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_267_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln22_3_reg_1143 <= add_ln22_3_fu_279_p2;
        icmp_ln22_reg_1129 <= icmp_ln22_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln34_10_reg_1431 <= add_ln34_10_fu_857_p2;
        add_ln34_11_reg_1436 <= add_ln34_11_fu_862_p2;
        add_ln34_9_reg_1426 <= add_ln34_9_fu_852_p2;
        tmp_5_reg_1406 <= grp_fu_728_p5;
        tmp_6_reg_1411 <= grp_fu_748_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln34_23_reg_1176 <= add_ln34_23_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln34_3_reg_1330 <= add_ln34_3_fu_691_p2;
        add_ln34_4_reg_1335 <= add_ln34_4_fu_696_p2;
        add_ln34_reg_1320 <= add_ln34_fu_683_p2;
        add_ln40_reg_1341 <= add_ln40_fu_701_p2;
        tmp5_1_0_mid2_reg_1301[10 : 1] <= tmp5_1_0_mid2_fu_662_p3[10 : 1];
        tmp5_2_0_mid2_reg_1308[9 : 1] <= tmp5_2_0_mid2_fu_668_p3[9 : 1];
        zext_ln34_15_reg_1315[4 : 0] <= zext_ln34_15_fu_680_p1[4 : 0];
        zext_ln34_17_reg_1325[4 : 0] <= zext_ln34_17_fu_688_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln34_5_reg_1371 <= add_ln34_5_fu_763_p2;
        add_ln34_6_reg_1376 <= add_ln34_6_fu_768_p2;
        add_ln34_7_reg_1381 <= add_ln34_7_fu_772_p2;
        add_ln34_8_reg_1386 <= add_ln34_8_fu_776_p2;
        select_ln34_15_reg_1356 <= select_ln34_15_fu_713_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln40_1_reg_1507 <= add_ln40_1_fu_925_p2;
        mul_ln34_2_reg_1487 <= mul_ln34_2_fu_1070_p2;
        mul_ln34_3_reg_1497 <= mul_ln34_3_fu_1076_p2;
        sext_ln34_12_reg_1492 <= sext_ln34_12_fu_918_p1;
        sext_ln34_9_reg_1482 <= sext_ln34_9_fu_911_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln40_3_reg_1522 <= add_ln40_3_fu_963_p2;
        mul_ln34_4_reg_1512 <= mul_ln34_4_fu_1082_p2;
        mul_ln34_5_reg_1517 <= mul_ln34_5_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln40_4_reg_1537 <= add_ln40_4_fu_994_p2;
        mul_ln34_6_reg_1527 <= mul_ln34_6_fu_1092_p2;
        mul_ln34_7_reg_1532 <= mul_ln34_7_fu_1097_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln34_reg_1125_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln40_6_reg_1557 <= add_ln40_6_fu_1036_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln40_8_reg_1562 <= add_ln40_8_fu_1045_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln40_reg_1341_pp0_iter2_reg <= add_ln40_reg_1341;
        add_ln40_reg_1341_pp0_iter3_reg <= add_ln40_reg_1341_pp0_iter2_reg;
        icmp_ln34_reg_1125 <= icmp_ln34_fu_267_p2;
        icmp_ln34_reg_1125_pp0_iter1_reg <= icmp_ln34_reg_1125;
        icmp_ln34_reg_1125_pp0_iter2_reg <= icmp_ln34_reg_1125_pp0_iter1_reg;
        icmp_ln34_reg_1125_pp0_iter3_reg <= icmp_ln34_reg_1125_pp0_iter2_reg;
        tmp6_reg_1119 <= tmp6_fu_261_p2;
        tmp_1_0_reg_1107 <= tmp_1_0_fu_249_p2;
        tmp_2_0_reg_1113 <= tmp_2_0_fu_255_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        and_ln34_reg_1208 <= and_ln34_fu_437_p2;
        out_h_reg_1218 <= out_h_fu_442_p2;
        select_ln34_14_reg_1202 <= select_ln34_14_fu_426_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln23_reg_1189 <= icmp_ln23_fu_414_p2;
        select_ln34_reg_1181 <= select_ln34_fu_407_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_ln34_1_reg_1457 <= mul_ln34_1_fu_1064_p2;
        mul_ln34_reg_1447 <= mul_ln34_fu_1058_p2;
        sext_ln34_3_reg_1441 <= sext_ln34_3_fu_871_p1;
        sext_ln34_6_reg_1452 <= sext_ln34_6_fu_878_p1;
        tmp_7_reg_1462 <= grp_fu_796_p5;
        tmp_8_reg_1467 <= grp_fu_816_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln34_8_reg_1552 <= mul_ln34_8_fu_1102_p2;
        trunc_ln40_6_reg_1542 <= {{mul_ln34_6_reg_1527[29:14]}};
        trunc_ln40_7_reg_1547 <= {{mul_ln34_7_reg_1532[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        out_d_reg_1148 <= out_d_fu_285_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        out_w_0_mid2_reg_1226 <= out_w_0_mid2_fu_454_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        out_w_reg_1289 <= out_w_fu_630_p2;
        select_ln22_3_reg_1296 <= select_ln22_3_fu_635_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln22_reg_1257 <= select_ln22_fu_505_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        select_ln34_13_reg_1194 <= select_ln34_13_fu_420_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'd1 == and_ln34_reg_1208))) begin
        tmp5_0_0_mid1_reg_1234[10 : 1] <= tmp5_0_0_mid1_fu_484_p2[10 : 1];
        tmp6_mid1_reg_1251 <= tmp6_mid1_fu_500_p2;
        tmp_1_0_mid1_reg_1239 <= tmp_1_0_mid1_fu_490_p2;
        tmp_2_0_mid1_reg_1245 <= tmp_2_0_mid1_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp5_0_0_mid2_reg_1267[10 : 1] <= tmp5_0_0_mid2_fu_544_p3[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_reg_1129 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp5_0_0_reg_1156[10 : 1] <= tmp5_0_0_fu_315_p2[10 : 1];
        tmp5_1_0_reg_1161[10 : 1] <= tmp5_1_0_fu_343_p2[10 : 1];
        tmp5_2_0_reg_1166[9 : 1] <= tmp5_2_0_fu_367_p2[9 : 1];
        tmp7_reg_1171[10 : 2] <= tmp7_fu_395_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'd1 == and_ln34_reg_1208))) begin
        tmp5_1_0_mid1_reg_1274[10 : 1] <= tmp5_1_0_mid1_fu_572_p2[10 : 1];
        tmp5_2_0_mid1_reg_1279[9 : 1] <= tmp5_2_0_mid1_fu_596_p2[9 : 1];
        tmp7_mid1_reg_1284[10 : 2] <= tmp7_mid1_fu_624_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'd0 == and_ln34_reg_1208) & (icmp_ln34_reg_1125 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln22_reg_1129 == 1'd1))) begin
        tmp7_mid167_reg_1262[6 : 2] <= tmp7_mid167_fu_538_p2[6 : 2];
    end
end

always @ (*) begin
    if ((icmp_ln34_reg_1125 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten71_phi_fu_180_p4 = add_ln34_23_reg_1176;
    end else begin
        ap_phi_mux_indvar_flatten71_phi_fu_180_p4 = indvar_flatten71_reg_176;
    end
end

always @ (*) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_204_p4 = select_ln22_3_reg_1296;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_204_p4 = indvar_flatten_reg_200;
    end
end

always @ (*) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_out_d_0_phi_fu_192_p4 = select_ln34_13_reg_1194;
    end else begin
        ap_phi_mux_out_d_0_phi_fu_192_p4 = out_d_0_reg_188;
    end
end

always @ (*) begin
    if (((icmp_ln34_reg_1125 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_out_h_0_phi_fu_215_p4 = select_ln22_reg_1257;
    end else begin
        ap_phi_mux_out_h_0_phi_fu_215_p4 = out_h_0_reg_211;
    end
end

always @ (*) begin
    if (((icmp_ln34_reg_1125_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_mux_out_w_0_phi_fu_227_p4 = out_w_reg_1289;
    end else begin
        ap_phi_mux_out_w_0_phi_fu_227_p4 = out_w_0_reg_223;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_r_address0 = zext_ln34_12_fu_921_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_r_address0 = zext_ln34_11_fu_885_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_r_address0 = zext_ln34_9_fu_847_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_r_address0 = zext_ln34_7_fu_811_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_r_address0 = zext_ln34_4_fu_723_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address1 = zext_ln34_10_fu_881_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address1 = zext_ln34_8_fu_839_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = zext_ln34_6_fu_791_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address1 = zext_ln34_5_fu_743_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln34_reg_1125_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((icmp_ln34_reg_1125 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if ((((icmp_ln34_reg_1125 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln22_3_fu_279_p2 = (10'd1 + ap_phi_mux_indvar_flatten_phi_fu_204_p4);

assign add_ln34_10_fu_857_p2 = (zext_ln34_16_fu_830_p1 + tmp5_2_0_mid2_reg_1308);

assign add_ln34_11_fu_862_p2 = (zext_ln34_18_fu_833_p1 + tmp5_2_0_mid2_reg_1308);

assign add_ln34_23_fu_401_p2 = (indvar_flatten71_reg_176 + 10'd1);

assign add_ln34_3_fu_691_p2 = (zext_ln34_17_fu_688_p1 + tmp5_0_0_mid2_reg_1267);

assign add_ln34_4_fu_696_p2 = (5'd2 + out_w_0_mid2_reg_1226);

assign add_ln34_5_fu_763_p2 = (zext_ln34_19_fu_760_p1 + tmp5_0_0_mid2_reg_1267);

assign add_ln34_6_fu_768_p2 = (zext_ln34_15_reg_1315 + tmp5_1_0_mid2_reg_1301);

assign add_ln34_7_fu_772_p2 = (zext_ln34_17_reg_1325 + tmp5_1_0_mid2_reg_1301);

assign add_ln34_8_fu_776_p2 = (zext_ln34_19_fu_760_p1 + tmp5_1_0_mid2_reg_1301);

assign add_ln34_9_fu_852_p2 = (zext_ln34_14_fu_827_p1 + tmp5_2_0_mid2_reg_1308);

assign add_ln34_fu_683_p2 = (zext_ln34_15_fu_680_p1 + tmp5_0_0_mid2_reg_1267);

assign add_ln40_1_fu_925_p2 = (trunc_ln40_1_fu_898_p4 + trunc_ln_fu_889_p4);

assign add_ln40_2_fu_957_p2 = (trunc_ln40_3_fu_940_p4 + trunc_ln40_2_fu_931_p4);

assign add_ln40_3_fu_963_p2 = (add_ln40_1_reg_1507 + add_ln40_2_fu_957_p2);

assign add_ln40_4_fu_994_p2 = (trunc_ln40_5_fu_977_p4 + trunc_ln40_4_fu_968_p4);

assign add_ln40_5_fu_1031_p2 = (trunc_ln40_8_fu_1022_p4 + trunc_ln40_7_reg_1547);

assign add_ln40_6_fu_1036_p2 = (trunc_ln40_6_reg_1542 + add_ln40_5_fu_1031_p2);

assign add_ln40_7_fu_1041_p2 = (add_ln40_4_reg_1537 + add_ln40_6_reg_1557);

assign add_ln40_8_fu_1045_p2 = (add_ln40_3_reg_1522 + add_ln40_7_fu_1041_p2);

assign add_ln40_fu_701_p2 = (zext_ln34_15_fu_680_p1 + tmp7_mid2_fu_674_p3);

assign and_ln34_fu_437_p2 = (xor_ln34_fu_432_p2 & icmp_ln23_reg_1189);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_54_fu_450_p2 = (icmp_ln22_reg_1129 | and_ln34_reg_1208);

assign grp_fu_728_p4 = select_ln34_13_reg_1194;

assign grp_fu_748_p4 = select_ln34_14_reg_1202;

assign grp_fu_796_p4 = {{1'd1}, {select_ln34_13_reg_1194}};

assign icmp_ln22_fu_273_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_204_p4 == 10'd784) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_414_p2 = ((ap_phi_mux_out_w_0_phi_fu_227_p4 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_267_p2 = ((ap_phi_mux_indvar_flatten71_phi_fu_180_p4 == 10'd784) ? 1'b1 : 1'b0);

assign mul_ln34_4_fu_1082_p0 = sext_ln34_3_reg_1441;

assign mul_ln34_5_fu_1087_p0 = sext_ln34_6_reg_1452;

assign mul_ln34_6_fu_1092_p0 = sext_ln34_9_reg_1482;

assign mul_ln34_7_fu_1097_p0 = sext_ln34_12_reg_1492;

assign mul_ln34_8_fu_1102_p0 = sext_ln34_3_reg_1441;

assign out_d_fu_285_p2 = (out_d_0_reg_188 ^ 1'd1);

assign out_h_fu_442_p2 = (5'd1 + select_ln34_reg_1181);

assign out_w_0_mid2_fu_454_p3 = ((empty_54_fu_450_p2[0:0] === 1'b1) ? 5'd0 : out_w_0_reg_223);

assign out_w_fu_630_p2 = (5'd1 + out_w_0_mid2_reg_1226);

assign output_r_address0 = zext_ln40_fu_1053_p1;

assign output_r_d0 = add_ln40_8_reg_1562;

assign p_shl10_cast_fu_299_p1 = p_shl_fu_291_p3;

assign p_shl10_cast_mid1_fu_469_p1 = p_shl10_mid1_fu_462_p3;

assign p_shl10_mid1_fu_462_p3 = {{out_h_reg_1218}, {5'd0}};

assign p_shl11_cast_fu_311_p1 = p_shl1_fu_303_p3;

assign p_shl11_cast_mid1_fu_480_p1 = p_shl11_mid1_fu_473_p3;

assign p_shl11_mid1_fu_473_p3 = {{out_h_reg_1218}, {1'd0}};

assign p_shl1_fu_303_p3 = {{out_h_0_reg_211}, {1'd0}};

assign p_shl4_cast_fu_380_p1 = p_shl4_fu_373_p3;

assign p_shl4_cast_mid161_ca_fu_523_p1 = tmp_s_fu_516_p3;

assign p_shl4_cast_mid1_fu_609_p1 = p_shl4_mid1_fu_602_p3;

assign p_shl4_fu_373_p3 = {{tmp6_reg_1119}, {5'd0}};

assign p_shl4_mid1_fu_602_p3 = {{tmp6_mid1_reg_1251}, {5'd0}};

assign p_shl5_cast_fu_391_p1 = p_shl5_fu_384_p3;

assign p_shl5_cast_mid165_ca_fu_534_p1 = tmp_9_fu_527_p3;

assign p_shl5_cast_mid1_fu_620_p1 = p_shl5_mid1_fu_613_p3;

assign p_shl5_fu_384_p3 = {{tmp6_reg_1119}, {2'd0}};

assign p_shl5_mid1_fu_613_p3 = {{tmp6_mid1_reg_1251}, {2'd0}};

assign p_shl6_fu_349_p3 = {{tmp_2_0_reg_1113}, {5'd0}};

assign p_shl6_mid1_fu_578_p3 = {{tmp_2_0_mid1_reg_1245}, {5'd0}};

assign p_shl7_cast_fu_363_p1 = p_shl7_fu_356_p3;

assign p_shl7_cast_mid1_fu_592_p1 = p_shl7_mid1_fu_585_p3;

assign p_shl7_fu_356_p3 = {{tmp_2_0_reg_1113}, {1'd0}};

assign p_shl7_mid1_fu_585_p3 = {{tmp_2_0_mid1_reg_1245}, {1'd0}};

assign p_shl8_cast_fu_328_p1 = p_shl8_fu_321_p3;

assign p_shl8_cast_mid1_fu_557_p1 = p_shl8_mid1_fu_550_p3;

assign p_shl8_fu_321_p3 = {{tmp_1_0_reg_1107}, {5'd0}};

assign p_shl8_mid1_fu_550_p3 = {{tmp_1_0_mid1_reg_1239}, {5'd0}};

assign p_shl9_cast_fu_339_p1 = p_shl9_fu_332_p3;

assign p_shl9_cast_mid1_fu_568_p1 = p_shl9_mid1_fu_561_p3;

assign p_shl9_fu_332_p3 = {{tmp_1_0_reg_1107}, {1'd0}};

assign p_shl9_mid1_fu_561_p3 = {{tmp_1_0_mid1_reg_1239}, {1'd0}};

assign p_shl_fu_291_p3 = {{out_h_0_reg_211}, {5'd0}};

assign select_ln22_3_fu_635_p3 = ((icmp_ln22_reg_1129[0:0] === 1'b1) ? 10'd1 : add_ln22_3_reg_1143);

assign select_ln22_fu_505_p3 = ((and_ln34_reg_1208[0:0] === 1'b1) ? out_h_reg_1218 : select_ln34_reg_1181);

assign select_ln34_13_fu_420_p3 = ((icmp_ln22_reg_1129[0:0] === 1'b1) ? out_d_reg_1148 : out_d_0_reg_188);

assign select_ln34_14_fu_426_p3 = ((icmp_ln22_reg_1129[0:0] === 1'b1) ? out_d_0_reg_188 : out_d_reg_1148);

assign select_ln34_15_fu_713_p3 = ((select_ln34_14_reg_1202[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign select_ln34_16_fu_510_p3 = ((icmp_ln22_reg_1129[0:0] === 1'b1) ? 11'd0 : tmp5_0_0_reg_1156);

assign select_ln34_17_fu_641_p3 = ((icmp_ln22_reg_1129[0:0] === 1'b1) ? 11'd30 : tmp5_1_0_reg_1161);

assign select_ln34_18_fu_647_p3 = ((icmp_ln22_reg_1129[0:0] === 1'b1) ? 10'd60 : tmp5_2_0_reg_1166);

assign select_ln34_19_fu_656_p3 = ((icmp_ln22_reg_1129[0:0] === 1'b1) ? tmp7_mid167_cast_fu_653_p1 : tmp7_reg_1171);

assign select_ln34_fu_407_p3 = ((icmp_ln22_reg_1129[0:0] === 1'b1) ? 5'd0 : out_h_0_reg_211);

assign sext_ln34_10_fu_808_p1 = $signed(add_ln34_6_reg_1376);

assign sext_ln34_12_fu_918_p1 = tmp_8_reg_1467;

assign sext_ln34_13_fu_836_p1 = $signed(add_ln34_7_reg_1381);

assign sext_ln34_15_fu_844_p1 = $signed(add_ln34_8_reg_1386);

assign sext_ln34_1_fu_720_p1 = $signed(add_ln34_reg_1320);

assign sext_ln34_3_fu_871_p1 = tmp_5_reg_1406;

assign sext_ln34_4_fu_740_p1 = $signed(add_ln34_3_reg_1330);

assign sext_ln34_6_fu_878_p1 = tmp_6_reg_1411;

assign sext_ln34_7_fu_788_p1 = $signed(add_ln34_5_reg_1371);

assign sext_ln34_9_fu_911_p1 = tmp_7_reg_1462;

assign sext_ln40_fu_1050_p1 = $signed(add_ln40_reg_1341_pp0_iter3_reg);

assign tmp5_0_0_fu_315_p2 = (p_shl10_cast_fu_299_p1 - p_shl11_cast_fu_311_p1);

assign tmp5_0_0_mid1_fu_484_p2 = (p_shl10_cast_mid1_fu_469_p1 - p_shl11_cast_mid1_fu_480_p1);

assign tmp5_0_0_mid2_fu_544_p3 = ((and_ln34_reg_1208[0:0] === 1'b1) ? tmp5_0_0_mid1_reg_1234 : select_ln34_16_fu_510_p3);

assign tmp5_1_0_fu_343_p2 = (p_shl8_cast_fu_328_p1 - p_shl9_cast_fu_339_p1);

assign tmp5_1_0_mid1_fu_572_p2 = (p_shl8_cast_mid1_fu_557_p1 - p_shl9_cast_mid1_fu_568_p1);

assign tmp5_1_0_mid2_fu_662_p3 = ((and_ln34_reg_1208[0:0] === 1'b1) ? tmp5_1_0_mid1_reg_1274 : select_ln34_17_fu_641_p3);

assign tmp5_2_0_fu_367_p2 = (p_shl6_fu_349_p3 - p_shl7_cast_fu_363_p1);

assign tmp5_2_0_mid1_fu_596_p2 = (p_shl6_mid1_fu_578_p3 - p_shl7_cast_mid1_fu_592_p1);

assign tmp5_2_0_mid2_fu_668_p3 = ((and_ln34_reg_1208[0:0] === 1'b1) ? tmp5_2_0_mid1_reg_1279 : select_ln34_18_fu_647_p3);

assign tmp6_fu_261_p2 = (zext_ln40_1_fu_245_p1 + ap_phi_mux_out_h_0_phi_fu_215_p4);

assign tmp6_mid1_fu_500_p2 = (out_h_reg_1218 + zext_ln34_33_fu_447_p1);

assign tmp7_fu_395_p2 = (p_shl4_cast_fu_380_p1 - p_shl5_cast_fu_391_p1);

assign tmp7_mid167_cast_fu_653_p1 = $signed(tmp7_mid167_reg_1262);

assign tmp7_mid167_fu_538_p2 = (p_shl4_cast_mid161_ca_fu_523_p1 - p_shl5_cast_mid165_ca_fu_534_p1);

assign tmp7_mid1_fu_624_p2 = (p_shl4_cast_mid1_fu_609_p1 - p_shl5_cast_mid1_fu_620_p1);

assign tmp7_mid2_fu_674_p3 = ((and_ln34_reg_1208[0:0] === 1'b1) ? tmp7_mid1_reg_1284 : select_ln34_19_fu_656_p3);

assign tmp_1_0_fu_249_p2 = (ap_phi_mux_out_h_0_phi_fu_215_p4 + 5'd1);

assign tmp_1_0_mid1_fu_490_p2 = (5'd2 + select_ln34_reg_1181);

assign tmp_2_0_fu_255_p2 = (ap_phi_mux_out_h_0_phi_fu_215_p4 + 5'd2);

assign tmp_2_0_mid1_fu_495_p2 = (5'd3 + select_ln34_reg_1181);

assign tmp_9_fu_527_p3 = {{out_d_reg_1148}, {2'd0}};

assign tmp_s_fu_516_p3 = {{out_d_reg_1148}, {5'd0}};

assign trunc_ln40_1_fu_898_p4 = {{mul_ln34_1_reg_1457[29:14]}};

assign trunc_ln40_2_fu_931_p4 = {{mul_ln34_2_reg_1487[29:14]}};

assign trunc_ln40_3_fu_940_p4 = {{mul_ln34_3_reg_1497[29:14]}};

assign trunc_ln40_4_fu_968_p4 = {{mul_ln34_4_reg_1512[29:14]}};

assign trunc_ln40_5_fu_977_p4 = {{mul_ln34_5_reg_1517[29:14]}};

assign trunc_ln40_8_fu_1022_p4 = {{mul_ln34_8_reg_1552[29:14]}};

assign trunc_ln_fu_889_p4 = {{mul_ln34_reg_1447[29:14]}};

assign xor_ln34_fu_432_p2 = (icmp_ln22_reg_1129 ^ 1'd1);

assign zext_ln34_10_fu_881_p1 = add_ln34_9_reg_1426;

assign zext_ln34_11_fu_885_p1 = add_ln34_10_reg_1431;

assign zext_ln34_12_fu_921_p1 = add_ln34_11_reg_1436;

assign zext_ln34_14_fu_827_p1 = out_w_0_mid2_reg_1226;

assign zext_ln34_15_fu_680_p1 = out_w_0_mid2_reg_1226;

assign zext_ln34_16_fu_830_p1 = out_w_reg_1289;

assign zext_ln34_17_fu_688_p1 = out_w_reg_1289;

assign zext_ln34_18_fu_833_p1 = add_ln34_4_reg_1335;

assign zext_ln34_19_fu_760_p1 = add_ln34_4_reg_1335;

assign zext_ln34_33_fu_447_p1 = select_ln34_13_reg_1194;

assign zext_ln34_4_fu_723_p1 = $unsigned(sext_ln34_1_fu_720_p1);

assign zext_ln34_5_fu_743_p1 = $unsigned(sext_ln34_4_fu_740_p1);

assign zext_ln34_6_fu_791_p1 = $unsigned(sext_ln34_7_fu_788_p1);

assign zext_ln34_7_fu_811_p1 = $unsigned(sext_ln34_10_fu_808_p1);

assign zext_ln34_8_fu_839_p1 = $unsigned(sext_ln34_13_fu_836_p1);

assign zext_ln34_9_fu_847_p1 = $unsigned(sext_ln34_15_fu_844_p1);

assign zext_ln40_1_fu_245_p1 = ap_phi_mux_out_d_0_phi_fu_192_p4;

assign zext_ln40_fu_1053_p1 = $unsigned(sext_ln40_fu_1050_p1);

always @ (posedge ap_clk) begin
    tmp5_0_0_reg_1156[0] <= 1'b0;
    tmp5_1_0_reg_1161[0] <= 1'b0;
    tmp5_2_0_reg_1166[0] <= 1'b0;
    tmp7_reg_1171[1:0] <= 2'b00;
    tmp5_0_0_mid1_reg_1234[0] <= 1'b0;
    tmp7_mid167_reg_1262[1:0] <= 2'b00;
    tmp5_0_0_mid2_reg_1267[0] <= 1'b0;
    tmp5_1_0_mid1_reg_1274[0] <= 1'b0;
    tmp5_2_0_mid1_reg_1279[0] <= 1'b0;
    tmp7_mid1_reg_1284[1:0] <= 2'b00;
    tmp5_1_0_mid2_reg_1301[0] <= 1'b0;
    tmp5_2_0_mid2_reg_1308[0] <= 1'b0;
    zext_ln34_15_reg_1315[10:5] <= 6'b000000;
    zext_ln34_17_reg_1325[10:5] <= 6'b000000;
end

endmodule //depthwise_conv2d_fix
