// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pointwise_conv2d_fix_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_state22 = 31'd2097152;
parameter    ap_ST_fsm_state23 = 31'd4194304;
parameter    ap_ST_fsm_state24 = 31'd8388608;
parameter    ap_ST_fsm_state25 = 31'd16777216;
parameter    ap_ST_fsm_state26 = 31'd33554432;
parameter    ap_ST_fsm_state27 = 31'd67108864;
parameter    ap_ST_fsm_state28 = 31'd134217728;
parameter    ap_ST_fsm_state29 = 31'd268435456;
parameter    ap_ST_fsm_state30 = 31'd536870912;
parameter    ap_ST_fsm_state31 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] SeparableConv2D_1_b_s_address0;
reg    SeparableConv2D_1_b_s_ce0;
wire   [12:0] SeparableConv2D_1_b_s_q0;
reg   [6:0] SeparableConv2D_1_w_s_address0;
reg    SeparableConv2D_1_w_s_ce0;
wire   [14:0] SeparableConv2D_1_w_s_q0;
wire   [6:0] SeparableConv2D_1_w_s_address1;
reg    SeparableConv2D_1_w_s_ce1;
wire   [14:0] SeparableConv2D_1_w_s_q1;
wire   [6:0] SeparableConv2D_1_w_s_address2;
reg    SeparableConv2D_1_w_s_ce2;
wire   [14:0] SeparableConv2D_1_w_s_q2;
wire   [6:0] SeparableConv2D_1_w_s_address3;
reg    SeparableConv2D_1_w_s_ce3;
wire   [14:0] SeparableConv2D_1_w_s_q3;
wire   [6:0] SeparableConv2D_1_w_s_address4;
reg    SeparableConv2D_1_w_s_ce4;
wire   [14:0] SeparableConv2D_1_w_s_q4;
wire   [6:0] SeparableConv2D_1_w_s_address5;
reg    SeparableConv2D_1_w_s_ce5;
wire   [14:0] SeparableConv2D_1_w_s_q5;
wire   [6:0] SeparableConv2D_1_w_s_address6;
reg    SeparableConv2D_1_w_s_ce6;
wire   [14:0] SeparableConv2D_1_w_s_q6;
wire   [6:0] SeparableConv2D_1_w_s_address7;
reg    SeparableConv2D_1_w_s_ce7;
wire   [14:0] SeparableConv2D_1_w_s_q7;
wire   [6:0] SeparableConv2D_1_w_s_address8;
reg    SeparableConv2D_1_w_s_ce8;
wire   [14:0] SeparableConv2D_1_w_s_q8;
wire   [6:0] SeparableConv2D_1_w_s_address9;
reg    SeparableConv2D_1_w_s_ce9;
wire   [14:0] SeparableConv2D_1_w_s_q9;
wire   [6:0] SeparableConv2D_1_w_s_address10;
reg    SeparableConv2D_1_w_s_ce10;
wire   [14:0] SeparableConv2D_1_w_s_q10;
wire   [6:0] SeparableConv2D_1_w_s_address11;
reg    SeparableConv2D_1_w_s_ce11;
wire   [14:0] SeparableConv2D_1_w_s_q11;
wire   [6:0] SeparableConv2D_1_w_s_address12;
reg    SeparableConv2D_1_w_s_ce12;
wire   [14:0] SeparableConv2D_1_w_s_q12;
wire   [6:0] SeparableConv2D_1_w_s_address13;
reg    SeparableConv2D_1_w_s_ce13;
wire   [14:0] SeparableConv2D_1_w_s_q13;
wire   [6:0] SeparableConv2D_1_w_s_address14;
reg    SeparableConv2D_1_w_s_ce14;
wire   [14:0] SeparableConv2D_1_w_s_q14;
wire   [11:0] add_ln23_64_fu_545_p2;
reg   [15:0] reg_478;
wire    ap_CS_fsm_state11;
wire   [11:0] add_ln23_65_fu_562_p2;
wire    ap_CS_fsm_state12;
wire   [15:0] grp_fu_554_p2;
wire    ap_CS_fsm_state13;
wire   [15:0] add_ln23_71_fu_568_p2;
wire    ap_CS_fsm_state14;
wire   [11:0] grp_fu_547_p2;
reg   [15:0] reg_489;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln18_fu_5482_p2;
wire   [10:0] add_ln23_54_fu_571_p2;
wire    ap_CS_fsm_state6;
wire   [10:0] add_ln23_56_fu_549_p2;
wire    ap_CS_fsm_state7;
wire   [10:0] add_ln23_58_fu_550_p2;
wire    ap_CS_fsm_state8;
wire   [10:0] add_ln23_59_fu_551_p2;
wire    ap_CS_fsm_state9;
wire   [11:0] add_ln23_61_fu_557_p2;
wire    ap_CS_fsm_state10;
wire   [15:0] grp_fu_558_p2;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln20_fu_5817_p2;
wire   [15:0] grp_fu_548_p2;
reg   [15:0] reg_500;
wire    ap_CS_fsm_state15;
wire   [15:0] grp_fu_561_p2;
wire    ap_CS_fsm_state16;
wire   [15:0] add_ln23_78_fu_573_p2;
wire    ap_CS_fsm_state18;
wire   [15:0] add_ln23_79_fu_570_p2;
wire    ap_CS_fsm_state19;
wire   [15:0] grp_fu_552_p2;
reg   [15:0] reg_511;
wire    ap_CS_fsm_state17;
wire   [6:0] add_ln23_50_fu_559_p2;
wire    ap_CS_fsm_state26;
wire   [15:0] grp_fu_567_p2;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire   [9:0] add_ln23_52_fu_569_p2;
reg   [15:0] reg_522;
wire   [9:0] add_ln23_53_fu_560_p2;
wire   [10:0] add_ln23_55_fu_555_p2;
wire   [10:0] add_ln23_57_fu_544_p2;
wire   [11:0] add_ln23_60_fu_563_p2;
wire   [11:0] add_ln23_62_fu_546_p2;
wire   [11:0] add_ln23_63_fu_564_p2;
wire   [15:0] add_ln23_69_fu_553_p2;
wire   [15:0] add_ln23_75_fu_565_p2;
wire  signed [8:0] add_ln23_fu_543_p2;
reg   [12:0] reg_532;
wire    ap_CS_fsm_state21;
wire   [10:0] add_ln16_fu_574_p2;
reg   [10:0] add_ln16_reg_905;
wire    ap_CS_fsm_state2;
wire   [3:0] out_d_fu_572_p2;
reg   [3:0] out_d_reg_910;
wire   [3:0] out_h_fu_556_p2;
reg   [3:0] out_h_reg_1073;
wire    ap_CS_fsm_state4;
wire   [3:0] out_w_fu_566_p2;
reg   [3:0] out_w_reg_1583;
wire    ap_CS_fsm_state30;
wire   [12:0] mul_ln23_fu_3763_p2;
reg   [12:0] mul_ln23_reg_4827;
reg  signed [15:0] reg_5181;
wire    ap_CS_fsm_state23;
reg  signed [15:0] reg_5186;
wire   [11:0] zext_ln16_fu_5190_p1;
reg   [11:0] zext_ln16_reg_5905;
wire   [0:0] icmp_ln16_fu_5194_p2;
wire   [6:0] shl_ln_fu_5209_p3;
reg   [6:0] shl_ln_reg_5918;
wire  signed [15:0] sext_ln19_fu_5382_p1;
reg  signed [15:0] sext_ln19_reg_5998;
wire    ap_CS_fsm_state3;
wire  signed [29:0] sext_ln23_54_fu_5386_p1;
reg  signed [29:0] sext_ln23_54_reg_6003;
wire  signed [29:0] sext_ln23_56_fu_5390_p1;
reg  signed [29:0] sext_ln23_56_reg_6008;
wire  signed [29:0] sext_ln23_58_fu_5394_p1;
reg  signed [29:0] sext_ln23_58_reg_6013;
wire  signed [29:0] sext_ln23_60_fu_5398_p1;
reg  signed [29:0] sext_ln23_60_reg_6018;
wire  signed [29:0] sext_ln23_62_fu_5402_p1;
reg  signed [29:0] sext_ln23_62_reg_6023;
wire  signed [29:0] sext_ln23_64_fu_5406_p1;
reg  signed [29:0] sext_ln23_64_reg_6028;
wire  signed [29:0] sext_ln23_66_fu_5410_p1;
reg  signed [29:0] sext_ln23_66_reg_6033;
wire  signed [29:0] sext_ln23_68_fu_5414_p1;
reg  signed [29:0] sext_ln23_68_reg_6038;
wire  signed [29:0] sext_ln23_70_fu_5418_p1;
reg  signed [29:0] sext_ln23_70_reg_6043;
wire  signed [29:0] sext_ln23_72_fu_5422_p1;
reg  signed [29:0] sext_ln23_72_reg_6048;
wire  signed [29:0] sext_ln23_74_fu_5426_p1;
reg  signed [29:0] sext_ln23_74_reg_6053;
wire  signed [29:0] sext_ln23_76_fu_5430_p1;
reg  signed [29:0] sext_ln23_76_reg_6058;
wire  signed [29:0] sext_ln23_78_fu_5434_p1;
reg  signed [29:0] sext_ln23_78_reg_6063;
wire  signed [29:0] sext_ln23_80_fu_5438_p1;
reg  signed [29:0] sext_ln23_80_reg_6068;
wire  signed [29:0] sext_ln23_82_fu_5442_p1;
reg  signed [29:0] sext_ln23_82_reg_6073;
wire   [8:0] sub_ln23_fu_5476_p2;
reg   [8:0] sub_ln23_reg_6081;
wire   [0:0] icmp_ln17_fu_5446_p2;
wire  signed [9:0] sext_ln23_118_fu_5493_p1;
reg  signed [9:0] sext_ln23_118_reg_6089;
wire  signed [10:0] sext_ln23_117_fu_5499_p1;
reg  signed [10:0] sext_ln23_117_reg_6094;
wire  signed [11:0] sext_ln23_116_fu_5548_p1;
reg  signed [11:0] sext_ln23_116_reg_6143;
reg   [15:0] trunc_ln23_1_reg_6153;
reg   [15:0] trunc_ln23_2_reg_6158;
reg   [15:0] trunc_ln23_3_reg_6183;
reg   [15:0] trunc_ln23_4_reg_6188;
reg   [15:0] trunc_ln23_5_reg_6213;
reg   [15:0] trunc_ln23_6_reg_6218;
reg   [15:0] trunc_ln23_7_reg_6243;
reg   [15:0] trunc_ln23_8_reg_6248;
reg   [15:0] trunc_ln23_9_reg_6273;
reg   [15:0] trunc_ln23_10_reg_6278;
reg   [15:0] trunc_ln23_11_reg_6298;
reg   [15:0] trunc_ln23_12_reg_6303;
reg   [15:0] trunc_ln23_13_reg_6318;
reg   [15:0] trunc_ln23_14_reg_6323;
reg   [15:0] trunc_ln23_s_reg_6333;
wire  signed [12:0] sext_ln23_fu_5813_p1;
reg  signed [12:0] sext_ln23_reg_6338;
wire   [4:0] xor_ln20_fu_5833_p2;
reg   [4:0] xor_ln20_reg_6346;
wire   [14:0] select_ln27_fu_5851_p3;
reg   [14:0] select_ln27_reg_6351;
wire    ap_CS_fsm_state22;
reg  signed [14:0] SeparableConv2D_1_w_33_reg_6366;
wire    ap_CS_fsm_state24;
reg   [15:0] trunc_ln4_reg_6381;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state31;
wire   [63:0] zext_ln19_fu_5200_p1;
wire   [63:0] zext_ln23_54_fu_5223_p1;
wire   [63:0] zext_ln23_56_fu_5234_p1;
wire   [63:0] zext_ln23_58_fu_5245_p1;
wire   [63:0] zext_ln23_60_fu_5256_p1;
wire   [63:0] zext_ln23_62_fu_5267_p1;
wire   [63:0] zext_ln23_64_fu_5278_p1;
wire   [63:0] zext_ln23_66_fu_5289_p1;
wire   [63:0] zext_ln23_68_fu_5300_p1;
wire   [63:0] zext_ln23_70_fu_5311_p1;
wire   [63:0] zext_ln23_72_fu_5322_p1;
wire   [63:0] zext_ln23_74_fu_5333_p1;
wire   [63:0] zext_ln23_76_fu_5344_p1;
wire   [63:0] zext_ln23_78_fu_5355_p1;
wire   [63:0] zext_ln23_80_fu_5366_p1;
wire   [63:0] zext_ln23_82_fu_5377_p1;
wire   [63:0] zext_ln23_53_fu_5508_p1;
wire   [63:0] zext_ln23_55_fu_5513_p1;
wire   [63:0] zext_ln23_57_fu_5518_p1;
wire   [63:0] zext_ln23_59_fu_5523_p1;
wire   [63:0] zext_ln23_61_fu_5538_p1;
wire   [63:0] zext_ln23_63_fu_5543_p1;
wire   [63:0] zext_ln23_65_fu_5583_p1;
wire   [63:0] zext_ln23_67_fu_5588_p1;
wire   [63:0] zext_ln23_69_fu_5623_p1;
wire   [63:0] zext_ln23_71_fu_5628_p1;
wire   [63:0] zext_ln23_73_fu_5663_p1;
wire   [63:0] zext_ln23_75_fu_5668_p1;
wire   [63:0] zext_ln23_77_fu_5703_p1;
wire   [63:0] zext_ln23_79_fu_5708_p1;
wire   [63:0] zext_ln23_81_fu_5743_p1;
wire   [63:0] zext_ln23_51_fu_5863_p1;
wire   [63:0] zext_ln23_52_fu_5868_p1;
wire   [63:0] zext_ln30_fu_5900_p1;
wire   [8:0] zext_ln23_87_fu_5488_p1;
reg  signed [11:0] grp_fu_547_p0;
reg   [11:0] grp_fu_547_p1;
reg   [15:0] grp_fu_548_p0;
reg   [15:0] grp_fu_548_p1;
reg   [15:0] grp_fu_552_p0;
reg   [15:0] grp_fu_552_p1;
reg   [15:0] grp_fu_554_p0;
reg   [15:0] grp_fu_554_p1;
wire   [3:0] out_h_fu_556_p0;
reg   [15:0] grp_fu_558_p0;
reg   [15:0] grp_fu_558_p1;
wire   [6:0] zext_ln23_88_fu_5823_p1;
reg   [15:0] grp_fu_561_p0;
reg   [15:0] grp_fu_561_p1;
wire   [3:0] out_w_fu_566_p0;
reg   [15:0] grp_fu_567_p0;
reg   [15:0] grp_fu_567_p1;
wire   [3:0] out_d_fu_572_p0;
wire   [10:0] add_ln16_fu_574_p0;
wire  signed [14:0] grp_fu_3754_p0;
wire  signed [14:0] grp_fu_3755_p0;
wire  signed [14:0] grp_fu_3757_p0;
wire  signed [14:0] grp_fu_3758_p0;
wire  signed [14:0] grp_fu_3760_p0;
wire  signed [14:0] grp_fu_3761_p0;
wire   [4:0] mul_ln23_fu_3763_p0;
wire  signed [14:0] grp_fu_3764_p0;
wire  signed [14:0] grp_fu_3766_p0;
wire  signed [14:0] grp_fu_3767_p0;
wire  signed [14:0] grp_fu_3771_p0;
wire  signed [14:0] grp_fu_3774_p0;
wire  signed [14:0] grp_fu_3777_p0;
wire  signed [14:0] grp_fu_3782_p0;
wire  signed [14:0] grp_fu_3783_p0;
wire  signed [14:0] grp_fu_3785_p0;
wire   [10:0] zext_ln16_fu_5190_p0;
wire   [3:0] icmp_ln16_fu_5194_p0;
wire   [3:0] zext_ln19_fu_5200_p0;
wire   [3:0] trunc_ln23_fu_5205_p0;
wire   [2:0] trunc_ln23_fu_5205_p1;
wire   [6:0] or_ln23_fu_5217_p2;
wire   [6:0] or_ln23_1_fu_5228_p2;
wire   [6:0] or_ln23_2_fu_5239_p2;
wire   [6:0] or_ln23_3_fu_5250_p2;
wire   [6:0] or_ln23_4_fu_5261_p2;
wire   [6:0] or_ln23_5_fu_5272_p2;
wire   [6:0] or_ln23_6_fu_5283_p2;
wire   [6:0] or_ln23_7_fu_5294_p2;
wire   [6:0] or_ln23_8_fu_5305_p2;
wire   [6:0] or_ln23_9_fu_5316_p2;
wire   [6:0] or_ln23_10_fu_5327_p2;
wire   [6:0] or_ln23_11_fu_5338_p2;
wire   [6:0] or_ln23_12_fu_5349_p2;
wire   [6:0] or_ln23_13_fu_5360_p2;
wire   [6:0] or_ln23_14_fu_5371_p2;
wire   [3:0] icmp_ln17_fu_5446_p0;
wire   [3:0] shl_ln23_2_fu_5452_p1;
wire   [7:0] shl_ln23_2_fu_5452_p3;
wire   [3:0] shl_ln23_3_fu_5464_p1;
wire   [4:0] shl_ln23_3_fu_5464_p3;
wire   [8:0] zext_ln23_85_fu_5460_p1;
wire   [8:0] zext_ln23_86_fu_5472_p1;
wire   [3:0] icmp_ln18_fu_5482_p0;
wire   [3:0] zext_ln23_87_fu_5488_p0;
wire  signed [8:0] sext_ln23_117_fu_5499_p0;
wire   [9:0] sext_ln23_52_fu_5504_p0;
wire  signed [31:0] sext_ln23_52_fu_5504_p1;
wire   [9:0] zext_ln23_55_fu_5513_p0;
wire   [9:0] zext_ln23_57_fu_5518_p0;
wire   [10:0] zext_ln23_59_fu_5523_p0;
wire   [10:0] zext_ln23_61_fu_5538_p0;
wire   [10:0] zext_ln23_63_fu_5543_p0;
wire  signed [8:0] sext_ln23_116_fu_5548_p0;
wire   [29:0] grp_fu_3785_p2;
wire   [29:0] grp_fu_3783_p2;
wire   [10:0] zext_ln23_65_fu_5583_p0;
wire   [10:0] zext_ln23_67_fu_5588_p0;
wire   [29:0] grp_fu_3771_p2;
wire   [29:0] grp_fu_3782_p2;
wire   [10:0] zext_ln23_69_fu_5623_p0;
wire   [11:0] zext_ln23_71_fu_5628_p0;
wire   [29:0] grp_fu_3758_p2;
wire   [29:0] grp_fu_3760_p2;
wire   [11:0] zext_ln23_73_fu_5663_p0;
wire   [11:0] zext_ln23_75_fu_5668_p0;
wire   [29:0] grp_fu_3766_p2;
wire   [29:0] grp_fu_3761_p2;
wire   [11:0] zext_ln23_77_fu_5703_p0;
wire   [11:0] zext_ln23_79_fu_5708_p0;
wire   [29:0] grp_fu_3755_p2;
wire   [29:0] grp_fu_3774_p2;
wire   [11:0] zext_ln23_81_fu_5743_p0;
wire   [29:0] grp_fu_3754_p2;
wire   [29:0] grp_fu_3757_p2;
wire   [29:0] grp_fu_3767_p2;
wire   [29:0] grp_fu_3764_p2;
wire   [29:0] grp_fu_3777_p2;
wire  signed [8:0] sext_ln23_fu_5813_p0;
wire   [4:0] icmp_ln20_fu_5817_p0;
wire   [4:0] zext_ln23_88_fu_5823_p0;
wire   [4:0] zext_ln23_89_fu_5828_p0;
wire   [4:0] xor_ln20_fu_5833_p0;
wire   [0:0] tmp_fu_5843_p3;
wire   [14:0] trunc_ln20_fu_5839_p1;
wire  signed [31:0] sext_ln23_49_fu_5859_p1;
wire   [6:0] zext_ln23_52_fu_5868_p0;
wire   [29:0] grp_fu_3759_p2;
wire   [11:0] sext_ln30_2_fu_5896_p0;
wire  signed [31:0] sext_ln30_2_fu_5896_p1;
reg   [30:0] ap_NS_fsm;
wire   [12:0] mul_ln23_fu_3763_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
end

pointwise_conv2d_fix_1_SeparableConv2D_1_b_s #(
    .DataWidth( 13 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
SeparableConv2D_1_b_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SeparableConv2D_1_b_s_address0),
    .ce0(SeparableConv2D_1_b_s_ce0),
    .q0(SeparableConv2D_1_b_s_q0)
);

pointwise_conv2d_fix_1_SeparableConv2D_1_w_s #(
    .DataWidth( 15 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
SeparableConv2D_1_w_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SeparableConv2D_1_w_s_address0),
    .ce0(SeparableConv2D_1_w_s_ce0),
    .q0(SeparableConv2D_1_w_s_q0),
    .address1(SeparableConv2D_1_w_s_address1),
    .ce1(SeparableConv2D_1_w_s_ce1),
    .q1(SeparableConv2D_1_w_s_q1),
    .address2(SeparableConv2D_1_w_s_address2),
    .ce2(SeparableConv2D_1_w_s_ce2),
    .q2(SeparableConv2D_1_w_s_q2),
    .address3(SeparableConv2D_1_w_s_address3),
    .ce3(SeparableConv2D_1_w_s_ce3),
    .q3(SeparableConv2D_1_w_s_q3),
    .address4(SeparableConv2D_1_w_s_address4),
    .ce4(SeparableConv2D_1_w_s_ce4),
    .q4(SeparableConv2D_1_w_s_q4),
    .address5(SeparableConv2D_1_w_s_address5),
    .ce5(SeparableConv2D_1_w_s_ce5),
    .q5(SeparableConv2D_1_w_s_q5),
    .address6(SeparableConv2D_1_w_s_address6),
    .ce6(SeparableConv2D_1_w_s_ce6),
    .q6(SeparableConv2D_1_w_s_q6),
    .address7(SeparableConv2D_1_w_s_address7),
    .ce7(SeparableConv2D_1_w_s_ce7),
    .q7(SeparableConv2D_1_w_s_q7),
    .address8(SeparableConv2D_1_w_s_address8),
    .ce8(SeparableConv2D_1_w_s_ce8),
    .q8(SeparableConv2D_1_w_s_q8),
    .address9(SeparableConv2D_1_w_s_address9),
    .ce9(SeparableConv2D_1_w_s_ce9),
    .q9(SeparableConv2D_1_w_s_q9),
    .address10(SeparableConv2D_1_w_s_address10),
    .ce10(SeparableConv2D_1_w_s_ce10),
    .q10(SeparableConv2D_1_w_s_q10),
    .address11(SeparableConv2D_1_w_s_address11),
    .ce11(SeparableConv2D_1_w_s_ce11),
    .q11(SeparableConv2D_1_w_s_q11),
    .address12(SeparableConv2D_1_w_s_address12),
    .ce12(SeparableConv2D_1_w_s_ce12),
    .q12(SeparableConv2D_1_w_s_q12),
    .address13(SeparableConv2D_1_w_s_address13),
    .ce13(SeparableConv2D_1_w_s_ce13),
    .q13(SeparableConv2D_1_w_s_q13),
    .address14(SeparableConv2D_1_w_s_address14),
    .ce14(SeparableConv2D_1_w_s_ce14),
    .q14(SeparableConv2D_1_w_s_q14)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3754_p0),
    .din1(reg_5181),
    .ce(1'b1),
    .dout(grp_fu_3754_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3755_p0),
    .din1(reg_5181),
    .ce(1'b1),
    .dout(grp_fu_3755_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3757_p0),
    .din1(reg_5186),
    .ce(1'b1),
    .dout(grp_fu_3757_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3758_p0),
    .din1(reg_5181),
    .ce(1'b1),
    .dout(grp_fu_3758_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5181),
    .din1(SeparableConv2D_1_w_33_reg_6366),
    .ce(1'b1),
    .dout(grp_fu_3759_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3760_p0),
    .din1(reg_5186),
    .ce(1'b1),
    .dout(grp_fu_3760_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3761_p0),
    .din1(reg_5186),
    .ce(1'b1),
    .dout(grp_fu_3761_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3764_p0),
    .din1(reg_5186),
    .ce(1'b1),
    .dout(grp_fu_3764_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3766_p0),
    .din1(reg_5181),
    .ce(1'b1),
    .dout(grp_fu_3766_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3767_p0),
    .din1(reg_5181),
    .ce(1'b1),
    .dout(grp_fu_3767_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3771_p0),
    .din1(reg_5181),
    .ce(1'b1),
    .dout(grp_fu_3771_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3774_p0),
    .din1(reg_5186),
    .ce(1'b1),
    .dout(grp_fu_3774_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3777_p0),
    .din1(reg_5181),
    .ce(1'b1),
    .dout(grp_fu_3777_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3782_p0),
    .din1(reg_5186),
    .ce(1'b1),
    .dout(grp_fu_3782_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3783_p0),
    .din1(reg_5186),
    .ce(1'b1),
    .dout(grp_fu_3783_p2)
);

network_mul_15s_16s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
network_mul_15s_16s_30_2_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3785_p0),
    .din1(reg_5181),
    .ce(1'b1),
    .dout(grp_fu_3785_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_5446_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        reg_478 <= out_d_reg_910;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_478 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_478 <= add_ln23_71_fu_568_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        reg_478 <= grp_fu_554_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_478 <= add_ln23_65_fu_562_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_478 <= add_ln23_64_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_5446_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        reg_489 <= add_ln16_reg_905;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_489 <= 11'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_489 <= grp_fu_558_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_489 <= add_ln23_61_fu_557_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_489 <= add_ln23_59_fu_551_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_489 <= add_ln23_58_fu_550_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_489 <= add_ln23_56_fu_549_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_489 <= add_ln23_54_fu_571_p2;
    end else if ((((icmp_ln20_fu_5817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_5482_p2 == 1'd0)))) begin
        reg_489 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_5482_p2 == 1'd1))) begin
        reg_500 <= out_h_reg_1073;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_500 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_500 <= add_ln23_79_fu_570_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_500 <= add_ln23_78_fu_573_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_500 <= grp_fu_561_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        reg_500 <= grp_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_5446_p2 == 1'd0))) begin
        reg_511 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        reg_511 <= out_w_reg_1583;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        reg_511 <= grp_fu_561_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_511 <= grp_fu_567_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_511 <= grp_fu_548_p2;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln20_fu_5817_p2 == 1'd0))) begin
        reg_511 <= add_ln23_50_fu_559_p2;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_511 <= grp_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        reg_5181 <= input_r_q1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_5181 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        reg_522 <= grp_fu_558_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_522 <= sext_ln19_reg_5998;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_522 <= add_ln23_75_fu_565_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_522 <= grp_fu_567_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_522 <= add_ln23_69_fu_553_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_522 <= add_ln23_63_fu_564_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_522 <= add_ln23_62_fu_546_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_522 <= add_ln23_60_fu_563_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_522 <= add_ln23_57_fu_544_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_522 <= add_ln23_55_fu_555_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_522 <= add_ln23_53_fu_560_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_5482_p2 == 1'd0))) begin
        reg_522 <= add_ln23_52_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        reg_532 <= xor_ln20_reg_6346;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_532 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_532 <= grp_fu_554_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_5482_p2 == 1'd0))) begin
        reg_532 <= add_ln23_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        SeparableConv2D_1_w_33_reg_6366 <= SeparableConv2D_1_w_s_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln16_reg_905 <= add_ln16_fu_574_p2;
        out_d_reg_910 <= out_d_fu_572_p2;
        zext_ln16_reg_5905[10 : 0] <= zext_ln16_fu_5190_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln20_fu_5817_p2 == 1'd0))) begin
        mul_ln23_reg_4827[12 : 2] <= mul_ln23_fu_3763_p2[12 : 2];
        xor_ln20_reg_6346 <= xor_ln20_fu_5833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_h_reg_1073 <= out_h_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_w_reg_1583 <= out_w_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_5186 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_5817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        select_ln27_reg_6351 <= select_ln27_fu_5851_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sext_ln19_reg_5998 <= sext_ln19_fu_5382_p1;
        sext_ln23_54_reg_6003 <= sext_ln23_54_fu_5386_p1;
        sext_ln23_56_reg_6008 <= sext_ln23_56_fu_5390_p1;
        sext_ln23_58_reg_6013 <= sext_ln23_58_fu_5394_p1;
        sext_ln23_60_reg_6018 <= sext_ln23_60_fu_5398_p1;
        sext_ln23_62_reg_6023 <= sext_ln23_62_fu_5402_p1;
        sext_ln23_64_reg_6028 <= sext_ln23_64_fu_5406_p1;
        sext_ln23_66_reg_6033 <= sext_ln23_66_fu_5410_p1;
        sext_ln23_68_reg_6038 <= sext_ln23_68_fu_5414_p1;
        sext_ln23_70_reg_6043 <= sext_ln23_70_fu_5418_p1;
        sext_ln23_72_reg_6048 <= sext_ln23_72_fu_5422_p1;
        sext_ln23_74_reg_6053 <= sext_ln23_74_fu_5426_p1;
        sext_ln23_76_reg_6058 <= sext_ln23_76_fu_5430_p1;
        sext_ln23_78_reg_6063 <= sext_ln23_78_fu_5434_p1;
        sext_ln23_80_reg_6068 <= sext_ln23_80_fu_5438_p1;
        sext_ln23_82_reg_6073 <= sext_ln23_82_fu_5442_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sext_ln23_116_reg_6143 <= sext_ln23_116_fu_5548_p1;
        trunc_ln23_1_reg_6153 <= {{grp_fu_3785_p2[29:14]}};
        trunc_ln23_2_reg_6158 <= {{grp_fu_3783_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sext_ln23_117_reg_6094 <= sext_ln23_117_fu_5499_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_5482_p2 == 1'd0))) begin
        sext_ln23_118_reg_6089 <= sext_ln23_118_fu_5493_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        sext_ln23_reg_6338 <= sext_ln23_fu_5813_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_5194_p2 == 1'd0))) begin
        shl_ln_reg_5918[6 : 4] <= shl_ln_fu_5209_p3[6 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_5446_p2 == 1'd0))) begin
        sub_ln23_reg_6081[8 : 1] <= sub_ln23_fu_5476_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        trunc_ln23_10_reg_6278 <= {{grp_fu_3774_p2[29:14]}};
        trunc_ln23_9_reg_6273 <= {{grp_fu_3755_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln23_11_reg_6298 <= {{grp_fu_3754_p2[29:14]}};
        trunc_ln23_12_reg_6303 <= {{grp_fu_3757_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln23_13_reg_6318 <= {{grp_fu_3767_p2[29:14]}};
        trunc_ln23_14_reg_6323 <= {{grp_fu_3764_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        trunc_ln23_3_reg_6183 <= {{grp_fu_3771_p2[29:14]}};
        trunc_ln23_4_reg_6188 <= {{grp_fu_3782_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        trunc_ln23_5_reg_6213 <= {{grp_fu_3758_p2[29:14]}};
        trunc_ln23_6_reg_6218 <= {{grp_fu_3760_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln23_7_reg_6243 <= {{grp_fu_3766_p2[29:14]}};
        trunc_ln23_8_reg_6248 <= {{grp_fu_3761_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        trunc_ln23_s_reg_6333 <= {{grp_fu_3777_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        trunc_ln4_reg_6381 <= {{grp_fu_3759_p2[29:14]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_b_s_ce0 = 1'b1;
    end else begin
        SeparableConv2D_1_b_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        SeparableConv2D_1_w_s_address0 = zext_ln23_52_fu_5868_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_address0 = zext_ln23_54_fu_5223_p1;
    end else begin
        SeparableConv2D_1_w_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state2))) begin
        SeparableConv2D_1_w_s_ce0 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce1 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce10 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce11 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce12 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce13 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce13 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce14 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce14 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce2 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce3 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce4 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce5 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce6 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce7 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce8 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_1_w_s_ce9 = 1'b1;
    end else begin
        SeparableConv2D_1_w_s_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln16_fu_5194_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_fu_5194_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_547_p0 = sext_ln23_116_reg_6143;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_547_p0 = sext_ln23_118_fu_5493_p1;
    end else begin
        grp_fu_547_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_547_p1 = zext_ln16_reg_5905;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_547_p1 = 10'd196;
    end else begin
        grp_fu_547_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_548_p0 = trunc_ln4_reg_6381;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_548_p0 = trunc_ln23_11_reg_6298;
    end else begin
        grp_fu_548_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_548_p1 = trunc_ln23_1_reg_6153;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_548_p1 = trunc_ln23_10_reg_6278;
    end else begin
        grp_fu_548_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_552_p0 = reg_500;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_552_p0 = trunc_ln23_s_reg_6333;
    end else begin
        grp_fu_552_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_552_p1 = reg_511;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_552_p1 = trunc_ln23_14_reg_6323;
    end else begin
        grp_fu_552_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_554_p0 = mul_ln23_reg_4827;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_554_p0 = trunc_ln23_7_reg_6243;
    end else begin
        grp_fu_554_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_554_p1 = sext_ln23_reg_6338;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_554_p1 = trunc_ln23_6_reg_6218;
    end else begin
        grp_fu_554_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_558_p0 = reg_522;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_558_p0 = trunc_ln23_3_reg_6183;
    end else begin
        grp_fu_558_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_558_p1 = reg_511;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_558_p1 = trunc_ln23_2_reg_6158;
    end else begin
        grp_fu_558_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_561_p0 = reg_478;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_561_p0 = trunc_ln23_13_reg_6318;
    end else begin
        grp_fu_561_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_561_p1 = reg_511;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_561_p1 = trunc_ln23_12_reg_6303;
    end else begin
        grp_fu_561_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_567_p0 = reg_489;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_567_p0 = trunc_ln23_9_reg_6273;
    end else begin
        grp_fu_567_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_567_p1 = reg_511;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_567_p1 = trunc_ln23_8_reg_6248;
    end else begin
        grp_fu_567_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        input_r_address0 = zext_ln23_81_fu_5743_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address0 = zext_ln23_77_fu_5703_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address0 = zext_ln23_73_fu_5663_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = zext_ln23_69_fu_5623_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address0 = zext_ln23_65_fu_5583_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address0 = zext_ln23_61_fu_5538_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address0 = zext_ln23_57_fu_5518_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address0 = zext_ln23_53_fu_5508_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        input_r_address1 = zext_ln23_51_fu_5863_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address1 = zext_ln23_79_fu_5708_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address1 = zext_ln23_75_fu_5668_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address1 = zext_ln23_71_fu_5628_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address1 = zext_ln23_67_fu_5588_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address1 = zext_ln23_63_fu_5543_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address1 = zext_ln23_59_fu_5523_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address1 = zext_ln23_55_fu_5513_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln16_fu_5194_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln17_fu_5446_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_5482_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln20_fu_5817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SeparableConv2D_1_b_s_address0 = zext_ln19_fu_5200_p1;

assign SeparableConv2D_1_w_s_address1 = zext_ln23_56_fu_5234_p1;

assign SeparableConv2D_1_w_s_address10 = zext_ln23_74_fu_5333_p1;

assign SeparableConv2D_1_w_s_address11 = zext_ln23_76_fu_5344_p1;

assign SeparableConv2D_1_w_s_address12 = zext_ln23_78_fu_5355_p1;

assign SeparableConv2D_1_w_s_address13 = zext_ln23_80_fu_5366_p1;

assign SeparableConv2D_1_w_s_address14 = zext_ln23_82_fu_5377_p1;

assign SeparableConv2D_1_w_s_address2 = zext_ln23_58_fu_5245_p1;

assign SeparableConv2D_1_w_s_address3 = zext_ln23_60_fu_5256_p1;

assign SeparableConv2D_1_w_s_address4 = zext_ln23_62_fu_5267_p1;

assign SeparableConv2D_1_w_s_address5 = zext_ln23_64_fu_5278_p1;

assign SeparableConv2D_1_w_s_address6 = zext_ln23_66_fu_5289_p1;

assign SeparableConv2D_1_w_s_address7 = zext_ln23_68_fu_5300_p1;

assign SeparableConv2D_1_w_s_address8 = zext_ln23_70_fu_5311_p1;

assign SeparableConv2D_1_w_s_address9 = zext_ln23_72_fu_5322_p1;

assign add_ln16_fu_574_p0 = reg_489;

assign add_ln16_fu_574_p2 = (add_ln16_fu_574_p0 + 11'd196);

assign add_ln23_50_fu_559_p2 = (shl_ln_reg_5918 + zext_ln23_88_fu_5823_p1);

assign add_ln23_52_fu_569_p2 = ($signed(sext_ln23_118_fu_5493_p1) + $signed(10'd392));

assign add_ln23_53_fu_560_p2 = ($signed(sext_ln23_118_reg_6089) + $signed(10'd588));

assign add_ln23_54_fu_571_p2 = ($signed(sext_ln23_117_fu_5499_p1) + $signed(11'd784));

assign add_ln23_55_fu_555_p2 = ($signed(sext_ln23_117_reg_6094) + $signed(11'd980));

assign add_ln23_56_fu_549_p2 = ($signed(sext_ln23_117_reg_6094) + $signed(11'd1176));

assign add_ln23_57_fu_544_p2 = ($signed(sext_ln23_117_reg_6094) + $signed(11'd1372));

assign add_ln23_58_fu_550_p2 = ($signed(sext_ln23_117_reg_6094) + $signed(11'd1568));

assign add_ln23_59_fu_551_p2 = ($signed(sext_ln23_117_reg_6094) + $signed(11'd1764));

assign add_ln23_60_fu_563_p2 = ($signed(sext_ln23_116_fu_5548_p1) + $signed(12'd1960));

assign add_ln23_61_fu_557_p2 = ($signed(sext_ln23_116_reg_6143) + $signed(12'd2156));

assign add_ln23_62_fu_546_p2 = ($signed(sext_ln23_116_reg_6143) + $signed(12'd2352));

assign add_ln23_63_fu_564_p2 = ($signed(sext_ln23_116_reg_6143) + $signed(12'd2548));

assign add_ln23_64_fu_545_p2 = ($signed(sext_ln23_116_reg_6143) + $signed(12'd2744));

assign add_ln23_65_fu_562_p2 = ($signed(sext_ln23_116_reg_6143) + $signed(12'd2940));

assign add_ln23_69_fu_553_p2 = (trunc_ln23_5_reg_6213 + trunc_ln23_4_reg_6188);

assign add_ln23_71_fu_568_p2 = (reg_522 + reg_478);

assign add_ln23_75_fu_565_p2 = (reg_522 + reg_500);

assign add_ln23_78_fu_573_p2 = (reg_500 + reg_511);

assign add_ln23_79_fu_570_p2 = (reg_522 + reg_500);

assign add_ln23_fu_543_p2 = (zext_ln23_87_fu_5488_p1 + sub_ln23_reg_6081);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_3754_p0 = sext_ln23_74_reg_6053;

assign grp_fu_3755_p0 = sext_ln23_70_reg_6043;

assign grp_fu_3757_p0 = sext_ln23_76_reg_6058;

assign grp_fu_3758_p0 = sext_ln23_62_reg_6023;

assign grp_fu_3760_p0 = sext_ln23_64_reg_6028;

assign grp_fu_3761_p0 = sext_ln23_68_reg_6038;

assign grp_fu_3764_p0 = sext_ln23_80_reg_6068;

assign grp_fu_3766_p0 = sext_ln23_66_reg_6033;

assign grp_fu_3767_p0 = sext_ln23_78_reg_6063;

assign grp_fu_3771_p0 = sext_ln23_58_reg_6013;

assign grp_fu_3774_p0 = sext_ln23_72_reg_6048;

assign grp_fu_3777_p0 = sext_ln23_82_reg_6073;

assign grp_fu_3782_p0 = sext_ln23_60_reg_6018;

assign grp_fu_3783_p0 = sext_ln23_56_reg_6008;

assign grp_fu_3785_p0 = sext_ln23_54_reg_6003;

assign grp_fu_547_p2 = ($signed(grp_fu_547_p0) + $signed(grp_fu_547_p1));

assign grp_fu_548_p2 = (grp_fu_548_p0 + grp_fu_548_p1);

assign grp_fu_552_p2 = (grp_fu_552_p0 + grp_fu_552_p1);

assign grp_fu_554_p2 = (grp_fu_554_p0 + grp_fu_554_p1);

assign grp_fu_558_p2 = (grp_fu_558_p0 + grp_fu_558_p1);

assign grp_fu_561_p2 = (grp_fu_561_p0 + grp_fu_561_p1);

assign grp_fu_567_p2 = (grp_fu_567_p0 + grp_fu_567_p1);

assign icmp_ln16_fu_5194_p0 = reg_478;

assign icmp_ln16_fu_5194_p2 = ((icmp_ln16_fu_5194_p0 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_5446_p0 = reg_500;

assign icmp_ln17_fu_5446_p2 = ((icmp_ln17_fu_5446_p0 == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_5482_p0 = reg_511;

assign icmp_ln18_fu_5482_p2 = ((icmp_ln18_fu_5482_p0 == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_5817_p0 = reg_532;

assign icmp_ln20_fu_5817_p2 = ((icmp_ln20_fu_5817_p0 == 5'd16) ? 1'b1 : 1'b0);

assign mul_ln23_fu_3763_p0 = mul_ln23_fu_3763_p00;

assign mul_ln23_fu_3763_p00 = zext_ln23_89_fu_5828_p0;

assign mul_ln23_fu_3763_p2 = (mul_ln23_fu_3763_p0 * $signed('hC4));

assign or_ln23_10_fu_5327_p2 = (shl_ln_fu_5209_p3 | 7'd11);

assign or_ln23_11_fu_5338_p2 = (shl_ln_fu_5209_p3 | 7'd12);

assign or_ln23_12_fu_5349_p2 = (shl_ln_fu_5209_p3 | 7'd13);

assign or_ln23_13_fu_5360_p2 = (shl_ln_fu_5209_p3 | 7'd14);

assign or_ln23_14_fu_5371_p2 = (shl_ln_fu_5209_p3 | 7'd15);

assign or_ln23_1_fu_5228_p2 = (shl_ln_fu_5209_p3 | 7'd2);

assign or_ln23_2_fu_5239_p2 = (shl_ln_fu_5209_p3 | 7'd3);

assign or_ln23_3_fu_5250_p2 = (shl_ln_fu_5209_p3 | 7'd4);

assign or_ln23_4_fu_5261_p2 = (shl_ln_fu_5209_p3 | 7'd5);

assign or_ln23_5_fu_5272_p2 = (shl_ln_fu_5209_p3 | 7'd6);

assign or_ln23_6_fu_5283_p2 = (shl_ln_fu_5209_p3 | 7'd7);

assign or_ln23_7_fu_5294_p2 = (shl_ln_fu_5209_p3 | 7'd8);

assign or_ln23_8_fu_5305_p2 = (shl_ln_fu_5209_p3 | 7'd9);

assign or_ln23_9_fu_5316_p2 = (shl_ln_fu_5209_p3 | 7'd10);

assign or_ln23_fu_5217_p2 = (shl_ln_fu_5209_p3 | 7'd1);

assign out_d_fu_572_p0 = reg_478;

assign out_d_fu_572_p2 = (out_d_fu_572_p0 + 4'd1);

assign out_h_fu_556_p0 = reg_500;

assign out_h_fu_556_p2 = (out_h_fu_556_p0 + 4'd1);

assign out_w_fu_566_p0 = reg_511;

assign out_w_fu_566_p2 = (out_w_fu_566_p0 + 4'd1);

assign output_r_address0 = zext_ln30_fu_5900_p1;

assign output_r_d0 = select_ln27_reg_6351;

assign select_ln27_fu_5851_p3 = ((tmp_fu_5843_p3[0:0] === 1'b1) ? 15'd0 : trunc_ln20_fu_5839_p1);

assign sext_ln19_fu_5382_p1 = $signed(SeparableConv2D_1_b_s_q0);

assign sext_ln23_116_fu_5548_p0 = reg_532;

assign sext_ln23_116_fu_5548_p1 = sext_ln23_116_fu_5548_p0;

assign sext_ln23_117_fu_5499_p0 = reg_532;

assign sext_ln23_117_fu_5499_p1 = sext_ln23_117_fu_5499_p0;

assign sext_ln23_118_fu_5493_p1 = add_ln23_fu_543_p2;

assign sext_ln23_49_fu_5859_p1 = $signed(reg_532);

assign sext_ln23_52_fu_5504_p0 = reg_489;

assign sext_ln23_52_fu_5504_p1 = $signed(sext_ln23_52_fu_5504_p0);

assign sext_ln23_54_fu_5386_p1 = $signed(SeparableConv2D_1_w_s_q0);

assign sext_ln23_56_fu_5390_p1 = $signed(SeparableConv2D_1_w_s_q1);

assign sext_ln23_58_fu_5394_p1 = $signed(SeparableConv2D_1_w_s_q2);

assign sext_ln23_60_fu_5398_p1 = $signed(SeparableConv2D_1_w_s_q3);

assign sext_ln23_62_fu_5402_p1 = $signed(SeparableConv2D_1_w_s_q4);

assign sext_ln23_64_fu_5406_p1 = $signed(SeparableConv2D_1_w_s_q5);

assign sext_ln23_66_fu_5410_p1 = $signed(SeparableConv2D_1_w_s_q6);

assign sext_ln23_68_fu_5414_p1 = $signed(SeparableConv2D_1_w_s_q7);

assign sext_ln23_70_fu_5418_p1 = $signed(SeparableConv2D_1_w_s_q8);

assign sext_ln23_72_fu_5422_p1 = $signed(SeparableConv2D_1_w_s_q9);

assign sext_ln23_74_fu_5426_p1 = $signed(SeparableConv2D_1_w_s_q10);

assign sext_ln23_76_fu_5430_p1 = $signed(SeparableConv2D_1_w_s_q11);

assign sext_ln23_78_fu_5434_p1 = $signed(SeparableConv2D_1_w_s_q12);

assign sext_ln23_80_fu_5438_p1 = $signed(SeparableConv2D_1_w_s_q13);

assign sext_ln23_82_fu_5442_p1 = $signed(SeparableConv2D_1_w_s_q14);

assign sext_ln23_fu_5813_p0 = reg_532;

assign sext_ln23_fu_5813_p1 = sext_ln23_fu_5813_p0;

assign sext_ln30_2_fu_5896_p0 = reg_489;

assign sext_ln30_2_fu_5896_p1 = $signed(sext_ln30_2_fu_5896_p0);

assign shl_ln23_2_fu_5452_p1 = reg_500;

assign shl_ln23_2_fu_5452_p3 = {{shl_ln23_2_fu_5452_p1}, {4'd0}};

assign shl_ln23_3_fu_5464_p1 = reg_500;

assign shl_ln23_3_fu_5464_p3 = {{shl_ln23_3_fu_5464_p1}, {1'd0}};

assign shl_ln_fu_5209_p3 = {{trunc_ln23_fu_5205_p1}, {4'd0}};

assign sub_ln23_fu_5476_p2 = (zext_ln23_85_fu_5460_p1 - zext_ln23_86_fu_5472_p1);

assign tmp_fu_5843_p3 = reg_522[32'd15];

assign trunc_ln20_fu_5839_p1 = reg_522[14:0];

assign trunc_ln23_fu_5205_p0 = reg_478;

assign trunc_ln23_fu_5205_p1 = trunc_ln23_fu_5205_p0[2:0];

assign xor_ln20_fu_5833_p0 = reg_532;

assign xor_ln20_fu_5833_p2 = (xor_ln20_fu_5833_p0 ^ 5'd16);

assign zext_ln16_fu_5190_p0 = reg_489;

assign zext_ln16_fu_5190_p1 = zext_ln16_fu_5190_p0;

assign zext_ln19_fu_5200_p0 = reg_478;

assign zext_ln19_fu_5200_p1 = zext_ln19_fu_5200_p0;

assign zext_ln23_51_fu_5863_p1 = $unsigned(sext_ln23_49_fu_5859_p1);

assign zext_ln23_52_fu_5868_p0 = reg_511;

assign zext_ln23_52_fu_5868_p1 = zext_ln23_52_fu_5868_p0;

assign zext_ln23_53_fu_5508_p1 = $unsigned(sext_ln23_52_fu_5504_p1);

assign zext_ln23_54_fu_5223_p1 = or_ln23_fu_5217_p2;

assign zext_ln23_55_fu_5513_p0 = reg_522;

assign zext_ln23_55_fu_5513_p1 = zext_ln23_55_fu_5513_p0;

assign zext_ln23_56_fu_5234_p1 = or_ln23_1_fu_5228_p2;

assign zext_ln23_57_fu_5518_p0 = reg_522;

assign zext_ln23_57_fu_5518_p1 = zext_ln23_57_fu_5518_p0;

assign zext_ln23_58_fu_5245_p1 = or_ln23_2_fu_5239_p2;

assign zext_ln23_59_fu_5523_p0 = reg_489;

assign zext_ln23_59_fu_5523_p1 = zext_ln23_59_fu_5523_p0;

assign zext_ln23_60_fu_5256_p1 = or_ln23_3_fu_5250_p2;

assign zext_ln23_61_fu_5538_p0 = reg_522;

assign zext_ln23_61_fu_5538_p1 = zext_ln23_61_fu_5538_p0;

assign zext_ln23_62_fu_5267_p1 = or_ln23_4_fu_5261_p2;

assign zext_ln23_63_fu_5543_p0 = reg_489;

assign zext_ln23_63_fu_5543_p1 = zext_ln23_63_fu_5543_p0;

assign zext_ln23_64_fu_5278_p1 = or_ln23_5_fu_5272_p2;

assign zext_ln23_65_fu_5583_p0 = reg_522;

assign zext_ln23_65_fu_5583_p1 = zext_ln23_65_fu_5583_p0;

assign zext_ln23_66_fu_5289_p1 = or_ln23_6_fu_5283_p2;

assign zext_ln23_67_fu_5588_p0 = reg_489;

assign zext_ln23_67_fu_5588_p1 = zext_ln23_67_fu_5588_p0;

assign zext_ln23_68_fu_5300_p1 = or_ln23_7_fu_5294_p2;

assign zext_ln23_69_fu_5623_p0 = reg_489;

assign zext_ln23_69_fu_5623_p1 = zext_ln23_69_fu_5623_p0;

assign zext_ln23_70_fu_5311_p1 = or_ln23_8_fu_5305_p2;

assign zext_ln23_71_fu_5628_p0 = reg_522;

assign zext_ln23_71_fu_5628_p1 = zext_ln23_71_fu_5628_p0;

assign zext_ln23_72_fu_5322_p1 = or_ln23_9_fu_5316_p2;

assign zext_ln23_73_fu_5663_p0 = reg_489;

assign zext_ln23_73_fu_5663_p1 = zext_ln23_73_fu_5663_p0;

assign zext_ln23_74_fu_5333_p1 = or_ln23_10_fu_5327_p2;

assign zext_ln23_75_fu_5668_p0 = reg_522;

assign zext_ln23_75_fu_5668_p1 = zext_ln23_75_fu_5668_p0;

assign zext_ln23_76_fu_5344_p1 = or_ln23_11_fu_5338_p2;

assign zext_ln23_77_fu_5703_p0 = reg_522;

assign zext_ln23_77_fu_5703_p1 = zext_ln23_77_fu_5703_p0;

assign zext_ln23_78_fu_5355_p1 = or_ln23_12_fu_5349_p2;

assign zext_ln23_79_fu_5708_p0 = reg_478;

assign zext_ln23_79_fu_5708_p1 = zext_ln23_79_fu_5708_p0;

assign zext_ln23_80_fu_5366_p1 = or_ln23_13_fu_5360_p2;

assign zext_ln23_81_fu_5743_p0 = reg_478;

assign zext_ln23_81_fu_5743_p1 = zext_ln23_81_fu_5743_p0;

assign zext_ln23_82_fu_5377_p1 = or_ln23_14_fu_5371_p2;

assign zext_ln23_85_fu_5460_p1 = shl_ln23_2_fu_5452_p3;

assign zext_ln23_86_fu_5472_p1 = shl_ln23_3_fu_5464_p3;

assign zext_ln23_87_fu_5488_p0 = reg_511;

assign zext_ln23_87_fu_5488_p1 = zext_ln23_87_fu_5488_p0;

assign zext_ln23_88_fu_5823_p0 = reg_532;

assign zext_ln23_88_fu_5823_p1 = zext_ln23_88_fu_5823_p0;

assign zext_ln23_89_fu_5828_p0 = reg_532;

assign zext_ln30_fu_5900_p1 = $unsigned(sext_ln30_2_fu_5896_p1);

always @ (posedge ap_clk) begin
    mul_ln23_reg_4827[1:0] <= 2'b00;
    zext_ln16_reg_5905[11] <= 1'b0;
    shl_ln_reg_5918[3:0] <= 4'b0000;
    sub_ln23_reg_6081[0] <= 1'b0;
end

endmodule //pointwise_conv2d_fix_1
