// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pointwise_conv2d_fix_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_state26 = 29'd33554432;
parameter    ap_ST_fsm_state27 = 29'd67108864;
parameter    ap_ST_fsm_state28 = 29'd134217728;
parameter    ap_ST_fsm_state29 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [10:0] add_ln23_fu_333_p2;
reg   [10:0] reg_288;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln18_fu_5257_p2;
wire   [15:0] add_ln23_16_fu_336_p2;
reg   [15:0] reg_299;
wire    ap_CS_fsm_state9;
wire   [11:0] add_ln23_1_fu_337_p2;
reg   [15:0] reg_310;
wire   [12:0] add_ln23_4_fu_362_p2;
wire    ap_CS_fsm_state4;
wire   [12:0] add_ln23_5_fu_350_p2;
wire    ap_CS_fsm_state5;
wire   [12:0] add_ln23_9_fu_339_p2;
wire    ap_CS_fsm_state6;
wire   [13:0] add_ln23_10_fu_334_p2;
wire    ap_CS_fsm_state7;
wire   [13:0] add_ln23_13_fu_353_p2;
wire    ap_CS_fsm_state8;
wire   [13:0] add_ln23_15_fu_335_p2;
wire   [15:0] add_ln23_17_fu_343_p2;
wire    ap_CS_fsm_state10;
wire   [15:0] add_ln23_24_fu_348_p2;
wire    ap_CS_fsm_state14;
wire   [15:0] add_ln23_25_fu_351_p2;
wire    ap_CS_fsm_state15;
wire   [11:0] add_ln23_2_fu_359_p2;
reg   [15:0] reg_322;
wire   [11:0] add_ln23_3_fu_364_p2;
wire   [12:0] add_ln23_7_fu_361_p2;
wire   [12:0] add_ln23_8_fu_345_p2;
wire   [13:0] add_ln23_11_fu_340_p2;
wire   [13:0] add_ln23_12_fu_341_p2;
wire   [13:0] add_ln23_14_fu_354_p2;
wire   [12:0] add_ln23_6_fu_347_p2;
wire   [15:0] grp_fu_344_p2;
wire    ap_CS_fsm_state11;
wire   [15:0] grp_fu_357_p2;
wire    ap_CS_fsm_state13;
wire   [14:0] add_ln23_27_fu_363_p2;
wire    ap_CS_fsm_state19;
wire   [15:0] add_ln23_28_fu_360_p2;
wire    ap_CS_fsm_state24;
wire   [15:0] add_ln23_29_fu_349_p2;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire   [15:0] grp_fu_338_p2;
wire    ap_CS_fsm_state27;
wire   [4:0] out_h_fu_346_p2;
reg   [4:0] out_h_reg_530;
wire    ap_CS_fsm_state2;
wire   [4:0] out_w_fu_356_p2;
reg   [4:0] out_w_reg_1057;
reg   [15:0] reg_2599;
wire    ap_CS_fsm_state12;
wire   [15:0] add_ln23_22_fu_352_p2;
wire   [15:0] add_ln23_26_fu_342_p2;
wire    ap_CS_fsm_state16;
wire   [15:0] add_ln23_19_fu_355_p2;
reg   [15:0] add_ln23_19_reg_2796;
wire    ap_CS_fsm_state28;
reg  signed [15:0] reg_5206;
wire    ap_CS_fsm_state21;
reg  signed [15:0] reg_5211;
reg  signed [15:0] reg_5216;
wire   [10:0] sub_ln23_fu_5251_p2;
reg   [10:0] sub_ln23_reg_5728;
wire   [0:0] icmp_ln17_fu_5221_p2;
wire  signed [11:0] sext_ln23_6_fu_5268_p1;
reg  signed [11:0] sext_ln23_6_reg_5736;
wire  signed [12:0] sext_ln23_5_fu_5274_p1;
reg  signed [12:0] sext_ln23_5_reg_5741;
reg  signed [15:0] input_load_4_reg_5770;
wire  signed [13:0] sext_ln23_4_fu_5313_p1;
reg  signed [13:0] sext_ln23_4_reg_5785;
reg   [15:0] trunc_ln23_2_reg_5818;
reg   [13:0] tmp_2_reg_5823;
reg   [14:0] tmp_3_reg_5828;
reg   [14:0] tmp_4_reg_5853;
reg   [11:0] tmp_6_reg_5858;
reg   [12:0] tmp_7_reg_5883;
reg   [15:0] trunc_ln23_9_reg_5888;
reg   [15:0] trunc_ln23_s_reg_5918;
reg   [14:0] tmp_8_reg_5923;
reg   [15:0] trunc_ln23_3_reg_5938;
reg   [15:0] trunc_ln23_4_reg_5943;
reg   [7:0] tmp_5_reg_5958;
reg   [15:0] trunc_ln23_5_reg_5963;
reg   [15:0] trunc_ln23_6_reg_5968;
wire  signed [14:0] sext_ln23_fu_5637_p1;
reg  signed [14:0] sext_ln23_reg_5978;
reg   [15:0] trunc_ln23_1_reg_5983;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln20_fu_5651_p2;
wire   [4:0] xor_ln20_fu_5662_p2;
reg   [4:0] xor_ln20_reg_5996;
wire   [14:0] select_ln27_fu_5680_p3;
reg   [14:0] select_ln27_reg_6001;
wire   [14:0] grp_fu_3372_p2;
reg   [14:0] mul_ln23_reg_6006;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
reg   [15:0] trunc_ln1_reg_6021;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state29;
wire   [63:0] zext_ln23_3_fu_5283_p1;
wire   [63:0] zext_ln23_4_fu_5288_p1;
wire   [63:0] zext_ln23_5_fu_5293_p1;
wire   [63:0] zext_ln23_6_fu_5298_p1;
wire   [63:0] zext_ln23_7_fu_5303_p1;
wire   [63:0] zext_ln23_9_fu_5308_p1;
wire   [63:0] zext_ln23_10_fu_5333_p1;
wire   [63:0] zext_ln23_11_fu_5338_p1;
wire   [63:0] zext_ln23_12_fu_5383_p1;
wire   [63:0] zext_ln23_13_fu_5388_p1;
wire   [63:0] zext_ln23_14_fu_5427_p1;
wire   [63:0] zext_ln23_15_fu_5432_p1;
wire   [63:0] zext_ln23_16_fu_5475_p1;
wire   [63:0] zext_ln23_17_fu_5480_p1;
wire   [63:0] zext_ln23_8_fu_5485_p1;
wire   [63:0] zext_ln23_19_fu_5692_p1;
wire   [63:0] zext_ln30_fu_5720_p1;
wire   [10:0] zext_ln23_2_fu_5263_p1;
wire  signed [15:0] sext_ln23_8_fu_5393_p1;
reg  signed [15:0] grp_fu_338_p0;
wire  signed [15:0] sext_ln23_29_fu_5524_p1;
reg   [15:0] grp_fu_338_p1;
wire  signed [15:0] sext_ln23_20_fu_5441_p1;
wire  signed [15:0] sext_ln23_10_fu_5437_p1;
reg   [15:0] grp_fu_344_p0;
reg  signed [15:0] grp_fu_344_p1;
wire  signed [15:0] sext_ln23_27_fu_5490_p1;
wire   [4:0] out_h_fu_346_p0;
wire   [15:0] add_ln23_18_fu_358_p2;
wire   [4:0] out_w_fu_356_p0;
reg   [15:0] grp_fu_357_p0;
reg   [15:0] grp_fu_357_p1;
wire  signed [15:0] sext_ln23_25_fu_5628_p1;
wire  signed [15:0] sext_ln23_23_fu_5624_p1;
wire  signed [13:0] grp_fu_3349_p1;
wire  signed [14:0] grp_fu_3350_p1;
wire  signed [11:0] grp_fu_3351_p1;
wire   [10:0] grp_fu_3353_p1;
wire   [12:0] grp_fu_3355_p1;
wire   [13:0] grp_fu_3356_p1;
wire   [12:0] grp_fu_3357_p1;
wire  signed [13:0] grp_fu_3360_p1;
wire   [13:0] grp_fu_3361_p1;
wire  signed [14:0] grp_fu_3362_p1;
wire  signed [12:0] grp_fu_3366_p1;
wire  signed [14:0] grp_fu_3369_p1;
wire   [4:0] grp_fu_3372_p0;
wire   [10:0] grp_fu_3372_p1;
wire   [13:0] grp_fu_3377_p1;
wire  signed [9:0] grp_fu_3378_p1;
wire   [13:0] grp_fu_3380_p1;
wire   [4:0] icmp_ln17_fu_5221_p0;
wire   [4:0] shl_ln_fu_5227_p1;
wire   [9:0] shl_ln_fu_5227_p3;
wire   [4:0] shl_ln23_7_fu_5239_p1;
wire   [6:0] shl_ln23_7_fu_5239_p3;
wire   [10:0] zext_ln23_fu_5235_p1;
wire   [10:0] zext_ln23_1_fu_5247_p1;
wire   [4:0] icmp_ln18_fu_5257_p0;
wire   [4:0] zext_ln23_2_fu_5263_p0;
wire  signed [10:0] sext_ln23_5_fu_5274_p0;
wire   [11:0] sext_ln23_1_fu_5279_p0;
wire  signed [31:0] sext_ln23_1_fu_5279_p1;
wire   [11:0] zext_ln23_4_fu_5288_p0;
wire   [11:0] zext_ln23_5_fu_5293_p0;
wire   [12:0] zext_ln23_6_fu_5298_p0;
wire   [12:0] zext_ln23_7_fu_5303_p0;
wire   [12:0] zext_ln23_9_fu_5308_p0;
wire  signed [10:0] sext_ln23_4_fu_5313_p0;
wire   [12:0] zext_ln23_10_fu_5333_p0;
wire   [12:0] zext_ln23_11_fu_5338_p0;
wire   [29:0] grp_fu_3380_p2;
wire   [27:0] grp_fu_3351_p2;
wire   [28:0] grp_fu_3357_p2;
wire   [13:0] zext_ln23_12_fu_5383_p0;
wire   [13:0] zext_ln23_13_fu_5388_p0;
wire   [28:0] grp_fu_3366_p2;
wire   [25:0] grp_fu_3378_p2;
wire   [13:0] zext_ln23_14_fu_5427_p0;
wire   [13:0] zext_ln23_15_fu_5432_p0;
wire   [26:0] grp_fu_3353_p2;
wire   [29:0] grp_fu_3377_p2;
wire   [13:0] zext_ln23_16_fu_5475_p0;
wire   [13:0] zext_ln23_17_fu_5480_p0;
wire   [12:0] zext_ln23_8_fu_5485_p0;
wire   [29:0] grp_fu_3361_p2;
wire   [28:0] grp_fu_3355_p2;
wire   [29:0] grp_fu_3350_p2;
wire   [29:0] grp_fu_3356_p2;
wire   [20:0] tmp_fu_5558_p3;
wire  signed [21:0] sext_ln23_21_fu_5566_p1;
wire   [17:0] tmp_1_fu_5576_p3;
wire   [21:0] sub_ln23_1_fu_5570_p2;
wire  signed [21:0] sext_ln23_22_fu_5584_p1;
wire   [21:0] sub_ln23_2_fu_5588_p2;
wire   [29:0] grp_fu_3349_p2;
wire   [29:0] grp_fu_3369_p2;
wire  signed [10:0] sext_ln23_fu_5637_p0;
wire   [29:0] grp_fu_3362_p2;
wire   [4:0] icmp_ln20_fu_5651_p0;
wire   [4:0] zext_ln23_18_fu_5657_p0;
wire   [4:0] xor_ln20_fu_5662_p0;
wire   [0:0] tmp_9_fu_5672_p3;
wire   [14:0] trunc_ln20_fu_5668_p1;
wire   [14:0] sext_ln23_18_fu_5688_p0;
wire  signed [31:0] sext_ln23_18_fu_5688_p1;
wire   [29:0] grp_fu_3360_p2;
wire  signed [10:0] sext_ln30_fu_5716_p0;
wire  signed [31:0] sext_ln30_fu_5716_p1;
reg   [28:0] ap_NS_fsm;
wire   [14:0] grp_fu_3372_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
end

network_mul_16s_14s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_16s_14s_30_2_1_U184(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5211),
    .din1(grp_fu_3349_p1),
    .ce(1'b1),
    .dout(grp_fu_3349_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U185(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5211),
    .din1(grp_fu_3350_p1),
    .ce(1'b1),
    .dout(grp_fu_3350_p2)
);

network_mul_16s_12s_28_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 28 ))
network_mul_16s_12s_28_2_1_U186(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5216),
    .din1(grp_fu_3351_p1),
    .ce(1'b1),
    .dout(grp_fu_3351_p2)
);

network_mul_16s_11ns_27_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_16s_11ns_27_2_1_U187(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5211),
    .din1(grp_fu_3353_p1),
    .ce(1'b1),
    .dout(grp_fu_3353_p2)
);

network_mul_16s_13ns_29_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_16s_13ns_29_2_1_U188(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5216),
    .din1(grp_fu_3355_p1),
    .ce(1'b1),
    .dout(grp_fu_3355_p2)
);

network_mul_16s_14ns_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_16s_14ns_30_2_1_U189(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5216),
    .din1(grp_fu_3356_p1),
    .ce(1'b1),
    .dout(grp_fu_3356_p2)
);

network_mul_16s_13ns_29_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_16s_13ns_29_2_1_U190(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_load_4_reg_5770),
    .din1(grp_fu_3357_p1),
    .ce(1'b1),
    .dout(grp_fu_3357_p2)
);

network_mul_16s_14s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_16s_14s_30_2_1_U191(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5206),
    .din1(grp_fu_3360_p1),
    .ce(1'b1),
    .dout(grp_fu_3360_p2)
);

network_mul_16s_14ns_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_16s_14ns_30_2_1_U192(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5211),
    .din1(grp_fu_3361_p1),
    .ce(1'b1),
    .dout(grp_fu_3361_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U193(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5206),
    .din1(grp_fu_3362_p1),
    .ce(1'b1),
    .dout(grp_fu_3362_p2)
);

network_mul_16s_13s_29_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 29 ))
network_mul_16s_13s_29_2_1_U194(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5211),
    .din1(grp_fu_3366_p1),
    .ce(1'b1),
    .dout(grp_fu_3366_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U195(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5216),
    .din1(grp_fu_3369_p1),
    .ce(1'b1),
    .dout(grp_fu_3369_p2)
);

network_mul_5ns_11ns_15_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 15 ))
network_mul_5ns_11ns_15_2_1_U196(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3372_p0),
    .din1(grp_fu_3372_p1),
    .ce(1'b1),
    .dout(grp_fu_3372_p2)
);

network_mul_16s_14ns_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_16s_14ns_30_2_1_U197(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5216),
    .din1(grp_fu_3377_p1),
    .ce(1'b1),
    .dout(grp_fu_3377_p2)
);

network_mul_16s_10s_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 26 ))
network_mul_16s_10s_26_2_1_U198(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5216),
    .din1(grp_fu_3378_p1),
    .ce(1'b1),
    .dout(grp_fu_3378_p2)
);

network_mul_16s_14ns_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 30 ))
network_mul_16s_14ns_30_2_1_U199(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_5211),
    .din1(grp_fu_3380_p1),
    .ce(1'b1),
    .dout(grp_fu_3380_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_2599 <= add_ln23_26_fu_342_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        reg_2599 <= add_ln23_22_fu_352_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_2599 <= grp_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_5257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        reg_288 <= out_h_reg_530;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_288 <= 5'd0;
    end else if (((icmp_ln18_fu_5257_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        reg_288 <= add_ln23_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_5221_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        reg_299 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        reg_299 <= out_w_reg_1057;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_299 <= add_ln23_16_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        reg_310 <= grp_fu_357_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_310 <= 16'd54797;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        reg_310 <= add_ln23_25_fu_351_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_310 <= add_ln23_24_fu_348_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_310 <= add_ln23_17_fu_343_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_310 <= add_ln23_15_fu_335_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_310 <= add_ln23_13_fu_353_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_310 <= add_ln23_10_fu_334_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_310 <= add_ln23_9_fu_339_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_310 <= add_ln23_5_fu_350_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_310 <= add_ln23_4_fu_362_p2;
    end else if (((icmp_ln18_fu_5257_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        reg_310 <= add_ln23_1_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        reg_322 <= xor_ln20_reg_5996;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_322 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_322 <= grp_fu_338_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_322 <= add_ln23_29_fu_349_p2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        reg_322 <= add_ln23_28_fu_360_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_322 <= add_ln23_27_fu_363_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        reg_322 <= grp_fu_357_p2;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_322 <= grp_fu_344_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_322 <= add_ln23_6_fu_347_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_322 <= add_ln23_14_fu_354_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_322 <= add_ln23_12_fu_341_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        reg_322 <= add_ln23_11_fu_340_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_322 <= add_ln23_8_fu_345_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_322 <= add_ln23_7_fu_361_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_322 <= add_ln23_3_fu_364_p2;
    end else if (((icmp_ln18_fu_5257_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        reg_322 <= add_ln23_2_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_5206 <= input_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_5206 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_5211 <= input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_5211 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_5216 <= input_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_5216 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln23_19_reg_2796 <= add_ln23_19_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        input_load_4_reg_5770 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        mul_ln23_reg_6006 <= grp_fu_3372_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_h_reg_530 <= out_h_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        out_w_reg_1057 <= out_w_fu_356_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_5651_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        select_ln27_reg_6001 <= select_ln27_fu_5680_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sext_ln23_4_reg_5785 <= sext_ln23_4_fu_5313_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sext_ln23_5_reg_5741 <= sext_ln23_5_fu_5274_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_5257_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        sext_ln23_6_reg_5736 <= sext_ln23_6_fu_5268_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sext_ln23_reg_5978 <= sext_ln23_fu_5637_p1;
        trunc_ln23_1_reg_5983 <= {{grp_fu_3362_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_5221_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sub_ln23_reg_5728[10 : 2] <= sub_ln23_fu_5251_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_2_reg_5823 <= {{grp_fu_3351_p2[27:14]}};
        tmp_3_reg_5828 <= {{grp_fu_3357_p2[28:14]}};
        trunc_ln23_2_reg_5818 <= {{grp_fu_3380_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_4_reg_5853 <= {{grp_fu_3366_p2[28:14]}};
        tmp_6_reg_5858 <= {{grp_fu_3378_p2[25:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_5_reg_5958 <= {{sub_ln23_2_fu_5588_p2[21:14]}};
        trunc_ln23_5_reg_5963 <= {{grp_fu_3349_p2[29:14]}};
        trunc_ln23_6_reg_5968 <= {{grp_fu_3369_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_7_reg_5883 <= {{grp_fu_3353_p2[26:14]}};
        trunc_ln23_9_reg_5888 <= {{grp_fu_3377_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_8_reg_5923 <= {{grp_fu_3355_p2[28:14]}};
        trunc_ln23_s_reg_5918 <= {{grp_fu_3361_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        trunc_ln1_reg_6021 <= {{grp_fu_3360_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        trunc_ln23_3_reg_5938 <= {{grp_fu_3350_p2[29:14]}};
        trunc_ln23_4_reg_5943 <= {{grp_fu_3356_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_5651_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        xor_ln20_reg_5996 <= xor_ln20_fu_5662_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln17_fu_5221_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln17_fu_5221_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_338_p0 = reg_2599;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_338_p0 = sext_ln23_29_fu_5524_p1;
    end else begin
        grp_fu_338_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_338_p1 = reg_322;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_338_p1 = trunc_ln23_s_reg_5918;
    end else begin
        grp_fu_338_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_344_p0 = add_ln23_19_reg_2796;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_344_p0 = trunc_ln23_9_reg_5888;
    end else begin
        grp_fu_344_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_344_p1 = reg_322;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_344_p1 = sext_ln23_27_fu_5490_p1;
    end else begin
        grp_fu_344_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_357_p0 = reg_310;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_357_p0 = trunc_ln23_4_reg_5943;
    end else begin
        grp_fu_357_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_357_p1 = reg_322;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_357_p1 = trunc_ln23_3_reg_5938;
    end else begin
        grp_fu_357_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address0 = zext_ln23_8_fu_5485_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = zext_ln23_16_fu_5475_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address0 = zext_ln23_14_fu_5427_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address0 = zext_ln23_12_fu_5383_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address0 = zext_ln23_10_fu_5333_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address0 = zext_ln23_7_fu_5303_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_r_address0 = zext_ln23_5_fu_5293_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_address0 = zext_ln23_3_fu_5283_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        input_r_address1 = zext_ln23_19_fu_5692_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address1 = zext_ln23_17_fu_5480_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        input_r_address1 = zext_ln23_15_fu_5432_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        input_r_address1 = zext_ln23_13_fu_5388_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        input_r_address1 = zext_ln23_11_fu_5338_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_r_address1 = zext_ln23_9_fu_5308_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_r_address1 = zext_ln23_6_fu_5298_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_r_address1 = zext_ln23_4_fu_5288_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln17_fu_5221_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln18_fu_5257_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln20_fu_5651_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_10_fu_334_p2 = ($signed(sext_ln23_4_fu_5313_p1) + $signed(14'd7840));

assign add_ln23_11_fu_340_p2 = ($signed(sext_ln23_4_fu_5313_p1) + $signed(14'd8624));

assign add_ln23_12_fu_341_p2 = ($signed(sext_ln23_4_reg_5785) + $signed(14'd9408));

assign add_ln23_13_fu_353_p2 = ($signed(sext_ln23_4_reg_5785) + $signed(14'd10192));

assign add_ln23_14_fu_354_p2 = ($signed(sext_ln23_4_reg_5785) + $signed(14'd10976));

assign add_ln23_15_fu_335_p2 = ($signed(sext_ln23_4_reg_5785) + $signed(14'd11760));

assign add_ln23_16_fu_336_p2 = ($signed(sext_ln23_8_fu_5393_p1) + $signed(trunc_ln23_2_reg_5818));

assign add_ln23_17_fu_343_p2 = ($signed(sext_ln23_20_fu_5441_p1) + $signed(sext_ln23_10_fu_5437_p1));

assign add_ln23_18_fu_358_p2 = ($signed(sext_ln23_25_fu_5628_p1) + $signed(sext_ln23_23_fu_5624_p1));

assign add_ln23_19_fu_355_p2 = (reg_310 + add_ln23_18_fu_358_p2);

assign add_ln23_1_fu_337_p2 = ($signed(sext_ln23_6_fu_5268_p1) + $signed(12'd784));

assign add_ln23_22_fu_352_p2 = (reg_322 + reg_2599);

assign add_ln23_24_fu_348_p2 = (trunc_ln23_6_reg_5968 + trunc_ln23_5_reg_5963);

assign add_ln23_25_fu_351_p2 = (reg_322 + reg_310);

assign add_ln23_26_fu_342_p2 = (reg_2599 + reg_310);

assign add_ln23_27_fu_363_p2 = ($signed(mul_ln23_reg_6006) + $signed(sext_ln23_reg_5978));

assign add_ln23_28_fu_360_p2 = (trunc_ln1_reg_6021 + trunc_ln23_1_reg_5983);

assign add_ln23_29_fu_349_p2 = (reg_299 + reg_322);

assign add_ln23_2_fu_359_p2 = ($signed(sext_ln23_6_fu_5268_p1) + $signed(12'd1568));

assign add_ln23_3_fu_364_p2 = ($signed(sext_ln23_6_reg_5736) + $signed(12'd2352));

assign add_ln23_4_fu_362_p2 = ($signed(sext_ln23_5_fu_5274_p1) + $signed(13'd3136));

assign add_ln23_5_fu_350_p2 = ($signed(sext_ln23_5_reg_5741) + $signed(13'd3920));

assign add_ln23_6_fu_347_p2 = ($signed(sext_ln23_5_reg_5741) + $signed(13'd4704));

assign add_ln23_7_fu_361_p2 = ($signed(sext_ln23_5_reg_5741) + $signed(13'd5488));

assign add_ln23_8_fu_345_p2 = ($signed(sext_ln23_5_reg_5741) + $signed(13'd6272));

assign add_ln23_9_fu_339_p2 = ($signed(sext_ln23_5_reg_5741) + $signed(13'd7056));

assign add_ln23_fu_333_p2 = (zext_ln23_2_fu_5263_p1 + sub_ln23_reg_5728);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_3349_p1 = 30'd1073734477;

assign grp_fu_3350_p1 = 30'd1073730238;

assign grp_fu_3351_p1 = 28'd268433692;

assign grp_fu_3353_p1 = 27'd748;

assign grp_fu_3355_p1 = 29'd3798;

assign grp_fu_3356_p1 = 30'd5575;

assign grp_fu_3357_p1 = 29'd3434;

assign grp_fu_3360_p1 = 30'd1073735322;

assign grp_fu_3361_p1 = 30'd7886;

assign grp_fu_3362_p1 = 30'd1073725443;

assign grp_fu_3366_p1 = 29'd536867948;

assign grp_fu_3369_p1 = 30'd1073732219;

assign grp_fu_3372_p0 = grp_fu_3372_p00;

assign grp_fu_3372_p00 = zext_ln23_18_fu_5657_p0;

assign grp_fu_3372_p1 = 15'd784;

assign grp_fu_3377_p1 = 30'd7038;

assign grp_fu_3378_p1 = 26'd67108386;

assign grp_fu_3380_p1 = 30'd7191;

assign grp_fu_338_p2 = ($signed(grp_fu_338_p0) + $signed(grp_fu_338_p1));

assign grp_fu_344_p2 = ($signed(grp_fu_344_p0) + $signed(grp_fu_344_p1));

assign grp_fu_357_p2 = (grp_fu_357_p0 + grp_fu_357_p1);

assign icmp_ln17_fu_5221_p0 = reg_288;

assign icmp_ln17_fu_5221_p2 = ((icmp_ln17_fu_5221_p0 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_5257_p0 = reg_299;

assign icmp_ln18_fu_5257_p2 = ((icmp_ln18_fu_5257_p0 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_5651_p0 = reg_322;

assign icmp_ln20_fu_5651_p2 = ((icmp_ln20_fu_5651_p0 == 5'd16) ? 1'b1 : 1'b0);

assign out_h_fu_346_p0 = reg_288;

assign out_h_fu_346_p2 = (out_h_fu_346_p0 + 5'd1);

assign out_w_fu_356_p0 = reg_299;

assign out_w_fu_356_p2 = (out_w_fu_356_p0 + 5'd1);

assign output_r_address0 = zext_ln30_fu_5720_p1;

assign output_r_d0 = select_ln27_reg_6001;

assign select_ln27_fu_5680_p3 = ((tmp_9_fu_5672_p3[0:0] === 1'b1) ? 15'd0 : trunc_ln20_fu_5668_p1);

assign sext_ln23_10_fu_5437_p1 = $signed(tmp_3_reg_5828);

assign sext_ln23_18_fu_5688_p0 = reg_322;

assign sext_ln23_18_fu_5688_p1 = $signed(sext_ln23_18_fu_5688_p0);

assign sext_ln23_1_fu_5279_p0 = reg_310;

assign sext_ln23_1_fu_5279_p1 = $signed(sext_ln23_1_fu_5279_p0);

assign sext_ln23_20_fu_5441_p1 = $signed(tmp_4_reg_5853);

assign sext_ln23_21_fu_5566_p1 = $signed(tmp_fu_5558_p3);

assign sext_ln23_22_fu_5584_p1 = $signed(tmp_1_fu_5576_p3);

assign sext_ln23_23_fu_5624_p1 = $signed(tmp_5_reg_5958);

assign sext_ln23_25_fu_5628_p1 = $signed(tmp_6_reg_5858);

assign sext_ln23_27_fu_5490_p1 = $signed(tmp_7_reg_5883);

assign sext_ln23_29_fu_5524_p1 = $signed(tmp_8_reg_5923);

assign sext_ln23_4_fu_5313_p0 = reg_288;

assign sext_ln23_4_fu_5313_p1 = sext_ln23_4_fu_5313_p0;

assign sext_ln23_5_fu_5274_p0 = reg_288;

assign sext_ln23_5_fu_5274_p1 = sext_ln23_5_fu_5274_p0;

assign sext_ln23_6_fu_5268_p1 = add_ln23_fu_333_p2;

assign sext_ln23_8_fu_5393_p1 = $signed(tmp_2_reg_5823);

assign sext_ln23_fu_5637_p0 = reg_288;

assign sext_ln23_fu_5637_p1 = sext_ln23_fu_5637_p0;

assign sext_ln30_fu_5716_p0 = reg_288;

assign sext_ln30_fu_5716_p1 = sext_ln30_fu_5716_p0;

assign shl_ln23_7_fu_5239_p1 = reg_288;

assign shl_ln23_7_fu_5239_p3 = {{shl_ln23_7_fu_5239_p1}, {2'd0}};

assign shl_ln_fu_5227_p1 = reg_288;

assign shl_ln_fu_5227_p3 = {{shl_ln_fu_5227_p1}, {5'd0}};

assign sub_ln23_1_fu_5570_p2 = ($signed(22'd0) - $signed(sext_ln23_21_fu_5566_p1));

assign sub_ln23_2_fu_5588_p2 = ($signed(sub_ln23_1_fu_5570_p2) - $signed(sext_ln23_22_fu_5584_p1));

assign sub_ln23_fu_5251_p2 = (zext_ln23_fu_5235_p1 - zext_ln23_1_fu_5247_p1);

assign tmp_1_fu_5576_p3 = {{reg_5211}, {2'd0}};

assign tmp_9_fu_5672_p3 = reg_310[32'd15];

assign tmp_fu_5558_p3 = {{reg_5211}, {5'd0}};

assign trunc_ln20_fu_5668_p1 = reg_310[14:0];

assign xor_ln20_fu_5662_p0 = reg_322;

assign xor_ln20_fu_5662_p2 = (xor_ln20_fu_5662_p0 ^ 5'd16);

assign zext_ln23_10_fu_5333_p0 = reg_322;

assign zext_ln23_10_fu_5333_p1 = zext_ln23_10_fu_5333_p0;

assign zext_ln23_11_fu_5338_p0 = reg_310;

assign zext_ln23_11_fu_5338_p1 = zext_ln23_11_fu_5338_p0;

assign zext_ln23_12_fu_5383_p0 = reg_310;

assign zext_ln23_12_fu_5383_p1 = zext_ln23_12_fu_5383_p0;

assign zext_ln23_13_fu_5388_p0 = reg_322;

assign zext_ln23_13_fu_5388_p1 = zext_ln23_13_fu_5388_p0;

assign zext_ln23_14_fu_5427_p0 = reg_322;

assign zext_ln23_14_fu_5427_p1 = zext_ln23_14_fu_5427_p0;

assign zext_ln23_15_fu_5432_p0 = reg_310;

assign zext_ln23_15_fu_5432_p1 = zext_ln23_15_fu_5432_p0;

assign zext_ln23_16_fu_5475_p0 = reg_322;

assign zext_ln23_16_fu_5475_p1 = zext_ln23_16_fu_5475_p0;

assign zext_ln23_17_fu_5480_p0 = reg_310;

assign zext_ln23_17_fu_5480_p1 = zext_ln23_17_fu_5480_p0;

assign zext_ln23_18_fu_5657_p0 = reg_322;

assign zext_ln23_19_fu_5692_p1 = $unsigned(sext_ln23_18_fu_5688_p1);

assign zext_ln23_1_fu_5247_p1 = shl_ln23_7_fu_5239_p3;

assign zext_ln23_2_fu_5263_p0 = reg_299;

assign zext_ln23_2_fu_5263_p1 = zext_ln23_2_fu_5263_p0;

assign zext_ln23_3_fu_5283_p1 = $unsigned(sext_ln23_1_fu_5279_p1);

assign zext_ln23_4_fu_5288_p0 = reg_322;

assign zext_ln23_4_fu_5288_p1 = zext_ln23_4_fu_5288_p0;

assign zext_ln23_5_fu_5293_p0 = reg_322;

assign zext_ln23_5_fu_5293_p1 = zext_ln23_5_fu_5293_p0;

assign zext_ln23_6_fu_5298_p0 = reg_310;

assign zext_ln23_6_fu_5298_p1 = zext_ln23_6_fu_5298_p0;

assign zext_ln23_7_fu_5303_p0 = reg_310;

assign zext_ln23_7_fu_5303_p1 = zext_ln23_7_fu_5303_p0;

assign zext_ln23_8_fu_5485_p0 = reg_322;

assign zext_ln23_8_fu_5485_p1 = zext_ln23_8_fu_5485_p0;

assign zext_ln23_9_fu_5308_p0 = reg_322;

assign zext_ln23_9_fu_5308_p1 = zext_ln23_9_fu_5308_p0;

assign zext_ln23_fu_5235_p1 = shl_ln_fu_5227_p3;

assign zext_ln30_fu_5720_p1 = $unsigned(sext_ln30_fu_5716_p1);

always @ (posedge ap_clk) begin
    sub_ln23_reg_5728[1:0] <= 2'b00;
end

endmodule //pointwise_conv2d_fix_4
