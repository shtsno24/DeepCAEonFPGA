// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pointwise_conv2d_fix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 34'd1;
parameter    ap_ST_fsm_state2 = 34'd2;
parameter    ap_ST_fsm_state3 = 34'd4;
parameter    ap_ST_fsm_state4 = 34'd8;
parameter    ap_ST_fsm_state5 = 34'd16;
parameter    ap_ST_fsm_state6 = 34'd32;
parameter    ap_ST_fsm_state7 = 34'd64;
parameter    ap_ST_fsm_state8 = 34'd128;
parameter    ap_ST_fsm_state9 = 34'd256;
parameter    ap_ST_fsm_state10 = 34'd512;
parameter    ap_ST_fsm_state11 = 34'd1024;
parameter    ap_ST_fsm_state12 = 34'd2048;
parameter    ap_ST_fsm_state13 = 34'd4096;
parameter    ap_ST_fsm_state14 = 34'd8192;
parameter    ap_ST_fsm_state15 = 34'd16384;
parameter    ap_ST_fsm_state16 = 34'd32768;
parameter    ap_ST_fsm_state17 = 34'd65536;
parameter    ap_ST_fsm_state18 = 34'd131072;
parameter    ap_ST_fsm_state19 = 34'd262144;
parameter    ap_ST_fsm_state20 = 34'd524288;
parameter    ap_ST_fsm_state21 = 34'd1048576;
parameter    ap_ST_fsm_state22 = 34'd2097152;
parameter    ap_ST_fsm_state23 = 34'd4194304;
parameter    ap_ST_fsm_state24 = 34'd8388608;
parameter    ap_ST_fsm_state25 = 34'd16777216;
parameter    ap_ST_fsm_state26 = 34'd33554432;
parameter    ap_ST_fsm_state27 = 34'd67108864;
parameter    ap_ST_fsm_state28 = 34'd134217728;
parameter    ap_ST_fsm_state29 = 34'd268435456;
parameter    ap_ST_fsm_state30 = 34'd536870912;
parameter    ap_ST_fsm_state31 = 34'd1073741824;
parameter    ap_ST_fsm_state32 = 34'd2147483648;
parameter    ap_ST_fsm_state33 = 34'd4294967296;
parameter    ap_ST_fsm_state34 = 34'd8589934592;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] SeparableConv2D_0_b_s_address0;
reg    SeparableConv2D_0_b_s_ce0;
wire   [12:0] SeparableConv2D_0_b_s_q0;
reg   [3:0] SeparableConv2D_0_w_s_address0;
reg    SeparableConv2D_0_w_s_ce0;
wire   [14:0] SeparableConv2D_0_w_s_q0;
reg   [3:0] SeparableConv2D_0_w_s_address1;
reg    SeparableConv2D_0_w_s_ce1;
wire   [14:0] SeparableConv2D_0_w_s_q1;
wire   [16:0] grp_fu_475_p2;
reg   [16:0] reg_392;
wire    ap_CS_fsm_state9;
wire   [16:0] grp_fu_481_p2;
wire    ap_CS_fsm_state16;
wire   [16:0] grp_fu_484_p2;
wire    ap_CS_fsm_state17;
wire   [16:0] grp_fu_495_p2;
wire    ap_CS_fsm_state18;
wire   [16:0] add_ln23_21_fu_491_p2;
wire    ap_CS_fsm_state19;
wire   [16:0] grp_fu_494_p2;
wire    ap_CS_fsm_state20;
wire   [16:0] grp_fu_488_p2;
wire    ap_CS_fsm_state21;
wire   [16:0] grp_fu_472_p2;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire   [16:0] grp_fu_487_p2;
wire    ap_CS_fsm_state30;
wire   [16:0] grp_fu_478_p2;
wire    ap_CS_fsm_state31;
wire   [26:0] grp_fu_473_p2;
reg   [26:0] reg_404;
wire   [16:0] grp_fu_480_p2;
wire    ap_CS_fsm_state15;
reg   [0:0] icmp_ln20_reg_7455;
reg   [0:0] icmp_ln20_1_reg_7490;
wire   [14:0] add_ln30_fu_474_p2;
wire   [16:0] grp_fu_476_p2;
wire   [26:0] grp_fu_471_p2;
wire   [26:0] grp_fu_483_p2;
wire   [26:0] grp_fu_485_p2;
wire   [26:0] grp_fu_493_p2;
wire   [26:0] add_ln23_20_fu_499_p2;
wire   [26:0] grp_fu_479_p2;
wire    ap_CS_fsm_state27;
wire   [16:0] grp_fu_490_p2;
reg   [16:0] reg_426;
wire   [16:0] add_ln23_23_fu_496_p2;
wire   [26:0] grp_fu_470_p2;
wire   [16:0] grp_fu_477_p2;
reg   [15:0] reg_437;
reg   [26:0] reg_449;
wire   [26:0] grp_fu_469_p2;
wire   [26:0] grp_fu_489_p2;
wire   [15:0] grp_fu_492_p2;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state29;
wire  signed [10:0] add_ln23_fu_497_p2;
reg   [15:0] reg_459;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln18_fu_6686_p2;
wire   [13:0] add_ln16_fu_500_p2;
reg   [13:0] add_ln16_reg_831;
wire    ap_CS_fsm_state2;
wire   [4:0] out_d_fu_498_p2;
reg   [4:0] out_d_reg_836;
wire   [4:0] out_h_fu_482_p2;
reg   [4:0] out_h_reg_999;
wire    ap_CS_fsm_state4;
wire   [4:0] out_w_fu_486_p2;
reg   [4:0] out_w_reg_1252;
reg   [15:0] add_ln23_3_reg_1547;
wire    ap_CS_fsm_state14;
reg   [15:0] add_ln20_reg_2890;
wire    ap_CS_fsm_state32;
wire   [26:0] grp_fu_3448_p2;
reg   [26:0] reg_6520;
wire    ap_CS_fsm_state8;
reg  signed [15:0] reg_6527;
wire    ap_CS_fsm_state11;
reg  signed [14:0] reg_6532;
reg   [15:0] reg_6536;
wire    ap_CS_fsm_state13;
wire   [26:0] grp_fu_3466_p2;
reg   [26:0] reg_6543;
wire   [26:0] grp_fu_3464_p2;
reg   [26:0] reg_6550;
reg   [14:0] reg_6557;
reg   [14:0] reg_6561;
reg   [14:0] reg_6565;
reg   [14:0] reg_6569;
reg   [15:0] reg_6573;
reg   [14:0] reg_6578;
wire   [26:0] grp_fu_3442_p2;
reg   [26:0] reg_6582;
wire   [26:0] grp_fu_3449_p2;
reg   [26:0] reg_6588;
reg   [15:0] reg_6595;
reg   [15:0] reg_6601;
reg   [15:0] reg_6607;
reg   [15:0] reg_6614;
reg   [15:0] reg_6621;
wire   [14:0] zext_ln16_fu_6627_p1;
reg   [14:0] zext_ln16_reg_7393;
wire   [0:0] icmp_ln16_fu_6631_p2;
wire   [16:0] zext_ln30_1_fu_6642_p1;
reg   [16:0] zext_ln30_1_reg_7406;
wire    ap_CS_fsm_state3;
wire  signed [15:0] sext_ln19_fu_6646_p1;
reg  signed [15:0] sext_ln19_reg_7425;
wire   [10:0] sub_ln23_fu_6680_p2;
reg   [10:0] sub_ln23_reg_7433;
wire   [0:0] icmp_ln17_fu_6650_p2;
wire  signed [26:0] sext_ln23_fu_6697_p1;
reg  signed [26:0] sext_ln23_reg_7441;
wire   [0:0] icmp_ln20_fu_6701_p2;
wire    ap_CS_fsm_state6;
wire   [26:0] zext_ln23_6_fu_6707_p1;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state10;
wire  signed [29:0] sext_ln23_2_fu_6731_p1;
wire    ap_CS_fsm_state12;
wire  signed [29:0] sext_ln23_3_fu_6736_p1;
wire   [15:0] or_ln20_fu_6741_p2;
reg   [15:0] or_ln20_reg_7484;
wire   [0:0] icmp_ln20_1_fu_6747_p2;
wire   [26:0] zext_ln23_10_fu_6757_p1;
wire   [26:0] zext_ln23_14_fu_6782_p1;
wire   [26:0] zext_ln23_18_fu_6798_p1;
wire   [26:0] zext_ln23_22_fu_6824_p1;
wire   [26:0] zext_ln23_26_fu_6840_p1;
wire   [26:0] zext_ln23_30_fu_6875_p1;
wire   [26:0] zext_ln23_52_fu_6891_p1;
wire   [26:0] zext_ln23_54_fu_6935_p1;
wire   [26:0] zext_ln23_56_fu_6951_p1;
wire   [26:0] zext_ln23_58_fu_7005_p1;
wire   [26:0] zext_ln23_60_fu_7021_p1;
reg   [15:0] trunc_ln23_1_reg_7629;
wire  signed [29:0] sext_ln23_8_fu_7036_p1;
wire  signed [29:0] sext_ln23_9_fu_7041_p1;
wire  signed [29:0] sext_ln23_11_fu_7046_p1;
wire  signed [29:0] sext_ln23_12_fu_7051_p1;
wire   [26:0] zext_ln23_62_fu_7095_p1;
wire   [26:0] zext_ln23_64_fu_7111_p1;
wire  signed [29:0] sext_ln23_14_fu_7116_p1;
wire  signed [29:0] sext_ln23_15_fu_7121_p1;
wire  signed [29:0] sext_ln23_17_fu_7126_p1;
wire  signed [29:0] sext_ln23_18_fu_7131_p1;
wire   [26:0] zext_ln23_68_fu_7191_p1;
wire  signed [29:0] sext_ln23_20_fu_7196_p1;
wire  signed [29:0] sext_ln23_21_fu_7201_p1;
wire  signed [29:0] sext_ln23_23_fu_7206_p1;
wire  signed [29:0] sext_ln23_24_fu_7211_p1;
wire   [26:0] grp_fu_3460_p2;
reg   [26:0] mul_ln23_28_reg_7764;
wire  signed [29:0] sext_ln23_26_fu_7244_p1;
wire  signed [29:0] sext_ln23_27_fu_7249_p1;
wire  signed [29:0] sext_ln23_29_fu_7254_p1;
wire  signed [29:0] sext_ln23_30_fu_7259_p1;
wire  signed [29:0] sext_ln23_32_fu_7282_p1;
wire  signed [29:0] sext_ln23_33_fu_7287_p1;
wire  signed [29:0] sext_ln23_35_fu_7292_p1;
wire  signed [29:0] sext_ln23_36_fu_7297_p1;
wire  signed [29:0] sext_ln23_38_fu_7320_p1;
wire  signed [29:0] sext_ln23_39_fu_7325_p1;
wire  signed [29:0] sext_ln23_41_fu_7330_p1;
wire  signed [29:0] sext_ln23_42_fu_7335_p1;
wire  signed [29:0] sext_ln23_44_fu_7340_p1;
wire  signed [29:0] sext_ln23_45_fu_7345_p1;
wire  signed [29:0] sext_ln23_47_fu_7350_p1;
wire  signed [29:0] sext_ln23_48_fu_7355_p1;
wire   [14:0] select_ln27_fu_7372_p3;
reg   [14:0] select_ln27_reg_7879;
wire    ap_CS_fsm_state33;
reg   [4:0] out_h_0_reg_415;
wire    ap_CS_fsm_state34;
wire   [63:0] zext_ln19_fu_6637_p1;
wire   [63:0] zext_ln23_7_fu_6721_p1;
wire   [63:0] zext_ln23_8_fu_6726_p1;
wire   [63:0] zext_ln23_12_fu_6766_p1;
wire   [63:0] zext_ln23_16_fu_6803_p1;
wire   [63:0] zext_ln23_20_fu_6808_p1;
wire   [63:0] zext_ln23_11_fu_6849_p1;
wire   [63:0] zext_ln23_24_fu_6854_p1;
wire   [63:0] zext_ln23_28_fu_6859_p1;
wire   [63:0] zext_ln23_15_fu_6900_p1;
wire   [63:0] zext_ln23_19_fu_6909_p1;
wire   [63:0] zext_ln23_32_fu_6914_p1;
wire   [63:0] zext_ln23_34_fu_6919_p1;
wire   [63:0] zext_ln23_23_fu_6970_p1;
wire   [63:0] zext_ln23_27_fu_6979_p1;
wire   [63:0] zext_ln23_36_fu_6984_p1;
wire   [63:0] zext_ln23_38_fu_6989_p1;
wire   [63:0] zext_ln23_31_fu_7060_p1;
wire   [63:0] zext_ln23_33_fu_7069_p1;
wire   [63:0] zext_ln23_40_fu_7074_p1;
wire   [63:0] zext_ln23_42_fu_7079_p1;
wire   [63:0] zext_ln23_35_fu_7140_p1;
wire   [63:0] zext_ln23_37_fu_7149_p1;
wire   [63:0] zext_ln23_44_fu_7154_p1;
wire   [63:0] zext_ln23_46_fu_7159_p1;
wire   [63:0] zext_ln23_39_fu_7220_p1;
wire   [63:0] zext_ln23_41_fu_7229_p1;
wire   [63:0] zext_ln23_48_fu_7234_p1;
wire   [63:0] zext_ln23_50_fu_7239_p1;
wire   [63:0] zext_ln23_43_fu_7268_p1;
wire   [63:0] zext_ln23_45_fu_7277_p1;
wire   [63:0] zext_ln23_47_fu_7306_p1;
wire   [63:0] zext_ln23_49_fu_7315_p1;
wire   [63:0] zext_ln30_fu_7388_p1;
reg   [26:0] grp_fu_469_p0;
reg  signed [26:0] grp_fu_469_p1;
reg   [26:0] grp_fu_470_p0;
reg  signed [26:0] grp_fu_470_p1;
reg   [26:0] grp_fu_471_p0;
reg   [16:0] grp_fu_472_p0;
reg   [16:0] grp_fu_472_p1;
wire   [16:0] zext_ln23_65_fu_7170_p1;
reg   [26:0] grp_fu_473_p0;
wire  signed [14:0] sext_ln30_fu_6761_p1;
reg   [16:0] grp_fu_475_p0;
reg   [16:0] grp_fu_475_p1;
wire   [16:0] zext_ln23_5_fu_6712_p1;
reg   [16:0] grp_fu_476_p1;
wire   [16:0] zext_ln23_17_fu_6793_p1;
wire   [16:0] zext_ln23_67_fu_7186_p1;
reg   [16:0] grp_fu_477_p0;
reg   [16:0] grp_fu_477_p1;
wire   [16:0] zext_ln23_25_fu_6835_p1;
reg   [16:0] grp_fu_478_p0;
reg   [16:0] grp_fu_478_p1;
wire   [16:0] zext_ln23_53_fu_6930_p1;
reg   [16:0] grp_fu_480_p0;
reg   [16:0] grp_fu_480_p1;
wire   [16:0] zext_ln23_9_fu_6753_p1;
reg   [16:0] grp_fu_481_p0;
reg   [16:0] grp_fu_481_p1;
wire   [16:0] zext_ln23_13_fu_6777_p1;
reg   [26:0] grp_fu_483_p0;
reg   [16:0] grp_fu_484_p0;
reg   [16:0] grp_fu_484_p1;
wire   [16:0] zext_ln23_21_fu_6819_p1;
reg   [26:0] grp_fu_485_p0;
wire   [4:0] out_w_fu_486_p0;
reg   [16:0] grp_fu_487_p0;
reg   [16:0] grp_fu_487_p1;
wire   [16:0] zext_ln23_61_fu_7090_p1;
reg   [16:0] grp_fu_488_p0;
reg   [16:0] grp_fu_488_p1;
wire   [16:0] zext_ln23_63_fu_7106_p1;
reg   [26:0] grp_fu_489_p0;
reg   [16:0] grp_fu_490_p0;
reg   [16:0] grp_fu_490_p1;
wire   [16:0] zext_ln23_29_fu_6870_p1;
wire   [16:0] zext_ln23_55_fu_6946_p1;
reg   [15:0] grp_fu_492_p0;
reg   [15:0] grp_fu_492_p1;
reg   [26:0] grp_fu_493_p0;
reg  signed [26:0] grp_fu_493_p1;
reg   [16:0] grp_fu_494_p0;
reg   [16:0] grp_fu_494_p1;
wire   [16:0] zext_ln23_59_fu_7016_p1;
reg   [16:0] grp_fu_495_p0;
reg   [16:0] grp_fu_495_p1;
wire   [16:0] zext_ln23_51_fu_6886_p1;
wire   [16:0] zext_ln23_57_fu_7000_p1;
wire   [10:0] zext_ln23_4_fu_6692_p1;
wire   [4:0] out_d_fu_498_p0;
wire   [13:0] add_ln16_fu_500_p0;
reg  signed [15:0] grp_fu_3435_p0;
reg  signed [14:0] grp_fu_3435_p1;
reg  signed [15:0] grp_fu_3439_p0;
reg  signed [14:0] grp_fu_3439_p1;
reg  signed [15:0] grp_fu_3441_p0;
reg  signed [14:0] grp_fu_3441_p1;
reg   [15:0] grp_fu_3442_p0;
wire   [10:0] grp_fu_3442_p1;
reg   [15:0] grp_fu_3448_p0;
wire   [10:0] grp_fu_3448_p1;
reg   [15:0] grp_fu_3449_p0;
wire   [10:0] grp_fu_3449_p1;
reg  signed [15:0] grp_fu_3452_p0;
reg  signed [14:0] grp_fu_3452_p1;
reg  signed [15:0] grp_fu_3458_p0;
reg  signed [14:0] grp_fu_3458_p1;
wire   [15:0] grp_fu_3460_p0;
wire   [10:0] grp_fu_3460_p1;
reg  signed [15:0] grp_fu_3463_p0;
reg  signed [14:0] grp_fu_3463_p1;
reg   [15:0] grp_fu_3464_p0;
wire   [10:0] grp_fu_3464_p1;
reg   [15:0] grp_fu_3466_p0;
wire   [10:0] grp_fu_3466_p1;
wire   [29:0] grp_fu_3439_p2;
wire   [29:0] grp_fu_3458_p2;
wire   [29:0] grp_fu_3435_p2;
wire   [29:0] grp_fu_3452_p2;
wire   [29:0] grp_fu_3463_p2;
wire   [29:0] grp_fu_3441_p2;
wire   [13:0] zext_ln16_fu_6627_p0;
wire   [4:0] icmp_ln16_fu_6631_p0;
wire   [4:0] zext_ln19_fu_6637_p0;
wire   [4:0] zext_ln30_1_fu_6642_p0;
wire   [9:0] shl_ln_fu_6656_p3;
wire   [6:0] shl_ln23_1_fu_6668_p3;
wire   [10:0] zext_ln23_2_fu_6664_p1;
wire   [10:0] zext_ln23_3_fu_6676_p1;
wire   [4:0] icmp_ln18_fu_6686_p0;
wire   [4:0] zext_ln23_4_fu_6692_p0;
wire  signed [31:0] sext_ln23_1_fu_6717_p1;
wire  signed [10:0] sext_ln30_fu_6761_p0;
wire   [16:0] zext_ln23_12_fu_6766_p0;
wire   [15:0] or_ln20_1_fu_6771_p2;
wire   [15:0] or_ln20_2_fu_6787_p2;
wire   [16:0] zext_ln23_20_fu_6808_p0;
wire   [15:0] or_ln20_3_fu_6813_p2;
wire   [15:0] or_ln20_4_fu_6829_p2;
wire  signed [31:0] sext_ln23_4_fu_6845_p1;
wire   [16:0] zext_ln23_28_fu_6859_p0;
wire   [15:0] or_ln20_5_fu_6864_p2;
wire   [15:0] or_ln20_6_fu_6880_p2;
wire  signed [31:0] sext_ln23_7_fu_6896_p1;
wire  signed [31:0] sext_ln23_10_fu_6905_p1;
wire   [15:0] or_ln20_7_fu_6924_p2;
wire   [15:0] or_ln20_8_fu_6940_p2;
wire  signed [31:0] sext_ln23_13_fu_6966_p1;
wire  signed [31:0] sext_ln23_16_fu_6975_p1;
wire   [15:0] or_ln20_9_fu_6994_p2;
wire   [15:0] or_ln20_10_fu_7010_p2;
wire   [29:0] grp_fu_3437_p2;
wire  signed [31:0] sext_ln23_19_fu_7056_p1;
wire  signed [31:0] sext_ln23_22_fu_7065_p1;
wire   [15:0] or_ln20_11_fu_7084_p2;
wire   [15:0] or_ln20_12_fu_7100_p2;
wire  signed [31:0] sext_ln23_25_fu_7136_p1;
wire  signed [31:0] sext_ln23_28_fu_7145_p1;
wire   [15:0] or_ln20_13_fu_7164_p2;
wire   [15:0] or_ln20_14_fu_7180_p2;
wire  signed [31:0] sext_ln23_31_fu_7216_p1;
wire  signed [31:0] sext_ln23_34_fu_7225_p1;
wire  signed [31:0] sext_ln23_37_fu_7264_p1;
wire  signed [31:0] sext_ln23_40_fu_7273_p1;
wire  signed [31:0] sext_ln23_43_fu_7302_p1;
wire  signed [31:0] sext_ln23_46_fu_7311_p1;
wire   [0:0] tmp_fu_7364_p3;
wire   [14:0] trunc_ln27_fu_7360_p1;
wire   [14:0] sext_ln30_1_fu_7384_p0;
wire  signed [31:0] sext_ln30_1_fu_7384_p1;
reg   [33:0] ap_NS_fsm;
wire   [26:0] grp_fu_3460_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 34'd1;
end

pointwise_conv2d_fix_SeparableConv2D_0_b_s #(
    .DataWidth( 13 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
SeparableConv2D_0_b_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SeparableConv2D_0_b_s_address0),
    .ce0(SeparableConv2D_0_b_s_ce0),
    .q0(SeparableConv2D_0_b_s_q0)
);

pointwise_conv2d_fix_SeparableConv2D_0_w_s #(
    .DataWidth( 15 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
SeparableConv2D_0_w_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SeparableConv2D_0_w_s_address0),
    .ce0(SeparableConv2D_0_w_s_ce0),
    .q0(SeparableConv2D_0_w_s_q0),
    .address1(SeparableConv2D_0_w_s_address1),
    .ce1(SeparableConv2D_0_w_s_ce1),
    .q1(SeparableConv2D_0_w_s_q1)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3435_p0),
    .din1(grp_fu_3435_p1),
    .ce(1'b1),
    .dout(grp_fu_3435_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_6527),
    .din1(reg_6532),
    .ce(1'b1),
    .dout(grp_fu_3437_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3439_p0),
    .din1(grp_fu_3439_p1),
    .ce(1'b1),
    .dout(grp_fu_3439_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3441_p0),
    .din1(grp_fu_3441_p1),
    .ce(1'b1),
    .dout(grp_fu_3441_p2)
);

network_mul_16ns_11ns_27_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_16ns_11ns_27_2_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3442_p0),
    .din1(grp_fu_3442_p1),
    .ce(1'b1),
    .dout(grp_fu_3442_p2)
);

network_mul_16ns_11ns_27_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_16ns_11ns_27_2_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3448_p0),
    .din1(grp_fu_3448_p1),
    .ce(1'b1),
    .dout(grp_fu_3448_p2)
);

network_mul_16ns_11ns_27_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_16ns_11ns_27_2_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3449_p0),
    .din1(grp_fu_3449_p1),
    .ce(1'b1),
    .dout(grp_fu_3449_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3452_p0),
    .din1(grp_fu_3452_p1),
    .ce(1'b1),
    .dout(grp_fu_3452_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3458_p0),
    .din1(grp_fu_3458_p1),
    .ce(1'b1),
    .dout(grp_fu_3458_p2)
);

network_mul_16ns_11ns_27_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_16ns_11ns_27_2_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3460_p0),
    .din1(grp_fu_3460_p1),
    .ce(1'b1),
    .dout(grp_fu_3460_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3463_p0),
    .din1(grp_fu_3463_p1),
    .ce(1'b1),
    .dout(grp_fu_3463_p2)
);

network_mul_16ns_11ns_27_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_16ns_11ns_27_2_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3464_p0),
    .din1(grp_fu_3464_p1),
    .ce(1'b1),
    .dout(grp_fu_3464_p2)
);

network_mul_16ns_11ns_27_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 27 ))
network_mul_16ns_11ns_27_2_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3466_p0),
    .din1(grp_fu_3466_p1),
    .ce(1'b1),
    .dout(grp_fu_3466_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6686_p2 == 1'd1))) begin
        out_h_0_reg_415 <= out_h_reg_999;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        out_h_0_reg_415 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_6650_p2 == 1'd1))) begin
        reg_392 <= out_d_reg_836;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_392 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        reg_392 <= grp_fu_478_p2;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        reg_392 <= grp_fu_487_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_392 <= grp_fu_472_p2;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_392 <= grp_fu_488_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_392 <= grp_fu_494_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_392 <= add_ln23_21_fu_491_p2;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_392 <= grp_fu_495_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        reg_392 <= grp_fu_484_p2;
    end else if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_392 <= grp_fu_481_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_392 <= grp_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_6650_p2 == 1'd1))) begin
        reg_404 <= add_ln16_reg_831;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_404 <= 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        reg_404 <= grp_fu_490_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        reg_404 <= grp_fu_479_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_404 <= add_ln23_20_fu_499_p2;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_404 <= grp_fu_493_p2;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_404 <= grp_fu_485_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_404 <= grp_fu_483_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        reg_404 <= grp_fu_471_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_404 <= grp_fu_476_p2;
    end else if (((1'b1 == ap_CS_fsm_state15) & ((icmp_ln20_1_reg_7490 == 1'd1) | (icmp_ln20_reg_7455 == 1'd1)))) begin
        reg_404 <= add_ln30_fu_474_p2;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln20_1_reg_7490 == 1'd0) & (icmp_ln20_reg_7455 == 1'd0))) begin
        reg_404 <= grp_fu_480_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_404 <= grp_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_6650_p2 == 1'd0))) begin
        reg_426 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        reg_426 <= out_w_reg_1252;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        reg_426 <= grp_fu_470_p2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        reg_426 <= grp_fu_484_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        reg_426 <= grp_fu_476_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_426 <= grp_fu_487_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_426 <= add_ln23_23_fu_496_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_426 <= grp_fu_478_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_426 <= grp_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        reg_437 <= add_ln20_reg_2890;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6686_p2 == 1'd0))) begin
        reg_437 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        reg_437 <= grp_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        reg_449 <= grp_fu_494_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6686_p2 == 1'd0))) begin
        reg_449 <= sext_ln19_reg_7425;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        reg_449 <= grp_fu_480_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_449 <= grp_fu_475_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_449 <= grp_fu_492_p2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        reg_449 <= grp_fu_483_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        reg_449 <= grp_fu_471_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        reg_449 <= grp_fu_479_p2;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_449 <= grp_fu_489_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_449 <= grp_fu_470_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_449 <= grp_fu_469_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        reg_449 <= grp_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln20_1_reg_7490 == 1'd1) & (icmp_ln20_reg_7455 == 1'd0))) begin
        reg_459 <= add_ln23_3_reg_1547;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_reg_7455 == 1'd1))) begin
        reg_459 <= reg_449;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6686_p2 == 1'd0))) begin
        reg_459 <= add_ln23_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_6527 <= input_r_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_6527 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_6573 <= input_r_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        reg_6573 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln16_reg_831 <= add_ln16_fu_500_p2;
        out_d_reg_836 <= out_d_fu_498_p2;
        zext_ln16_reg_7393[13 : 0] <= zext_ln16_fu_6627_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln20_reg_2890 <= grp_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln23_3_reg_1547 <= grp_fu_492_p2;
        icmp_ln20_1_reg_7490 <= icmp_ln20_1_fu_6747_p2;
        or_ln20_reg_7484[15 : 1] <= or_ln20_fu_6741_p2[15 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln20_reg_7455 <= icmp_ln20_fu_6701_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        mul_ln23_28_reg_7764 <= grp_fu_3460_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_h_reg_999 <= out_h_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_w_reg_1252 <= out_w_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_6520 <= grp_fu_3448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_6532 <= SeparableConv2D_0_w_s_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_6536 <= {{grp_fu_3439_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_6543 <= grp_fu_3466_p2;
        reg_6550 <= grp_fu_3464_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_6557 <= SeparableConv2D_0_w_s_q0;
        reg_6561 <= SeparableConv2D_0_w_s_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_6565 <= SeparableConv2D_0_w_s_q0;
        reg_6569 <= SeparableConv2D_0_w_s_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_6578 <= SeparableConv2D_0_w_s_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_6582 <= grp_fu_3442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_6588 <= grp_fu_3449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_6595 <= {{grp_fu_3458_p2[29:14]}};
        reg_6601 <= {{grp_fu_3435_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24))) begin
        reg_6607 <= {{grp_fu_3452_p2[29:14]}};
        reg_6614 <= {{grp_fu_3463_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_6621 <= {{grp_fu_3441_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        select_ln27_reg_7879 <= select_ln27_fu_7372_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sext_ln19_reg_7425 <= sext_ln19_fu_6646_p1;
        zext_ln30_1_reg_7406[4 : 0] <= zext_ln30_1_fu_6642_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6686_p2 == 1'd0))) begin
        sext_ln23_reg_7441 <= sext_ln23_fu_6697_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_6650_p2 == 1'd0))) begin
        sub_ln23_reg_7433[10 : 2] <= sub_ln23_fu_6680_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        trunc_ln23_1_reg_7629 <= {{grp_fu_3437_p2[29:14]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_0_b_s_ce0 = 1'b1;
    end else begin
        SeparableConv2D_0_b_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_48_fu_7234_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_44_fu_7154_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_40_fu_7074_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_36_fu_6984_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_32_fu_6914_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_24_fu_6854_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_16_fu_6803_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_12_fu_6766_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        SeparableConv2D_0_w_s_address0 = zext_ln23_8_fu_6726_p1;
    end else begin
        SeparableConv2D_0_w_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        SeparableConv2D_0_w_s_address1 = zext_ln23_50_fu_7239_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        SeparableConv2D_0_w_s_address1 = zext_ln23_46_fu_7159_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        SeparableConv2D_0_w_s_address1 = zext_ln23_42_fu_7079_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        SeparableConv2D_0_w_s_address1 = zext_ln23_38_fu_6989_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        SeparableConv2D_0_w_s_address1 = zext_ln23_34_fu_6919_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        SeparableConv2D_0_w_s_address1 = zext_ln23_28_fu_6859_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        SeparableConv2D_0_w_s_address1 = zext_ln23_20_fu_6808_p1;
    end else begin
        SeparableConv2D_0_w_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        SeparableConv2D_0_w_s_ce0 = 1'b1;
    end else begin
        SeparableConv2D_0_w_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        SeparableConv2D_0_w_s_ce1 = 1'b1;
    end else begin
        SeparableConv2D_0_w_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_6631_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_6631_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_3435_p0 = sext_ln23_17_fu_7126_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_3435_p0 = sext_ln23_11_fu_7046_p1;
    end else begin
        grp_fu_3435_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_3435_p1 = sext_ln23_18_fu_7131_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_3435_p1 = sext_ln23_12_fu_7051_p1;
    end else begin
        grp_fu_3435_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_3439_p0 = sext_ln23_44_fu_7340_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_3439_p0 = sext_ln23_38_fu_7320_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_3439_p0 = sext_ln23_2_fu_6731_p1;
    end else begin
        grp_fu_3439_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_3439_p1 = sext_ln23_45_fu_7345_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_3439_p1 = sext_ln23_39_fu_7325_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_3439_p1 = sext_ln23_3_fu_6736_p1;
    end else begin
        grp_fu_3439_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_3441_p0 = sext_ln23_47_fu_7350_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_3441_p0 = sext_ln23_41_fu_7330_p1;
    end else begin
        grp_fu_3441_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_3441_p1 = sext_ln23_48_fu_7355_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_3441_p1 = sext_ln23_42_fu_7335_p1;
    end else begin
        grp_fu_3441_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_3442_p0 = zext_ln23_64_fu_7111_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_3442_p0 = zext_ln23_58_fu_7005_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_3442_p0 = zext_ln23_54_fu_6935_p1;
    end else begin
        grp_fu_3442_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_3448_p0 = zext_ln23_56_fu_6951_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_3448_p0 = zext_ln23_10_fu_6757_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_3448_p0 = zext_ln23_6_fu_6707_p1;
    end else begin
        grp_fu_3448_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_3449_p0 = zext_ln23_68_fu_7191_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_3449_p0 = zext_ln23_62_fu_7095_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_3449_p0 = zext_ln23_60_fu_7021_p1;
    end else begin
        grp_fu_3449_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_3452_p0 = sext_ln23_32_fu_7282_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_3452_p0 = sext_ln23_26_fu_7244_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_3452_p0 = sext_ln23_20_fu_7196_p1;
    end else begin
        grp_fu_3452_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_3452_p1 = sext_ln23_33_fu_7287_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_3452_p1 = sext_ln23_27_fu_7249_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_3452_p1 = sext_ln23_21_fu_7201_p1;
    end else begin
        grp_fu_3452_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_3458_p0 = sext_ln23_14_fu_7116_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_3458_p0 = sext_ln23_8_fu_7036_p1;
    end else begin
        grp_fu_3458_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_3458_p1 = sext_ln23_15_fu_7121_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_3458_p1 = sext_ln23_9_fu_7041_p1;
    end else begin
        grp_fu_3458_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_3463_p0 = sext_ln23_35_fu_7292_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_3463_p0 = sext_ln23_29_fu_7254_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_3463_p0 = sext_ln23_23_fu_7206_p1;
    end else begin
        grp_fu_3463_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_3463_p1 = sext_ln23_36_fu_7297_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_3463_p1 = sext_ln23_30_fu_7259_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_3463_p1 = sext_ln23_24_fu_7211_p1;
    end else begin
        grp_fu_3463_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_3464_p0 = zext_ln23_52_fu_6891_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_3464_p0 = zext_ln23_26_fu_6840_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_3464_p0 = zext_ln23_18_fu_6798_p1;
    end else begin
        grp_fu_3464_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_3466_p0 = zext_ln23_30_fu_6875_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_3466_p0 = zext_ln23_22_fu_6824_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_3466_p0 = zext_ln23_14_fu_6782_p1;
    end else begin
        grp_fu_3466_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_469_p0 = reg_437;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_469_p0 = reg_6550;
    end else begin
        grp_fu_469_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_469_p1 = 16'd16;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_469_p1 = sext_ln23_reg_7441;
    end else begin
        grp_fu_469_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_470_p0 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_470_p0 = reg_6543;
    end else begin
        grp_fu_470_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_470_p1 = reg_426;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_470_p1 = sext_ln23_reg_7441;
    end else begin
        grp_fu_470_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_471_p0 = reg_6582;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_471_p0 = reg_6520;
    end else begin
        grp_fu_471_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_472_p0 = reg_6595;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_472_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_472_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_472_p1 = reg_6601;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_472_p1 = zext_ln23_65_fu_7170_p1;
    end else begin
        grp_fu_472_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_473_p0 = reg_6588;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_473_p0 = reg_6520;
    end else begin
        grp_fu_473_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_475_p0 = reg_6607;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_475_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_475_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_475_p1 = reg_6614;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_475_p1 = zext_ln23_5_fu_6712_p1;
    end else begin
        grp_fu_475_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_476_p1 = zext_ln23_67_fu_7186_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_476_p1 = zext_ln23_17_fu_6793_p1;
    end else begin
        grp_fu_476_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_477_p0 = add_ln23_3_reg_1547;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_477_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_477_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_477_p1 = trunc_ln23_1_reg_7629;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_477_p1 = zext_ln23_25_fu_6835_p1;
    end else begin
        grp_fu_477_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_478_p0 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_478_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_478_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_478_p1 = reg_404;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_478_p1 = zext_ln23_53_fu_6930_p1;
    end else begin
        grp_fu_478_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_480_p0 = reg_6536;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_480_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_480_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_480_p1 = reg_6621;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_480_p1 = zext_ln23_9_fu_6753_p1;
    end else begin
        grp_fu_480_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_481_p0 = reg_449;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_481_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_481_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_481_p1 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_481_p1 = zext_ln23_13_fu_6777_p1;
    end else begin
        grp_fu_481_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_483_p0 = mul_ln23_28_reg_7764;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_483_p0 = reg_6543;
    end else begin
        grp_fu_483_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_484_p0 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_484_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_484_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_484_p1 = reg_437;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_484_p1 = zext_ln23_21_fu_6819_p1;
    end else begin
        grp_fu_484_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_485_p0 = reg_6588;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_485_p0 = reg_6550;
    end else begin
        grp_fu_485_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_487_p0 = reg_449;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_487_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_487_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_487_p1 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_487_p1 = zext_ln23_61_fu_7090_p1;
    end else begin
        grp_fu_487_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_488_p0 = reg_6536;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_488_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_488_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_488_p1 = reg_6621;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_488_p1 = zext_ln23_63_fu_7106_p1;
    end else begin
        grp_fu_488_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_489_p0 = reg_6588;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_489_p0 = reg_6543;
    end else begin
        grp_fu_489_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_490_p0 = reg_404;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_490_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_490_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_490_p1 = reg_449;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_490_p1 = zext_ln23_29_fu_6870_p1;
    end else begin
        grp_fu_490_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_492_p0 = reg_6607;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_492_p0 = reg_449;
    end else begin
        grp_fu_492_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_492_p1 = reg_6614;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_492_p1 = reg_6536;
    end else begin
        grp_fu_492_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_493_p0 = reg_6607;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_493_p0 = reg_6550;
    end else begin
        grp_fu_493_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_493_p1 = reg_6614;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_493_p1 = sext_ln23_reg_7441;
    end else begin
        grp_fu_493_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_494_p0 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_494_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_494_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_494_p1 = reg_426;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_494_p1 = zext_ln23_59_fu_7016_p1;
    end else begin
        grp_fu_494_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_495_p0 = reg_6595;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_495_p0 = zext_ln30_1_reg_7406;
    end else begin
        grp_fu_495_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_495_p1 = reg_6601;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_495_p1 = zext_ln23_51_fu_6886_p1;
    end else begin
        grp_fu_495_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_r_address0 = zext_ln23_49_fu_7315_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        input_r_address0 = zext_ln23_45_fu_7277_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        input_r_address0 = zext_ln23_41_fu_7229_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        input_r_address0 = zext_ln23_37_fu_7149_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        input_r_address0 = zext_ln23_33_fu_7069_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        input_r_address0 = zext_ln23_27_fu_6979_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_address0 = zext_ln23_15_fu_6900_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        input_r_address0 = zext_ln23_11_fu_6849_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = zext_ln23_7_fu_6721_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        input_r_address1 = zext_ln23_47_fu_7306_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        input_r_address1 = zext_ln23_43_fu_7268_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        input_r_address1 = zext_ln23_39_fu_7220_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        input_r_address1 = zext_ln23_35_fu_7140_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        input_r_address1 = zext_ln23_31_fu_7060_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        input_r_address1 = zext_ln23_23_fu_6970_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        input_r_address1 = zext_ln23_19_fu_6909_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_6631_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_6650_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6686_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_reg_7455 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((icmp_ln20_1_reg_7490 == 1'd1) | (icmp_ln20_reg_7455 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SeparableConv2D_0_b_s_address0 = zext_ln19_fu_6637_p1;

assign add_ln16_fu_500_p0 = reg_404;

assign add_ln16_fu_500_p2 = (add_ln16_fu_500_p0 + 14'd784);

assign add_ln23_20_fu_499_p2 = ($signed(reg_6520) + $signed(sext_ln23_reg_7441));

assign add_ln23_21_fu_491_p2 = (zext_ln30_1_reg_7406 + zext_ln23_55_fu_6946_p1);

assign add_ln23_23_fu_496_p2 = (zext_ln30_1_reg_7406 + zext_ln23_57_fu_7000_p1);

assign add_ln23_fu_497_p2 = (sub_ln23_reg_7433 + zext_ln23_4_fu_6692_p1);

assign add_ln30_fu_474_p2 = ($signed(sext_ln30_fu_6761_p1) + $signed(zext_ln16_reg_7393));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_3442_p1 = 27'd784;

assign grp_fu_3448_p1 = 27'd784;

assign grp_fu_3449_p1 = 27'd784;

assign grp_fu_3460_p0 = grp_fu_3460_p00;

assign grp_fu_3460_p00 = or_ln20_13_fu_7164_p2;

assign grp_fu_3460_p1 = 27'd784;

assign grp_fu_3464_p1 = 27'd784;

assign grp_fu_3466_p1 = 27'd784;

assign grp_fu_469_p2 = ($signed(grp_fu_469_p0) + $signed(grp_fu_469_p1));

assign grp_fu_470_p2 = ($signed(grp_fu_470_p0) + $signed(grp_fu_470_p1));

assign grp_fu_471_p2 = ($signed(grp_fu_471_p0) + $signed(sext_ln23_reg_7441));

assign grp_fu_472_p2 = (grp_fu_472_p0 + grp_fu_472_p1);

assign grp_fu_473_p2 = ($signed(grp_fu_473_p0) + $signed(sext_ln23_reg_7441));

assign grp_fu_475_p2 = (grp_fu_475_p0 + grp_fu_475_p1);

assign grp_fu_476_p2 = (zext_ln30_1_reg_7406 + grp_fu_476_p1);

assign grp_fu_477_p2 = (grp_fu_477_p0 + grp_fu_477_p1);

assign grp_fu_478_p2 = (grp_fu_478_p0 + grp_fu_478_p1);

assign grp_fu_479_p2 = ($signed(reg_6582) + $signed(sext_ln23_reg_7441));

assign grp_fu_480_p2 = (grp_fu_480_p0 + grp_fu_480_p1);

assign grp_fu_481_p2 = (grp_fu_481_p0 + grp_fu_481_p1);

assign grp_fu_483_p2 = ($signed(grp_fu_483_p0) + $signed(sext_ln23_reg_7441));

assign grp_fu_484_p2 = (grp_fu_484_p0 + grp_fu_484_p1);

assign grp_fu_485_p2 = ($signed(grp_fu_485_p0) + $signed(sext_ln23_reg_7441));

assign grp_fu_487_p2 = (grp_fu_487_p0 + grp_fu_487_p1);

assign grp_fu_488_p2 = (grp_fu_488_p0 + grp_fu_488_p1);

assign grp_fu_489_p2 = ($signed(grp_fu_489_p0) + $signed(sext_ln23_reg_7441));

assign grp_fu_490_p2 = (grp_fu_490_p0 + grp_fu_490_p1);

assign grp_fu_492_p2 = (grp_fu_492_p0 + grp_fu_492_p1);

assign grp_fu_493_p2 = ($signed(grp_fu_493_p0) + $signed(grp_fu_493_p1));

assign grp_fu_494_p2 = (grp_fu_494_p0 + grp_fu_494_p1);

assign grp_fu_495_p2 = (grp_fu_495_p0 + grp_fu_495_p1);

assign icmp_ln16_fu_6631_p0 = reg_392;

assign icmp_ln16_fu_6631_p2 = ((icmp_ln16_fu_6631_p0 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_6650_p2 = ((out_h_0_reg_415 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_6686_p0 = reg_426;

assign icmp_ln18_fu_6686_p2 = ((icmp_ln18_fu_6686_p0 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_6747_p2 = ((or_ln20_fu_6741_p2 == 16'd1) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_6701_p2 = ((reg_437 == 16'd1) ? 1'b1 : 1'b0);

assign or_ln20_10_fu_7010_p2 = (reg_437 | 16'd11);

assign or_ln20_11_fu_7084_p2 = (reg_437 | 16'd12);

assign or_ln20_12_fu_7100_p2 = (reg_437 | 16'd13);

assign or_ln20_13_fu_7164_p2 = (reg_437 | 16'd14);

assign or_ln20_14_fu_7180_p2 = (reg_437 | 16'd15);

assign or_ln20_1_fu_6771_p2 = (reg_437 | 16'd2);

assign or_ln20_2_fu_6787_p2 = (reg_437 | 16'd3);

assign or_ln20_3_fu_6813_p2 = (reg_437 | 16'd4);

assign or_ln20_4_fu_6829_p2 = (reg_437 | 16'd5);

assign or_ln20_5_fu_6864_p2 = (reg_437 | 16'd6);

assign or_ln20_6_fu_6880_p2 = (reg_437 | 16'd7);

assign or_ln20_7_fu_6924_p2 = (reg_437 | 16'd8);

assign or_ln20_8_fu_6940_p2 = (reg_437 | 16'd9);

assign or_ln20_9_fu_6994_p2 = (reg_437 | 16'd10);

assign or_ln20_fu_6741_p2 = (reg_437 | 16'd1);

assign out_d_fu_498_p0 = reg_392;

assign out_d_fu_498_p2 = (out_d_fu_498_p0 + 5'd1);

assign out_h_fu_482_p2 = (out_h_0_reg_415 + 5'd1);

assign out_w_fu_486_p0 = reg_426;

assign out_w_fu_486_p2 = (out_w_fu_486_p0 + 5'd1);

assign output_r_address0 = zext_ln30_fu_7388_p1;

assign output_r_d0 = select_ln27_reg_7879;

assign select_ln27_fu_7372_p3 = ((tmp_fu_7364_p3[0:0] === 1'b1) ? 15'd0 : trunc_ln27_fu_7360_p1);

assign sext_ln19_fu_6646_p1 = $signed(SeparableConv2D_0_b_s_q0);

assign sext_ln23_10_fu_6905_p1 = $signed(reg_449);

assign sext_ln23_11_fu_7046_p1 = $signed(reg_6573);

assign sext_ln23_12_fu_7051_p1 = $signed(reg_6561);

assign sext_ln23_13_fu_6966_p1 = $signed(reg_449);

assign sext_ln23_14_fu_7116_p1 = reg_6527;

assign sext_ln23_15_fu_7121_p1 = $signed(reg_6565);

assign sext_ln23_16_fu_6975_p1 = $signed(reg_404);

assign sext_ln23_17_fu_7126_p1 = $signed(reg_6573);

assign sext_ln23_18_fu_7131_p1 = $signed(reg_6569);

assign sext_ln23_19_fu_7056_p1 = $signed(reg_449);

assign sext_ln23_1_fu_6717_p1 = $signed(reg_404);

assign sext_ln23_20_fu_7196_p1 = reg_6527;

assign sext_ln23_21_fu_7201_p1 = reg_6532;

assign sext_ln23_22_fu_7065_p1 = $signed(reg_404);

assign sext_ln23_23_fu_7206_p1 = $signed(reg_6573);

assign sext_ln23_24_fu_7211_p1 = $signed(reg_6578);

assign sext_ln23_25_fu_7136_p1 = $signed(reg_449);

assign sext_ln23_26_fu_7244_p1 = reg_6527;

assign sext_ln23_27_fu_7249_p1 = $signed(reg_6557);

assign sext_ln23_28_fu_7145_p1 = $signed(reg_404);

assign sext_ln23_29_fu_7254_p1 = $signed(reg_6573);

assign sext_ln23_2_fu_6731_p1 = reg_6527;

assign sext_ln23_30_fu_7259_p1 = $signed(reg_6561);

assign sext_ln23_31_fu_7216_p1 = $signed(reg_404);

assign sext_ln23_32_fu_7282_p1 = reg_6527;

assign sext_ln23_33_fu_7287_p1 = $signed(reg_6565);

assign sext_ln23_34_fu_7225_p1 = $signed(reg_449);

assign sext_ln23_35_fu_7292_p1 = $signed(reg_6573);

assign sext_ln23_36_fu_7297_p1 = $signed(reg_6569);

assign sext_ln23_37_fu_7264_p1 = $signed(reg_404);

assign sext_ln23_38_fu_7320_p1 = reg_6527;

assign sext_ln23_39_fu_7325_p1 = reg_6532;

assign sext_ln23_3_fu_6736_p1 = reg_6532;

assign sext_ln23_40_fu_7273_p1 = $signed(reg_449);

assign sext_ln23_41_fu_7330_p1 = $signed(reg_6573);

assign sext_ln23_42_fu_7335_p1 = $signed(reg_6578);

assign sext_ln23_43_fu_7302_p1 = $signed(reg_449);

assign sext_ln23_44_fu_7340_p1 = reg_6527;

assign sext_ln23_45_fu_7345_p1 = $signed(reg_6557);

assign sext_ln23_46_fu_7311_p1 = $signed(reg_404);

assign sext_ln23_47_fu_7350_p1 = $signed(reg_6573);

assign sext_ln23_48_fu_7355_p1 = $signed(reg_6561);

assign sext_ln23_4_fu_6845_p1 = $signed(reg_404);

assign sext_ln23_7_fu_6896_p1 = $signed(reg_404);

assign sext_ln23_8_fu_7036_p1 = reg_6527;

assign sext_ln23_9_fu_7041_p1 = $signed(reg_6557);

assign sext_ln23_fu_6697_p1 = add_ln23_fu_497_p2;

assign sext_ln30_1_fu_7384_p0 = reg_404;

assign sext_ln30_1_fu_7384_p1 = $signed(sext_ln30_1_fu_7384_p0);

assign sext_ln30_fu_6761_p0 = reg_459;

assign sext_ln30_fu_6761_p1 = sext_ln30_fu_6761_p0;

assign shl_ln23_1_fu_6668_p3 = {{out_h_0_reg_415}, {2'd0}};

assign shl_ln_fu_6656_p3 = {{out_h_0_reg_415}, {5'd0}};

assign sub_ln23_fu_6680_p2 = (zext_ln23_2_fu_6664_p1 - zext_ln23_3_fu_6676_p1);

assign tmp_fu_7364_p3 = reg_459[32'd15];

assign trunc_ln27_fu_7360_p1 = reg_459[14:0];

assign zext_ln16_fu_6627_p0 = reg_404;

assign zext_ln16_fu_6627_p1 = zext_ln16_fu_6627_p0;

assign zext_ln19_fu_6637_p0 = reg_392;

assign zext_ln19_fu_6637_p1 = zext_ln19_fu_6637_p0;

assign zext_ln23_10_fu_6757_p1 = or_ln20_reg_7484;

assign zext_ln23_11_fu_6849_p1 = $unsigned(sext_ln23_4_fu_6845_p1);

assign zext_ln23_12_fu_6766_p0 = reg_404;

assign zext_ln23_12_fu_6766_p1 = zext_ln23_12_fu_6766_p0;

assign zext_ln23_13_fu_6777_p1 = or_ln20_1_fu_6771_p2;

assign zext_ln23_14_fu_6782_p1 = or_ln20_1_fu_6771_p2;

assign zext_ln23_15_fu_6900_p1 = $unsigned(sext_ln23_7_fu_6896_p1);

assign zext_ln23_16_fu_6803_p1 = reg_392;

assign zext_ln23_17_fu_6793_p1 = or_ln20_2_fu_6787_p2;

assign zext_ln23_18_fu_6798_p1 = or_ln20_2_fu_6787_p2;

assign zext_ln23_19_fu_6909_p1 = $unsigned(sext_ln23_10_fu_6905_p1);

assign zext_ln23_20_fu_6808_p0 = reg_404;

assign zext_ln23_20_fu_6808_p1 = zext_ln23_20_fu_6808_p0;

assign zext_ln23_21_fu_6819_p1 = or_ln20_3_fu_6813_p2;

assign zext_ln23_22_fu_6824_p1 = or_ln20_3_fu_6813_p2;

assign zext_ln23_23_fu_6970_p1 = $unsigned(sext_ln23_13_fu_6966_p1);

assign zext_ln23_24_fu_6854_p1 = reg_392;

assign zext_ln23_25_fu_6835_p1 = or_ln20_4_fu_6829_p2;

assign zext_ln23_26_fu_6840_p1 = or_ln20_4_fu_6829_p2;

assign zext_ln23_27_fu_6979_p1 = $unsigned(sext_ln23_16_fu_6975_p1);

assign zext_ln23_28_fu_6859_p0 = reg_449;

assign zext_ln23_28_fu_6859_p1 = zext_ln23_28_fu_6859_p0;

assign zext_ln23_29_fu_6870_p1 = or_ln20_5_fu_6864_p2;

assign zext_ln23_2_fu_6664_p1 = shl_ln_fu_6656_p3;

assign zext_ln23_30_fu_6875_p1 = or_ln20_5_fu_6864_p2;

assign zext_ln23_31_fu_7060_p1 = $unsigned(sext_ln23_19_fu_7056_p1);

assign zext_ln23_32_fu_6914_p1 = reg_426;

assign zext_ln23_33_fu_7069_p1 = $unsigned(sext_ln23_22_fu_7065_p1);

assign zext_ln23_34_fu_6919_p1 = reg_392;

assign zext_ln23_35_fu_7140_p1 = $unsigned(sext_ln23_25_fu_7136_p1);

assign zext_ln23_36_fu_6984_p1 = reg_426;

assign zext_ln23_37_fu_7149_p1 = $unsigned(sext_ln23_28_fu_7145_p1);

assign zext_ln23_38_fu_6989_p1 = reg_392;

assign zext_ln23_39_fu_7220_p1 = $unsigned(sext_ln23_31_fu_7216_p1);

assign zext_ln23_3_fu_6676_p1 = shl_ln23_1_fu_6668_p3;

assign zext_ln23_40_fu_7074_p1 = reg_426;

assign zext_ln23_41_fu_7229_p1 = $unsigned(sext_ln23_34_fu_7225_p1);

assign zext_ln23_42_fu_7079_p1 = reg_392;

assign zext_ln23_43_fu_7268_p1 = $unsigned(sext_ln23_37_fu_7264_p1);

assign zext_ln23_44_fu_7154_p1 = reg_426;

assign zext_ln23_45_fu_7277_p1 = $unsigned(sext_ln23_40_fu_7273_p1);

assign zext_ln23_46_fu_7159_p1 = reg_392;

assign zext_ln23_47_fu_7306_p1 = $unsigned(sext_ln23_43_fu_7302_p1);

assign zext_ln23_48_fu_7234_p1 = reg_392;

assign zext_ln23_49_fu_7315_p1 = $unsigned(sext_ln23_46_fu_7311_p1);

assign zext_ln23_4_fu_6692_p0 = reg_426;

assign zext_ln23_4_fu_6692_p1 = zext_ln23_4_fu_6692_p0;

assign zext_ln23_50_fu_7239_p1 = reg_426;

assign zext_ln23_51_fu_6886_p1 = or_ln20_6_fu_6880_p2;

assign zext_ln23_52_fu_6891_p1 = or_ln20_6_fu_6880_p2;

assign zext_ln23_53_fu_6930_p1 = or_ln20_7_fu_6924_p2;

assign zext_ln23_54_fu_6935_p1 = or_ln20_7_fu_6924_p2;

assign zext_ln23_55_fu_6946_p1 = or_ln20_8_fu_6940_p2;

assign zext_ln23_56_fu_6951_p1 = or_ln20_8_fu_6940_p2;

assign zext_ln23_57_fu_7000_p1 = or_ln20_9_fu_6994_p2;

assign zext_ln23_58_fu_7005_p1 = or_ln20_9_fu_6994_p2;

assign zext_ln23_59_fu_7016_p1 = or_ln20_10_fu_7010_p2;

assign zext_ln23_5_fu_6712_p1 = reg_437;

assign zext_ln23_60_fu_7021_p1 = or_ln20_10_fu_7010_p2;

assign zext_ln23_61_fu_7090_p1 = or_ln20_11_fu_7084_p2;

assign zext_ln23_62_fu_7095_p1 = or_ln20_11_fu_7084_p2;

assign zext_ln23_63_fu_7106_p1 = or_ln20_12_fu_7100_p2;

assign zext_ln23_64_fu_7111_p1 = or_ln20_12_fu_7100_p2;

assign zext_ln23_65_fu_7170_p1 = or_ln20_13_fu_7164_p2;

assign zext_ln23_67_fu_7186_p1 = or_ln20_14_fu_7180_p2;

assign zext_ln23_68_fu_7191_p1 = or_ln20_14_fu_7180_p2;

assign zext_ln23_6_fu_6707_p1 = reg_437;

assign zext_ln23_7_fu_6721_p1 = $unsigned(sext_ln23_1_fu_6717_p1);

assign zext_ln23_8_fu_6726_p1 = reg_392;

assign zext_ln23_9_fu_6753_p1 = or_ln20_reg_7484;

assign zext_ln30_1_fu_6642_p0 = reg_392;

assign zext_ln30_1_fu_6642_p1 = zext_ln30_1_fu_6642_p0;

assign zext_ln30_fu_7388_p1 = $unsigned(sext_ln30_1_fu_7384_p1);

always @ (posedge ap_clk) begin
    zext_ln16_reg_7393[14] <= 1'b0;
    zext_ln30_1_reg_7406[16:5] <= 12'b000000000000;
    sub_ln23_reg_7433[1:0] <= 2'b00;
    or_ln20_reg_7484[0] <= 1'b1;
end

endmodule //pointwise_conv2d_fix
