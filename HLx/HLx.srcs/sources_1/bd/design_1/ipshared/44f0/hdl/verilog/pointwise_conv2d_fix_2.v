// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pointwise_conv2d_fix_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 36'd1;
parameter    ap_ST_fsm_state2 = 36'd2;
parameter    ap_ST_fsm_state3 = 36'd4;
parameter    ap_ST_fsm_state4 = 36'd8;
parameter    ap_ST_fsm_state5 = 36'd16;
parameter    ap_ST_fsm_state6 = 36'd32;
parameter    ap_ST_fsm_state7 = 36'd64;
parameter    ap_ST_fsm_state8 = 36'd128;
parameter    ap_ST_fsm_state9 = 36'd256;
parameter    ap_ST_fsm_state10 = 36'd512;
parameter    ap_ST_fsm_state11 = 36'd1024;
parameter    ap_ST_fsm_state12 = 36'd2048;
parameter    ap_ST_fsm_state13 = 36'd4096;
parameter    ap_ST_fsm_state14 = 36'd8192;
parameter    ap_ST_fsm_state15 = 36'd16384;
parameter    ap_ST_fsm_state16 = 36'd32768;
parameter    ap_ST_fsm_state17 = 36'd65536;
parameter    ap_ST_fsm_state18 = 36'd131072;
parameter    ap_ST_fsm_state19 = 36'd262144;
parameter    ap_ST_fsm_state20 = 36'd524288;
parameter    ap_ST_fsm_state21 = 36'd1048576;
parameter    ap_ST_fsm_state22 = 36'd2097152;
parameter    ap_ST_fsm_state23 = 36'd4194304;
parameter    ap_ST_fsm_state24 = 36'd8388608;
parameter    ap_ST_fsm_state25 = 36'd16777216;
parameter    ap_ST_fsm_state26 = 36'd33554432;
parameter    ap_ST_fsm_state27 = 36'd67108864;
parameter    ap_ST_fsm_state28 = 36'd134217728;
parameter    ap_ST_fsm_state29 = 36'd268435456;
parameter    ap_ST_fsm_state30 = 36'd536870912;
parameter    ap_ST_fsm_state31 = 36'd1073741824;
parameter    ap_ST_fsm_state32 = 36'd2147483648;
parameter    ap_ST_fsm_state33 = 36'd4294967296;
parameter    ap_ST_fsm_state34 = 36'd8589934592;
parameter    ap_ST_fsm_state35 = 36'd17179869184;
parameter    ap_ST_fsm_state36 = 36'd34359738368;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [13:0] input_r_address1;
output   input_r_ce1;
input  [15:0] input_r_q1;
output  [13:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] input_r_address0;
reg input_r_ce0;
reg[13:0] input_r_address1;
reg input_r_ce1;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] SeparableConv2D_2_b_s_address0;
reg    SeparableConv2D_2_b_s_ce0;
wire   [12:0] SeparableConv2D_2_b_s_q0;
reg   [5:0] SeparableConv2D_2_w_s_address0;
reg    SeparableConv2D_2_w_s_ce0;
wire   [14:0] SeparableConv2D_2_w_s_q0;
reg   [5:0] SeparableConv2D_2_w_s_address1;
reg    SeparableConv2D_2_w_s_ce1;
wire   [14:0] SeparableConv2D_2_w_s_q1;
wire   [22:0] grp_fu_470_p2;
reg   [22:0] reg_392;
wire    ap_CS_fsm_state9;
wire   [22:0] grp_fu_482_p2;
wire    ap_CS_fsm_state10;
wire   [22:0] grp_fu_479_p2;
wire    ap_CS_fsm_state11;
wire   [22:0] grp_fu_480_p2;
wire    ap_CS_fsm_state12;
wire   [16:0] grp_fu_469_p2;
wire    ap_CS_fsm_state13;
wire   [15:0] grp_fu_487_p2;
wire    ap_CS_fsm_state17;
wire   [22:0] grp_fu_488_p2;
wire    ap_CS_fsm_state19;
wire   [16:0] grp_fu_486_p2;
wire    ap_CS_fsm_state21;
reg   [0:0] icmp_ln20_reg_7391;
reg   [0:0] icmp_ln20_2_reg_7616;
wire    ap_CS_fsm_state23;
wire   [22:0] grp_fu_477_p2;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state30;
wire   [16:0] grp_fu_472_p2;
reg   [16:0] reg_403;
wire    ap_CS_fsm_state7;
wire   [16:0] grp_fu_491_p2;
wire    ap_CS_fsm_state8;
wire   [22:0] grp_fu_476_p2;
wire   [16:0] grp_fu_489_p2;
wire   [15:0] add_ln23_100_fu_484_p2;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state22;
wire   [16:0] grp_fu_483_p2;
wire    ap_CS_fsm_state28;
reg   [16:0] reg_414;
wire   [16:0] grp_fu_494_p2;
wire   [16:0] grp_fu_471_p2;
wire   [15:0] add_ln23_102_fu_478_p2;
wire   [22:0] grp_fu_468_p2;
reg   [22:0] reg_425;
wire   [22:0] grp_fu_474_p2;
wire   [22:0] grp_fu_475_p2;
wire   [15:0] grp_fu_492_p2;
wire   [15:0] grp_fu_493_p2;
wire   [15:0] add_ln23_103_fu_495_p2;
wire   [16:0] grp_fu_490_p2;
wire   [9:0] add_ln30_fu_498_p2;
wire   [15:0] grp_fu_473_p2;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire  signed [6:0] add_ln23_fu_496_p2;
reg   [15:0] reg_458;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln18_fu_6621_p2;
wire   [8:0] add_ln16_fu_499_p2;
reg   [8:0] add_ln16_reg_830;
wire    ap_CS_fsm_state2;
wire   [3:0] out_d_fu_497_p2;
reg   [3:0] out_d_reg_835;
wire   [2:0] out_h_fu_481_p2;
reg   [2:0] out_h_reg_999;
wire    ap_CS_fsm_state4;
wire   [2:0] out_w_fu_485_p2;
reg   [2:0] out_w_reg_1253;
reg   [15:0] add_ln23_104_reg_2879;
wire    ap_CS_fsm_state20;
reg   [15:0] add_ln20_reg_3046;
wire    ap_CS_fsm_state34;
wire   [22:0] grp_fu_3372_p2;
reg   [22:0] reg_6466;
wire   [22:0] grp_fu_3390_p2;
reg   [22:0] reg_6474;
reg  signed [14:0] reg_6480;
wire    ap_CS_fsm_state15;
wire   [22:0] grp_fu_3388_p2;
reg   [22:0] reg_6484;
reg   [14:0] reg_6491;
reg  signed [15:0] reg_6496;
wire    ap_CS_fsm_state27;
reg   [14:0] reg_6500;
wire   [22:0] grp_fu_3366_p2;
reg   [22:0] reg_6504;
reg   [14:0] reg_6511;
reg   [15:0] reg_6515;
wire    ap_CS_fsm_state14;
reg   [14:0] reg_6519;
reg   [15:0] reg_6524;
reg   [15:0] reg_6530;
reg   [15:0] reg_6534;
reg   [15:0] reg_6541;
reg   [15:0] reg_6547;
wire    ap_CS_fsm_state16;
reg   [15:0] reg_6553;
wire   [9:0] zext_ln16_fu_6559_p1;
reg   [9:0] zext_ln16_reg_7327;
wire   [0:0] icmp_ln16_fu_6563_p2;
wire   [2:0] trunc_ln23_fu_6574_p1;
reg   [2:0] trunc_ln23_reg_7340;
wire   [16:0] zext_ln23_fu_6585_p1;
reg   [16:0] zext_ln23_reg_7345;
wire    ap_CS_fsm_state3;
wire  signed [15:0] sext_ln19_fu_6589_p1;
reg  signed [15:0] sext_ln19_reg_7361;
wire   [6:0] sub_ln23_fu_6615_p2;
reg   [6:0] sub_ln23_reg_7369;
wire   [0:0] icmp_ln17_fu_6593_p2;
wire  signed [22:0] sext_ln23_fu_6632_p1;
reg  signed [22:0] sext_ln23_reg_7377;
wire   [0:0] icmp_ln20_fu_6636_p2;
wire    ap_CS_fsm_state6;
wire   [22:0] zext_ln23_121_fu_6653_p1;
wire   [22:0] zext_ln23_119_fu_6658_p1;
wire   [22:0] zext_ln23_125_fu_6679_p1;
wire   [22:0] zext_ln23_123_fu_6695_p1;
wire   [22:0] zext_ln23_129_fu_6716_p1;
wire   [22:0] zext_ln23_127_fu_6746_p1;
wire   [22:0] zext_ln23_133_fu_6767_p1;
wire   [22:0] zext_ln23_131_fu_6806_p1;
wire  signed [29:0] sext_ln23_72_fu_6816_p1;
wire  signed [29:0] sext_ln23_73_fu_6821_p1;
wire  signed [29:0] sext_ln23_78_fu_6854_p1;
wire  signed [29:0] sext_ln23_79_fu_6859_p1;
wire  signed [29:0] sext_ln23_75_fu_6887_p1;
wire  signed [29:0] sext_ln23_76_fu_6892_p1;
reg   [15:0] trunc_ln23_3_reg_7540;
wire  signed [29:0] sext_ln23_84_fu_6897_p1;
wire  signed [29:0] sext_ln23_85_fu_6902_p1;
wire  signed [29:0] sext_ln23_81_fu_6916_p1;
wire  signed [29:0] sext_ln23_82_fu_6921_p1;
wire  signed [29:0] sext_ln23_90_fu_6926_p1;
wire  signed [29:0] sext_ln23_91_fu_6931_p1;
reg   [15:0] trunc_ln23_4_reg_7590;
wire  signed [29:0] sext_ln23_87_fu_6946_p1;
wire  signed [29:0] sext_ln23_88_fu_6951_p1;
reg   [15:0] trunc_ln_reg_7605;
wire   [15:0] or_ln20_21_fu_6966_p2;
reg   [15:0] or_ln20_21_reg_7610;
wire   [0:0] icmp_ln20_2_fu_6972_p2;
wire   [22:0] zext_ln23_135_fu_6982_p1;
wire   [22:0] zext_ln23_137_fu_6997_p1;
wire   [22:0] zext_ln23_139_fu_7028_p1;
wire   [22:0] zext_ln23_141_fu_7044_p1;
wire   [22:0] zext_ln23_143_fu_7070_p1;
wire   [22:0] zext_ln23_145_fu_7086_p1;
wire   [22:0] zext_ln23_147_fu_7130_p1;
wire   [22:0] zext_ln23_149_fu_7146_p1;
reg   [14:0] SeparableConv2D_2_w_29_reg_7710;
wire  signed [29:0] sext_ln23_93_fu_7179_p1;
wire  signed [29:0] sext_ln23_94_fu_7184_p1;
wire  signed [29:0] sext_ln23_96_fu_7189_p1;
wire  signed [29:0] sext_ln23_97_fu_7194_p1;
wire  signed [29:0] sext_ln23_99_fu_7217_p1;
wire  signed [29:0] sext_ln23_100_fu_7222_p1;
wire  signed [29:0] sext_ln23_102_fu_7227_p1;
wire  signed [29:0] sext_ln23_103_fu_7232_p1;
wire  signed [29:0] sext_ln23_105_fu_7255_p1;
wire  signed [29:0] sext_ln23_106_fu_7260_p1;
wire  signed [29:0] sext_ln23_108_fu_7265_p1;
wire  signed [29:0] sext_ln23_109_fu_7270_p1;
wire  signed [29:0] sext_ln23_111_fu_7274_p1;
wire  signed [29:0] sext_ln23_112_fu_7279_p1;
wire  signed [29:0] sext_ln23_114_fu_7284_p1;
wire  signed [29:0] sext_ln23_115_fu_7289_p1;
reg   [15:0] trunc_ln23_s_reg_7825;
wire   [14:0] select_ln27_fu_7306_p3;
reg   [14:0] select_ln27_reg_7830;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
reg   [15:0] in_d_0_0_reg_436;
reg   [15:0] buffer_0_0_reg_448;
wire   [63:0] zext_ln19_fu_6569_p1;
wire   [63:0] zext_ln23_86_fu_6663_p1;
wire   [63:0] zext_ln23_90_fu_6700_p1;
wire   [63:0] zext_ln23_85_fu_6725_p1;
wire   [63:0] zext_ln23_88_fu_6730_p1;
wire   [63:0] zext_ln23_94_fu_6751_p1;
wire   [63:0] zext_ln23_83_fu_6776_p1;
wire   [63:0] zext_ln23_89_fu_6785_p1;
wire   [63:0] zext_ln23_92_fu_6790_p1;
wire   [63:0] zext_ln23_98_fu_6811_p1;
wire   [63:0] zext_ln23_87_fu_6830_p1;
wire   [63:0] zext_ln23_93_fu_6839_p1;
wire   [63:0] zext_ln23_96_fu_6844_p1;
wire   [63:0] zext_ln23_91_fu_6868_p1;
wire   [63:0] zext_ln23_97_fu_6877_p1;
wire   [63:0] zext_ln23_84_fu_6882_p1;
wire   [63:0] zext_ln23_95_fu_6911_p1;
wire   [63:0] zext_ln23_100_fu_7007_p1;
wire   [63:0] zext_ln23_102_fu_7012_p1;
wire   [63:0] zext_ln23_104_fu_7049_p1;
wire   [63:0] zext_ln23_106_fu_7054_p1;
wire   [63:0] zext_ln23_99_fu_7095_p1;
wire   [63:0] zext_ln23_101_fu_7104_p1;
wire   [63:0] zext_ln23_108_fu_7109_p1;
wire   [63:0] zext_ln23_110_fu_7114_p1;
wire   [63:0] zext_ln23_103_fu_7155_p1;
wire   [63:0] zext_ln23_105_fu_7164_p1;
wire   [63:0] zext_ln23_112_fu_7169_p1;
wire   [63:0] zext_ln23_114_fu_7174_p1;
wire   [63:0] zext_ln23_107_fu_7203_p1;
wire   [63:0] zext_ln23_109_fu_7212_p1;
wire   [63:0] zext_ln23_111_fu_7241_p1;
wire   [63:0] zext_ln23_113_fu_7250_p1;
wire   [63:0] zext_ln30_fu_7322_p1;
reg   [16:0] grp_fu_469_p1;
wire   [16:0] zext_ln23_118_fu_6849_p1;
wire   [16:0] zext_ln23_148_fu_7141_p1;
reg   [22:0] grp_fu_470_p0;
reg  signed [22:0] grp_fu_470_p1;
wire   [16:0] zext_ln23_146_fu_7125_p1;
reg   [16:0] grp_fu_471_p0;
reg   [16:0] grp_fu_471_p1;
wire   [16:0] zext_ln23_130_fu_6801_p1;
reg   [16:0] grp_fu_472_p1;
wire   [16:0] zext_ln23_120_fu_6648_p1;
wire   [16:0] zext_ln23_138_fu_7023_p1;
reg   [15:0] grp_fu_473_p0;
reg   [15:0] grp_fu_473_p1;
reg   [22:0] grp_fu_474_p0;
reg  signed [22:0] grp_fu_474_p1;
wire   [16:0] zext_ln23_140_fu_7039_p1;
reg   [22:0] grp_fu_476_p0;
reg   [22:0] grp_fu_476_p1;
wire   [16:0] zext_ln23_128_fu_6711_p1;
reg   [22:0] grp_fu_477_p0;
wire   [15:0] add_ln23_102_fu_478_p0;
reg   [22:0] grp_fu_480_p0;
wire   [2:0] out_h_fu_481_p0;
reg   [16:0] grp_fu_483_p1;
wire   [16:0] zext_ln23_122_fu_6690_p1;
wire   [16:0] zext_ln23_142_fu_7065_p1;
wire   [2:0] out_w_fu_485_p0;
reg   [16:0] grp_fu_486_p0;
reg   [16:0] grp_fu_486_p1;
wire   [16:0] zext_ln23_136_fu_6992_p1;
reg   [15:0] grp_fu_487_p0;
reg   [15:0] grp_fu_487_p1;
reg   [22:0] grp_fu_488_p0;
reg   [22:0] grp_fu_488_p1;
reg   [16:0] grp_fu_489_p0;
reg   [16:0] grp_fu_489_p1;
wire   [16:0] zext_ln23_126_fu_6741_p1;
reg   [16:0] grp_fu_490_p0;
reg   [16:0] grp_fu_490_p1;
wire   [16:0] zext_ln23_134_fu_6978_p1;
reg   [16:0] grp_fu_491_p0;
reg   [16:0] grp_fu_491_p1;
wire   [16:0] zext_ln23_124_fu_6674_p1;
reg   [15:0] grp_fu_492_p1;
reg   [15:0] grp_fu_493_p0;
reg   [15:0] grp_fu_493_p1;
reg   [16:0] grp_fu_494_p1;
wire   [16:0] zext_ln23_132_fu_6762_p1;
wire   [16:0] zext_ln23_144_fu_7081_p1;
wire   [15:0] add_ln23_103_fu_495_p0;
wire   [15:0] add_ln23_103_fu_495_p1;
wire   [6:0] zext_ln23_117_fu_6627_p1;
wire   [3:0] out_d_fu_497_p0;
wire  signed [9:0] sext_ln30_fu_7002_p1;
wire   [8:0] add_ln16_fu_499_p0;
reg  signed [15:0] grp_fu_3363_p0;
reg  signed [14:0] grp_fu_3363_p1;
reg  signed [15:0] grp_fu_3365_p0;
reg  signed [14:0] grp_fu_3365_p1;
reg   [15:0] grp_fu_3366_p0;
wire   [6:0] grp_fu_3366_p1;
reg   [15:0] grp_fu_3372_p0;
wire   [6:0] grp_fu_3372_p1;
reg  signed [15:0] grp_fu_3376_p0;
reg  signed [14:0] grp_fu_3376_p1;
reg  signed [15:0] grp_fu_3387_p0;
reg  signed [14:0] grp_fu_3387_p1;
reg   [15:0] grp_fu_3388_p0;
wire   [6:0] grp_fu_3388_p1;
reg   [15:0] grp_fu_3390_p0;
wire   [6:0] grp_fu_3390_p1;
wire   [29:0] grp_fu_3363_p2;
wire   [29:0] grp_fu_3376_p2;
wire   [29:0] grp_fu_3387_p2;
wire   [29:0] grp_fu_3365_p2;
wire   [8:0] zext_ln16_fu_6559_p0;
wire   [3:0] icmp_ln16_fu_6563_p0;
wire   [3:0] zext_ln19_fu_6569_p0;
wire   [3:0] trunc_ln23_fu_6574_p0;
wire   [5:0] shl_ln_fu_6578_p3;
wire   [2:0] icmp_ln17_fu_6593_p0;
wire   [2:0] zext_ln23_115_fu_6599_p0;
wire   [2:0] shl_ln23_4_fu_6603_p1;
wire   [5:0] shl_ln23_4_fu_6603_p3;
wire   [6:0] zext_ln23_116_fu_6611_p1;
wire   [6:0] zext_ln23_115_fu_6599_p1;
wire   [2:0] icmp_ln18_fu_6621_p0;
wire   [2:0] zext_ln23_117_fu_6627_p0;
wire   [15:0] or_ln20_fu_6642_p2;
wire   [15:0] or_ln20_16_fu_6668_p2;
wire   [15:0] or_ln20_15_fu_6684_p2;
wire   [15:0] or_ln20_18_fu_6705_p2;
wire  signed [31:0] sext_ln23_71_fu_6721_p1;
wire   [15:0] or_ln20_17_fu_6735_p2;
wire   [15:0] or_ln20_20_fu_6756_p2;
wire  signed [31:0] sext_ln23_68_fu_6772_p1;
wire  signed [31:0] sext_ln23_77_fu_6781_p1;
wire   [15:0] or_ln20_19_fu_6795_p2;
wire  signed [31:0] sext_ln23_74_fu_6826_p1;
wire  signed [31:0] sext_ln23_83_fu_6835_p1;
wire  signed [31:0] sext_ln23_80_fu_6864_p1;
wire  signed [31:0] sext_ln23_89_fu_6873_p1;
wire   [16:0] zext_ln23_84_fu_6882_p0;
wire  signed [31:0] sext_ln23_86_fu_6907_p1;
wire   [29:0] grp_fu_3371_p2;
wire   [15:0] or_ln20_22_fu_6986_p2;
wire  signed [6:0] sext_ln30_fu_7002_p0;
wire   [16:0] zext_ln23_100_fu_7007_p0;
wire   [16:0] zext_ln23_102_fu_7012_p0;
wire   [15:0] or_ln20_23_fu_7017_p2;
wire   [15:0] or_ln20_24_fu_7033_p2;
wire   [16:0] zext_ln23_106_fu_7054_p0;
wire   [15:0] or_ln20_25_fu_7059_p2;
wire   [15:0] or_ln20_26_fu_7075_p2;
wire  signed [31:0] sext_ln23_92_fu_7091_p1;
wire  signed [31:0] sext_ln23_95_fu_7100_p1;
wire   [15:0] or_ln20_27_fu_7119_p2;
wire   [15:0] or_ln20_28_fu_7135_p2;
wire  signed [31:0] sext_ln23_98_fu_7151_p1;
wire  signed [31:0] sext_ln23_101_fu_7160_p1;
wire  signed [31:0] sext_ln23_104_fu_7199_p1;
wire  signed [31:0] sext_ln23_107_fu_7208_p1;
wire  signed [31:0] sext_ln23_110_fu_7237_p1;
wire  signed [31:0] sext_ln23_113_fu_7246_p1;
wire   [0:0] tmp_fu_7298_p3;
wire   [14:0] trunc_ln27_fu_7294_p1;
wire   [9:0] sext_ln30_2_fu_7318_p0;
wire  signed [31:0] sext_ln30_2_fu_7318_p1;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'd1;
end

pointwise_conv2d_fix_2_SeparableConv2D_2_b_s #(
    .DataWidth( 13 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
SeparableConv2D_2_b_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SeparableConv2D_2_b_s_address0),
    .ce0(SeparableConv2D_2_b_s_ce0),
    .q0(SeparableConv2D_2_b_s_q0)
);

pointwise_conv2d_fix_2_SeparableConv2D_2_w_s #(
    .DataWidth( 15 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
SeparableConv2D_2_w_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(SeparableConv2D_2_w_s_address0),
    .ce0(SeparableConv2D_2_w_s_ce0),
    .q0(SeparableConv2D_2_w_s_q0),
    .address1(SeparableConv2D_2_w_s_address1),
    .ce1(SeparableConv2D_2_w_s_ce1),
    .q1(SeparableConv2D_2_w_s_q1)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U133(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3363_p0),
    .din1(grp_fu_3363_p1),
    .ce(1'b1),
    .dout(grp_fu_3363_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U134(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3365_p0),
    .din1(grp_fu_3365_p1),
    .ce(1'b1),
    .dout(grp_fu_3365_p2)
);

network_mul_16ns_7ns_23_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 23 ))
network_mul_16ns_7ns_23_2_1_U135(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3366_p0),
    .din1(grp_fu_3366_p1),
    .ce(1'b1),
    .dout(grp_fu_3366_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U136(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_6496),
    .din1(reg_6480),
    .ce(1'b1),
    .dout(grp_fu_3371_p2)
);

network_mul_16ns_7ns_23_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 23 ))
network_mul_16ns_7ns_23_2_1_U137(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3372_p0),
    .din1(grp_fu_3372_p1),
    .ce(1'b1),
    .dout(grp_fu_3372_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U138(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3376_p0),
    .din1(grp_fu_3376_p1),
    .ce(1'b1),
    .dout(grp_fu_3376_p2)
);

network_mul_16s_15s_30_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
network_mul_16s_15s_30_2_1_U139(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3387_p0),
    .din1(grp_fu_3387_p1),
    .ce(1'b1),
    .dout(grp_fu_3387_p2)
);

network_mul_16ns_7ns_23_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 23 ))
network_mul_16ns_7ns_23_2_1_U140(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3388_p0),
    .din1(grp_fu_3388_p1),
    .ce(1'b1),
    .dout(grp_fu_3388_p2)
);

network_mul_16ns_7ns_23_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 23 ))
network_mul_16ns_7ns_23_2_1_U141(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3390_p0),
    .din1(grp_fu_3390_p1),
    .ce(1'b1),
    .dout(grp_fu_3390_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        buffer_0_0_reg_448 <= grp_fu_490_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6621_p2 == 1'd0))) begin
        buffer_0_0_reg_448 <= sext_ln19_reg_7361;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        in_d_0_0_reg_436 <= add_ln20_reg_3046;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6621_p2 == 1'd0))) begin
        in_d_0_0_reg_436 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_6593_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        reg_392 <= out_d_reg_835;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_392 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        reg_392 <= grp_fu_477_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln20_2_reg_7616 == 1'd0) & (icmp_ln20_reg_7391 == 1'd0))) begin
        reg_392 <= grp_fu_486_p2;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_392 <= grp_fu_488_p2;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_392 <= grp_fu_487_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        reg_392 <= grp_fu_469_p2;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_392 <= grp_fu_480_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_392 <= grp_fu_479_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_392 <= grp_fu_482_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_392 <= grp_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln17_fu_6593_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        reg_403 <= add_ln16_reg_830;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_403 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        reg_403 <= grp_fu_469_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        reg_403 <= grp_fu_483_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_403 <= add_ln23_100_fu_484_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_403 <= grp_fu_489_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_403 <= grp_fu_476_p2;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_403 <= grp_fu_491_p2;
    end else if (((1'b1 == ap_CS_fsm_state22) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_reg_7391 == 1'd0)))) begin
        reg_403 <= grp_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_6621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        reg_414 <= out_h_reg_999;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_414 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        reg_414 <= grp_fu_470_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_414 <= add_ln23_102_fu_478_p2;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_414 <= grp_fu_471_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_414 <= grp_fu_494_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_414 <= grp_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_6593_p2 == 1'd0))) begin
        reg_425 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        reg_425 <= out_w_reg_1253;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        reg_425 <= grp_fu_486_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        reg_425 <= grp_fu_473_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_425 <= grp_fu_476_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_425 <= grp_fu_479_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) & ((icmp_ln20_2_reg_7616 == 1'd1) | (icmp_ln20_reg_7391 == 1'd1)))) begin
        reg_425 <= add_ln30_fu_498_p2;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln20_2_reg_7616 == 1'd0) & (icmp_ln20_reg_7391 == 1'd0))) begin
        reg_425 <= grp_fu_490_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        reg_425 <= add_ln23_103_fu_495_p2;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_425 <= grp_fu_493_p2;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_425 <= grp_fu_492_p2;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_425 <= grp_fu_475_p2;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_425 <= grp_fu_474_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_425 <= grp_fu_477_p2;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_425 <= grp_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln20_2_reg_7616 == 1'd1) & (icmp_ln20_reg_7391 == 1'd0))) begin
        reg_458 <= add_ln23_104_reg_2879;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_reg_7391 == 1'd1))) begin
        reg_458 <= buffer_0_0_reg_448;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6621_p2 == 1'd0))) begin
        reg_458 <= add_ln23_fu_496_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23))) begin
        reg_6491 <= SeparableConv2D_2_w_s_q1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_6491 <= SeparableConv2D_2_w_s_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_6519 <= SeparableConv2D_2_w_s_q0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_6519 <= SeparableConv2D_2_w_s_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        SeparableConv2D_2_w_29_reg_7710 <= SeparableConv2D_2_w_s_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln16_reg_830 <= add_ln16_fu_499_p2;
        out_d_reg_835 <= out_d_fu_497_p2;
        zext_ln16_reg_7327[8 : 0] <= zext_ln16_fu_6559_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        add_ln20_reg_3046 <= grp_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln23_104_reg_2879 <= grp_fu_473_p2;
        icmp_ln20_2_reg_7616 <= icmp_ln20_2_fu_6972_p2;
        or_ln20_21_reg_7610[2 : 0] <= or_ln20_21_fu_6966_p2[2 : 0];
or_ln20_21_reg_7610[15 : 4] <= or_ln20_21_fu_6966_p2[15 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln20_reg_7391 <= icmp_ln20_fu_6636_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_h_reg_999 <= out_h_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        out_w_reg_1253 <= out_w_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_6466 <= grp_fu_3372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_6474 <= grp_fu_3390_p2;
        reg_6484 <= grp_fu_3388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_6480 <= SeparableConv2D_2_w_s_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_6496 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_6500 <= SeparableConv2D_2_w_s_q0;
        reg_6511 <= SeparableConv2D_2_w_s_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_6504 <= grp_fu_3366_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_6515 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_6524 <= {{grp_fu_3363_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_6530 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_6534 <= {{grp_fu_3376_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_6541 <= {{grp_fu_3387_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_6547 <= {{grp_fu_3387_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_6553 <= {{grp_fu_3365_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        select_ln27_reg_7830 <= select_ln27_fu_7306_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sext_ln19_reg_7361 <= sext_ln19_fu_6589_p1;
        zext_ln23_reg_7345[5 : 3] <= zext_ln23_fu_6585_p1[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_6621_p2 == 1'd0))) begin
        sext_ln23_reg_7377 <= sext_ln23_fu_6632_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln17_fu_6593_p2 == 1'd0))) begin
        sub_ln23_reg_7369 <= sub_ln23_fu_6615_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln23_3_reg_7540 <= {{grp_fu_3363_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        trunc_ln23_4_reg_7590 <= {{grp_fu_3376_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_6563_p2 == 1'd0))) begin
        trunc_ln23_reg_7340 <= trunc_ln23_fu_6574_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        trunc_ln23_s_reg_7825 <= {{grp_fu_3365_p2[29:14]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        trunc_ln_reg_7605 <= {{grp_fu_3371_p2[29:14]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        SeparableConv2D_2_b_s_ce0 = 1'b1;
    end else begin
        SeparableConv2D_2_b_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_112_fu_7169_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_108_fu_7109_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_104_fu_7049_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_100_fu_7007_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_84_fu_6882_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_96_fu_6844_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_92_fu_6790_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_88_fu_6730_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_90_fu_6700_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        SeparableConv2D_2_w_s_address0 = zext_ln23_86_fu_6663_p1;
    end else begin
        SeparableConv2D_2_w_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        SeparableConv2D_2_w_s_address1 = zext_ln23_114_fu_7174_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        SeparableConv2D_2_w_s_address1 = zext_ln23_110_fu_7114_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        SeparableConv2D_2_w_s_address1 = zext_ln23_106_fu_7054_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        SeparableConv2D_2_w_s_address1 = zext_ln23_102_fu_7012_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        SeparableConv2D_2_w_s_address1 = zext_ln23_98_fu_6811_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        SeparableConv2D_2_w_s_address1 = zext_ln23_94_fu_6751_p1;
    end else begin
        SeparableConv2D_2_w_s_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        SeparableConv2D_2_w_s_ce0 = 1'b1;
    end else begin
        SeparableConv2D_2_w_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        SeparableConv2D_2_w_s_ce1 = 1'b1;
    end else begin
        SeparableConv2D_2_w_s_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln16_fu_6563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln16_fu_6563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_3363_p0 = sext_ln23_111_fu_7274_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_3363_p0 = sext_ln23_105_fu_7255_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_3363_p0 = sext_ln23_78_fu_6854_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_3363_p0 = sext_ln23_72_fu_6816_p1;
    end else begin
        grp_fu_3363_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_3363_p1 = sext_ln23_112_fu_7279_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_3363_p1 = sext_ln23_106_fu_7260_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_3363_p1 = sext_ln23_79_fu_6859_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_3363_p1 = sext_ln23_73_fu_6821_p1;
    end else begin
        grp_fu_3363_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_3365_p0 = sext_ln23_114_fu_7284_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_3365_p0 = sext_ln23_108_fu_7265_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_3365_p0 = sext_ln23_87_fu_6946_p1;
    end else begin
        grp_fu_3365_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_3365_p1 = sext_ln23_115_fu_7289_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_3365_p1 = sext_ln23_109_fu_7270_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_3365_p1 = sext_ln23_88_fu_6951_p1;
    end else begin
        grp_fu_3365_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_3366_p0 = zext_ln23_149_fu_7146_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_3366_p0 = zext_ln23_141_fu_7044_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_3366_p0 = zext_ln23_131_fu_6806_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_3366_p0 = zext_ln23_127_fu_6746_p1;
    end else begin
        grp_fu_3366_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_3372_p0 = zext_ln23_147_fu_7130_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_3372_p0 = zext_ln23_139_fu_7028_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_3372_p0 = zext_ln23_133_fu_6767_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_3372_p0 = zext_ln23_121_fu_6653_p1;
    end else begin
        grp_fu_3372_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_3376_p0 = sext_ln23_99_fu_7217_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_3376_p0 = sext_ln23_93_fu_7179_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_3376_p0 = sext_ln23_81_fu_6916_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_3376_p0 = sext_ln23_75_fu_6887_p1;
    end else begin
        grp_fu_3376_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_3376_p1 = sext_ln23_100_fu_7222_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_3376_p1 = sext_ln23_94_fu_7184_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_3376_p1 = sext_ln23_82_fu_6921_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_3376_p1 = sext_ln23_76_fu_6892_p1;
    end else begin
        grp_fu_3376_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_3387_p0 = sext_ln23_102_fu_7227_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_3387_p0 = sext_ln23_96_fu_7189_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_3387_p0 = sext_ln23_90_fu_6926_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_3387_p0 = sext_ln23_84_fu_6897_p1;
    end else begin
        grp_fu_3387_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_3387_p1 = sext_ln23_103_fu_7232_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_3387_p1 = sext_ln23_97_fu_7194_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_3387_p1 = sext_ln23_91_fu_6931_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_3387_p1 = sext_ln23_85_fu_6902_p1;
    end else begin
        grp_fu_3387_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_3388_p0 = zext_ln23_145_fu_7086_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_3388_p0 = zext_ln23_137_fu_6997_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_3388_p0 = zext_ln23_129_fu_6716_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_3388_p0 = zext_ln23_125_fu_6679_p1;
    end else begin
        grp_fu_3388_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_3390_p0 = zext_ln23_143_fu_7070_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_3390_p0 = zext_ln23_135_fu_6982_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_3390_p0 = zext_ln23_123_fu_6695_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_3390_p0 = zext_ln23_119_fu_6658_p1;
    end else begin
        grp_fu_3390_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_469_p1 = zext_ln23_148_fu_7141_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_469_p1 = zext_ln23_118_fu_6849_p1;
    end else begin
        grp_fu_469_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_470_p0 = zext_ln23_reg_7345;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_470_p0 = reg_6466;
    end else begin
        grp_fu_470_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_470_p1 = zext_ln23_146_fu_7125_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_470_p1 = sext_ln23_reg_7377;
    end else begin
        grp_fu_470_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_471_p0 = reg_6547;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_471_p0 = zext_ln23_reg_7345;
    end else begin
        grp_fu_471_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_471_p1 = reg_6524;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_471_p1 = zext_ln23_130_fu_6801_p1;
    end else begin
        grp_fu_471_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_472_p1 = zext_ln23_138_fu_7023_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_472_p1 = zext_ln23_120_fu_6648_p1;
    end else begin
        grp_fu_472_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_473_p0 = reg_6541;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_473_p0 = reg_425;
    end else begin
        grp_fu_473_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_473_p1 = reg_6534;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_473_p1 = reg_392;
    end else begin
        grp_fu_473_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_474_p0 = zext_ln23_reg_7345;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_474_p0 = reg_6466;
    end else begin
        grp_fu_474_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_474_p1 = zext_ln23_140_fu_7039_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_474_p1 = sext_ln23_reg_7377;
    end else begin
        grp_fu_474_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_476_p0 = reg_6466;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_476_p0 = zext_ln23_reg_7345;
    end else begin
        grp_fu_476_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_476_p1 = sext_ln23_reg_7377;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_476_p1 = zext_ln23_128_fu_6711_p1;
    end else begin
        grp_fu_476_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_477_p0 = reg_6466;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_477_p0 = reg_6484;
    end else begin
        grp_fu_477_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_480_p0 = reg_6484;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_480_p0 = reg_6504;
    end else begin
        grp_fu_480_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_483_p1 = zext_ln23_142_fu_7065_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_483_p1 = zext_ln23_122_fu_6690_p1;
    end else begin
        grp_fu_483_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_486_p0 = reg_425;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_486_p0 = zext_ln23_reg_7345;
    end else begin
        grp_fu_486_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_486_p1 = reg_6553;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_486_p1 = zext_ln23_136_fu_6992_p1;
    end else begin
        grp_fu_486_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_487_p0 = reg_425;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_487_p0 = trunc_ln23_4_reg_7590;
    end else begin
        grp_fu_487_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_487_p1 = reg_403;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_487_p1 = trunc_ln23_3_reg_7540;
    end else begin
        grp_fu_487_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_488_p0 = reg_6504;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_488_p0 = reg_392;
    end else begin
        grp_fu_488_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_488_p1 = sext_ln23_reg_7377;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_488_p1 = reg_425;
    end else begin
        grp_fu_488_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_489_p0 = in_d_0_0_reg_436;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_489_p0 = zext_ln23_reg_7345;
    end else begin
        grp_fu_489_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_489_p1 = 16'd16;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_489_p1 = zext_ln23_126_fu_6741_p1;
    end else begin
        grp_fu_489_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_490_p0 = reg_425;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_490_p0 = zext_ln23_reg_7345;
    end else begin
        grp_fu_490_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_490_p1 = reg_392;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_490_p1 = zext_ln23_134_fu_6978_p1;
    end else begin
        grp_fu_490_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_491_p0 = add_ln23_104_reg_2879;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_491_p0 = zext_ln23_reg_7345;
    end else begin
        grp_fu_491_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_491_p1 = reg_6534;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_491_p1 = zext_ln23_124_fu_6674_p1;
    end else begin
        grp_fu_491_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_492_p1 = trunc_ln23_s_reg_7825;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_492_p1 = reg_6547;
    end else begin
        grp_fu_492_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_493_p0 = reg_425;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_493_p0 = reg_6541;
    end else begin
        grp_fu_493_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_493_p1 = reg_414;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_493_p1 = reg_6553;
    end else begin
        grp_fu_493_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_494_p1 = zext_ln23_144_fu_7081_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_494_p1 = zext_ln23_132_fu_6762_p1;
    end else begin
        grp_fu_494_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        input_r_address0 = zext_ln23_111_fu_7241_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        input_r_address0 = zext_ln23_107_fu_7203_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        input_r_address0 = zext_ln23_103_fu_7155_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        input_r_address0 = zext_ln23_99_fu_7095_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        input_r_address0 = zext_ln23_97_fu_6877_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address0 = zext_ln23_93_fu_6839_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address0 = zext_ln23_83_fu_6776_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_r_address0 = zext_ln23_85_fu_6725_p1;
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        input_r_address1 = zext_ln23_113_fu_7250_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        input_r_address1 = zext_ln23_109_fu_7212_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        input_r_address1 = zext_ln23_105_fu_7164_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        input_r_address1 = zext_ln23_101_fu_7104_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        input_r_address1 = zext_ln23_95_fu_6911_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        input_r_address1 = zext_ln23_91_fu_6868_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_r_address1 = zext_ln23_87_fu_6830_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        input_r_address1 = zext_ln23_89_fu_6785_p1;
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln16_fu_6563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln17_fu_6593_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln18_fu_6621_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_reg_7391 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & ((icmp_ln20_2_reg_7616 == 1'd1) | (icmp_ln20_reg_7391 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SeparableConv2D_2_b_s_address0 = zext_ln19_fu_6569_p1;

assign add_ln16_fu_499_p0 = reg_403;

assign add_ln16_fu_499_p2 = (add_ln16_fu_499_p0 + 9'd49);

assign add_ln23_100_fu_484_p2 = (trunc_ln_reg_7605 + buffer_0_0_reg_448);

assign add_ln23_102_fu_478_p0 = reg_425;

assign add_ln23_102_fu_478_p2 = (add_ln23_102_fu_478_p0 + reg_6534);

assign add_ln23_103_fu_495_p0 = reg_414;

assign add_ln23_103_fu_495_p1 = reg_403;

assign add_ln23_103_fu_495_p2 = (add_ln23_103_fu_495_p0 + add_ln23_103_fu_495_p1);

assign add_ln23_fu_496_p2 = (sub_ln23_reg_7369 + zext_ln23_117_fu_6627_p1);

assign add_ln30_fu_498_p2 = ($signed(sext_ln30_fu_7002_p1) + $signed(zext_ln16_reg_7327));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_3366_p1 = 23'd49;

assign grp_fu_3372_p1 = 23'd49;

assign grp_fu_3388_p1 = 23'd49;

assign grp_fu_3390_p1 = 23'd49;

assign grp_fu_468_p2 = ($signed(reg_6484) + $signed(sext_ln23_reg_7377));

assign grp_fu_469_p2 = (zext_ln23_reg_7345 + grp_fu_469_p1);

assign grp_fu_470_p2 = ($signed(grp_fu_470_p0) + $signed(grp_fu_470_p1));

assign grp_fu_471_p2 = (grp_fu_471_p0 + grp_fu_471_p1);

assign grp_fu_472_p2 = (zext_ln23_reg_7345 + grp_fu_472_p1);

assign grp_fu_473_p2 = (grp_fu_473_p0 + grp_fu_473_p1);

assign grp_fu_474_p2 = ($signed(grp_fu_474_p0) + $signed(grp_fu_474_p1));

assign grp_fu_475_p2 = ($signed(reg_6504) + $signed(sext_ln23_reg_7377));

assign grp_fu_476_p2 = (grp_fu_476_p0 + grp_fu_476_p1);

assign grp_fu_477_p2 = ($signed(grp_fu_477_p0) + $signed(sext_ln23_reg_7377));

assign grp_fu_479_p2 = ($signed(reg_6474) + $signed(sext_ln23_reg_7377));

assign grp_fu_480_p2 = ($signed(grp_fu_480_p0) + $signed(sext_ln23_reg_7377));

assign grp_fu_482_p2 = ($signed(reg_6474) + $signed(sext_ln23_reg_7377));

assign grp_fu_483_p2 = (zext_ln23_reg_7345 + grp_fu_483_p1);

assign grp_fu_486_p2 = (grp_fu_486_p0 + grp_fu_486_p1);

assign grp_fu_487_p2 = (grp_fu_487_p0 + grp_fu_487_p1);

assign grp_fu_488_p2 = (grp_fu_488_p0 + grp_fu_488_p1);

assign grp_fu_489_p2 = (grp_fu_489_p0 + grp_fu_489_p1);

assign grp_fu_490_p2 = (grp_fu_490_p0 + grp_fu_490_p1);

assign grp_fu_491_p2 = (grp_fu_491_p0 + grp_fu_491_p1);

assign grp_fu_492_p2 = (reg_6524 + grp_fu_492_p1);

assign grp_fu_493_p2 = (grp_fu_493_p0 + grp_fu_493_p1);

assign grp_fu_494_p2 = (zext_ln23_reg_7345 + grp_fu_494_p1);

assign icmp_ln16_fu_6563_p0 = reg_392;

assign icmp_ln16_fu_6563_p2 = ((icmp_ln16_fu_6563_p0 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln17_fu_6593_p0 = reg_414;

assign icmp_ln17_fu_6593_p2 = ((icmp_ln17_fu_6593_p0 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_6621_p0 = reg_425;

assign icmp_ln18_fu_6621_p2 = ((icmp_ln18_fu_6621_p0 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln20_2_fu_6972_p2 = ((or_ln20_21_fu_6966_p2 == 16'd8) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_6636_p2 = ((in_d_0_0_reg_436 == 16'd8) ? 1'b1 : 1'b0);

assign or_ln20_15_fu_6684_p2 = (in_d_0_0_reg_436 | 16'd2);

assign or_ln20_16_fu_6668_p2 = (in_d_0_0_reg_436 | 16'd3);

assign or_ln20_17_fu_6735_p2 = (in_d_0_0_reg_436 | 16'd4);

assign or_ln20_18_fu_6705_p2 = (in_d_0_0_reg_436 | 16'd5);

assign or_ln20_19_fu_6795_p2 = (in_d_0_0_reg_436 | 16'd6);

assign or_ln20_20_fu_6756_p2 = (in_d_0_0_reg_436 | 16'd7);

assign or_ln20_21_fu_6966_p2 = (in_d_0_0_reg_436 | 16'd8);

assign or_ln20_22_fu_6986_p2 = (in_d_0_0_reg_436 | 16'd9);

assign or_ln20_23_fu_7017_p2 = (in_d_0_0_reg_436 | 16'd10);

assign or_ln20_24_fu_7033_p2 = (in_d_0_0_reg_436 | 16'd11);

assign or_ln20_25_fu_7059_p2 = (in_d_0_0_reg_436 | 16'd12);

assign or_ln20_26_fu_7075_p2 = (in_d_0_0_reg_436 | 16'd13);

assign or_ln20_27_fu_7119_p2 = (in_d_0_0_reg_436 | 16'd14);

assign or_ln20_28_fu_7135_p2 = (in_d_0_0_reg_436 | 16'd15);

assign or_ln20_fu_6642_p2 = (in_d_0_0_reg_436 | 16'd1);

assign out_d_fu_497_p0 = reg_392;

assign out_d_fu_497_p2 = (out_d_fu_497_p0 + 4'd1);

assign out_h_fu_481_p0 = reg_414;

assign out_h_fu_481_p2 = (out_h_fu_481_p0 + 3'd1);

assign out_w_fu_485_p0 = reg_425;

assign out_w_fu_485_p2 = (out_w_fu_485_p0 + 3'd1);

assign output_r_address0 = zext_ln30_fu_7322_p1;

assign output_r_d0 = select_ln27_reg_7830;

assign select_ln27_fu_7306_p3 = ((tmp_fu_7298_p3[0:0] === 1'b1) ? 15'd0 : trunc_ln27_fu_7294_p1);

assign sext_ln19_fu_6589_p1 = $signed(SeparableConv2D_2_b_s_q0);

assign sext_ln23_100_fu_7222_p1 = $signed(reg_6500);

assign sext_ln23_101_fu_7160_p1 = $signed(reg_425);

assign sext_ln23_102_fu_7227_p1 = $signed(reg_6515);

assign sext_ln23_103_fu_7232_p1 = $signed(reg_6511);

assign sext_ln23_104_fu_7199_p1 = $signed(reg_425);

assign sext_ln23_105_fu_7255_p1 = reg_6496;

assign sext_ln23_106_fu_7260_p1 = $signed(reg_6519);

assign sext_ln23_107_fu_7208_p1 = $signed(reg_392);

assign sext_ln23_108_fu_7265_p1 = $signed(reg_6515);

assign sext_ln23_109_fu_7270_p1 = $signed(SeparableConv2D_2_w_29_reg_7710);

assign sext_ln23_110_fu_7237_p1 = $signed(reg_425);

assign sext_ln23_111_fu_7274_p1 = reg_6496;

assign sext_ln23_112_fu_7279_p1 = reg_6480;

assign sext_ln23_113_fu_7246_p1 = $signed(reg_392);

assign sext_ln23_114_fu_7284_p1 = $signed(reg_6515);

assign sext_ln23_115_fu_7289_p1 = $signed(reg_6491);

assign sext_ln23_68_fu_6772_p1 = $signed(reg_392);

assign sext_ln23_71_fu_6721_p1 = $signed(reg_392);

assign sext_ln23_72_fu_6816_p1 = reg_6496;

assign sext_ln23_73_fu_6821_p1 = reg_6480;

assign sext_ln23_74_fu_6826_p1 = $signed(reg_392);

assign sext_ln23_75_fu_6887_p1 = $signed(reg_6515);

assign sext_ln23_76_fu_6892_p1 = $signed(reg_6500);

assign sext_ln23_77_fu_6781_p1 = $signed(reg_425);

assign sext_ln23_78_fu_6854_p1 = $signed(reg_6515);

assign sext_ln23_79_fu_6859_p1 = $signed(reg_6491);

assign sext_ln23_80_fu_6864_p1 = $signed(reg_392);

assign sext_ln23_81_fu_6916_p1 = $signed(reg_6515);

assign sext_ln23_82_fu_6921_p1 = reg_6480;

assign sext_ln23_83_fu_6835_p1 = $signed(reg_425);

assign sext_ln23_84_fu_6897_p1 = $signed(reg_6530);

assign sext_ln23_85_fu_6902_p1 = $signed(reg_6511);

assign sext_ln23_86_fu_6907_p1 = $signed(reg_425);

assign sext_ln23_87_fu_6946_p1 = $signed(reg_6515);

assign sext_ln23_88_fu_6951_p1 = $signed(reg_6491);

assign sext_ln23_89_fu_6873_p1 = $signed(reg_425);

assign sext_ln23_90_fu_6926_p1 = $signed(reg_6530);

assign sext_ln23_91_fu_6931_p1 = $signed(reg_6519);

assign sext_ln23_92_fu_7091_p1 = $signed(reg_392);

assign sext_ln23_93_fu_7179_p1 = reg_6496;

assign sext_ln23_94_fu_7184_p1 = reg_6480;

assign sext_ln23_95_fu_7100_p1 = $signed(reg_425);

assign sext_ln23_96_fu_7189_p1 = $signed(reg_6515);

assign sext_ln23_97_fu_7194_p1 = $signed(reg_6491);

assign sext_ln23_98_fu_7151_p1 = $signed(reg_392);

assign sext_ln23_99_fu_7217_p1 = reg_6496;

assign sext_ln23_fu_6632_p1 = add_ln23_fu_496_p2;

assign sext_ln30_2_fu_7318_p0 = reg_425;

assign sext_ln30_2_fu_7318_p1 = $signed(sext_ln30_2_fu_7318_p0);

assign sext_ln30_fu_7002_p0 = reg_458;

assign sext_ln30_fu_7002_p1 = sext_ln30_fu_7002_p0;

assign shl_ln23_4_fu_6603_p1 = reg_414;

assign shl_ln23_4_fu_6603_p3 = {{shl_ln23_4_fu_6603_p1}, {3'd0}};

assign shl_ln_fu_6578_p3 = {{trunc_ln23_reg_7340}, {3'd0}};

assign sub_ln23_fu_6615_p2 = (zext_ln23_116_fu_6611_p1 - zext_ln23_115_fu_6599_p1);

assign tmp_fu_7298_p3 = reg_458[32'd15];

assign trunc_ln23_fu_6574_p0 = reg_392;

assign trunc_ln23_fu_6574_p1 = trunc_ln23_fu_6574_p0[2:0];

assign trunc_ln27_fu_7294_p1 = reg_458[14:0];

assign zext_ln16_fu_6559_p0 = reg_403;

assign zext_ln16_fu_6559_p1 = zext_ln16_fu_6559_p0;

assign zext_ln19_fu_6569_p0 = reg_392;

assign zext_ln19_fu_6569_p1 = zext_ln19_fu_6569_p0;

assign zext_ln23_100_fu_7007_p0 = reg_425;

assign zext_ln23_100_fu_7007_p1 = zext_ln23_100_fu_7007_p0;

assign zext_ln23_101_fu_7104_p1 = $unsigned(sext_ln23_95_fu_7100_p1);

assign zext_ln23_102_fu_7012_p0 = reg_392;

assign zext_ln23_102_fu_7012_p1 = zext_ln23_102_fu_7012_p0;

assign zext_ln23_103_fu_7155_p1 = $unsigned(sext_ln23_98_fu_7151_p1);

assign zext_ln23_104_fu_7049_p1 = reg_403;

assign zext_ln23_105_fu_7164_p1 = $unsigned(sext_ln23_101_fu_7160_p1);

assign zext_ln23_106_fu_7054_p0 = reg_425;

assign zext_ln23_106_fu_7054_p1 = zext_ln23_106_fu_7054_p0;

assign zext_ln23_107_fu_7203_p1 = $unsigned(sext_ln23_104_fu_7199_p1);

assign zext_ln23_108_fu_7109_p1 = reg_403;

assign zext_ln23_109_fu_7212_p1 = $unsigned(sext_ln23_107_fu_7208_p1);

assign zext_ln23_110_fu_7114_p1 = reg_414;

assign zext_ln23_111_fu_7241_p1 = $unsigned(sext_ln23_110_fu_7237_p1);

assign zext_ln23_112_fu_7169_p1 = reg_414;

assign zext_ln23_113_fu_7250_p1 = $unsigned(sext_ln23_113_fu_7246_p1);

assign zext_ln23_114_fu_7174_p1 = reg_403;

assign zext_ln23_115_fu_6599_p0 = reg_414;

assign zext_ln23_115_fu_6599_p1 = zext_ln23_115_fu_6599_p0;

assign zext_ln23_116_fu_6611_p1 = shl_ln23_4_fu_6603_p3;

assign zext_ln23_117_fu_6627_p0 = reg_425;

assign zext_ln23_117_fu_6627_p1 = zext_ln23_117_fu_6627_p0;

assign zext_ln23_118_fu_6849_p1 = in_d_0_0_reg_436;

assign zext_ln23_119_fu_6658_p1 = in_d_0_0_reg_436;

assign zext_ln23_120_fu_6648_p1 = or_ln20_fu_6642_p2;

assign zext_ln23_121_fu_6653_p1 = or_ln20_fu_6642_p2;

assign zext_ln23_122_fu_6690_p1 = or_ln20_15_fu_6684_p2;

assign zext_ln23_123_fu_6695_p1 = or_ln20_15_fu_6684_p2;

assign zext_ln23_124_fu_6674_p1 = or_ln20_16_fu_6668_p2;

assign zext_ln23_125_fu_6679_p1 = or_ln20_16_fu_6668_p2;

assign zext_ln23_126_fu_6741_p1 = or_ln20_17_fu_6735_p2;

assign zext_ln23_127_fu_6746_p1 = or_ln20_17_fu_6735_p2;

assign zext_ln23_128_fu_6711_p1 = or_ln20_18_fu_6705_p2;

assign zext_ln23_129_fu_6716_p1 = or_ln20_18_fu_6705_p2;

assign zext_ln23_130_fu_6801_p1 = or_ln20_19_fu_6795_p2;

assign zext_ln23_131_fu_6806_p1 = or_ln20_19_fu_6795_p2;

assign zext_ln23_132_fu_6762_p1 = or_ln20_20_fu_6756_p2;

assign zext_ln23_133_fu_6767_p1 = or_ln20_20_fu_6756_p2;

assign zext_ln23_134_fu_6978_p1 = or_ln20_21_reg_7610;

assign zext_ln23_135_fu_6982_p1 = or_ln20_21_reg_7610;

assign zext_ln23_136_fu_6992_p1 = or_ln20_22_fu_6986_p2;

assign zext_ln23_137_fu_6997_p1 = or_ln20_22_fu_6986_p2;

assign zext_ln23_138_fu_7023_p1 = or_ln20_23_fu_7017_p2;

assign zext_ln23_139_fu_7028_p1 = or_ln20_23_fu_7017_p2;

assign zext_ln23_140_fu_7039_p1 = or_ln20_24_fu_7033_p2;

assign zext_ln23_141_fu_7044_p1 = or_ln20_24_fu_7033_p2;

assign zext_ln23_142_fu_7065_p1 = or_ln20_25_fu_7059_p2;

assign zext_ln23_143_fu_7070_p1 = or_ln20_25_fu_7059_p2;

assign zext_ln23_144_fu_7081_p1 = or_ln20_26_fu_7075_p2;

assign zext_ln23_145_fu_7086_p1 = or_ln20_26_fu_7075_p2;

assign zext_ln23_146_fu_7125_p1 = or_ln20_27_fu_7119_p2;

assign zext_ln23_147_fu_7130_p1 = or_ln20_27_fu_7119_p2;

assign zext_ln23_148_fu_7141_p1 = or_ln20_28_fu_7135_p2;

assign zext_ln23_149_fu_7146_p1 = or_ln20_28_fu_7135_p2;

assign zext_ln23_83_fu_6776_p1 = $unsigned(sext_ln23_68_fu_6772_p1);

assign zext_ln23_84_fu_6882_p0 = reg_392;

assign zext_ln23_84_fu_6882_p1 = zext_ln23_84_fu_6882_p0;

assign zext_ln23_85_fu_6725_p1 = $unsigned(sext_ln23_71_fu_6721_p1);

assign zext_ln23_86_fu_6663_p1 = reg_403;

assign zext_ln23_87_fu_6830_p1 = $unsigned(sext_ln23_74_fu_6826_p1);

assign zext_ln23_88_fu_6730_p1 = reg_414;

assign zext_ln23_89_fu_6785_p1 = $unsigned(sext_ln23_77_fu_6781_p1);

assign zext_ln23_90_fu_6700_p1 = reg_403;

assign zext_ln23_91_fu_6868_p1 = $unsigned(sext_ln23_80_fu_6864_p1);

assign zext_ln23_92_fu_6790_p1 = reg_403;

assign zext_ln23_93_fu_6839_p1 = $unsigned(sext_ln23_83_fu_6835_p1);

assign zext_ln23_94_fu_6751_p1 = reg_403;

assign zext_ln23_95_fu_6911_p1 = $unsigned(sext_ln23_86_fu_6907_p1);

assign zext_ln23_96_fu_6844_p1 = reg_414;

assign zext_ln23_97_fu_6877_p1 = $unsigned(sext_ln23_89_fu_6873_p1);

assign zext_ln23_98_fu_6811_p1 = reg_414;

assign zext_ln23_99_fu_7095_p1 = $unsigned(sext_ln23_92_fu_7091_p1);

assign zext_ln23_fu_6585_p1 = shl_ln_fu_6578_p3;

assign zext_ln30_fu_7322_p1 = $unsigned(sext_ln30_2_fu_7318_p1);

always @ (posedge ap_clk) begin
    zext_ln16_reg_7327[9] <= 1'b0;
    zext_ln23_reg_7345[2:0] <= 3'b000;
    zext_ln23_reg_7345[16:6] <= 11'b00000000000;
    or_ln20_21_reg_7610[3] <= 1'b1;
end

endmodule //pointwise_conv2d_fix_2
