
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2019.1 (64-bit)
  **** SW Build 2552052 on Fri May 24 14:47:09 MDT 2019
  **** IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
    ** Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/masudalab/DeepCAEonFPGA/ip_generated'.
INFO: [IP_Flow 19-1700] Loaded user IP repository '/home/masudalab/DeepCAEonFPGA/pynq/ip'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2019.1/data/ip'.
Command: link_design -top design_1_wrapper -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
INFO: [Project 1-454] Reading design checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.dcp' for cell 'design_1_i/axi_dma_0'
INFO: [Project 1-454] Reading design checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_0/design_1_axi_smc_0.dcp' for cell 'design_1_i/axi_smc'
INFO: [Project 1-454] Reading design checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_network_0_0/design_1_network_0_0.dcp' for cell 'design_1_i/network_0'
INFO: [Project 1-454] Reading design checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.dcp' for cell 'design_1_i/processing_system7_0'
INFO: [Project 1-454] Reading design checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.dcp' for cell 'design_1_i/rst_ps7_0_100M'
INFO: [Project 1-454] Reading design checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_xbar_0/design_1_xbar_0.dcp' for cell 'design_1_i/ps7_0_axi_periph/xbar'
INFO: [Project 1-454] Reading design checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/ps7_0_axi_periph/s00_couplers/auto_pc'
INFO: [Netlist 29-17] Analyzing 3536 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2019.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc] for cell 'design_1_i/axi_dma_0/U0'
WARNING: [Vivado_Tcl 4-921] Waiver ID 'CDC-1' -to list should not be empty. [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc:52]
WARNING: [Vivado_Tcl 4-921] Waiver ID 'CDC-1' -to list should not be empty. [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc:56]
WARNING: [Vivado_Tcl 4-919] Waiver ID 'CDC-1' -from list should not be empty. [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc:61]
Finished Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc] for cell 'design_1_i/axi_dma_0/U0'
Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0_board.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Finished Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_smc_0/bd_0/ip/ip_1/bd_afc3_psr_aclk_0.xdc] for cell 'design_1_i/axi_smc/inst/clk_map/psr_aclk/U0'
Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0_clocks.xdc] for cell 'design_1_i/axi_dma_0/U0'
Finished Parsing XDC File [/home/masudalab/DeepCAEonFPGA/HLx/HLx.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0_clocks.xdc] for cell 'design_1_i/axi_dma_0/U0'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.gen_node_prog_full.inst_node_prog_full/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[0].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[0].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
Finished Sourcing Tcl File [/tools/Xilinx/Vivado/2019.1/data/ip/xpm/xpm_memory/tcl/xpm_memory_xdc.tcl] for cell 'design_1_i/axi_smc/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 1932.977 ; gain = 0.000 ; free physical = 4325 ; free virtual = 10307
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 233 instances were transformed.
  RAM16X1D => RAM32X1D (RAMD32, RAMD32): 2 instances
  RAM16X1S => RAM32X1S (RAMS32): 4 instances
  RAM256X1S => RAM256X1S (MUXF7, MUXF7, MUXF8, RAMS64E, RAMS64E, RAMS64E, RAMS64E): 12 instances
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 210 instances
  RAM32X1D => RAM32X1D (RAMD32, RAMD32): 5 instances

18 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1932.977 ; gain = 480.512 ; free physical = 4325 ; free virtual = 10307
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2001.508 ; gain = 68.531 ; free physical = 4318 ; free virtual = 10300

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 2339c8d81

Time (s): cpu = 00:00:10 ; elapsed = 00:00:08 . Memory (MB): peak = 2466.359 ; gain = 464.852 ; free physical = 3865 ; free virtual = 9848

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 15 inverter(s) to 94 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 15844cdf3

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2584.266 ; gain = 0.000 ; free physical = 3821 ; free virtual = 9803
INFO: [Opt 31-389] Phase Retarget created 110 cells and removed 267 cells
INFO: [Opt 31-1021] In phase Retarget, 30 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 1 inverter(s) to 1 load pin(s).
Phase 2 Constant propagation | Checksum: 2167e7d27

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2584.266 ; gain = 0.000 ; free physical = 3821 ; free virtual = 9803
INFO: [Opt 31-389] Phase Constant propagation created 31 cells and removed 252 cells
INFO: [Opt 31-1021] In phase Constant propagation, 40 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: 18531db8a

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 2584.266 ; gain = 0.000 ; free physical = 3818 ; free virtual = 9801
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 1848 cells
INFO: [Opt 31-1021] In phase Sweep, 50 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 18531db8a

Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 2584.266 ; gain = 0.000 ; free physical = 3821 ; free virtual = 9803
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 18531db8a

Time (s): cpu = 00:00:08 ; elapsed = 00:00:07 . Memory (MB): peak = 2584.266 ; gain = 0.000 ; free physical = 3821 ; free virtual = 9803
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 1eaa52446

Time (s): cpu = 00:00:08 ; elapsed = 00:00:07 . Memory (MB): peak = 2584.266 ; gain = 0.000 ; free physical = 3821 ; free virtual = 9803
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 1 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 30 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |             110  |             267  |                                             30  |
|  Constant propagation         |              31  |             252  |                                             40  |
|  Sweep                        |               0  |            1848  |                                             50  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               1  |                                             30  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.08 ; elapsed = 00:00:00.08 . Memory (MB): peak = 2584.266 ; gain = 0.000 ; free physical = 3821 ; free virtual = 9803
Ending Logic Optimization Task | Checksum: 25a6d3f86

Time (s): cpu = 00:00:09 ; elapsed = 00:00:08 . Memory (MB): peak = 2584.266 ; gain = 0.000 ; free physical = 3821 ; free virtual = 9803

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=4.249 | TNS=0.000 |
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 36 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 19 newly gated: 0 Total Ports: 72
Number of Flops added for Enable Generation: 3

Ending PowerOpt Patch Enables Task | Checksum: 24b1a10b5

Time (s): cpu = 00:00:00.21 ; elapsed = 00:00:00.22 . Memory (MB): peak = 3091.438 ; gain = 0.000 ; free physical = 3744 ; free virtual = 9727
Ending Power Optimization Task | Checksum: 24b1a10b5

Time (s): cpu = 00:00:21 ; elapsed = 00:00:10 . Memory (MB): peak = 3091.438 ; gain = 507.172 ; free physical = 3778 ; free virtual = 9760

Starting Final Cleanup Task

Starting Logic Optimization Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Logic Optimization Task | Checksum: 201dd0ba7

Time (s): cpu = 00:00:06 ; elapsed = 00:00:03 . Memory (MB): peak = 3091.438 ; gain = 0.000 ; free physical = 3785 ; free virtual = 9768
Ending Final Cleanup Task | Checksum: 201dd0ba7

Time (s): cpu = 00:00:08 ; elapsed = 00:00:05 . Memory (MB): peak = 3091.438 ; gain = 0.000 ; free physical = 3785 ; free virtual = 9767

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3091.438 ; gain = 0.000 ; free physical = 3785 ; free virtual = 9767
Ending Netlist Obfuscation Task | Checksum: 201dd0ba7

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3091.438 ; gain = 0.000 ; free physical = 3785 ; free virtual = 9767
INFO: [Common 17-83] Releasing license: Implementation
46 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:51 ; elapsed = 00:00:35 . Memory (MB): peak = 3091.438 ; gain = 1158.461 ; free physical = 3785 ; free virtual = 9767
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3091.438 ; gain = 0.000 ; free physical = 3785 ; free virtual = 9767
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.20 ; elapsed = 00:00:00.05 . Memory (MB): peak = 3091.438 ; gain = 0.000 ; free physical = 3777 ; free virtual = 9763
INFO: [Common 17-1381] The checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:09 ; elapsed = 00:00:07 . Memory (MB): peak = 3091.438 ; gain = 0.000 ; free physical = 3773 ; free virtual = 9764
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/masudalab/DeepCAEonFPGA/HLx/HLx.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 4 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3769 ; free virtual = 9761
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 18186f491

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.04 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3769 ; free virtual = 9761
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3769 ; free virtual = 9761

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 59861f77

Time (s): cpu = 00:00:06 ; elapsed = 00:00:04 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3706 ; free virtual = 9697

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 16d70b5ec

Time (s): cpu = 00:00:17 ; elapsed = 00:00:10 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3653 ; free virtual = 9645

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 16d70b5ec

Time (s): cpu = 00:00:17 ; elapsed = 00:00:11 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3653 ; free virtual = 9645
Phase 1 Placer Initialization | Checksum: 16d70b5ec

Time (s): cpu = 00:00:18 ; elapsed = 00:00:11 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3654 ; free virtual = 9645

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: f237b774

Time (s): cpu = 00:00:21 ; elapsed = 00:00:12 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3631 ; free virtual = 9623

Phase 2.2 Global Placement Core

Phase 2.2.1 Physical Synthesis In Placer
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for HD net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3615 ; free virtual = 9607

Summary of Physical Synthesis Optimizations
============================================


----------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                  |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
----------------------------------------------------------------------------------------------------------------------------------------
|  Very High Fanout              |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                  |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                 |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  HD Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                         |            0  |              0  |                     0  |           0  |           2  |  00:00:00  |
----------------------------------------------------------------------------------------------------------------------------------------


Phase 2.2.1 Physical Synthesis In Placer | Checksum: 13b067f2c

Time (s): cpu = 00:00:56 ; elapsed = 00:00:31 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3615 ; free virtual = 9607
Phase 2.2 Global Placement Core | Checksum: fcf95b1d

Time (s): cpu = 00:00:59 ; elapsed = 00:00:33 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3611 ; free virtual = 9603
Phase 2 Global Placement | Checksum: fcf95b1d

Time (s): cpu = 00:00:59 ; elapsed = 00:00:33 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3623 ; free virtual = 9614

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1335d2ec4

Time (s): cpu = 00:01:03 ; elapsed = 00:00:35 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3617 ; free virtual = 9608

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1ba3f44ff

Time (s): cpu = 00:01:12 ; elapsed = 00:00:39 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3608 ; free virtual = 9600

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 21b892a3c

Time (s): cpu = 00:01:12 ; elapsed = 00:00:40 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3608 ; free virtual = 9599

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 1fa397c51

Time (s): cpu = 00:01:12 ; elapsed = 00:00:40 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3608 ; free virtual = 9599

Phase 3.5 Fast Optimization
Phase 3.5 Fast Optimization | Checksum: 1daa7ad21

Time (s): cpu = 00:01:19 ; elapsed = 00:00:42 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3612 ; free virtual = 9604

Phase 3.6 Small Shape Detail Placement
Phase 3.6 Small Shape Detail Placement | Checksum: 1dec22977

Time (s): cpu = 00:01:25 ; elapsed = 00:00:49 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3589 ; free virtual = 9581

Phase 3.7 Re-assign LUT pins
Phase 3.7 Re-assign LUT pins | Checksum: 143acec67

Time (s): cpu = 00:01:27 ; elapsed = 00:00:50 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3591 ; free virtual = 9583

Phase 3.8 Pipeline Register Optimization
Phase 3.8 Pipeline Register Optimization | Checksum: 1b95c66b2

Time (s): cpu = 00:01:27 ; elapsed = 00:00:51 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3591 ; free virtual = 9583
Phase 3 Detail Placement | Checksum: 1b95c66b2

Time (s): cpu = 00:01:28 ; elapsed = 00:00:51 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3591 ; free virtual = 9583

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 2444b92d1

Phase 4.1.1.1 BUFG Insertion
INFO: [Place 46-56] BUFG insertion identified 0 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Phase 4.1.1.1 BUFG Insertion | Checksum: 2444b92d1

Time (s): cpu = 00:01:39 ; elapsed = 00:00:56 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3598 ; free virtual = 9590
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.538. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 1ec41c07a

Time (s): cpu = 00:01:39 ; elapsed = 00:00:56 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3598 ; free virtual = 9590
Phase 4.1 Post Commit Optimization | Checksum: 1ec41c07a

Time (s): cpu = 00:01:40 ; elapsed = 00:00:56 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3598 ; free virtual = 9590

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1ec41c07a

Time (s): cpu = 00:01:40 ; elapsed = 00:00:57 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3598 ; free virtual = 9590

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 1ec41c07a

Time (s): cpu = 00:01:40 ; elapsed = 00:00:57 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3599 ; free virtual = 9591

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3600 ; free virtual = 9591
Phase 4.4 Final Placement Cleanup | Checksum: 1521ff1ee

Time (s): cpu = 00:01:41 ; elapsed = 00:00:57 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3600 ; free virtual = 9591
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1521ff1ee

Time (s): cpu = 00:01:41 ; elapsed = 00:00:58 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3600 ; free virtual = 9591
Ending Placer Task | Checksum: e83205f2

Time (s): cpu = 00:01:41 ; elapsed = 00:00:58 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3600 ; free virtual = 9591
INFO: [Common 17-83] Releasing license: Implementation
73 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:44 ; elapsed = 00:00:59 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3632 ; free virtual = 9623
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3632 ; free virtual = 9623
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3549 ; free virtual = 9599
INFO: [Common 17-1381] The checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3615 ; free virtual = 9620
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.17 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3604 ; free virtual = 9610
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.56 ; elapsed = 00:00:00.61 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3611 ; free virtual = 9617
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 4 CPUs
Checksum: PlaceDB: 9a194e06 ConstDB: 0 ShapeSum: 4e18b7ec RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: f33b7c07

Time (s): cpu = 00:00:25 ; elapsed = 00:00:17 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3471 ; free virtual = 9477
Post Restoration Checksum: NetGraph: 856ebd03 NumContArr: 6dccbf04 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: f33b7c07

Time (s): cpu = 00:00:26 ; elapsed = 00:00:17 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3440 ; free virtual = 9446

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: f33b7c07

Time (s): cpu = 00:00:26 ; elapsed = 00:00:17 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3421 ; free virtual = 9427

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: f33b7c07

Time (s): cpu = 00:00:26 ; elapsed = 00:00:17 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3421 ; free virtual = 9427
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: d6d5f792

Time (s): cpu = 00:00:38 ; elapsed = 00:00:24 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3389 ; free virtual = 9395
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.655  | TNS=0.000  | WHS=-0.354 | THS=-449.528|

Phase 2 Router Initialization | Checksum: 18cde6434

Time (s): cpu = 00:00:45 ; elapsed = 00:00:26 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3384 ; free virtual = 9390

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 37490
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 37490
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0


Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 1a65fe9a6

Time (s): cpu = 00:01:03 ; elapsed = 00:00:32 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3378 ; free virtual = 9384

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 3960
 Number of Nodes with overlaps = 486
 Number of Nodes with overlaps = 129
 Number of Nodes with overlaps = 49
 Number of Nodes with overlaps = 6
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.096  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 2144a26c3

Time (s): cpu = 00:02:01 ; elapsed = 00:01:05 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3366 ; free virtual = 9373

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 9
 Number of Nodes with overlaps = 5
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.096  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 1bbf40ca6

Time (s): cpu = 00:02:09 ; elapsed = 00:01:14 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3365 ; free virtual = 9371
Phase 4 Rip-up And Reroute | Checksum: 1bbf40ca6

Time (s): cpu = 00:02:09 ; elapsed = 00:01:14 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3365 ; free virtual = 9371

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 181805e2e

Time (s): cpu = 00:02:11 ; elapsed = 00:01:15 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3366 ; free virtual = 9372
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.096  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 5.1 Delay CleanUp | Checksum: 181805e2e

Time (s): cpu = 00:02:11 ; elapsed = 00:01:15 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3366 ; free virtual = 9372

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 181805e2e

Time (s): cpu = 00:02:11 ; elapsed = 00:01:15 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3366 ; free virtual = 9372
Phase 5 Delay and Skew Optimization | Checksum: 181805e2e

Time (s): cpu = 00:02:11 ; elapsed = 00:01:15 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3366 ; free virtual = 9372

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1c3a20967

Time (s): cpu = 00:02:14 ; elapsed = 00:01:16 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3368 ; free virtual = 9374
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.096  | TNS=0.000  | WHS=0.018  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 19643f394

Time (s): cpu = 00:02:14 ; elapsed = 00:01:16 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3368 ; free virtual = 9374
Phase 6 Post Hold Fix | Checksum: 19643f394

Time (s): cpu = 00:02:14 ; elapsed = 00:01:16 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3368 ; free virtual = 9374

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 12.5653 %
  Global Horizontal Routing Utilization  = 16.8132 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1c35b7b37

Time (s): cpu = 00:02:14 ; elapsed = 00:01:17 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3367 ; free virtual = 9373

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1c35b7b37

Time (s): cpu = 00:02:14 ; elapsed = 00:01:17 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3366 ; free virtual = 9372

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 14c9ff8be

Time (s): cpu = 00:02:17 ; elapsed = 00:01:20 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3374 ; free virtual = 9380

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=1.096  | TNS=0.000  | WHS=0.018  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 14c9ff8be

Time (s): cpu = 00:02:18 ; elapsed = 00:01:20 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3374 ; free virtual = 9381
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:02:18 ; elapsed = 00:01:20 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3415 ; free virtual = 9421

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
92 Infos, 3 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:02:22 ; elapsed = 00:01:23 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3415 ; free virtual = 9421
INFO: [Common 17-600] The following parameters have non-default value.
general.maxThreads
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3415 ; free virtual = 9422
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:07 ; elapsed = 00:00:02 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3321 ; free virtual = 9399
INFO: [Common 17-1381] The checkpoint '/home/masudalab/DeepCAEonFPGA/HLx/HLx.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:12 ; elapsed = 00:00:08 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3391 ; free virtual = 9415
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
INFO: [Coretcl 2-168] The results of DRC are in file /home/masudalab/DeepCAEonFPGA/HLx/HLx.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:12 ; elapsed = 00:00:06 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3378 ; free virtual = 9402
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 4 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file /home/masudalab/DeepCAEonFPGA/HLx/HLx.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:19 ; elapsed = 00:00:07 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3361 ; free virtual = 9386
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
105 Infos, 4 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:14 ; elapsed = 00:00:09 . Memory (MB): peak = 3115.449 ; gain = 0.000 ; free physical = 3303 ; free virtual = 9338
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 4 CPUs
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_w_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s01_nodes/s01_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/s00_nodes/s00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_si_handler/gen_si_handler.gen_request_fifos.gen_req_fifo[1].inst_req_fifo/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_w_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_r_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_b_node/inst/inst_mi_handler/gen_normal_area.gen_fifo_req.inst_fifo_req/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_aw_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_smc/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to distributed. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_smc/inst/m00_nodes/m00_ar_node/inst/inst_mi_handler/gen_normal_area.inst_fifo_node_payld/gen_xpm_memory_fifo.inst_fifo/gen_mem_rep[0].inst_xpm_memory/xpm_memory_base_inst block.
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to auto. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 4 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U118/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U118/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U118/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U118/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U119/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U119/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U119/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U119/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U123/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U123/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U124/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U124/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U127/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U127/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U128/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U128/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U133/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U133/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U137/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U137/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U141/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U141/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U145/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U145/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_56_reg_2513_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_56_reg_2513_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_64_reg_2595_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_64_reg_2595_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_65_reg_2600_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_65_reg_2600_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln28_62_reg_2588_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln28_62_reg_2588_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln28_63_reg_2593_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln28_63_reg_2593_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln28_63_reg_2593_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln28_63_reg_2593_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln36_3_reg_2568_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln36_3_reg_2568_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln36_3_reg_2568_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/add_ln36_3_reg_2568_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U69/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U69/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U69/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U69/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U70/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U70/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U70/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U70/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U74/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U74/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U75/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U75/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U78/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U78/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U79/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U79/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U84/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U84/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U88/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U88/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U92/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U92/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U96/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U96/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/output_r_address00 input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/output_r_address00/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/output_r_address00 input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/output_r_address00/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_0_0_cast_reg_2054_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_0_0_cast_reg_2054_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_1_0_cast_reg_2066_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_1_0_cast_reg_2066_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_2_0_cast_reg_2078_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_2_0_cast_reg_2078_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_22_reg_2521_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_22_reg_2521_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_30_reg_2603_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_30_reg_2603_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_31_reg_2608_reg input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_31_reg_2608_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_11s_27_1_1_U11/network_mul_mul_16s_11s_27_1_1_DSP48_3_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_11s_27_1_1_U11/network_mul_mul_16s_11s_27_1_1_DSP48_3_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U27/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U27/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U8/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U8/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U33/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U33/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U39/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U39/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U21/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U21/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U29/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U29/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U15/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U15/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U34/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U34/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U38/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U38/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U9/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U9/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U16/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U16/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U36/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p input design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U36/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_114_fu_826_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_114_fu_826_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_114_fu_826_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_114_fu_826_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_115_fu_847_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_115_fu_847_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_116_fu_867_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_116_fu_867_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_116_fu_867_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_116_fu_867_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_117_fu_924_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_117_fu_924_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_117_fu_924_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_117_fu_924_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_118_fu_944_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_118_fu_944_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_118_fu_944_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_118_fu_944_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_119_fu_965_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_119_fu_965_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_120_fu_985_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_120_fu_985_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_120_fu_985_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_120_fu_985_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_121_fu_1041_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_121_fu_1041_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_121_fu_1041_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_121_fu_1041_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_122_fu_1061_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_122_fu_1061_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_122_fu_1061_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_122_fu_1061_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_123_fu_1082_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_123_fu_1082_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_124_fu_1102_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_124_fu_1102_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_124_fu_1102_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_124_fu_1102_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_125_fu_1158_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_125_fu_1158_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_125_fu_1158_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_125_fu_1158_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_126_fu_1178_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_126_fu_1178_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_126_fu_1178_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_126_fu_1178_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_127_fu_1199_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_127_fu_1199_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_128_fu_1219_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_128_fu_1219_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_128_fu_1219_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_128_fu_1219_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_129_fu_1275_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_129_fu_1275_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_129_fu_1275_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_129_fu_1275_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_130_fu_1295_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_130_fu_1295_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_130_fu_1295_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_130_fu_1295_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_131_fu_1316_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_131_fu_1316_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_132_fu_1336_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_132_fu_1336_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_132_fu_1336_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_132_fu_1336_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_133_fu_1392_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_133_fu_1392_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_133_fu_1392_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_133_fu_1392_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_134_fu_1412_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_134_fu_1412_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_134_fu_1412_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_134_fu_1412_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_135_fu_1433_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_135_fu_1433_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_136_fu_1453_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_136_fu_1453_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_136_fu_1453_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_136_fu_1453_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_137_fu_1513_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_137_fu_1513_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_137_fu_1513_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_137_fu_1513_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_138_fu_1533_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_138_fu_1533_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_138_fu_1533_p2 input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_138_fu_1533_p2/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_139_reg_2246_reg input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_139_reg_2246_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_139_reg_2246_reg input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_139_reg_2246_reg/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_140_reg_2252_reg input design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_140_reg_2252_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
INFO: [Common 17-14] Message 'DRC DPIP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U112/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U112/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U113/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U113/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U114/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U114/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U117/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U117/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U118/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U118/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U119/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U119/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U123/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U123/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U124/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U124/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U127/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U127/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U128/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U128/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U132/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U132/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U133/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U133/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U136/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U136/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U137/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U137/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U141/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U141/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U145/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U145/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U63/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U63/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U64/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U64/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U65/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U65/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U68/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U68/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U69/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U69/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U70/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U70/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U74/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U74/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U75/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U75/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U78/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U78/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U79/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U79/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U83/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U83/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U84/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U84/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U87/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U87/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U88/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U88/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U92/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U92/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U96/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U96/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/output_r_address00 output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/output_r_address00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_11s_27_1_1_U11/network_mul_mul_16s_11s_27_1_1_DSP48_3_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_11s_27_1_1_U11/network_mul_mul_16s_11s_27_1_1_DSP48_3_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U27/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U27/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U8/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U8/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U13/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U13/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U23/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U23/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U33/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U33/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U39/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U39/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U14/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U14/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U29/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U29/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U15/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U15/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U34/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U34/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U12/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U12/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U22/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U22/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U28/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U28/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U32/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U32/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U38/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U38/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U9/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U9/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U10/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U10/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U16/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U16/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U36/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U36/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U6/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U6/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U7/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p output design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U7/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_114_fu_826_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_114_fu_826_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_115_fu_847_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_115_fu_847_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_116_fu_867_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_116_fu_867_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_117_fu_924_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_117_fu_924_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_118_fu_944_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_118_fu_944_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_119_fu_965_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_119_fu_965_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_120_fu_985_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_120_fu_985_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_121_fu_1041_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_121_fu_1041_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_122_fu_1061_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_122_fu_1061_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_123_fu_1082_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_123_fu_1082_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_124_fu_1102_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_124_fu_1102_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_125_fu_1158_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_125_fu_1158_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_126_fu_1178_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_126_fu_1178_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_127_fu_1199_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_127_fu_1199_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_128_fu_1219_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_128_fu_1219_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_129_fu_1275_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_129_fu_1275_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_130_fu_1295_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_130_fu_1295_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_131_fu_1316_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_131_fu_1316_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_132_fu_1336_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_132_fu_1336_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_133_fu_1392_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_133_fu_1392_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_134_fu_1412_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_134_fu_1412_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_135_fu_1433_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_135_fu_1433_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_136_fu_1453_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_136_fu_1453_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_137_fu_1513_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_137_fu_1513_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_138_fu_1533_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_138_fu_1533_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_fu_806_p2 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/add_ln26_fu_806_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/output_r_address00 output design_1_i/network_0/inst/grp_max_pooling2d_fix16_fu_526/output_r_address00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_32_fu_3878_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_32_fu_3878_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_35_fu_3890_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_35_fu_3890_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_37_fu_3877_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_37_fu_3877_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_39_fu_3885_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_39_fu_3885_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_41_fu_3874_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_41_fu_3874_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_43_fu_3873_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_43_fu_3873_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_45_fu_3886_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_45_fu_3886_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_47_fu_3896_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_47_fu_3896_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_3657_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_3657_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_3676_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_3676_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_3682_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_3682_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_3684_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_3684_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_480_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_480_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_486_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/grp_fu_486_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/mul_ln23_59_fu_3655_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/mul_ln23_59_fu_3655_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/mul_ln23_61_fu_3661_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/mul_ln23_61_fu_3661_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/mul_ln23_77_fu_3681_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_2_fu_573/mul_ln23_77_fu_3681_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_3_fu_553/grp_fu_3662_p2 output design_1_i/network_0/inst/grp_pointwise_conv2d_fix_3_fu_553/grp_fu_3662_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
INFO: [Common 17-14] Message 'DRC DPOP-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U112/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U112/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U113/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U113/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U114/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U114/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U117/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U117/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U118/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U118/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U119/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U119/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U121/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U121/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U122/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U122/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U123/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U123/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U124/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U124/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U127/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U127/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U128/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U128/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U130/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U130/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U131/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U131/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U132/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U132/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U133/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U133/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U136/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U136/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U137/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U137/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U138/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U138/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U139/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U139/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U140/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U140/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U141/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U141/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U145/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/network_mul_mul_16s_16s_30_1_1_U145/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_37_reg_2286_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_37_reg_2286_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_38_reg_2303_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_38_reg_2303_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_42_reg_2356_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_42_reg_2356_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_46_reg_2436_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_46_reg_2436_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_47_reg_2447_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_47_reg_2447_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_51_reg_2463_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_51_reg_2463_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_55_reg_2508_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_55_reg_2508_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_56_reg_2513_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_56_reg_2513_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_64_reg_2595_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_64_reg_2595_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_65_reg_2600_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln28_65_reg_2600_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln_reg_2238_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_1_fu_502/trunc_ln_reg_2238_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U63/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U63/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U64/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U64/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U65/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U65/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U68/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U68/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U69/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U69/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U70/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U70/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U72/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U72/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U73/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U73/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U74/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U74/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U75/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U75/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U78/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U78/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U79/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U79/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U81/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U81/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U82/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U82/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U83/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U83/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U84/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U84/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U87/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U87/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U88/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U88/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U89/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U89/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U90/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U90/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U91/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U91/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U92/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U92/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U96/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/network_mul_mul_16s_16s_30_1_1_U96/network_mul_mul_16s_16s_30_1_1_DSP48_7_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_0_0_cast_reg_2054_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_0_0_cast_reg_2054_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_1_0_cast_reg_2066_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_1_0_cast_reg_2066_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_2_0_cast_reg_2078_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/tmp5_0_2_0_cast_reg_2078_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_12_reg_2444_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_12_reg_2444_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_13_reg_2455_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_13_reg_2455_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_17_reg_2471_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_17_reg_2471_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_21_reg_2516_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_21_reg_2516_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_22_reg_2521_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_22_reg_2521_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_30_reg_2603_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_30_reg_2603_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_31_reg_2608_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_31_reg_2608_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_3_reg_2294_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_3_reg_2294_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_4_reg_2311_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_4_reg_2311_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_8_reg_2364_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln28_8_reg_2364_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln_reg_2246_reg multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_2_fu_478/trunc_ln_reg_2246_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_11s_27_1_1_U11/network_mul_mul_16s_11s_27_1_1_DSP48_3_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_11s_27_1_1_U11/network_mul_mul_16s_11s_27_1_1_DSP48_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_11s_27_1_1_U18/network_mul_mul_16s_11s_27_1_1_DSP48_3_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_11s_27_1_1_U18/network_mul_mul_16s_11s_27_1_1_DSP48_3_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U27/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U27/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U8/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12ns_28_1_1_U8/network_mul_mul_16s_12ns_28_1_1_DSP48_1_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U13/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U13/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U23/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U23/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U33/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U33/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U39/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_12s_28_1_1_U39/network_mul_mul_16s_12s_28_1_1_DSP48_4_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U14/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U14/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U21/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U21/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U29/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13ns_29_1_1_U29/network_mul_mul_16s_13ns_29_1_1_DSP48_5_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U15/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U15/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U34/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_13s_29_1_1_U34/network_mul_mul_16s_13s_29_1_1_DSP48_6_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U12/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U12/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U17/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U17/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U22/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U22/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U28/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U28/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U32/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U32/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U35/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U35/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U38/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U38/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U9/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_14s_30_1_1_U9/network_mul_mul_16s_14s_30_1_1_DSP48_2_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U10/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U10/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U16/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U16/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U36/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U36/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U6/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U6/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U7/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p multiplier stage design_1_i/network_0/inst/grp_depthwise_conv2d_fix_fu_547/network_mul_mul_16s_15s_30_1_1_U7/network_mul_mul_16s_15s_30_1_1_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_32_fu_3878_p2 multiplier stage design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_32_fu_3878_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_35_fu_3890_p2 multiplier stage design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_35_fu_3890_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_36_fu_3901_p2 multiplier stage design_1_i/network_0/inst/grp_pointwise_conv2d_fix_1_fu_583/mul_ln23_36_fu_3901_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
INFO: [DRC REQP-165] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_1) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-165] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_1) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_0) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg_0) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 533 Warnings, 4 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 4 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] '/home/masudalab/DeepCAEonFPGA/HLx/HLx.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Fri Dec 27 12:38:32 2019. For additional details about this file, please refer to the WebTalk help file at /tools/Xilinx/Vivado/2019.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
149 Infos, 304 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:40 ; elapsed = 00:00:34 . Memory (MB): peak = 3424.219 ; gain = 308.770 ; free physical = 3277 ; free virtual = 9298
INFO: [Common 17-206] Exiting Vivado at Fri Dec 27 12:38:32 2019...
